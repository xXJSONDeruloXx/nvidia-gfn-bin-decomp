datetime.pyc (Python 3.10)
[Code]
    File Name: datetime.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        '__all__'
        'time'
        '_time'
        'math'
        '_math'
        'sys'
        'operator'
        'index'
        '_index'
        '_cmp'
        'MINYEAR'
        'MAXYEAR'
        '_MAXORDINAL'
        '_DAYS_IN_MONTH'
        '_DAYS_BEFORE_MONTH'
        'dbm'
        'dim'
        'append'
        '_is_leap'
        '_days_before_year'
        '_days_in_month'
        '_days_before_month'
        '_ymd2ord'
        '_DI400Y'
        '_DI100Y'
        '_DI4Y'
        '_ord2ymd'
        '_MONTHNAMES'
        '_DAYNAMES'
        '_build_struct_time'
        '_format_time'
        '_format_offset'
        '_wrap_strftime'
        '_parse_isoformat_date'
        '_parse_hh_mm_ss_ff'
        '_parse_isoformat_time'
        '_check_tzname'
        '_check_utc_offset'
        '_check_date_fields'
        '_check_time_fields'
        '_check_tzinfo_arg'
        '_cmperror'
        '_divide_and_round'
        'timedelta'
        'min'
        'max'
        'resolution'
        'date'
        '_date_class'
        'tzinfo'
        'tuple'
        'IsoCalendarDate'
        '_IsoCalendarDate'
        '_tzinfo_class'
        '_time_class'
        'datetime'
        '_isoweek1monday'
        'timezone'
        '_create'
        'utc'
        '_EPOCH'
        '_datetime'
        'ImportError'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        'Concrete date/time and related types.\n\nSee http://www.iana.org/time-zones/repository/tz-link.html for\ntime zone and DST data sources.\n'
        (
            'date'
            'datetime'
            'time'
            'timedelta'
            'timezone'
            'tzinfo'
            'MINYEAR'
            'MAXYEAR'
        )
        0
        None
        (
            'index'
        )
        [Code]
            File Name: datetime.py
            Object Name: _cmp
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'x'
                'y'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                1
                -1
            [Disassembly]
                0       LOAD_FAST                       0: x
                2       LOAD_FAST                       1: y
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      1: 0
                10      RETURN_VALUE                    
                12      LOAD_FAST                       0: x
                14      LOAD_FAST                       1: y
                16      COMPARE_OP                      4 (>)
                18      POP_JUMP_IF_FALSE               12 (to 24)
                20      LOAD_CONST                      2: 1
                22      RETURN_VALUE                    
                24      LOAD_CONST                      3: -1
                26      RETURN_VALUE                    
        '_cmp'
        1
        9999
        3652059
        (
            -1
            31
            28
            31
            30
            31
            30
            31
            31
            30
            31
            30
            31
        )
        -1
        [Code]
            File Name: datetime.py
            Object Name: _is_leap
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'year'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'year -> 1 if leap year, else 0.'
                4
                0
                100
                400
            [Disassembly]
                0       LOAD_FAST                       0: year
                2       LOAD_CONST                      1: 4
                4       BINARY_MODULO                   
                6       LOAD_CONST                      2: 0
                8       COMPARE_OP                      2 (==)
                10      JUMP_IF_FALSE_OR_POP            17 (to 34)
                12      LOAD_FAST                       0: year
                14      LOAD_CONST                      3: 100
                16      BINARY_MODULO                   
                18      LOAD_CONST                      2: 0
                20      COMPARE_OP                      3 (!=)
                22      JUMP_IF_TRUE_OR_POP             17 (to 34)
                24      LOAD_FAST                       0: year
                26      LOAD_CONST                      4: 400
                28      BINARY_MODULO                   
                30      LOAD_CONST                      2: 0
                32      COMPARE_OP                      2 (==)
                34      RETURN_VALUE                    
        '_is_leap'
        [Code]
            File Name: datetime.py
            Object Name: _days_before_year
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'year'
                'y'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'year -> number of days before January 1st of year.'
                1
                365
                4
                100
                400
            [Disassembly]
                0       LOAD_FAST                       0: year
                2       LOAD_CONST                      1: 1
                4       BINARY_SUBTRACT                 
                6       STORE_FAST                      1: y
                8       LOAD_FAST                       1: y
                10      LOAD_CONST                      2: 365
                12      BINARY_MULTIPLY                 
                14      LOAD_FAST                       1: y
                16      LOAD_CONST                      3: 4
                18      BINARY_FLOOR_DIVIDE             
                20      BINARY_ADD                      
                22      LOAD_FAST                       1: y
                24      LOAD_CONST                      4: 100
                26      BINARY_FLOOR_DIVIDE             
                28      BINARY_SUBTRACT                 
                30      LOAD_FAST                       1: y
                32      LOAD_CONST                      5: 400
                34      BINARY_FLOOR_DIVIDE             
                36      BINARY_ADD                      
                38      RETURN_VALUE                    
        '_days_before_year'
        [Code]
            File Name: datetime.py
            Object Name: _days_in_month
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_is_leap'
                '_DAYS_IN_MONTH'
            [Var Names]
                'year'
                'month'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'year, month -> number of days in that month in that year.'
                1
                12
                2
                29
            [Disassembly]
                0       LOAD_CONST                      1: 1
                2       LOAD_FAST                       1: month
                4       DUP_TOP                         
                6       ROT_THREE                       
                8       COMPARE_OP                      1 (<=)
                10      POP_JUMP_IF_FALSE               13 (to 26)
                12      LOAD_CONST                      2: 12
                14      COMPARE_OP                      1 (<=)
                16      POP_JUMP_IF_TRUE                18 (to 36)
                18      LOAD_ASSERTION_ERROR            
                20      LOAD_FAST                       1: month
                22      CALL_FUNCTION                   1
                24      RAISE_VARARGS                   1
                26      POP_TOP                         
                28      LOAD_ASSERTION_ERROR            
                30      LOAD_FAST                       1: month
                32      CALL_FUNCTION                   1
                34      RAISE_VARARGS                   1
                36      LOAD_FAST                       1: month
                38      LOAD_CONST                      3: 2
                40      COMPARE_OP                      2 (==)
                42      POP_JUMP_IF_FALSE               28 (to 56)
                44      LOAD_GLOBAL                     0: _is_leap
                46      LOAD_FAST                       0: year
                48      CALL_FUNCTION                   1
                50      POP_JUMP_IF_FALSE               28 (to 56)
                52      LOAD_CONST                      4: 29
                54      RETURN_VALUE                    
                56      LOAD_GLOBAL                     1: _DAYS_IN_MONTH
                58      LOAD_FAST                       1: month
                60      BINARY_SUBSCR                   
                62      RETURN_VALUE                    
        '_days_in_month'
        [Code]
            File Name: datetime.py
            Object Name: _days_before_month
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_DAYS_BEFORE_MONTH'
                '_is_leap'
            [Var Names]
                'year'
                'month'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'year, month -> number of days in year preceding first day of month.'
                1
                12
                'month must be in 1..12'
                2
            [Disassembly]
                0       LOAD_CONST                      1: 1
                2       LOAD_FAST                       1: month
                4       DUP_TOP                         
                6       ROT_THREE                       
                8       COMPARE_OP                      1 (<=)
                10      POP_JUMP_IF_FALSE               13 (to 26)
                12      LOAD_CONST                      2: 12
                14      COMPARE_OP                      1 (<=)
                16      POP_JUMP_IF_TRUE                18 (to 36)
                18      LOAD_ASSERTION_ERROR            
                20      LOAD_CONST                      3: 'month must be in 1..12'
                22      CALL_FUNCTION                   1
                24      RAISE_VARARGS                   1
                26      POP_TOP                         
                28      LOAD_ASSERTION_ERROR            
                30      LOAD_CONST                      3: 'month must be in 1..12'
                32      CALL_FUNCTION                   1
                34      RAISE_VARARGS                   1
                36      LOAD_GLOBAL                     0: _DAYS_BEFORE_MONTH
                38      LOAD_FAST                       1: month
                40      BINARY_SUBSCR                   
                42      LOAD_FAST                       1: month
                44      LOAD_CONST                      4: 2
                46      COMPARE_OP                      4 (>)
                48      JUMP_IF_FALSE_OR_POP            28 (to 56)
                50      LOAD_GLOBAL                     1: _is_leap
                52      LOAD_FAST                       0: year
                54      CALL_FUNCTION                   1
                56      BINARY_ADD                      
                58      RETURN_VALUE                    
        '_days_before_month'
        [Code]
            File Name: datetime.py
            Object Name: _ymd2ord
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_days_in_month'
                '_days_before_year'
                '_days_before_month'
            [Var Names]
                'year'
                'month'
                'day'
                'dim'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'year, month, day -> ordinal, considering 01-Jan-0001 as day 1.'
                1
                12
                'month must be in 1..12'
                'day must be in 1..%d'
            [Disassembly]
                0       LOAD_CONST                      1: 1
                2       LOAD_FAST                       1: month
                4       DUP_TOP                         
                6       ROT_THREE                       
                8       COMPARE_OP                      1 (<=)
                10      POP_JUMP_IF_FALSE               13 (to 26)
                12      LOAD_CONST                      2: 12
                14      COMPARE_OP                      1 (<=)
                16      POP_JUMP_IF_TRUE                18 (to 36)
                18      LOAD_ASSERTION_ERROR            
                20      LOAD_CONST                      3: 'month must be in 1..12'
                22      CALL_FUNCTION                   1
                24      RAISE_VARARGS                   1
                26      POP_TOP                         
                28      LOAD_ASSERTION_ERROR            
                30      LOAD_CONST                      3: 'month must be in 1..12'
                32      CALL_FUNCTION                   1
                34      RAISE_VARARGS                   1
                36      LOAD_GLOBAL                     0: _days_in_month
                38      LOAD_FAST                       0: year
                40      LOAD_FAST                       1: month
                42      CALL_FUNCTION                   2
                44      STORE_FAST                      3: dim
                46      LOAD_CONST                      1: 1
                48      LOAD_FAST                       2: day
                50      DUP_TOP                         
                52      ROT_THREE                       
                54      COMPARE_OP                      1 (<=)
                56      POP_JUMP_IF_FALSE               33 (to 66)
                58      LOAD_FAST                       3: dim
                60      COMPARE_OP                      1 (<=)
                62      POP_JUMP_IF_TRUE                40 (to 80)
                64      JUMP_FORWARD                    1 (to 68)
                66      POP_TOP                         
                68      LOAD_ASSERTION_ERROR            
                70      LOAD_CONST                      4: 'day must be in 1..%d'
                72      LOAD_FAST                       3: dim
                74      BINARY_MODULO                   
                76      CALL_FUNCTION                   1
                78      RAISE_VARARGS                   1
                80      LOAD_GLOBAL                     1: _days_before_year
                82      LOAD_FAST                       0: year
                84      CALL_FUNCTION                   1
                86      LOAD_GLOBAL                     2: _days_before_month
                88      LOAD_FAST                       0: year
                90      LOAD_FAST                       1: month
                92      CALL_FUNCTION                   2
                94      BINARY_ADD                      
                96      LOAD_FAST                       2: day
                98      BINARY_ADD                      
                100     RETURN_VALUE                    
        '_ymd2ord'
        401
        101
        5
        1461
        4
        25
        [Code]
            File Name: datetime.py
            Object Name: _ord2ymd
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'divmod'
                '_DI400Y'
                '_DI100Y'
                '_DI4Y'
                '_is_leap'
                '_DAYS_BEFORE_MONTH'
                '_DAYS_IN_MONTH'
                '_days_in_month'
            [Var Names]
                'n'
                'n400'
                'year'
                'n100'
                'n4'
                'n1'
                'leapyear'
                'month'
                'preceding'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ordinal -> (year, month, day), considering 01-Jan-0001 as day 1.'
                1
                400
                365
                100
                4
                0
                12
                31
                3
                24
                50
                5
                2
            [Disassembly]
                0       LOAD_FAST                       0: n
                2       LOAD_CONST                      1: 1
                4       INPLACE_SUBTRACT                
                6       STORE_FAST                      0: n
                8       LOAD_GLOBAL                     0: divmod
                10      LOAD_FAST                       0: n
                12      LOAD_GLOBAL                     1: _DI400Y
                14      CALL_FUNCTION                   2
                16      UNPACK_SEQUENCE                 2
                18      STORE_FAST                      1: n400
                20      STORE_FAST                      0: n
                22      LOAD_FAST                       1: n400
                24      LOAD_CONST                      2: 400
                26      BINARY_MULTIPLY                 
                28      LOAD_CONST                      1: 1
                30      BINARY_ADD                      
                32      STORE_FAST                      2: year
                34      LOAD_GLOBAL                     0: divmod
                36      LOAD_FAST                       0: n
                38      LOAD_GLOBAL                     2: _DI100Y
                40      CALL_FUNCTION                   2
                42      UNPACK_SEQUENCE                 2
                44      STORE_FAST                      3: n100
                46      STORE_FAST                      0: n
                48      LOAD_GLOBAL                     0: divmod
                50      LOAD_FAST                       0: n
                52      LOAD_GLOBAL                     3: _DI4Y
                54      CALL_FUNCTION                   2
                56      UNPACK_SEQUENCE                 2
                58      STORE_FAST                      4: n4
                60      STORE_FAST                      0: n
                62      LOAD_GLOBAL                     0: divmod
                64      LOAD_FAST                       0: n
                66      LOAD_CONST                      3: 365
                68      CALL_FUNCTION                   2
                70      UNPACK_SEQUENCE                 2
                72      STORE_FAST                      5: n1
                74      STORE_FAST                      0: n
                76      LOAD_FAST                       2: year
                78      LOAD_FAST                       3: n100
                80      LOAD_CONST                      4: 100
                82      BINARY_MULTIPLY                 
                84      LOAD_FAST                       4: n4
                86      LOAD_CONST                      5: 4
                88      BINARY_MULTIPLY                 
                90      BINARY_ADD                      
                92      LOAD_FAST                       5: n1
                94      BINARY_ADD                      
                96      INPLACE_ADD                     
                98      STORE_FAST                      2: year
                100     LOAD_FAST                       5: n1
                102     LOAD_CONST                      5: 4
                104     COMPARE_OP                      2 (==)
                106     POP_JUMP_IF_TRUE                58 (to 116)
                108     LOAD_FAST                       3: n100
                110     LOAD_CONST                      5: 4
                112     COMPARE_OP                      2 (==)
                114     POP_JUMP_IF_FALSE               71 (to 142)
                116     LOAD_FAST                       0: n
                118     LOAD_CONST                      6: 0
                120     COMPARE_OP                      2 (==)
                122     POP_JUMP_IF_TRUE                64 (to 128)
                124     LOAD_ASSERTION_ERROR            
                126     RAISE_VARARGS                   1
                128     LOAD_FAST                       2: year
                130     LOAD_CONST                      1: 1
                132     BINARY_SUBTRACT                 
                134     LOAD_CONST                      7: 12
                136     LOAD_CONST                      8: 31
                138     BUILD_TUPLE                     3
                140     RETURN_VALUE                    
                142     LOAD_FAST                       5: n1
                144     LOAD_CONST                      9: 3
                146     COMPARE_OP                      2 (==)
                148     JUMP_IF_FALSE_OR_POP            82 (to 164)
                150     LOAD_FAST                       4: n4
                152     LOAD_CONST                      10: 24
                154     COMPARE_OP                      3 (!=)
                156     JUMP_IF_TRUE_OR_POP             82 (to 164)
                158     LOAD_FAST                       3: n100
                160     LOAD_CONST                      9: 3
                162     COMPARE_OP                      2 (==)
                164     STORE_FAST                      6: leapyear
                166     LOAD_FAST                       6: leapyear
                168     LOAD_GLOBAL                     4: _is_leap
                170     LOAD_FAST                       2: year
                172     CALL_FUNCTION                   1
                174     COMPARE_OP                      2 (==)
                176     POP_JUMP_IF_TRUE                91 (to 182)
                178     LOAD_ASSERTION_ERROR            
                180     RAISE_VARARGS                   1
                182     LOAD_FAST                       0: n
                184     LOAD_CONST                      11: 50
                186     BINARY_ADD                      
                188     LOAD_CONST                      12: 5
                190     BINARY_RSHIFT                   
                192     STORE_FAST                      7: month
                194     LOAD_GLOBAL                     5: _DAYS_BEFORE_MONTH
                196     LOAD_FAST                       7: month
                198     BINARY_SUBSCR                   
                200     LOAD_FAST                       7: month
                202     LOAD_CONST                      13: 2
                204     COMPARE_OP                      4 (>)
                206     JUMP_IF_FALSE_OR_POP            105 (to 210)
                208     LOAD_FAST                       6: leapyear
                210     BINARY_ADD                      
                212     STORE_FAST                      8: preceding
                214     LOAD_FAST                       8: preceding
                216     LOAD_FAST                       0: n
                218     COMPARE_OP                      4 (>)
                220     POP_JUMP_IF_FALSE               127 (to 254)
                222     LOAD_FAST                       7: month
                224     LOAD_CONST                      1: 1
                226     INPLACE_SUBTRACT                
                228     STORE_FAST                      7: month
                230     LOAD_FAST                       8: preceding
                232     LOAD_GLOBAL                     6: _DAYS_IN_MONTH
                234     LOAD_FAST                       7: month
                236     BINARY_SUBSCR                   
                238     LOAD_FAST                       7: month
                240     LOAD_CONST                      13: 2
                242     COMPARE_OP                      2 (==)
                244     JUMP_IF_FALSE_OR_POP            124 (to 248)
                246     LOAD_FAST                       6: leapyear
                248     BINARY_ADD                      
                250     INPLACE_SUBTRACT                
                252     STORE_FAST                      8: preceding
                254     LOAD_FAST                       0: n
                256     LOAD_FAST                       8: preceding
                258     INPLACE_SUBTRACT                
                260     STORE_FAST                      0: n
                262     LOAD_CONST                      6: 0
                264     LOAD_FAST                       0: n
                266     DUP_TOP                         
                268     ROT_THREE                       
                270     COMPARE_OP                      1 (<=)
                272     POP_JUMP_IF_FALSE               145 (to 290)
                274     LOAD_GLOBAL                     7: _days_in_month
                276     LOAD_FAST                       2: year
                278     LOAD_FAST                       7: month
                280     CALL_FUNCTION                   2
                282     COMPARE_OP                      0 (<)
                284     POP_JUMP_IF_TRUE                148 (to 296)
                286     LOAD_ASSERTION_ERROR            
                288     RAISE_VARARGS                   1
                290     POP_TOP                         
                292     LOAD_ASSERTION_ERROR            
                294     RAISE_VARARGS                   1
                296     LOAD_FAST                       2: year
                298     LOAD_FAST                       7: month
                300     LOAD_FAST                       0: n
                302     LOAD_CONST                      1: 1
                304     BINARY_ADD                      
                306     BUILD_TUPLE                     3
                308     RETURN_VALUE                    
        '_ord2ymd'
        (
            None
            'Jan'
            'Feb'
            'Mar'
            'Apr'
            'May'
            'Jun'
            'Jul'
            'Aug'
            'Sep'
            'Oct'
            'Nov'
            'Dec'
        )
        (
            None
            'Mon'
            'Tue'
            'Wed'
            'Thu'
            'Fri'
            'Sat'
            'Sun'
        )
        [Code]
            File Name: datetime.py
            Object Name: _build_struct_time
            Arg Count: 7
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_ymd2ord'
                '_days_before_month'
                '_time'
                'struct_time'
            [Var Names]
                'y'
                'm'
                'd'
                'hh'
                'mm'
                'ss'
                'dstflag'
                'wday'
                'dnum'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                6
                7
            [Disassembly]
                0       LOAD_GLOBAL                     0: _ymd2ord
                2       LOAD_FAST                       0: y
                4       LOAD_FAST                       1: m
                6       LOAD_FAST                       2: d
                8       CALL_FUNCTION                   3
                10      LOAD_CONST                      1: 6
                12      BINARY_ADD                      
                14      LOAD_CONST                      2: 7
                16      BINARY_MODULO                   
                18      STORE_FAST                      7: wday
                20      LOAD_GLOBAL                     1: _days_before_month
                22      LOAD_FAST                       0: y
                24      LOAD_FAST                       1: m
                26      CALL_FUNCTION                   2
                28      LOAD_FAST                       2: d
                30      BINARY_ADD                      
                32      STORE_FAST                      8: dnum
                34      LOAD_GLOBAL                     2: _time
                36      LOAD_METHOD                     3: struct_time
                38      LOAD_FAST                       0: y
                40      LOAD_FAST                       1: m
                42      LOAD_FAST                       2: d
                44      LOAD_FAST                       3: hh
                46      LOAD_FAST                       4: mm
                48      LOAD_FAST                       5: ss
                50      LOAD_FAST                       7: wday
                52      LOAD_FAST                       8: dnum
                54      LOAD_FAST                       6: dstflag
                56      BUILD_TUPLE                     9
                58      CALL_METHOD                     1
                60      RETURN_VALUE                    
        '_build_struct_time'
        'auto'
        [Code]
            File Name: datetime.py
            Object Name: _format_time
            Arg Count: 5
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'KeyError'
                'ValueError'
                'format'
            [Var Names]
                'hh'
                'mm'
                'ss'
                'us'
                'timespec'
                'specs'
                'fmt'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '{:02d}'
                '{:02d}:{:02d}'
                '{:02d}:{:02d}:{:02d}'
                '{:02d}:{:02d}:{:02d}.{:03d}'
                '{:02d}:{:02d}:{:02d}.{:06d}'
                (
                    'hours'
                    'minutes'
                    'seconds'
                    'milliseconds'
                    'microseconds'
                )
                'auto'
                'microseconds'
                'seconds'
                'milliseconds'
                1000
                'Unknown timespec value'
            [Disassembly]
                0       LOAD_CONST                      1: '{:02d}'
                2       LOAD_CONST                      2: '{:02d}:{:02d}'
                4       LOAD_CONST                      3: '{:02d}:{:02d}:{:02d}'
                6       LOAD_CONST                      4: '{:02d}:{:02d}:{:02d}.{:03d}'
                8       LOAD_CONST                      5: '{:02d}:{:02d}:{:02d}.{:06d}'
                10      LOAD_CONST                      6: ('hours', 'minutes', 'seconds', 'milliseconds', 'microseconds')
                12      BUILD_CONST_KEY_MAP             5
                14      STORE_FAST                      5: specs
                16      LOAD_FAST                       4: timespec
                18      LOAD_CONST                      7: 'auto'
                20      COMPARE_OP                      2 (==)
                22      POP_JUMP_IF_FALSE               19 (to 38)
                24      LOAD_FAST                       3: us
                26      POP_JUMP_IF_FALSE               16 (to 32)
                28      LOAD_CONST                      8: 'microseconds'
                30      JUMP_FORWARD                    1 (to 34)
                32      LOAD_CONST                      9: 'seconds'
                34      STORE_FAST                      4: timespec
                36      JUMP_FORWARD                    8 (to 54)
                38      LOAD_FAST                       4: timespec
                40      LOAD_CONST                      10: 'milliseconds'
                42      COMPARE_OP                      2 (==)
                44      POP_JUMP_IF_FALSE               27 (to 54)
                46      LOAD_FAST                       3: us
                48      LOAD_CONST                      11: 1000
                50      INPLACE_FLOOR_DIVIDE            
                52      STORE_FAST                      3: us
                54      SETUP_FINALLY                   6 (to 68)
                56      LOAD_FAST                       5: specs
                58      LOAD_FAST                       4: timespec
                60      BINARY_SUBSCR                   
                62      STORE_FAST                      6: fmt
                64      POP_BLOCK                       
                66      JUMP_FORWARD                    11 (to 90)
                68      DUP_TOP                         
                70      LOAD_GLOBAL                     0: KeyError
                72      JUMP_IF_NOT_EXC_MATCH           44 (to 88)
                74      POP_TOP                         
                76      POP_TOP                         
                78      POP_TOP                         
                80      LOAD_GLOBAL                     1: ValueError
                82      LOAD_CONST                      12: 'Unknown timespec value'
                84      CALL_FUNCTION                   1
                86      RAISE_VARARGS                   1
                88      RERAISE                         0
                90      LOAD_FAST                       6: fmt
                92      LOAD_METHOD                     2: format
                94      LOAD_FAST                       0: hh
                96      LOAD_FAST                       1: mm
                98      LOAD_FAST                       2: ss
                100     LOAD_FAST                       3: us
                102     CALL_METHOD                     4
                104     RETURN_VALUE                    
        '_format_time'
        [Code]
            File Name: datetime.py
            Object Name: _format_offset
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'days'
                'divmod'
                'timedelta'
                'microseconds'
                'seconds'
            [Var Names]
                'off'
                's'
                'sign'
                'hh'
                'mm'
                'ss'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                ''
                0
                '-'
                '+'
                1
                (
                    'hours'
                )
                (
                    'minutes'
                )
                '%s%02d:%02d'
                ':%02d'
                '.%06d'
            [Disassembly]
                0       LOAD_CONST                      1: ''
                2       STORE_FAST                      1: s
                4       LOAD_FAST                       0: off
                6       LOAD_CONST                      0: None
                8       IS_OP                           1 (is not)
                10      POP_JUMP_IF_FALSE               70 (to 140)
                12      LOAD_FAST                       0: off
                14      LOAD_ATTR                       0: days
                16      LOAD_CONST                      2: 0
                18      COMPARE_OP                      0 (<)
                20      POP_JUMP_IF_FALSE               17 (to 34)
                22      LOAD_CONST                      3: '-'
                24      STORE_FAST                      2: sign
                26      LOAD_FAST                       0: off
                28      UNARY_NEGATIVE                  
                30      STORE_FAST                      0: off
                32      JUMP_FORWARD                    2 (to 38)
                34      LOAD_CONST                      4: '+'
                36      STORE_FAST                      2: sign
                38      LOAD_GLOBAL                     1: divmod
                40      LOAD_FAST                       0: off
                42      LOAD_GLOBAL                     2: timedelta
                44      LOAD_CONST                      5: 1
                46      LOAD_CONST                      6: ('hours',)
                48      CALL_FUNCTION_KW                1
                50      CALL_FUNCTION                   2
                52      UNPACK_SEQUENCE                 2
                54      STORE_FAST                      3: hh
                56      STORE_FAST                      4: mm
                58      LOAD_GLOBAL                     1: divmod
                60      LOAD_FAST                       4: mm
                62      LOAD_GLOBAL                     2: timedelta
                64      LOAD_CONST                      5: 1
                66      LOAD_CONST                      7: ('minutes',)
                68      CALL_FUNCTION_KW                1
                70      CALL_FUNCTION                   2
                72      UNPACK_SEQUENCE                 2
                74      STORE_FAST                      4: mm
                76      STORE_FAST                      5: ss
                78      LOAD_FAST                       1: s
                80      LOAD_CONST                      8: '%s%02d:%02d'
                82      LOAD_FAST                       2: sign
                84      LOAD_FAST                       3: hh
                86      LOAD_FAST                       4: mm
                88      BUILD_TUPLE                     3
                90      BINARY_MODULO                   
                92      INPLACE_ADD                     
                94      STORE_FAST                      1: s
                96      LOAD_FAST                       5: ss
                98      POP_JUMP_IF_TRUE                53 (to 106)
                100     LOAD_FAST                       5: ss
                102     LOAD_ATTR                       3: microseconds
                104     POP_JUMP_IF_FALSE               70 (to 140)
                106     LOAD_FAST                       1: s
                108     LOAD_CONST                      9: ':%02d'
                110     LOAD_FAST                       5: ss
                112     LOAD_ATTR                       4: seconds
                114     BINARY_MODULO                   
                116     INPLACE_ADD                     
                118     STORE_FAST                      1: s
                120     LOAD_FAST                       5: ss
                122     LOAD_ATTR                       3: microseconds
                124     POP_JUMP_IF_FALSE               70 (to 140)
                126     LOAD_FAST                       1: s
                128     LOAD_CONST                      10: '.%06d'
                130     LOAD_FAST                       5: ss
                132     LOAD_ATTR                       3: microseconds
                134     BINARY_MODULO                   
                136     INPLACE_ADD                     
                138     STORE_FAST                      1: s
                140     LOAD_FAST                       1: s
                142     RETURN_VALUE                    
        '_format_offset'
        [Code]
            File Name: datetime.py
            Object Name: _wrap_strftime
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 18
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'append'
                'len'
                'getattr'
                'hasattr'
                'utcoffset'
                'days'
                'divmod'
                'timedelta'
                'seconds'
                'microseconds'
                'tzname'
                'replace'
                'join'
                '_time'
                'strftime'
            [Var Names]
                'object'
                'format'
                'timetuple'
                'freplace'
                'zreplace'
                'Zreplace'
                'newformat'
                'push'
                'i'
                'n'
                'ch'
                'offset'
                'sign'
                'h'
                'rest'
                'm'
                's'
                'u'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                1
                '%'
                'f'
                '%06d'
                'microsecond'
                'z'
                ''
                'utcoffset'
                '+'
                '-'
                (
                    'hours'
                )
                (
                    'minutes'
                )
                '%c%02d%02d%02d.%06d'
                '%c%02d%02d%02d'
                '%c%02d%02d'
                'Z'
                'tzname'
                '%%'
            [Disassembly]
                0       LOAD_CONST                      0: None
                2       STORE_FAST                      3: freplace
                4       LOAD_CONST                      0: None
                6       STORE_FAST                      4: zreplace
                8       LOAD_CONST                      0: None
                10      STORE_FAST                      5: Zreplace
                12      BUILD_LIST                      0
                14      STORE_FAST                      6: newformat
                16      LOAD_FAST                       6: newformat
                18      LOAD_ATTR                       0: append
                20      STORE_FAST                      7: push
                22      LOAD_CONST                      1: 0
                24      LOAD_GLOBAL                     1: len
                26      LOAD_FAST                       1: format
                28      CALL_FUNCTION                   1
                30      ROT_TWO                         
                32      STORE_FAST                      8: i
                34      STORE_FAST                      9: n
                36      LOAD_FAST                       8: i
                38      LOAD_FAST                       9: n
                40      COMPARE_OP                      0 (<)
                42      POP_JUMP_IF_FALSE               228 (to 456)
                44      LOAD_FAST                       1: format
                46      LOAD_FAST                       8: i
                48      BINARY_SUBSCR                   
                50      STORE_FAST                      10: ch
                52      LOAD_FAST                       8: i
                54      LOAD_CONST                      2: 1
                56      INPLACE_ADD                     
                58      STORE_FAST                      8: i
                60      LOAD_FAST                       10: ch
                62      LOAD_CONST                      3: '%'
                64      COMPARE_OP                      2 (==)
                66      POP_JUMP_IF_FALSE               220 (to 440)
                68      LOAD_FAST                       8: i
                70      LOAD_FAST                       9: n
                72      COMPARE_OP                      0 (<)
                74      POP_JUMP_IF_FALSE               215 (to 430)
                76      LOAD_FAST                       1: format
                78      LOAD_FAST                       8: i
                80      BINARY_SUBSCR                   
                82      STORE_FAST                      10: ch
                84      LOAD_FAST                       8: i
                86      LOAD_CONST                      2: 1
                88      INPLACE_ADD                     
                90      STORE_FAST                      8: i
                92      LOAD_FAST                       10: ch
                94      LOAD_CONST                      4: 'f'
                96      COMPARE_OP                      2 (==)
                98      POP_JUMP_IF_FALSE               68 (to 136)
                100     LOAD_FAST                       3: freplace
                102     LOAD_CONST                      0: None
                104     IS_OP                           0 (is)
                106     POP_JUMP_IF_FALSE               62 (to 124)
                108     LOAD_CONST                      5: '%06d'
                110     LOAD_GLOBAL                     2: getattr
                112     LOAD_FAST                       0: object
                114     LOAD_CONST                      6: 'microsecond'
                116     LOAD_CONST                      1: 0
                118     CALL_FUNCTION                   3
                120     BINARY_MODULO                   
                122     STORE_FAST                      3: freplace
                124     LOAD_FAST                       6: newformat
                126     LOAD_METHOD                     0: append
                128     LOAD_FAST                       3: freplace
                130     CALL_METHOD                     1
                132     POP_TOP                         
                134     JUMP_FORWARD                    156 (to 448)
                136     LOAD_FAST                       10: ch
                138     LOAD_CONST                      7: 'z'
                140     COMPARE_OP                      2 (==)
                142     POP_JUMP_IF_FALSE               171 (to 342)
                144     LOAD_FAST                       4: zreplace
                146     LOAD_CONST                      0: None
                148     IS_OP                           0 (is)
                150     POP_JUMP_IF_FALSE               159 (to 318)
                152     LOAD_CONST                      8: ''
                154     STORE_FAST                      4: zreplace
                156     LOAD_GLOBAL                     3: hasattr
                158     LOAD_FAST                       0: object
                160     LOAD_CONST                      9: 'utcoffset'
                162     CALL_FUNCTION                   2
                164     POP_JUMP_IF_FALSE               159 (to 318)
                166     LOAD_FAST                       0: object
                168     LOAD_METHOD                     4: utcoffset
                170     CALL_METHOD                     0
                172     STORE_FAST                      11: offset
                174     LOAD_FAST                       11: offset
                176     LOAD_CONST                      0: None
                178     IS_OP                           1 (is not)
                180     POP_JUMP_IF_FALSE               159 (to 318)
                182     LOAD_CONST                      10: '+'
                184     STORE_FAST                      12: sign
                186     LOAD_FAST                       11: offset
                188     LOAD_ATTR                       5: days
                190     LOAD_CONST                      1: 0
                192     COMPARE_OP                      0 (<)
                194     POP_JUMP_IF_FALSE               103 (to 206)
                196     LOAD_FAST                       11: offset
                198     UNARY_NEGATIVE                  
                200     STORE_FAST                      11: offset
                202     LOAD_CONST                      11: '-'
                204     STORE_FAST                      12: sign
                206     LOAD_GLOBAL                     6: divmod
                208     LOAD_FAST                       11: offset
                210     LOAD_GLOBAL                     7: timedelta
                212     LOAD_CONST                      2: 1
                214     LOAD_CONST                      12: ('hours',)
                216     CALL_FUNCTION_KW                1
                218     CALL_FUNCTION                   2
                220     UNPACK_SEQUENCE                 2
                222     STORE_FAST                      13: h
                224     STORE_FAST                      14: rest
                226     LOAD_GLOBAL                     6: divmod
                228     LOAD_FAST                       14: rest
                230     LOAD_GLOBAL                     7: timedelta
                232     LOAD_CONST                      2: 1
                234     LOAD_CONST                      13: ('minutes',)
                236     CALL_FUNCTION_KW                1
                238     CALL_FUNCTION                   2
                240     UNPACK_SEQUENCE                 2
                242     STORE_FAST                      15: m
                244     STORE_FAST                      14: rest
                246     LOAD_FAST                       14: rest
                248     LOAD_ATTR                       8: seconds
                250     STORE_FAST                      16: s
                252     LOAD_FAST                       11: offset
                254     LOAD_ATTR                       9: microseconds
                256     STORE_FAST                      17: u
                258     LOAD_FAST                       17: u
                260     POP_JUMP_IF_FALSE               141 (to 282)
                262     LOAD_CONST                      14: '%c%02d%02d%02d.%06d'
                264     LOAD_FAST                       12: sign
                266     LOAD_FAST                       13: h
                268     LOAD_FAST                       15: m
                270     LOAD_FAST                       16: s
                272     LOAD_FAST                       17: u
                274     BUILD_TUPLE                     5
                276     BINARY_MODULO                   
                278     STORE_FAST                      4: zreplace
                280     JUMP_FORWARD                    18 (to 318)
                282     LOAD_FAST                       16: s
                284     POP_JUMP_IF_FALSE               152 (to 304)
                286     LOAD_CONST                      15: '%c%02d%02d%02d'
                288     LOAD_FAST                       12: sign
                290     LOAD_FAST                       13: h
                292     LOAD_FAST                       15: m
                294     LOAD_FAST                       16: s
                296     BUILD_TUPLE                     4
                298     BINARY_MODULO                   
                300     STORE_FAST                      4: zreplace
                302     JUMP_FORWARD                    7 (to 318)
                304     LOAD_CONST                      16: '%c%02d%02d'
                306     LOAD_FAST                       12: sign
                308     LOAD_FAST                       13: h
                310     LOAD_FAST                       15: m
                312     BUILD_TUPLE                     3
                314     BINARY_MODULO                   
                316     STORE_FAST                      4: zreplace
                318     LOAD_CONST                      3: '%'
                320     LOAD_FAST                       4: zreplace
                322     CONTAINS_OP                     1 (not in)
                324     POP_JUMP_IF_TRUE                165 (to 330)
                326     LOAD_ASSERTION_ERROR            
                328     RAISE_VARARGS                   1
                330     LOAD_FAST                       6: newformat
                332     LOAD_METHOD                     0: append
                334     LOAD_FAST                       4: zreplace
                336     CALL_METHOD                     1
                338     POP_TOP                         
                340     JUMP_FORWARD                    53 (to 448)
                342     LOAD_FAST                       10: ch
                344     LOAD_CONST                      17: 'Z'
                346     COMPARE_OP                      2 (==)
                348     POP_JUMP_IF_FALSE               206 (to 412)
                350     LOAD_FAST                       5: Zreplace
                352     LOAD_CONST                      0: None
                354     IS_OP                           0 (is)
                356     POP_JUMP_IF_FALSE               200 (to 400)
                358     LOAD_CONST                      8: ''
                360     STORE_FAST                      5: Zreplace
                362     LOAD_GLOBAL                     3: hasattr
                364     LOAD_FAST                       0: object
                366     LOAD_CONST                      18: 'tzname'
                368     CALL_FUNCTION                   2
                370     POP_JUMP_IF_FALSE               200 (to 400)
                372     LOAD_FAST                       0: object
                374     LOAD_METHOD                     10: tzname
                376     CALL_METHOD                     0
                378     STORE_FAST                      16: s
                380     LOAD_FAST                       16: s
                382     LOAD_CONST                      0: None
                384     IS_OP                           1 (is not)
                386     POP_JUMP_IF_FALSE               200 (to 400)
                388     LOAD_FAST                       16: s
                390     LOAD_METHOD                     11: replace
                392     LOAD_CONST                      3: '%'
                394     LOAD_CONST                      19: '%%'
                396     CALL_METHOD                     2
                398     STORE_FAST                      5: Zreplace
                400     LOAD_FAST                       6: newformat
                402     LOAD_METHOD                     0: append
                404     LOAD_FAST                       5: Zreplace
                406     CALL_METHOD                     1
                408     POP_TOP                         
                410     JUMP_FORWARD                    18 (to 448)
                412     LOAD_FAST                       7: push
                414     LOAD_CONST                      3: '%'
                416     CALL_FUNCTION                   1
                418     POP_TOP                         
                420     LOAD_FAST                       7: push
                422     LOAD_FAST                       10: ch
                424     CALL_FUNCTION                   1
                426     POP_TOP                         
                428     JUMP_FORWARD                    9 (to 448)
                430     LOAD_FAST                       7: push
                432     LOAD_CONST                      3: '%'
                434     CALL_FUNCTION                   1
                436     POP_TOP                         
                438     JUMP_FORWARD                    4 (to 448)
                440     LOAD_FAST                       7: push
                442     LOAD_FAST                       10: ch
                444     CALL_FUNCTION                   1
                446     POP_TOP                         
                448     LOAD_FAST                       8: i
                450     LOAD_FAST                       9: n
                452     COMPARE_OP                      0 (<)
                454     POP_JUMP_IF_TRUE                22 (to 44)
                456     LOAD_CONST                      8: ''
                458     LOAD_METHOD                     12: join
                460     LOAD_FAST                       6: newformat
                462     CALL_METHOD                     1
                464     STORE_FAST                      6: newformat
                466     LOAD_GLOBAL                     13: _time
                468     LOAD_METHOD                     14: strftime
                470     LOAD_FAST                       6: newformat
                472     LOAD_FAST                       2: timetuple
                474     CALL_METHOD                     2
                476     RETURN_VALUE                    
        '_wrap_strftime'
        [Code]
            File Name: datetime.py
            Object Name: _parse_isoformat_date
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'int'
                'ValueError'
            [Var Names]
                'dtstr'
                'year'
                'month'
                'day'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                4
                '-'
                'Invalid date separator: %s'
                5
                7
                'Invalid date separator'
                8
                10
            [Disassembly]
                0       LOAD_GLOBAL                     0: int
                2       LOAD_FAST                       0: dtstr
                4       LOAD_CONST                      1: 0
                6       LOAD_CONST                      2: 4
                8       BUILD_SLICE                     2
                10      BINARY_SUBSCR                   
                12      CALL_FUNCTION                   1
                14      STORE_FAST                      1: year
                16      LOAD_FAST                       0: dtstr
                18      LOAD_CONST                      2: 4
                20      BINARY_SUBSCR                   
                22      LOAD_CONST                      3: '-'
                24      COMPARE_OP                      3 (!=)
                26      POP_JUMP_IF_FALSE               22 (to 44)
                28      LOAD_GLOBAL                     1: ValueError
                30      LOAD_CONST                      4: 'Invalid date separator: %s'
                32      LOAD_FAST                       0: dtstr
                34      LOAD_CONST                      2: 4
                36      BINARY_SUBSCR                   
                38      BINARY_MODULO                   
                40      CALL_FUNCTION                   1
                42      RAISE_VARARGS                   1
                44      LOAD_GLOBAL                     0: int
                46      LOAD_FAST                       0: dtstr
                48      LOAD_CONST                      5: 5
                50      LOAD_CONST                      6: 7
                52      BUILD_SLICE                     2
                54      BINARY_SUBSCR                   
                56      CALL_FUNCTION                   1
                58      STORE_FAST                      2: month
                60      LOAD_FAST                       0: dtstr
                62      LOAD_CONST                      6: 7
                64      BINARY_SUBSCR                   
                66      LOAD_CONST                      3: '-'
                68      COMPARE_OP                      3 (!=)
                70      POP_JUMP_IF_FALSE               40 (to 80)
                72      LOAD_GLOBAL                     1: ValueError
                74      LOAD_CONST                      7: 'Invalid date separator'
                76      CALL_FUNCTION                   1
                78      RAISE_VARARGS                   1
                80      LOAD_GLOBAL                     0: int
                82      LOAD_FAST                       0: dtstr
                84      LOAD_CONST                      8: 8
                86      LOAD_CONST                      9: 10
                88      BUILD_SLICE                     2
                90      BINARY_SUBSCR                   
                92      CALL_FUNCTION                   1
                94      STORE_FAST                      3: day
                96      LOAD_FAST                       1: year
                98      LOAD_FAST                       2: month
                100     LOAD_FAST                       3: day
                102     BUILD_LIST                      3
                104     RETURN_VALUE                    
        '_parse_isoformat_date'
        [Code]
            File Name: datetime.py
            Object Name: _parse_hh_mm_ss_ff
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'len'
                'range'
                'ValueError'
                'int'
            [Var Names]
                'tstr'
                'len_str'
                'time_comps'
                'pos'
                'comp'
                'next_char'
                'len_remainder'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                (
                    0
                    0
                    0
                    0
                )
                0
                3
                2
                'Incomplete time component'
                1
                ':'
                'Invalid time separator: %c'
                '.'
                'Invalid microsecond component'
                (
                    3
                    6
                )
                1000
            [Disassembly]
                0       LOAD_GLOBAL                     0: len
                2       LOAD_FAST                       0: tstr
                4       CALL_FUNCTION                   1
                6       STORE_FAST                      1: len_str
                8       BUILD_LIST                      0
                10      LOAD_CONST                      1: (0, 0, 0, 0)
                12      LIST_EXTEND                     1
                14      STORE_FAST                      2: time_comps
                16      LOAD_CONST                      2: 0
                18      STORE_FAST                      3: pos
                20      LOAD_GLOBAL                     1: range
                22      LOAD_CONST                      2: 0
                24      LOAD_CONST                      3: 3
                26      CALL_FUNCTION                   2
                28      GET_ITER                        
                30      FOR_ITER                        58 (to 148)
                32      STORE_FAST                      4: comp
                34      LOAD_FAST                       1: len_str
                36      LOAD_FAST                       3: pos
                38      BINARY_SUBTRACT                 
                40      LOAD_CONST                      4: 2
                42      COMPARE_OP                      0 (<)
                44      POP_JUMP_IF_FALSE               27 (to 54)
                46      LOAD_GLOBAL                     2: ValueError
                48      LOAD_CONST                      5: 'Incomplete time component'
                50      CALL_FUNCTION                   1
                52      RAISE_VARARGS                   1
                54      LOAD_GLOBAL                     3: int
                56      LOAD_FAST                       0: tstr
                58      LOAD_FAST                       3: pos
                60      LOAD_FAST                       3: pos
                62      LOAD_CONST                      4: 2
                64      BINARY_ADD                      
                66      BUILD_SLICE                     2
                68      BINARY_SUBSCR                   
                70      CALL_FUNCTION                   1
                72      LOAD_FAST                       2: time_comps
                74      LOAD_FAST                       4: comp
                76      STORE_SUBSCR                    
                78      LOAD_FAST                       3: pos
                80      LOAD_CONST                      4: 2
                82      INPLACE_ADD                     
                84      STORE_FAST                      3: pos
                86      LOAD_FAST                       0: tstr
                88      LOAD_FAST                       3: pos
                90      LOAD_FAST                       3: pos
                92      LOAD_CONST                      6: 1
                94      BINARY_ADD                      
                96      BUILD_SLICE                     2
                98      BINARY_SUBSCR                   
                100     STORE_FAST                      5: next_char
                102     LOAD_FAST                       5: next_char
                104     POP_JUMP_IF_FALSE               57 (to 114)
                106     LOAD_FAST                       4: comp
                108     LOAD_CONST                      4: 2
                110     COMPARE_OP                      5 (>=)
                112     POP_JUMP_IF_FALSE               59 (to 118)
                114     POP_TOP                         
                116     JUMP_FORWARD                    15 (to 148)
                118     LOAD_FAST                       5: next_char
                120     LOAD_CONST                      7: ':'
                122     COMPARE_OP                      3 (!=)
                124     POP_JUMP_IF_FALSE               69 (to 138)
                126     LOAD_GLOBAL                     2: ValueError
                128     LOAD_CONST                      8: 'Invalid time separator: %c'
                130     LOAD_FAST                       5: next_char
                132     BINARY_MODULO                   
                134     CALL_FUNCTION                   1
                136     RAISE_VARARGS                   1
                138     LOAD_FAST                       3: pos
                140     LOAD_CONST                      6: 1
                142     INPLACE_ADD                     
                144     STORE_FAST                      3: pos
                146     JUMP_ABSOLUTE                   15 (to 30)
                148     LOAD_FAST                       3: pos
                150     LOAD_FAST                       1: len_str
                152     COMPARE_OP                      0 (<)
                154     POP_JUMP_IF_FALSE               126 (to 252)
                156     LOAD_FAST                       0: tstr
                158     LOAD_FAST                       3: pos
                160     BINARY_SUBSCR                   
                162     LOAD_CONST                      9: '.'
                164     COMPARE_OP                      3 (!=)
                166     POP_JUMP_IF_FALSE               88 (to 176)
                168     LOAD_GLOBAL                     2: ValueError
                170     LOAD_CONST                      10: 'Invalid microsecond component'
                172     CALL_FUNCTION                   1
                174     RAISE_VARARGS                   1
                176     LOAD_FAST                       3: pos
                178     LOAD_CONST                      6: 1
                180     INPLACE_ADD                     
                182     STORE_FAST                      3: pos
                184     LOAD_FAST                       1: len_str
                186     LOAD_FAST                       3: pos
                188     BINARY_SUBTRACT                 
                190     STORE_FAST                      6: len_remainder
                192     LOAD_FAST                       6: len_remainder
                194     LOAD_CONST                      11: (3, 6)
                196     CONTAINS_OP                     1 (not in)
                198     POP_JUMP_IF_FALSE               104 (to 208)
                200     LOAD_GLOBAL                     2: ValueError
                202     LOAD_CONST                      10: 'Invalid microsecond component'
                204     CALL_FUNCTION                   1
                206     RAISE_VARARGS                   1
                208     LOAD_GLOBAL                     3: int
                210     LOAD_FAST                       0: tstr
                212     LOAD_FAST                       3: pos
                214     LOAD_CONST                      0: None
                216     BUILD_SLICE                     2
                218     BINARY_SUBSCR                   
                220     CALL_FUNCTION                   1
                222     LOAD_FAST                       2: time_comps
                224     LOAD_CONST                      3: 3
                226     STORE_SUBSCR                    
                228     LOAD_FAST                       6: len_remainder
                230     LOAD_CONST                      3: 3
                232     COMPARE_OP                      2 (==)
                234     POP_JUMP_IF_FALSE               126 (to 252)
                236     LOAD_FAST                       2: time_comps
                238     LOAD_CONST                      3: 3
                240     DUP_TOP_TWO                     
                242     BINARY_SUBSCR                   
                244     LOAD_CONST                      12: 1000
                246     INPLACE_MULTIPLY                
                248     ROT_THREE                       
                250     STORE_SUBSCR                    
                252     LOAD_FAST                       2: time_comps
                254     RETURN_VALUE                    
        '_parse_hh_mm_ss_ff'
        [Code]
            File Name: datetime.py
            Object Name: _parse_isoformat_time
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 10
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'len'
                'ValueError'
                'find'
                '_parse_hh_mm_ss_ff'
                'all'
                'timezone'
                'utc'
                'timedelta'
                'append'
            [Var Names]
                'tstr'
                'len_str'
                'tz_pos'
                'timestr'
                'time_comps'
                'tzi'
                'tzstr'
                'tz_comps'
                'tzsign'
                'td'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                2
                'Isoformat time too short'
                '-'
                1
                '+'
                0
                (
                    5
                    8
                    15
                )
                'Malformed time zone string'
                [Code]
                    File Name: datetime.py
                    Object Name: <genexpr>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'x'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        0
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        7 (to 20)
                        6       STORE_FAST                      1: x
                        8       LOAD_FAST                       1: x
                        10      LOAD_CONST                      0: 0
                        12      COMPARE_OP                      2 (==)
                        14      YIELD_VALUE                     
                        16      POP_TOP                         
                        18      JUMP_ABSOLUTE                   2 (to 4)
                        20      LOAD_CONST                      1: None
                        22      RETURN_VALUE                    
                '_parse_isoformat_time.<locals>.<genexpr>'
                -1
                3
                (
                    'hours'
                    'minutes'
                    'seconds'
                    'microseconds'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: len
                2       LOAD_FAST                       0: tstr
                4       CALL_FUNCTION                   1
                6       STORE_FAST                      1: len_str
                8       LOAD_FAST                       1: len_str
                10      LOAD_CONST                      1: 2
                12      COMPARE_OP                      0 (<)
                14      POP_JUMP_IF_FALSE               12 (to 24)
                16      LOAD_GLOBAL                     1: ValueError
                18      LOAD_CONST                      2: 'Isoformat time too short'
                20      CALL_FUNCTION                   1
                22      RAISE_VARARGS                   1
                24      LOAD_FAST                       0: tstr
                26      LOAD_METHOD                     2: find
                28      LOAD_CONST                      3: '-'
                30      CALL_METHOD                     1
                32      LOAD_CONST                      4: 1
                34      BINARY_ADD                      
                36      JUMP_IF_TRUE_OR_POP             25 (to 50)
                38      LOAD_FAST                       0: tstr
                40      LOAD_METHOD                     2: find
                42      LOAD_CONST                      5: '+'
                44      CALL_METHOD                     1
                46      LOAD_CONST                      4: 1
                48      BINARY_ADD                      
                50      STORE_FAST                      2: tz_pos
                52      LOAD_FAST                       2: tz_pos
                54      LOAD_CONST                      6: 0
                56      COMPARE_OP                      4 (>)
                58      POP_JUMP_IF_FALSE               38 (to 76)
                60      LOAD_FAST                       0: tstr
                62      LOAD_CONST                      0: None
                64      LOAD_FAST                       2: tz_pos
                66      LOAD_CONST                      4: 1
                68      BINARY_SUBTRACT                 
                70      BUILD_SLICE                     2
                72      BINARY_SUBSCR                   
                74      JUMP_FORWARD                    1 (to 78)
                76      LOAD_FAST                       0: tstr
                78      STORE_FAST                      3: timestr
                80      LOAD_GLOBAL                     3: _parse_hh_mm_ss_ff
                82      LOAD_FAST                       3: timestr
                84      CALL_FUNCTION                   1
                86      STORE_FAST                      4: time_comps
                88      LOAD_CONST                      0: None
                90      STORE_FAST                      5: tzi
                92      LOAD_FAST                       2: tz_pos
                94      LOAD_CONST                      6: 0
                96      COMPARE_OP                      4 (>)
                98      POP_JUMP_IF_FALSE               117 (to 234)
                100     LOAD_FAST                       0: tstr
                102     LOAD_FAST                       2: tz_pos
                104     LOAD_CONST                      0: None
                106     BUILD_SLICE                     2
                108     BINARY_SUBSCR                   
                110     STORE_FAST                      6: tzstr
                112     LOAD_GLOBAL                     0: len
                114     LOAD_FAST                       6: tzstr
                116     CALL_FUNCTION                   1
                118     LOAD_CONST                      7: (5, 8, 15)
                120     CONTAINS_OP                     1 (not in)
                122     POP_JUMP_IF_FALSE               66 (to 132)
                124     LOAD_GLOBAL                     1: ValueError
                126     LOAD_CONST                      8: 'Malformed time zone string'
                128     CALL_FUNCTION                   1
                130     RAISE_VARARGS                   1
                132     LOAD_GLOBAL                     3: _parse_hh_mm_ss_ff
                134     LOAD_FAST                       6: tzstr
                136     CALL_FUNCTION                   1
                138     STORE_FAST                      7: tz_comps
                140     LOAD_GLOBAL                     4: all
                142     LOAD_CONST                      9: <CODE> <genexpr>
                144     LOAD_CONST                      10: '_parse_isoformat_time.<locals>.<genexpr>'
                146     MAKE_FUNCTION                   0
                148     LOAD_FAST                       7: tz_comps
                150     GET_ITER                        
                152     CALL_FUNCTION                   1
                154     CALL_FUNCTION                   1
                156     POP_JUMP_IF_FALSE               83 (to 166)
                158     LOAD_GLOBAL                     5: timezone
                160     LOAD_ATTR                       6: utc
                162     STORE_FAST                      5: tzi
                164     JUMP_FORWARD                    34 (to 234)
                166     LOAD_FAST                       0: tstr
                168     LOAD_FAST                       2: tz_pos
                170     LOAD_CONST                      4: 1
                172     BINARY_SUBTRACT                 
                174     BINARY_SUBSCR                   
                176     LOAD_CONST                      3: '-'
                178     COMPARE_OP                      2 (==)
                180     POP_JUMP_IF_FALSE               93 (to 186)
                182     LOAD_CONST                      11: -1
                184     JUMP_FORWARD                    1 (to 188)
                186     LOAD_CONST                      4: 1
                188     STORE_FAST                      8: tzsign
                190     LOAD_GLOBAL                     7: timedelta
                192     LOAD_FAST                       7: tz_comps
                194     LOAD_CONST                      6: 0
                196     BINARY_SUBSCR                   
                198     LOAD_FAST                       7: tz_comps
                200     LOAD_CONST                      4: 1
                202     BINARY_SUBSCR                   
                204     LOAD_FAST                       7: tz_comps
                206     LOAD_CONST                      1: 2
                208     BINARY_SUBSCR                   
                210     LOAD_FAST                       7: tz_comps
                212     LOAD_CONST                      12: 3
                214     BINARY_SUBSCR                   
                216     LOAD_CONST                      13: ('hours', 'minutes', 'seconds', 'microseconds')
                218     CALL_FUNCTION_KW                4
                220     STORE_FAST                      9: td
                222     LOAD_GLOBAL                     5: timezone
                224     LOAD_FAST                       8: tzsign
                226     LOAD_FAST                       9: td
                228     BINARY_MULTIPLY                 
                230     CALL_FUNCTION                   1
                232     STORE_FAST                      5: tzi
                234     LOAD_FAST                       4: time_comps
                236     LOAD_METHOD                     8: append
                238     LOAD_FAST                       5: tzi
                240     CALL_METHOD                     1
                242     POP_TOP                         
                244     LOAD_FAST                       4: time_comps
                246     RETURN_VALUE                    
        '_parse_isoformat_time'
        [Code]
            File Name: datetime.py
            Object Name: _check_tzname
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'str'
                'TypeError'
                'type'
            [Var Names]
                'name'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                "tzinfo.tzname() must return None or string, not '%s'"
            [Disassembly]
                0       LOAD_FAST                       0: name
                2       LOAD_CONST                      0: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               17 (to 34)
                8       LOAD_GLOBAL                     0: isinstance
                10      LOAD_FAST                       0: name
                12      LOAD_GLOBAL                     1: str
                14      CALL_FUNCTION                   2
                16      POP_JUMP_IF_TRUE                19 (to 38)
                18      LOAD_GLOBAL                     2: TypeError
                20      LOAD_CONST                      1: "tzinfo.tzname() must return None or string, not '%s'"
                22      LOAD_GLOBAL                     3: type
                24      LOAD_FAST                       0: name
                26      CALL_FUNCTION                   1
                28      BINARY_MODULO                   
                30      CALL_FUNCTION                   1
                32      RAISE_VARARGS                   1
                34      LOAD_CONST                      0: None
                36      RETURN_VALUE                    
                38      LOAD_CONST                      0: None
                40      RETURN_VALUE                    
        '_check_tzname'
        [Code]
            File Name: datetime.py
            Object Name: _check_utc_offset
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'timedelta'
                'TypeError'
                'type'
                'ValueError'
            [Var Names]
                'name'
                'offset'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                (
                    'utcoffset'
                    'dst'
                )
                "tzinfo.%s() must return None or timedelta, not '%s'"
                1
                '%s()=%s, must be strictly between -timedelta(hours=24) and timedelta(hours=24)'
            [Disassembly]
                0       LOAD_FAST                       0: name
                2       LOAD_CONST                      1: ('utcoffset', 'dst')
                4       CONTAINS_OP                     0 (in)
                6       POP_JUMP_IF_TRUE                6 (to 12)
                8       LOAD_ASSERTION_ERROR            
                10      RAISE_VARARGS                   1
                12      LOAD_FAST                       1: offset
                14      LOAD_CONST                      0: None
                16      IS_OP                           0 (is)
                18      POP_JUMP_IF_FALSE               12 (to 24)
                20      LOAD_CONST                      0: None
                22      RETURN_VALUE                    
                24      LOAD_GLOBAL                     0: isinstance
                26      LOAD_FAST                       1: offset
                28      LOAD_GLOBAL                     1: timedelta
                30      CALL_FUNCTION                   2
                32      POP_JUMP_IF_TRUE                27 (to 54)
                34      LOAD_GLOBAL                     2: TypeError
                36      LOAD_CONST                      2: "tzinfo.%s() must return None or timedelta, not '%s'"
                38      LOAD_FAST                       0: name
                40      LOAD_GLOBAL                     3: type
                42      LOAD_FAST                       1: offset
                44      CALL_FUNCTION                   1
                46      BUILD_TUPLE                     2
                48      BINARY_MODULO                   
                50      CALL_FUNCTION                   1
                52      RAISE_VARARGS                   1
                54      LOAD_GLOBAL                     1: timedelta
                56      LOAD_CONST                      3: 1
                58      CALL_FUNCTION                   1
                60      UNARY_NEGATIVE                  
                62      LOAD_FAST                       1: offset
                64      DUP_TOP                         
                66      ROT_THREE                       
                68      COMPARE_OP                      0 (<)
                70      POP_JUMP_IF_FALSE               42 (to 84)
                72      LOAD_GLOBAL                     1: timedelta
                74      LOAD_CONST                      3: 1
                76      CALL_FUNCTION                   1
                78      COMPARE_OP                      0 (<)
                80      POP_JUMP_IF_TRUE                51 (to 102)
                82      JUMP_FORWARD                    1 (to 86)
                84      POP_TOP                         
                86      LOAD_GLOBAL                     4: ValueError
                88      LOAD_CONST                      4: '%s()=%s, must be strictly between -timedelta(hours=24) and timedelta(hours=24)'
                90      LOAD_FAST                       0: name
                92      LOAD_FAST                       1: offset
                94      BUILD_TUPLE                     2
                96      BINARY_MODULO                   
                98      CALL_FUNCTION                   1
                100     RAISE_VARARGS                   1
                102     LOAD_CONST                      0: None
                104     RETURN_VALUE                    
        '_check_utc_offset'
        [Code]
            File Name: datetime.py
            Object Name: _check_date_fields
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_index'
                'MINYEAR'
                'MAXYEAR'
                'ValueError'
                '_days_in_month'
            [Var Names]
                'year'
                'month'
                'day'
                'dim'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'year must be in %d..%d'
                1
                12
                'month must be in 1..12'
                'day must be in 1..%d'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _index
                2       LOAD_FAST                       0: year
                4       CALL_FUNCTION                   1
                6       STORE_FAST                      0: year
                8       LOAD_GLOBAL                     0: _index
                10      LOAD_FAST                       1: month
                12      CALL_FUNCTION                   1
                14      STORE_FAST                      1: month
                16      LOAD_GLOBAL                     0: _index
                18      LOAD_FAST                       2: day
                20      CALL_FUNCTION                   1
                22      STORE_FAST                      2: day
                24      LOAD_GLOBAL                     1: MINYEAR
                26      LOAD_FAST                       0: year
                28      DUP_TOP                         
                30      ROT_THREE                       
                32      COMPARE_OP                      1 (<=)
                34      POP_JUMP_IF_FALSE               22 (to 44)
                36      LOAD_GLOBAL                     2: MAXYEAR
                38      COMPARE_OP                      1 (<=)
                40      POP_JUMP_IF_TRUE                32 (to 64)
                42      JUMP_FORWARD                    1 (to 46)
                44      POP_TOP                         
                46      LOAD_GLOBAL                     3: ValueError
                48      LOAD_CONST                      1: 'year must be in %d..%d'
                50      LOAD_GLOBAL                     1: MINYEAR
                52      LOAD_GLOBAL                     2: MAXYEAR
                54      BUILD_TUPLE                     2
                56      BINARY_MODULO                   
                58      LOAD_FAST                       0: year
                60      CALL_FUNCTION                   2
                62      RAISE_VARARGS                   1
                64      LOAD_CONST                      2: 1
                66      LOAD_FAST                       1: month
                68      DUP_TOP                         
                70      ROT_THREE                       
                72      COMPARE_OP                      1 (<=)
                74      POP_JUMP_IF_FALSE               42 (to 84)
                76      LOAD_CONST                      3: 12
                78      COMPARE_OP                      1 (<=)
                80      POP_JUMP_IF_TRUE                48 (to 96)
                82      JUMP_FORWARD                    1 (to 86)
                84      POP_TOP                         
                86      LOAD_GLOBAL                     3: ValueError
                88      LOAD_CONST                      4: 'month must be in 1..12'
                90      LOAD_FAST                       1: month
                92      CALL_FUNCTION                   2
                94      RAISE_VARARGS                   1
                96      LOAD_GLOBAL                     4: _days_in_month
                98      LOAD_FAST                       0: year
                100     LOAD_FAST                       1: month
                102     CALL_FUNCTION                   2
                104     STORE_FAST                      3: dim
                106     LOAD_CONST                      2: 1
                108     LOAD_FAST                       2: day
                110     DUP_TOP                         
                112     ROT_THREE                       
                114     COMPARE_OP                      1 (<=)
                116     POP_JUMP_IF_FALSE               63 (to 126)
                118     LOAD_FAST                       3: dim
                120     COMPARE_OP                      1 (<=)
                122     POP_JUMP_IF_TRUE                71 (to 142)
                124     JUMP_FORWARD                    1 (to 128)
                126     POP_TOP                         
                128     LOAD_GLOBAL                     3: ValueError
                130     LOAD_CONST                      5: 'day must be in 1..%d'
                132     LOAD_FAST                       3: dim
                134     BINARY_MODULO                   
                136     LOAD_FAST                       2: day
                138     CALL_FUNCTION                   2
                140     RAISE_VARARGS                   1
                142     LOAD_FAST                       0: year
                144     LOAD_FAST                       1: month
                146     LOAD_FAST                       2: day
                148     BUILD_TUPLE                     3
                150     RETURN_VALUE                    
        '_check_date_fields'
        [Code]
            File Name: datetime.py
            Object Name: _check_time_fields
            Arg Count: 5
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_index'
                'ValueError'
            [Var Names]
                'hour'
                'minute'
                'second'
                'microsecond'
                'fold'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                23
                'hour must be in 0..23'
                59
                'minute must be in 0..59'
                'second must be in 0..59'
                999999
                'microsecond must be in 0..999999'
                (
                    0
                    1
                )
                'fold must be either 0 or 1'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _index
                2       LOAD_FAST                       0: hour
                4       CALL_FUNCTION                   1
                6       STORE_FAST                      0: hour
                8       LOAD_GLOBAL                     0: _index
                10      LOAD_FAST                       1: minute
                12      CALL_FUNCTION                   1
                14      STORE_FAST                      1: minute
                16      LOAD_GLOBAL                     0: _index
                18      LOAD_FAST                       2: second
                20      CALL_FUNCTION                   1
                22      STORE_FAST                      2: second
                24      LOAD_GLOBAL                     0: _index
                26      LOAD_FAST                       3: microsecond
                28      CALL_FUNCTION                   1
                30      STORE_FAST                      3: microsecond
                32      LOAD_CONST                      1: 0
                34      LOAD_FAST                       0: hour
                36      DUP_TOP                         
                38      ROT_THREE                       
                40      COMPARE_OP                      1 (<=)
                42      POP_JUMP_IF_FALSE               26 (to 52)
                44      LOAD_CONST                      2: 23
                46      COMPARE_OP                      1 (<=)
                48      POP_JUMP_IF_TRUE                32 (to 64)
                50      JUMP_FORWARD                    1 (to 54)
                52      POP_TOP                         
                54      LOAD_GLOBAL                     1: ValueError
                56      LOAD_CONST                      3: 'hour must be in 0..23'
                58      LOAD_FAST                       0: hour
                60      CALL_FUNCTION                   2
                62      RAISE_VARARGS                   1
                64      LOAD_CONST                      1: 0
                66      LOAD_FAST                       1: minute
                68      DUP_TOP                         
                70      ROT_THREE                       
                72      COMPARE_OP                      1 (<=)
                74      POP_JUMP_IF_FALSE               42 (to 84)
                76      LOAD_CONST                      4: 59
                78      COMPARE_OP                      1 (<=)
                80      POP_JUMP_IF_TRUE                48 (to 96)
                82      JUMP_FORWARD                    1 (to 86)
                84      POP_TOP                         
                86      LOAD_GLOBAL                     1: ValueError
                88      LOAD_CONST                      5: 'minute must be in 0..59'
                90      LOAD_FAST                       1: minute
                92      CALL_FUNCTION                   2
                94      RAISE_VARARGS                   1
                96      LOAD_CONST                      1: 0
                98      LOAD_FAST                       2: second
                100     DUP_TOP                         
                102     ROT_THREE                       
                104     COMPARE_OP                      1 (<=)
                106     POP_JUMP_IF_FALSE               58 (to 116)
                108     LOAD_CONST                      4: 59
                110     COMPARE_OP                      1 (<=)
                112     POP_JUMP_IF_TRUE                64 (to 128)
                114     JUMP_FORWARD                    1 (to 118)
                116     POP_TOP                         
                118     LOAD_GLOBAL                     1: ValueError
                120     LOAD_CONST                      6: 'second must be in 0..59'
                122     LOAD_FAST                       2: second
                124     CALL_FUNCTION                   2
                126     RAISE_VARARGS                   1
                128     LOAD_CONST                      1: 0
                130     LOAD_FAST                       3: microsecond
                132     DUP_TOP                         
                134     ROT_THREE                       
                136     COMPARE_OP                      1 (<=)
                138     POP_JUMP_IF_FALSE               74 (to 148)
                140     LOAD_CONST                      7: 999999
                142     COMPARE_OP                      1 (<=)
                144     POP_JUMP_IF_TRUE                80 (to 160)
                146     JUMP_FORWARD                    1 (to 150)
                148     POP_TOP                         
                150     LOAD_GLOBAL                     1: ValueError
                152     LOAD_CONST                      8: 'microsecond must be in 0..999999'
                154     LOAD_FAST                       3: microsecond
                156     CALL_FUNCTION                   2
                158     RAISE_VARARGS                   1
                160     LOAD_FAST                       4: fold
                162     LOAD_CONST                      9: (0, 1)
                164     CONTAINS_OP                     1 (not in)
                166     POP_JUMP_IF_FALSE               89 (to 178)
                168     LOAD_GLOBAL                     1: ValueError
                170     LOAD_CONST                      10: 'fold must be either 0 or 1'
                172     LOAD_FAST                       4: fold
                174     CALL_FUNCTION                   2
                176     RAISE_VARARGS                   1
                178     LOAD_FAST                       0: hour
                180     LOAD_FAST                       1: minute
                182     LOAD_FAST                       2: second
                184     LOAD_FAST                       3: microsecond
                186     LOAD_FAST                       4: fold
                188     BUILD_TUPLE                     5
                190     RETURN_VALUE                    
        '_check_time_fields'
        [Code]
            File Name: datetime.py
            Object Name: _check_tzinfo_arg
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'tzinfo'
                'TypeError'
            [Var Names]
                'tz'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'tzinfo argument must be None or of a tzinfo subclass'
            [Disassembly]
                0       LOAD_FAST                       0: tz
                2       LOAD_CONST                      0: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               13 (to 26)
                8       LOAD_GLOBAL                     0: isinstance
                10      LOAD_FAST                       0: tz
                12      LOAD_GLOBAL                     1: tzinfo
                14      CALL_FUNCTION                   2
                16      POP_JUMP_IF_TRUE                15 (to 30)
                18      LOAD_GLOBAL                     2: TypeError
                20      LOAD_CONST                      1: 'tzinfo argument must be None or of a tzinfo subclass'
                22      CALL_FUNCTION                   1
                24      RAISE_VARARGS                   1
                26      LOAD_CONST                      0: None
                28      RETURN_VALUE                    
                30      LOAD_CONST                      0: None
                32      RETURN_VALUE                    
        '_check_tzinfo_arg'
        [Code]
            File Name: datetime.py
            Object Name: _cmperror
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'TypeError'
                'type'
                '__name__'
            [Var Names]
                'x'
                'y'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                "can't compare '%s' to '%s'"
            [Disassembly]
                0       LOAD_GLOBAL                     0: TypeError
                2       LOAD_CONST                      1: "can't compare '%s' to '%s'"
                4       LOAD_GLOBAL                     1: type
                6       LOAD_FAST                       0: x
                8       CALL_FUNCTION                   1
                10      LOAD_ATTR                       2: __name__
                12      LOAD_GLOBAL                     1: type
                14      LOAD_FAST                       1: y
                16      CALL_FUNCTION                   1
                18      LOAD_ATTR                       2: __name__
                20      BUILD_TUPLE                     2
                22      BINARY_MODULO                   
                24      CALL_FUNCTION                   1
                26      RAISE_VARARGS                   1
        '_cmperror'
        [Code]
            File Name: datetime.py
            Object Name: _divide_and_round
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'divmod'
            [Var Names]
                'a'
                'b'
                'q'
                'r'
                'greater_than_half'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'divide a by b and round result to the nearest integer\n\n    When the ratio is exactly half-way between two integers,\n    the even integer is returned.\n    '
                2
                0
                1
            [Disassembly]
                0       LOAD_GLOBAL                     0: divmod
                2       LOAD_FAST                       0: a
                4       LOAD_FAST                       1: b
                6       CALL_FUNCTION                   2
                8       UNPACK_SEQUENCE                 2
                10      STORE_FAST                      2: q
                12      STORE_FAST                      3: r
                14      LOAD_FAST                       3: r
                16      LOAD_CONST                      1: 2
                18      INPLACE_MULTIPLY                
                20      STORE_FAST                      3: r
                22      LOAD_FAST                       1: b
                24      LOAD_CONST                      2: 0
                26      COMPARE_OP                      4 (>)
                28      POP_JUMP_IF_FALSE               19 (to 38)
                30      LOAD_FAST                       3: r
                32      LOAD_FAST                       1: b
                34      COMPARE_OP                      4 (>)
                36      JUMP_FORWARD                    3 (to 44)
                38      LOAD_FAST                       3: r
                40      LOAD_FAST                       1: b
                42      COMPARE_OP                      0 (<)
                44      STORE_FAST                      4: greater_than_half
                46      LOAD_FAST                       4: greater_than_half
                48      POP_JUMP_IF_TRUE                35 (to 70)
                50      LOAD_FAST                       3: r
                52      LOAD_FAST                       1: b
                54      COMPARE_OP                      2 (==)
                56      POP_JUMP_IF_FALSE               39 (to 78)
                58      LOAD_FAST                       2: q
                60      LOAD_CONST                      1: 2
                62      BINARY_MODULO                   
                64      LOAD_CONST                      3: 1
                66      COMPARE_OP                      2 (==)
                68      POP_JUMP_IF_FALSE               39 (to 78)
                70      LOAD_FAST                       2: q
                72      LOAD_CONST                      3: 1
                74      INPLACE_ADD                     
                76      STORE_FAST                      2: q
                78      LOAD_FAST                       2: q
                80      RETURN_VALUE                    
        '_divide_and_round'
        [Code]
            File Name: datetime.py
            Object Name: timedelta
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__new__'
                '__repr__'
                '__str__'
                'total_seconds'
                'property'
                'days'
                'seconds'
                'microseconds'
                '__add__'
                '__radd__'
                '__sub__'
                '__rsub__'
                '__neg__'
                '__pos__'
                '__abs__'
                '__mul__'
                '__rmul__'
                '_to_microseconds'
                '__floordiv__'
                '__truediv__'
                '__mod__'
                '__divmod__'
                '__eq__'
                '__le__'
                '__lt__'
                '__ge__'
                '__gt__'
                '_cmp'
                '__hash__'
                '__bool__'
                '_getstate'
                '__reduce__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'timedelta'
                'Represent the difference between two datetime objects.\n\n    Supported operators:\n\n    - add, subtract timedelta\n    - unary plus, minus, abs\n    - compare to timedelta\n    - multiply, divide by int\n\n    In addition, datetime supports subtraction of two datetime objects\n    returning a timedelta, and addition or subtraction of a datetime\n    and a timedelta giving a datetime.\n\n    Representation: (days, seconds, microseconds).  Why?  Because I\n    felt like it.\n    '
                (
                    '_days'
                    '_seconds'
                    '_microseconds'
                    '_hashcode'
                )
                0
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 8
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 17
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'float'
                        '_math'
                        'modf'
                        'int'
                        'abs'
                        'divmod'
                        'round'
                        'OverflowError'
                        'object'
                        '__new__'
                        '_days'
                        '_seconds'
                        '_microseconds'
                        '_hashcode'
                    [Var Names]
                        'cls'
                        'days'
                        'seconds'
                        'microseconds'
                        'milliseconds'
                        'minutes'
                        'hours'
                        'weeks'
                        'd'
                        's'
                        'us'
                        'dayfrac'
                        'daysecondsfrac'
                        'daysecondswhole'
                        'secondsfrac'
                        'usdouble'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        7
                        60
                        3600
                        1000
                        86400
                        0
                        1
                        86400
                        2
                        172800
                        1e+06
                        2.1e+06
                        1000000
                        259200
                        3.1e+06
                        999999999
                        'timedelta # of days is too large: %d'
                        -1
                    [Disassembly]
                        0       LOAD_CONST                      1: 0
                        2       DUP_TOP                         
                        4       STORE_FAST                      8: d
                        6       DUP_TOP                         
                        8       STORE_FAST                      9: s
                        10      STORE_FAST                      10: us
                        12      LOAD_FAST                       1: days
                        14      LOAD_FAST                       7: weeks
                        16      LOAD_CONST                      2: 7
                        18      BINARY_MULTIPLY                 
                        20      INPLACE_ADD                     
                        22      STORE_FAST                      1: days
                        24      LOAD_FAST                       2: seconds
                        26      LOAD_FAST                       5: minutes
                        28      LOAD_CONST                      3: 60
                        30      BINARY_MULTIPLY                 
                        32      LOAD_FAST                       6: hours
                        34      LOAD_CONST                      4: 3600
                        36      BINARY_MULTIPLY                 
                        38      BINARY_ADD                      
                        40      INPLACE_ADD                     
                        42      STORE_FAST                      2: seconds
                        44      LOAD_FAST                       3: microseconds
                        46      LOAD_FAST                       4: milliseconds
                        48      LOAD_CONST                      5: 1000
                        50      BINARY_MULTIPLY                 
                        52      INPLACE_ADD                     
                        54      STORE_FAST                      3: microseconds
                        56      LOAD_GLOBAL                     0: isinstance
                        58      LOAD_FAST                       1: days
                        60      LOAD_GLOBAL                     1: float
                        62      CALL_FUNCTION                   2
                        64      POP_JUMP_IF_FALSE               74 (to 148)
                        66      LOAD_GLOBAL                     2: _math
                        68      LOAD_METHOD                     3: modf
                        70      LOAD_FAST                       1: days
                        72      CALL_METHOD                     1
                        74      UNPACK_SEQUENCE                 2
                        76      STORE_FAST                      11: dayfrac
                        78      STORE_FAST                      1: days
                        80      LOAD_GLOBAL                     2: _math
                        82      LOAD_METHOD                     3: modf
                        84      LOAD_FAST                       11: dayfrac
                        86      LOAD_CONST                      6: 86400
                        88      BINARY_MULTIPLY                 
                        90      CALL_METHOD                     1
                        92      UNPACK_SEQUENCE                 2
                        94      STORE_FAST                      12: daysecondsfrac
                        96      STORE_FAST                      13: daysecondswhole
                        98      LOAD_FAST                       13: daysecondswhole
                        100     LOAD_GLOBAL                     4: int
                        102     LOAD_FAST                       13: daysecondswhole
                        104     CALL_FUNCTION                   1
                        106     COMPARE_OP                      2 (==)
                        108     POP_JUMP_IF_TRUE                57 (to 114)
                        110     LOAD_ASSERTION_ERROR            
                        112     RAISE_VARARGS                   1
                        114     LOAD_GLOBAL                     4: int
                        116     LOAD_FAST                       13: daysecondswhole
                        118     CALL_FUNCTION                   1
                        120     STORE_FAST                      9: s
                        122     LOAD_FAST                       1: days
                        124     LOAD_GLOBAL                     4: int
                        126     LOAD_FAST                       1: days
                        128     CALL_FUNCTION                   1
                        130     COMPARE_OP                      2 (==)
                        132     POP_JUMP_IF_TRUE                69 (to 138)
                        134     LOAD_ASSERTION_ERROR            
                        136     RAISE_VARARGS                   1
                        138     LOAD_GLOBAL                     4: int
                        140     LOAD_FAST                       1: days
                        142     CALL_FUNCTION                   1
                        144     STORE_FAST                      8: d
                        146     JUMP_FORWARD                    4 (to 156)
                        148     LOAD_CONST                      7: 0
                        150     STORE_FAST                      12: daysecondsfrac
                        152     LOAD_FAST                       1: days
                        154     STORE_FAST                      8: d
                        156     LOAD_GLOBAL                     0: isinstance
                        158     LOAD_FAST                       12: daysecondsfrac
                        160     LOAD_GLOBAL                     1: float
                        162     CALL_FUNCTION                   2
                        164     POP_JUMP_IF_TRUE                85 (to 170)
                        166     LOAD_ASSERTION_ERROR            
                        168     RAISE_VARARGS                   1
                        170     LOAD_GLOBAL                     5: abs
                        172     LOAD_FAST                       12: daysecondsfrac
                        174     CALL_FUNCTION                   1
                        176     LOAD_CONST                      8: 1
                        178     COMPARE_OP                      1 (<=)
                        180     POP_JUMP_IF_TRUE                93 (to 186)
                        182     LOAD_ASSERTION_ERROR            
                        184     RAISE_VARARGS                   1
                        186     LOAD_GLOBAL                     0: isinstance
                        188     LOAD_FAST                       8: d
                        190     LOAD_GLOBAL                     4: int
                        192     CALL_FUNCTION                   2
                        194     POP_JUMP_IF_TRUE                100 (to 200)
                        196     LOAD_ASSERTION_ERROR            
                        198     RAISE_VARARGS                   1
                        200     LOAD_GLOBAL                     5: abs
                        202     LOAD_FAST                       9: s
                        204     CALL_FUNCTION                   1
                        206     LOAD_CONST                      9: 86400
                        208     COMPARE_OP                      1 (<=)
                        210     POP_JUMP_IF_TRUE                108 (to 216)
                        212     LOAD_ASSERTION_ERROR            
                        214     RAISE_VARARGS                   1
                        216     LOAD_GLOBAL                     0: isinstance
                        218     LOAD_FAST                       2: seconds
                        220     LOAD_GLOBAL                     1: float
                        222     CALL_FUNCTION                   2
                        224     POP_JUMP_IF_FALSE               145 (to 290)
                        226     LOAD_GLOBAL                     2: _math
                        228     LOAD_METHOD                     3: modf
                        230     LOAD_FAST                       2: seconds
                        232     CALL_METHOD                     1
                        234     UNPACK_SEQUENCE                 2
                        236     STORE_FAST                      14: secondsfrac
                        238     STORE_FAST                      2: seconds
                        240     LOAD_FAST                       2: seconds
                        242     LOAD_GLOBAL                     4: int
                        244     LOAD_FAST                       2: seconds
                        246     CALL_FUNCTION                   1
                        248     COMPARE_OP                      2 (==)
                        250     POP_JUMP_IF_TRUE                128 (to 256)
                        252     LOAD_ASSERTION_ERROR            
                        254     RAISE_VARARGS                   1
                        256     LOAD_GLOBAL                     4: int
                        258     LOAD_FAST                       2: seconds
                        260     CALL_FUNCTION                   1
                        262     STORE_FAST                      2: seconds
                        264     LOAD_FAST                       14: secondsfrac
                        266     LOAD_FAST                       12: daysecondsfrac
                        268     INPLACE_ADD                     
                        270     STORE_FAST                      14: secondsfrac
                        272     LOAD_GLOBAL                     5: abs
                        274     LOAD_FAST                       14: secondsfrac
                        276     CALL_FUNCTION                   1
                        278     LOAD_CONST                      10: 2
                        280     COMPARE_OP                      1 (<=)
                        282     POP_JUMP_IF_TRUE                144 (to 288)
                        284     LOAD_ASSERTION_ERROR            
                        286     RAISE_VARARGS                   1
                        288     JUMP_FORWARD                    2 (to 294)
                        290     LOAD_FAST                       12: daysecondsfrac
                        292     STORE_FAST                      14: secondsfrac
                        294     LOAD_GLOBAL                     0: isinstance
                        296     LOAD_FAST                       14: secondsfrac
                        298     LOAD_GLOBAL                     1: float
                        300     CALL_FUNCTION                   2
                        302     POP_JUMP_IF_TRUE                154 (to 308)
                        304     LOAD_ASSERTION_ERROR            
                        306     RAISE_VARARGS                   1
                        308     LOAD_GLOBAL                     5: abs
                        310     LOAD_FAST                       14: secondsfrac
                        312     CALL_FUNCTION                   1
                        314     LOAD_CONST                      10: 2
                        316     COMPARE_OP                      1 (<=)
                        318     POP_JUMP_IF_TRUE                162 (to 324)
                        320     LOAD_ASSERTION_ERROR            
                        322     RAISE_VARARGS                   1
                        324     LOAD_GLOBAL                     0: isinstance
                        326     LOAD_FAST                       2: seconds
                        328     LOAD_GLOBAL                     4: int
                        330     CALL_FUNCTION                   2
                        332     POP_JUMP_IF_TRUE                169 (to 338)
                        334     LOAD_ASSERTION_ERROR            
                        336     RAISE_VARARGS                   1
                        338     LOAD_GLOBAL                     6: divmod
                        340     LOAD_FAST                       2: seconds
                        342     LOAD_CONST                      9: 86400
                        344     CALL_FUNCTION                   2
                        346     UNPACK_SEQUENCE                 2
                        348     STORE_FAST                      1: days
                        350     STORE_FAST                      2: seconds
                        352     LOAD_FAST                       8: d
                        354     LOAD_FAST                       1: days
                        356     INPLACE_ADD                     
                        358     STORE_FAST                      8: d
                        360     LOAD_FAST                       9: s
                        362     LOAD_GLOBAL                     4: int
                        364     LOAD_FAST                       2: seconds
                        366     CALL_FUNCTION                   1
                        368     INPLACE_ADD                     
                        370     STORE_FAST                      9: s
                        372     LOAD_GLOBAL                     0: isinstance
                        374     LOAD_FAST                       9: s
                        376     LOAD_GLOBAL                     4: int
                        378     CALL_FUNCTION                   2
                        380     POP_JUMP_IF_TRUE                193 (to 386)
                        382     LOAD_ASSERTION_ERROR            
                        384     RAISE_VARARGS                   1
                        386     LOAD_GLOBAL                     5: abs
                        388     LOAD_FAST                       9: s
                        390     CALL_FUNCTION                   1
                        392     LOAD_CONST                      11: 172800
                        394     COMPARE_OP                      1 (<=)
                        396     POP_JUMP_IF_TRUE                201 (to 402)
                        398     LOAD_ASSERTION_ERROR            
                        400     RAISE_VARARGS                   1
                        402     LOAD_FAST                       14: secondsfrac
                        404     LOAD_CONST                      12: 1e+06
                        406     BINARY_MULTIPLY                 
                        408     STORE_FAST                      15: usdouble
                        410     LOAD_GLOBAL                     5: abs
                        412     LOAD_FAST                       15: usdouble
                        414     CALL_FUNCTION                   1
                        416     LOAD_CONST                      13: 2.1e+06
                        418     COMPARE_OP                      0 (<)
                        420     POP_JUMP_IF_TRUE                213 (to 426)
                        422     LOAD_ASSERTION_ERROR            
                        424     RAISE_VARARGS                   1
                        426     LOAD_GLOBAL                     0: isinstance
                        428     LOAD_FAST                       3: microseconds
                        430     LOAD_GLOBAL                     1: float
                        432     CALL_FUNCTION                   2
                        434     POP_JUMP_IF_FALSE               247 (to 494)
                        436     LOAD_GLOBAL                     7: round
                        438     LOAD_FAST                       3: microseconds
                        440     LOAD_FAST                       15: usdouble
                        442     BINARY_ADD                      
                        444     CALL_FUNCTION                   1
                        446     STORE_FAST                      3: microseconds
                        448     LOAD_GLOBAL                     6: divmod
                        450     LOAD_FAST                       3: microseconds
                        452     LOAD_CONST                      14: 1000000
                        454     CALL_FUNCTION                   2
                        456     UNPACK_SEQUENCE                 2
                        458     STORE_FAST                      2: seconds
                        460     STORE_FAST                      3: microseconds
                        462     LOAD_GLOBAL                     6: divmod
                        464     LOAD_FAST                       2: seconds
                        466     LOAD_CONST                      9: 86400
                        468     CALL_FUNCTION                   2
                        470     UNPACK_SEQUENCE                 2
                        472     STORE_FAST                      1: days
                        474     STORE_FAST                      2: seconds
                        476     LOAD_FAST                       8: d
                        478     LOAD_FAST                       1: days
                        480     INPLACE_ADD                     
                        482     STORE_FAST                      8: d
                        484     LOAD_FAST                       9: s
                        486     LOAD_FAST                       2: seconds
                        488     INPLACE_ADD                     
                        490     STORE_FAST                      9: s
                        492     JUMP_FORWARD                    32 (to 558)
                        494     LOAD_GLOBAL                     4: int
                        496     LOAD_FAST                       3: microseconds
                        498     CALL_FUNCTION                   1
                        500     STORE_FAST                      3: microseconds
                        502     LOAD_GLOBAL                     6: divmod
                        504     LOAD_FAST                       3: microseconds
                        506     LOAD_CONST                      14: 1000000
                        508     CALL_FUNCTION                   2
                        510     UNPACK_SEQUENCE                 2
                        512     STORE_FAST                      2: seconds
                        514     STORE_FAST                      3: microseconds
                        516     LOAD_GLOBAL                     6: divmod
                        518     LOAD_FAST                       2: seconds
                        520     LOAD_CONST                      9: 86400
                        522     CALL_FUNCTION                   2
                        524     UNPACK_SEQUENCE                 2
                        526     STORE_FAST                      1: days
                        528     STORE_FAST                      2: seconds
                        530     LOAD_FAST                       8: d
                        532     LOAD_FAST                       1: days
                        534     INPLACE_ADD                     
                        536     STORE_FAST                      8: d
                        538     LOAD_FAST                       9: s
                        540     LOAD_FAST                       2: seconds
                        542     INPLACE_ADD                     
                        544     STORE_FAST                      9: s
                        546     LOAD_GLOBAL                     7: round
                        548     LOAD_FAST                       3: microseconds
                        550     LOAD_FAST                       15: usdouble
                        552     BINARY_ADD                      
                        554     CALL_FUNCTION                   1
                        556     STORE_FAST                      3: microseconds
                        558     LOAD_GLOBAL                     0: isinstance
                        560     LOAD_FAST                       9: s
                        562     LOAD_GLOBAL                     4: int
                        564     CALL_FUNCTION                   2
                        566     POP_JUMP_IF_TRUE                287 (to 574)
                        570     LOAD_ASSERTION_ERROR            
                        572     RAISE_VARARGS                   1
                        574     LOAD_GLOBAL                     0: isinstance
                        576     LOAD_FAST                       3: microseconds
                        578     LOAD_GLOBAL                     4: int
                        580     CALL_FUNCTION                   2
                        582     POP_JUMP_IF_TRUE                295 (to 590)
                        586     LOAD_ASSERTION_ERROR            
                        588     RAISE_VARARGS                   1
                        590     LOAD_GLOBAL                     5: abs
                        592     LOAD_FAST                       9: s
                        594     CALL_FUNCTION                   1
                        596     LOAD_CONST                      15: 259200
                        598     COMPARE_OP                      1 (<=)
                        600     POP_JUMP_IF_TRUE                304 (to 608)
                        604     LOAD_ASSERTION_ERROR            
                        606     RAISE_VARARGS                   1
                        608     LOAD_GLOBAL                     5: abs
                        610     LOAD_FAST                       3: microseconds
                        612     CALL_FUNCTION                   1
                        614     LOAD_CONST                      16: 3.1e+06
                        616     COMPARE_OP                      0 (<)
                        618     POP_JUMP_IF_TRUE                313 (to 626)
                        622     LOAD_ASSERTION_ERROR            
                        624     RAISE_VARARGS                   1
                        626     LOAD_GLOBAL                     6: divmod
                        628     LOAD_FAST                       3: microseconds
                        630     LOAD_CONST                      14: 1000000
                        632     CALL_FUNCTION                   2
                        634     UNPACK_SEQUENCE                 2
                        636     STORE_FAST                      2: seconds
                        638     STORE_FAST                      10: us
                        640     LOAD_FAST                       9: s
                        642     LOAD_FAST                       2: seconds
                        644     INPLACE_ADD                     
                        646     STORE_FAST                      9: s
                        648     LOAD_GLOBAL                     6: divmod
                        650     LOAD_FAST                       9: s
                        652     LOAD_CONST                      9: 86400
                        654     CALL_FUNCTION                   2
                        656     UNPACK_SEQUENCE                 2
                        658     STORE_FAST                      1: days
                        660     STORE_FAST                      9: s
                        662     LOAD_FAST                       8: d
                        664     LOAD_FAST                       1: days
                        666     INPLACE_ADD                     
                        668     STORE_FAST                      8: d
                        670     LOAD_GLOBAL                     0: isinstance
                        672     LOAD_FAST                       8: d
                        674     LOAD_GLOBAL                     4: int
                        676     CALL_FUNCTION                   2
                        678     POP_JUMP_IF_TRUE                343 (to 686)
                        682     LOAD_ASSERTION_ERROR            
                        684     RAISE_VARARGS                   1
                        686     LOAD_GLOBAL                     0: isinstance
                        688     LOAD_FAST                       9: s
                        690     LOAD_GLOBAL                     4: int
                        692     CALL_FUNCTION                   2
                        694     POP_JUMP_IF_FALSE               363 (to 726)
                        698     LOAD_CONST                      1: 0
                        700     LOAD_FAST                       9: s
                        702     DUP_TOP                         
                        704     ROT_THREE                       
                        706     COMPARE_OP                      1 (<=)
                        708     POP_JUMP_IF_FALSE               362 (to 724)
                        712     LOAD_CONST                      9: 86400
                        714     COMPARE_OP                      0 (<)
                        716     POP_JUMP_IF_TRUE                365 (to 730)
                        720     LOAD_ASSERTION_ERROR            
                        722     RAISE_VARARGS                   1
                        724     POP_TOP                         
                        726     LOAD_ASSERTION_ERROR            
                        728     RAISE_VARARGS                   1
                        730     LOAD_GLOBAL                     0: isinstance
                        732     LOAD_FAST                       10: us
                        734     LOAD_GLOBAL                     4: int
                        736     CALL_FUNCTION                   2
                        738     POP_JUMP_IF_FALSE               385 (to 770)
                        742     LOAD_CONST                      1: 0
                        744     LOAD_FAST                       10: us
                        746     DUP_TOP                         
                        748     ROT_THREE                       
                        750     COMPARE_OP                      1 (<=)
                        752     POP_JUMP_IF_FALSE               384 (to 768)
                        756     LOAD_CONST                      14: 1000000
                        758     COMPARE_OP                      0 (<)
                        760     POP_JUMP_IF_TRUE                387 (to 774)
                        764     LOAD_ASSERTION_ERROR            
                        766     RAISE_VARARGS                   1
                        768     POP_TOP                         
                        770     LOAD_ASSERTION_ERROR            
                        772     RAISE_VARARGS                   1
                        774     LOAD_GLOBAL                     5: abs
                        776     LOAD_FAST                       8: d
                        778     CALL_FUNCTION                   1
                        780     LOAD_CONST                      17: 999999999
                        782     COMPARE_OP                      4 (>)
                        784     POP_JUMP_IF_FALSE               400 (to 800)
                        788     LOAD_GLOBAL                     8: OverflowError
                        790     LOAD_CONST                      18: 'timedelta # of days is too large: %d'
                        792     LOAD_FAST                       8: d
                        794     BINARY_MODULO                   
                        796     CALL_FUNCTION                   1
                        798     RAISE_VARARGS                   1
                        800     LOAD_GLOBAL                     9: object
                        802     LOAD_METHOD                     10: __new__
                        804     LOAD_FAST                       0: cls
                        806     CALL_METHOD                     1
                        808     STORE_FAST                      16: self
                        810     LOAD_FAST                       8: d
                        812     LOAD_FAST                       16: self
                        814     STORE_ATTR                      11: _days
                        816     LOAD_FAST                       9: s
                        818     LOAD_FAST                       16: self
                        820     STORE_ATTR                      12: _seconds
                        822     LOAD_FAST                       10: us
                        824     LOAD_FAST                       16: self
                        826     STORE_ATTR                      13: _microseconds
                        828     LOAD_CONST                      19: -1
                        830     LOAD_FAST                       16: self
                        832     STORE_ATTR                      14: _hashcode
                        834     LOAD_FAST                       16: self
                        836     RETURN_VALUE                    
                'timedelta.__new__'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                        'append'
                        '_seconds'
                        '_microseconds'
                        '__class__'
                        '__module__'
                        '__qualname__'
                        'join'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'days=%d'
                        'seconds=%d'
                        'microseconds=%d'
                        '0'
                        '%s.%s(%s)'
                        ', '
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      1: args
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       0: _days
                        8       POP_JUMP_IF_FALSE               13 (to 26)
                        10      LOAD_FAST                       1: args
                        12      LOAD_METHOD                     1: append
                        14      LOAD_CONST                      1: 'days=%d'
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _days
                        20      BINARY_MODULO                   
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       2: _seconds
                        30      POP_JUMP_IF_FALSE               24 (to 48)
                        32      LOAD_FAST                       1: args
                        34      LOAD_METHOD                     1: append
                        36      LOAD_CONST                      2: 'seconds=%d'
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       2: _seconds
                        42      BINARY_MODULO                   
                        44      CALL_METHOD                     1
                        46      POP_TOP                         
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       3: _microseconds
                        52      POP_JUMP_IF_FALSE               35 (to 70)
                        54      LOAD_FAST                       1: args
                        56      LOAD_METHOD                     1: append
                        58      LOAD_CONST                      3: 'microseconds=%d'
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       3: _microseconds
                        64      BINARY_MODULO                   
                        66      CALL_METHOD                     1
                        68      POP_TOP                         
                        70      LOAD_FAST                       1: args
                        72      POP_JUMP_IF_TRUE                42 (to 84)
                        74      LOAD_FAST                       1: args
                        76      LOAD_METHOD                     1: append
                        78      LOAD_CONST                      4: '0'
                        80      CALL_METHOD                     1
                        82      POP_TOP                         
                        84      LOAD_CONST                      5: '%s.%s(%s)'
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       4: __class__
                        90      LOAD_ATTR                       5: __module__
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       4: __class__
                        96      LOAD_ATTR                       6: __qualname__
                        98      LOAD_CONST                      6: ', '
                        100     LOAD_METHOD                     7: join
                        102     LOAD_FAST                       1: args
                        104     CALL_METHOD                     1
                        106     BUILD_TUPLE                     3
                        108     BINARY_MODULO                   
                        110     RETURN_VALUE                    
                'timedelta.__repr__'
                [Code]
                    File Name: datetime.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        '_seconds'
                        '_days'
                        '_microseconds'
                    [Var Names]
                        'self'
                        'mm'
                        'ss'
                        'hh'
                        's'
                        'plural'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        60
                        '%d:%02d:%02d'
                        [Code]
                            File Name: datetime.py
                            Object Name: plural
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 1
                            Stack Size: 3
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'abs'
                            [Var Names]
                                'n'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                                1
                                's'
                                ''
                            [Disassembly]
                                0       LOAD_FAST                       0: n
                                2       LOAD_GLOBAL                     0: abs
                                4       LOAD_FAST                       0: n
                                6       CALL_FUNCTION                   1
                                8       LOAD_CONST                      1: 1
                                10      COMPARE_OP                      3 (!=)
                                12      POP_JUMP_IF_FALSE               9 (to 18)
                                14      LOAD_CONST                      2: 's'
                                16      JUMP_IF_TRUE_OR_POP             10 (to 20)
                                18      LOAD_CONST                      3: ''
                                20      BUILD_TUPLE                     2
                                22      RETURN_VALUE                    
                        'timedelta.__str__.<locals>.plural'
                        '%d day%s, '
                        '.%06d'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _seconds
                        6       LOAD_CONST                      1: 60
                        8       CALL_FUNCTION                   2
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      1: mm
                        14      STORE_FAST                      2: ss
                        16      LOAD_GLOBAL                     0: divmod
                        18      LOAD_FAST                       1: mm
                        20      LOAD_CONST                      1: 60
                        22      CALL_FUNCTION                   2
                        24      UNPACK_SEQUENCE                 2
                        26      STORE_FAST                      3: hh
                        28      STORE_FAST                      1: mm
                        30      LOAD_CONST                      2: '%d:%02d:%02d'
                        32      LOAD_FAST                       3: hh
                        34      LOAD_FAST                       1: mm
                        36      LOAD_FAST                       2: ss
                        38      BUILD_TUPLE                     3
                        40      BINARY_MODULO                   
                        42      STORE_FAST                      4: s
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       2: _days
                        48      POP_JUMP_IF_FALSE               38 (to 76)
                        50      LOAD_CONST                      3: <CODE> plural
                        52      LOAD_CONST                      4: 'timedelta.__str__.<locals>.plural'
                        54      MAKE_FUNCTION                   0
                        56      STORE_FAST                      5: plural
                        58      LOAD_CONST                      5: '%d day%s, '
                        60      LOAD_FAST                       5: plural
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       2: _days
                        66      CALL_FUNCTION                   1
                        68      BINARY_MODULO                   
                        70      LOAD_FAST                       4: s
                        72      BINARY_ADD                      
                        74      STORE_FAST                      4: s
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       3: _microseconds
                        80      POP_JUMP_IF_FALSE               48 (to 96)
                        82      LOAD_FAST                       4: s
                        84      LOAD_CONST                      6: '.%06d'
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       3: _microseconds
                        90      BINARY_MODULO                   
                        92      BINARY_ADD                      
                        94      STORE_FAST                      4: s
                        96      LOAD_FAST                       4: s
                        98      RETURN_VALUE                    
                'timedelta.__str__'
                [Code]
                    File Name: datetime.py
                    Object Name: total_seconds
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'days'
                        'seconds'
                        'microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Total seconds in the duration.'
                        86400
                        1000000
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: days
                        4       LOAD_CONST                      1: 86400
                        6       BINARY_MULTIPLY                 
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: seconds
                        12      BINARY_ADD                      
                        14      LOAD_CONST                      2: 1000000
                        16      BINARY_MULTIPLY                 
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: microseconds
                        22      BINARY_ADD                      
                        24      LOAD_CONST                      2: 1000000
                        26      BINARY_TRUE_DIVIDE              
                        28      RETURN_VALUE                    
                'timedelta.total_seconds'
                [Code]
                    File Name: datetime.py
                    Object Name: days
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'days'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _days
                        4       RETURN_VALUE                    
                'timedelta.days'
                [Code]
                    File Name: datetime.py
                    Object Name: seconds
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_seconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'seconds'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _seconds
                        4       RETURN_VALUE                    
                'timedelta.seconds'
                [Code]
                    File Name: datetime.py
                    Object Name: microseconds
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'microseconds'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _microseconds
                        4       RETURN_VALUE                    
                'timedelta.microseconds'
                [Code]
                    File Name: datetime.py
                    Object Name: __add__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_days'
                        '_seconds'
                        '_microseconds'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               23 (to 46)
                        10      LOAD_GLOBAL                     1: timedelta
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _days
                        16      LOAD_FAST                       1: other
                        18      LOAD_ATTR                       2: _days
                        20      BINARY_ADD                      
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _seconds
                        26      LOAD_FAST                       1: other
                        28      LOAD_ATTR                       3: _seconds
                        30      BINARY_ADD                      
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _microseconds
                        36      LOAD_FAST                       1: other
                        38      LOAD_ATTR                       4: _microseconds
                        40      BINARY_ADD                      
                        42      CALL_FUNCTION                   3
                        44      RETURN_VALUE                    
                        46      LOAD_GLOBAL                     5: NotImplemented
                        48      RETURN_VALUE                    
                'timedelta.__add__'
                [Code]
                    File Name: datetime.py
                    Object Name: __sub__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_days'
                        '_seconds'
                        '_microseconds'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               23 (to 46)
                        10      LOAD_GLOBAL                     1: timedelta
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _days
                        16      LOAD_FAST                       1: other
                        18      LOAD_ATTR                       2: _days
                        20      BINARY_SUBTRACT                 
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _seconds
                        26      LOAD_FAST                       1: other
                        28      LOAD_ATTR                       3: _seconds
                        30      BINARY_SUBTRACT                 
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _microseconds
                        36      LOAD_FAST                       1: other
                        38      LOAD_ATTR                       4: _microseconds
                        40      BINARY_SUBTRACT                 
                        42      CALL_FUNCTION                   3
                        44      RETURN_VALUE                    
                        46      LOAD_GLOBAL                     5: NotImplemented
                        48      RETURN_VALUE                    
                'timedelta.__sub__'
                [Code]
                    File Name: datetime.py
                    Object Name: __rsub__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_FAST                       0: self
                        12      UNARY_NEGATIVE                  
                        14      LOAD_FAST                       1: other
                        16      BINARY_ADD                      
                        18      RETURN_VALUE                    
                        20      LOAD_GLOBAL                     2: NotImplemented
                        22      RETURN_VALUE                    
                'timedelta.__rsub__'
                [Code]
                    File Name: datetime.py
                    Object Name: __neg__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'timedelta'
                        '_days'
                        '_seconds'
                        '_microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: timedelta
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _days
                        6       UNARY_NEGATIVE                  
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: _seconds
                        12      UNARY_NEGATIVE                  
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       3: _microseconds
                        18      UNARY_NEGATIVE                  
                        20      CALL_FUNCTION                   3
                        22      RETURN_VALUE                    
                'timedelta.__neg__'
                [Code]
                    File Name: datetime.py
                    Object Name: __pos__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       RETURN_VALUE                    
                'timedelta.__pos__'
                [Code]
                    File Name: datetime.py
                    Object Name: __abs__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _days
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      0 (<)
                        8       POP_JUMP_IF_FALSE               8 (to 16)
                        10      LOAD_FAST                       0: self
                        12      UNARY_NEGATIVE                  
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       0: self
                        18      RETURN_VALUE                    
                'timedelta.__abs__'
                [Code]
                    File Name: datetime.py
                    Object Name: __mul__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'int'
                        'timedelta'
                        '_days'
                        '_seconds'
                        '_microseconds'
                        'float'
                        '_to_microseconds'
                        'as_integer_ratio'
                        '_divide_and_round'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                        'usec'
                        'a'
                        'b'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: int
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               20 (to 40)
                        10      LOAD_GLOBAL                     2: timedelta
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _days
                        16      LOAD_FAST                       1: other
                        18      BINARY_MULTIPLY                 
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       4: _seconds
                        24      LOAD_FAST                       1: other
                        26      BINARY_MULTIPLY                 
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       5: _microseconds
                        32      LOAD_FAST                       1: other
                        34      BINARY_MULTIPLY                 
                        36      CALL_FUNCTION                   3
                        38      RETURN_VALUE                    
                        40      LOAD_GLOBAL                     0: isinstance
                        42      LOAD_FAST                       1: other
                        44      LOAD_GLOBAL                     6: float
                        46      CALL_FUNCTION                   2
                        48      POP_JUMP_IF_FALSE               46 (to 92)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     7: _to_microseconds
                        54      CALL_METHOD                     0
                        56      STORE_FAST                      2: usec
                        58      LOAD_FAST                       1: other
                        60      LOAD_METHOD                     8: as_integer_ratio
                        62      CALL_METHOD                     0
                        64      UNPACK_SEQUENCE                 2
                        66      STORE_FAST                      3: a
                        68      STORE_FAST                      4: b
                        70      LOAD_GLOBAL                     2: timedelta
                        72      LOAD_CONST                      1: 0
                        74      LOAD_CONST                      1: 0
                        76      LOAD_GLOBAL                     9: _divide_and_round
                        78      LOAD_FAST                       2: usec
                        80      LOAD_FAST                       3: a
                        82      BINARY_MULTIPLY                 
                        84      LOAD_FAST                       4: b
                        86      CALL_FUNCTION                   2
                        88      CALL_FUNCTION                   3
                        90      RETURN_VALUE                    
                        92      LOAD_GLOBAL                     10: NotImplemented
                        94      RETURN_VALUE                    
                'timedelta.__mul__'
                [Code]
                    File Name: datetime.py
                    Object Name: _to_microseconds
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                        '_seconds'
                        '_microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        86400
                        1000000
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _days
                        4       LOAD_CONST                      1: 86400
                        6       BINARY_MULTIPLY                 
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: _seconds
                        12      BINARY_ADD                      
                        14      LOAD_CONST                      2: 1000000
                        16      BINARY_MULTIPLY                 
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _microseconds
                        22      BINARY_ADD                      
                        24      RETURN_VALUE                    
                'timedelta._to_microseconds'
                [Code]
                    File Name: datetime.py
                    Object Name: __floordiv__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'int'
                        'timedelta'
                        'NotImplemented'
                        '_to_microseconds'
                    [Var Names]
                        'self'
                        'other'
                        'usec'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: int
                        6       LOAD_GLOBAL                     2: timedelta
                        8       BUILD_TUPLE                     2
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_TRUE                9 (to 18)
                        14      LOAD_GLOBAL                     3: NotImplemented
                        16      RETURN_VALUE                    
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     4: _to_microseconds
                        22      CALL_METHOD                     0
                        24      STORE_FAST                      2: usec
                        26      LOAD_GLOBAL                     0: isinstance
                        28      LOAD_FAST                       1: other
                        30      LOAD_GLOBAL                     2: timedelta
                        32      CALL_FUNCTION                   2
                        34      POP_JUMP_IF_FALSE               24 (to 48)
                        36      LOAD_FAST                       2: usec
                        38      LOAD_FAST                       1: other
                        40      LOAD_METHOD                     4: _to_microseconds
                        42      CALL_METHOD                     0
                        44      BINARY_FLOOR_DIVIDE             
                        46      RETURN_VALUE                    
                        48      LOAD_GLOBAL                     0: isinstance
                        50      LOAD_FAST                       1: other
                        52      LOAD_GLOBAL                     1: int
                        54      CALL_FUNCTION                   2
                        56      POP_JUMP_IF_FALSE               37 (to 74)
                        58      LOAD_GLOBAL                     2: timedelta
                        60      LOAD_CONST                      1: 0
                        62      LOAD_CONST                      1: 0
                        64      LOAD_FAST                       2: usec
                        66      LOAD_FAST                       1: other
                        68      BINARY_FLOOR_DIVIDE             
                        70      CALL_FUNCTION                   3
                        72      RETURN_VALUE                    
                        74      LOAD_CONST                      0: None
                        76      RETURN_VALUE                    
                'timedelta.__floordiv__'
                [Code]
                    File Name: datetime.py
                    Object Name: __truediv__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'int'
                        'float'
                        'timedelta'
                        'NotImplemented'
                        '_to_microseconds'
                        '_divide_and_round'
                        'as_integer_ratio'
                    [Var Names]
                        'self'
                        'other'
                        'usec'
                        'a'
                        'b'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: int
                        6       LOAD_GLOBAL                     2: float
                        8       LOAD_GLOBAL                     3: timedelta
                        10      BUILD_TUPLE                     3
                        12      CALL_FUNCTION                   2
                        14      POP_JUMP_IF_TRUE                10 (to 20)
                        16      LOAD_GLOBAL                     4: NotImplemented
                        18      RETURN_VALUE                    
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     5: _to_microseconds
                        24      CALL_METHOD                     0
                        26      STORE_FAST                      2: usec
                        28      LOAD_GLOBAL                     0: isinstance
                        30      LOAD_FAST                       1: other
                        32      LOAD_GLOBAL                     3: timedelta
                        34      CALL_FUNCTION                   2
                        36      POP_JUMP_IF_FALSE               25 (to 50)
                        38      LOAD_FAST                       2: usec
                        40      LOAD_FAST                       1: other
                        42      LOAD_METHOD                     5: _to_microseconds
                        44      CALL_METHOD                     0
                        46      BINARY_TRUE_DIVIDE              
                        48      RETURN_VALUE                    
                        50      LOAD_GLOBAL                     0: isinstance
                        52      LOAD_FAST                       1: other
                        54      LOAD_GLOBAL                     1: int
                        56      CALL_FUNCTION                   2
                        58      POP_JUMP_IF_FALSE               39 (to 78)
                        60      LOAD_GLOBAL                     3: timedelta
                        62      LOAD_CONST                      1: 0
                        64      LOAD_CONST                      1: 0
                        66      LOAD_GLOBAL                     6: _divide_and_round
                        68      LOAD_FAST                       2: usec
                        70      LOAD_FAST                       1: other
                        72      CALL_FUNCTION                   2
                        74      CALL_FUNCTION                   3
                        76      RETURN_VALUE                    
                        78      LOAD_GLOBAL                     0: isinstance
                        80      LOAD_FAST                       1: other
                        82      LOAD_GLOBAL                     2: float
                        84      CALL_FUNCTION                   2
                        86      POP_JUMP_IF_FALSE               61 (to 122)
                        88      LOAD_FAST                       1: other
                        90      LOAD_METHOD                     7: as_integer_ratio
                        92      CALL_METHOD                     0
                        94      UNPACK_SEQUENCE                 2
                        96      STORE_FAST                      3: a
                        98      STORE_FAST                      4: b
                        100     LOAD_GLOBAL                     3: timedelta
                        102     LOAD_CONST                      1: 0
                        104     LOAD_CONST                      1: 0
                        106     LOAD_GLOBAL                     6: _divide_and_round
                        108     LOAD_FAST                       4: b
                        110     LOAD_FAST                       2: usec
                        112     BINARY_MULTIPLY                 
                        114     LOAD_FAST                       3: a
                        116     CALL_FUNCTION                   2
                        118     CALL_FUNCTION                   3
                        120     RETURN_VALUE                    
                        122     LOAD_CONST                      0: None
                        124     RETURN_VALUE                    
                'timedelta.__truediv__'
                [Code]
                    File Name: datetime.py
                    Object Name: __mod__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_to_microseconds'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                        'r'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               19 (to 38)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _to_microseconds
                        14      CALL_METHOD                     0
                        16      LOAD_FAST                       1: other
                        18      LOAD_METHOD                     2: _to_microseconds
                        20      CALL_METHOD                     0
                        22      BINARY_MODULO                   
                        24      STORE_FAST                      2: r
                        26      LOAD_GLOBAL                     1: timedelta
                        28      LOAD_CONST                      1: 0
                        30      LOAD_CONST                      1: 0
                        32      LOAD_FAST                       2: r
                        34      CALL_FUNCTION                   3
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     3: NotImplemented
                        40      RETURN_VALUE                    
                'timedelta.__mod__'
                [Code]
                    File Name: datetime.py
                    Object Name: __divmod__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'divmod'
                        '_to_microseconds'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                        'q'
                        'r'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               24 (to 48)
                        10      LOAD_GLOBAL                     2: divmod
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     3: _to_microseconds
                        16      CALL_METHOD                     0
                        18      LOAD_FAST                       1: other
                        20      LOAD_METHOD                     3: _to_microseconds
                        22      CALL_METHOD                     0
                        24      CALL_FUNCTION                   2
                        26      UNPACK_SEQUENCE                 2
                        28      STORE_FAST                      2: q
                        30      STORE_FAST                      3: r
                        32      LOAD_FAST                       2: q
                        34      LOAD_GLOBAL                     1: timedelta
                        36      LOAD_CONST                      1: 0
                        38      LOAD_CONST                      1: 0
                        40      LOAD_FAST                       3: r
                        42      CALL_FUNCTION                   3
                        44      BUILD_TUPLE                     2
                        46      RETURN_VALUE                    
                        48      LOAD_GLOBAL                     4: NotImplemented
                        50      RETURN_VALUE                    
                'timedelta.__divmod__'
                [Code]
                    File Name: datetime.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      2 (==)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'timedelta.__eq__'
                [Code]
                    File Name: datetime.py
                    Object Name: __le__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      1 (<=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'timedelta.__le__'
                [Code]
                    File Name: datetime.py
                    Object Name: __lt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      0 (<)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'timedelta.__lt__'
                [Code]
                    File Name: datetime.py
                    Object Name: __ge__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      5 (>=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'timedelta.__ge__'
                [Code]
                    File Name: datetime.py
                    Object Name: __gt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      4 (>)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'timedelta.__gt__'
                [Code]
                    File Name: datetime.py
                    Object Name: _cmp
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        '_cmp'
                        '_getstate'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_ASSERTION_ERROR            
                        12      RAISE_VARARGS                   1
                        14      LOAD_GLOBAL                     2: _cmp
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     3: _getstate
                        20      CALL_METHOD                     0
                        22      LOAD_FAST                       1: other
                        24      LOAD_METHOD                     3: _getstate
                        26      CALL_METHOD                     0
                        28      CALL_FUNCTION                   2
                        30      RETURN_VALUE                    
                'timedelta._cmp'
                [Code]
                    File Name: datetime.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hashcode'
                        'hash'
                        '_getstate'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hashcode
                        4       LOAD_CONST                      1: -1
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_GLOBAL                     1: hash
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     2: _getstate
                        16      CALL_METHOD                     0
                        18      CALL_FUNCTION                   1
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      0: _hashcode
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       0: _hashcode
                        28      RETURN_VALUE                    
                'timedelta.__hash__'
                [Code]
                    File Name: datetime.py
                    Object Name: __bool__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                        '_seconds'
                        '_microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _days
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      3 (!=)
                        8       JUMP_IF_TRUE_OR_POP             14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _seconds
                        14      LOAD_CONST                      1: 0
                        16      COMPARE_OP                      3 (!=)
                        18      JUMP_IF_TRUE_OR_POP             14 (to 28)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: _microseconds
                        24      LOAD_CONST                      1: 0
                        26      COMPARE_OP                      3 (!=)
                        28      RETURN_VALUE                    
                'timedelta.__bool__'
                [Code]
                    File Name: datetime.py
                    Object Name: _getstate
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_days'
                        '_seconds'
                        '_microseconds'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _days
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _seconds
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: _microseconds
                        12      BUILD_TUPLE                     3
                        14      RETURN_VALUE                    
                'timedelta._getstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '_getstate'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: _getstate
                        8       CALL_METHOD                     0
                        10      BUILD_TUPLE                     2
                        12      RETURN_VALUE                    
                'timedelta.__reduce__'
                None
                (
                    0
                    0
                    0
                    0
                    0
                    0
                    0
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'timedelta'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Represent the difference between two datetime objects.\n\n    Supported operators:\n\n    - add, subtract timedelta\n    - unary plus, minus, abs\n    - compare to timedelta\n    - multiply, divide by int\n\n    In addition, datetime supports subtraction of two datetime objects\n    returning a timedelta, and addition or subtraction of a datetime\n    and a timedelta giving a datetime.\n\n    Representation: (days, seconds, microseconds).  Why?  Because I\n    felt like it.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('_days', '_seconds', '_microseconds', '_hashcode')
                14      STORE_NAME                      4: __slots__
                16      NOP                             
                18      NOP                             
                20      LOAD_CONST                      63: (0, 0, 0, 0, 0, 0, 0)
                22      LOAD_CONST                      4: <CODE> __new__
                24      LOAD_CONST                      5: 'timedelta.__new__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      5: __new__
                30      LOAD_CONST                      6: <CODE> __repr__
                32      LOAD_CONST                      7: 'timedelta.__repr__'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      6: __repr__
                38      LOAD_CONST                      8: <CODE> __str__
                40      LOAD_CONST                      9: 'timedelta.__str__'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      7: __str__
                46      LOAD_CONST                      10: <CODE> total_seconds
                48      LOAD_CONST                      11: 'timedelta.total_seconds'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      8: total_seconds
                54      LOAD_NAME                       9: property
                56      LOAD_CONST                      12: <CODE> days
                58      LOAD_CONST                      13: 'timedelta.days'
                60      MAKE_FUNCTION                   0
                62      CALL_FUNCTION                   1
                64      STORE_NAME                      10: days
                66      LOAD_NAME                       9: property
                68      LOAD_CONST                      14: <CODE> seconds
                70      LOAD_CONST                      15: 'timedelta.seconds'
                72      MAKE_FUNCTION                   0
                74      CALL_FUNCTION                   1
                76      STORE_NAME                      11: seconds
                78      LOAD_NAME                       9: property
                80      LOAD_CONST                      16: <CODE> microseconds
                82      LOAD_CONST                      17: 'timedelta.microseconds'
                84      MAKE_FUNCTION                   0
                86      CALL_FUNCTION                   1
                88      STORE_NAME                      12: microseconds
                90      LOAD_CONST                      18: <CODE> __add__
                92      LOAD_CONST                      19: 'timedelta.__add__'
                94      MAKE_FUNCTION                   0
                96      STORE_NAME                      13: __add__
                98      LOAD_NAME                       13: __add__
                100     STORE_NAME                      14: __radd__
                102     LOAD_CONST                      20: <CODE> __sub__
                104     LOAD_CONST                      21: 'timedelta.__sub__'
                106     MAKE_FUNCTION                   0
                108     STORE_NAME                      15: __sub__
                110     LOAD_CONST                      22: <CODE> __rsub__
                112     LOAD_CONST                      23: 'timedelta.__rsub__'
                114     MAKE_FUNCTION                   0
                116     STORE_NAME                      16: __rsub__
                118     LOAD_CONST                      24: <CODE> __neg__
                120     LOAD_CONST                      25: 'timedelta.__neg__'
                122     MAKE_FUNCTION                   0
                124     STORE_NAME                      17: __neg__
                126     LOAD_CONST                      26: <CODE> __pos__
                128     LOAD_CONST                      27: 'timedelta.__pos__'
                130     MAKE_FUNCTION                   0
                132     STORE_NAME                      18: __pos__
                134     LOAD_CONST                      28: <CODE> __abs__
                136     LOAD_CONST                      29: 'timedelta.__abs__'
                138     MAKE_FUNCTION                   0
                140     STORE_NAME                      19: __abs__
                142     LOAD_CONST                      30: <CODE> __mul__
                144     LOAD_CONST                      31: 'timedelta.__mul__'
                146     MAKE_FUNCTION                   0
                148     STORE_NAME                      20: __mul__
                150     LOAD_NAME                       20: __mul__
                152     STORE_NAME                      21: __rmul__
                154     LOAD_CONST                      32: <CODE> _to_microseconds
                156     LOAD_CONST                      33: 'timedelta._to_microseconds'
                158     MAKE_FUNCTION                   0
                160     STORE_NAME                      22: _to_microseconds
                162     LOAD_CONST                      34: <CODE> __floordiv__
                164     LOAD_CONST                      35: 'timedelta.__floordiv__'
                166     MAKE_FUNCTION                   0
                168     STORE_NAME                      23: __floordiv__
                170     LOAD_CONST                      36: <CODE> __truediv__
                172     LOAD_CONST                      37: 'timedelta.__truediv__'
                174     MAKE_FUNCTION                   0
                176     STORE_NAME                      24: __truediv__
                178     LOAD_CONST                      38: <CODE> __mod__
                180     LOAD_CONST                      39: 'timedelta.__mod__'
                182     MAKE_FUNCTION                   0
                184     STORE_NAME                      25: __mod__
                186     LOAD_CONST                      40: <CODE> __divmod__
                188     LOAD_CONST                      41: 'timedelta.__divmod__'
                190     MAKE_FUNCTION                   0
                192     STORE_NAME                      26: __divmod__
                194     LOAD_CONST                      42: <CODE> __eq__
                196     LOAD_CONST                      43: 'timedelta.__eq__'
                198     MAKE_FUNCTION                   0
                200     STORE_NAME                      27: __eq__
                202     LOAD_CONST                      44: <CODE> __le__
                204     LOAD_CONST                      45: 'timedelta.__le__'
                206     MAKE_FUNCTION                   0
                208     STORE_NAME                      28: __le__
                210     LOAD_CONST                      46: <CODE> __lt__
                212     LOAD_CONST                      47: 'timedelta.__lt__'
                214     MAKE_FUNCTION                   0
                216     STORE_NAME                      29: __lt__
                218     LOAD_CONST                      48: <CODE> __ge__
                220     LOAD_CONST                      49: 'timedelta.__ge__'
                222     MAKE_FUNCTION                   0
                224     STORE_NAME                      30: __ge__
                226     LOAD_CONST                      50: <CODE> __gt__
                228     LOAD_CONST                      51: 'timedelta.__gt__'
                230     MAKE_FUNCTION                   0
                232     STORE_NAME                      31: __gt__
                234     LOAD_CONST                      52: <CODE> _cmp
                236     LOAD_CONST                      53: 'timedelta._cmp'
                238     MAKE_FUNCTION                   0
                240     STORE_NAME                      32: _cmp
                242     LOAD_CONST                      54: <CODE> __hash__
                244     LOAD_CONST                      55: 'timedelta.__hash__'
                246     MAKE_FUNCTION                   0
                248     STORE_NAME                      33: __hash__
                250     LOAD_CONST                      56: <CODE> __bool__
                252     LOAD_CONST                      57: 'timedelta.__bool__'
                254     MAKE_FUNCTION                   0
                256     STORE_NAME                      34: __bool__
                258     LOAD_CONST                      58: <CODE> _getstate
                260     LOAD_CONST                      59: 'timedelta._getstate'
                262     MAKE_FUNCTION                   0
                264     STORE_NAME                      35: _getstate
                266     LOAD_CONST                      60: <CODE> __reduce__
                268     LOAD_CONST                      61: 'timedelta.__reduce__'
                270     MAKE_FUNCTION                   0
                272     STORE_NAME                      36: __reduce__
                274     LOAD_CONST                      62: None
                276     RETURN_VALUE                    
        'timedelta'
        -999999999
        999999999
        23
        59
        999999
        (
            'days'
            'hours'
            'minutes'
            'seconds'
            'microseconds'
        )
        (
            'microseconds'
        )
        [Code]
            File Name: datetime.py
            Object Name: date
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__new__'
                'classmethod'
                'fromtimestamp'
                'today'
                'fromordinal'
                'fromisoformat'
                'fromisocalendar'
                '__repr__'
                'ctime'
                'strftime'
                '__format__'
                'isoformat'
                '__str__'
                'property'
                'year'
                'month'
                'day'
                'timetuple'
                'toordinal'
                'replace'
                '__eq__'
                '__le__'
                '__lt__'
                '__ge__'
                '__gt__'
                '_cmp'
                '__hash__'
                '__add__'
                '__radd__'
                '__sub__'
                'weekday'
                'isoweekday'
                'isocalendar'
                '_getstate'
                '_date__setstate'
                '__reduce__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'date'
                'Concrete date type.\n\n    Constructors:\n\n    __new__()\n    fromtimestamp()\n    today()\n    fromordinal()\n\n    Operators:\n\n    __repr__, __str__\n    __eq__, __le__, __lt__, __ge__, __gt__, __hash__\n    __add__, __radd__, __sub__ (add/radd only with timedelta arg)\n\n    Methods:\n\n    timetuple()\n    toordinal()\n    weekday()\n    isoweekday(), isocalendar(), isoformat()\n    ctime()\n    strftime()\n\n    Properties (readonly):\n    year, month, day\n    '
                (
                    '_year'
                    '_month'
                    '_day'
                    '_hashcode'
                )
                None
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'bytes'
                        'str'
                        'len'
                        'ord'
                        'encode'
                        'UnicodeEncodeError'
                        'ValueError'
                        'object'
                        '__new__'
                        '_date__setstate'
                        '_hashcode'
                        '_check_date_fields'
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'cls'
                        'year'
                        'month'
                        'day'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Constructor.\n\n        Arguments:\n\n        year, month, day (required, base 1)\n        '
                        None
                        4
                        1
                        2
                        3
                        12
                        'latin1'
                        "Failed to encode latin1 string when unpickling a date object. pickle.load(data, encoding='latin1') is assumed."
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       2: month
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               74 (to 148)
                        8       LOAD_GLOBAL                     0: isinstance
                        10      LOAD_FAST                       1: year
                        12      LOAD_GLOBAL                     1: bytes
                        14      LOAD_GLOBAL                     2: str
                        16      BUILD_TUPLE                     2
                        18      CALL_FUNCTION                   2
                        20      POP_JUMP_IF_FALSE               74 (to 148)
                        22      LOAD_GLOBAL                     3: len
                        24      LOAD_FAST                       1: year
                        26      CALL_FUNCTION                   1
                        28      LOAD_CONST                      2: 4
                        30      COMPARE_OP                      2 (==)
                        32      POP_JUMP_IF_FALSE               74 (to 148)
                        34      LOAD_CONST                      3: 1
                        36      LOAD_GLOBAL                     4: ord
                        38      LOAD_FAST                       1: year
                        40      LOAD_CONST                      4: 2
                        42      LOAD_CONST                      5: 3
                        44      BUILD_SLICE                     2
                        46      BINARY_SUBSCR                   
                        48      CALL_FUNCTION                   1
                        50      DUP_TOP                         
                        52      ROT_THREE                       
                        54      COMPARE_OP                      1 (<=)
                        56      POP_JUMP_IF_FALSE               33 (to 66)
                        58      LOAD_CONST                      6: 12
                        60      COMPARE_OP                      1 (<=)
                        62      POP_JUMP_IF_FALSE               74 (to 148)
                        64      JUMP_FORWARD                    2 (to 70)
                        66      POP_TOP                         
                        68      JUMP_FORWARD                    39 (to 148)
                        70      LOAD_GLOBAL                     0: isinstance
                        72      LOAD_FAST                       1: year
                        74      LOAD_GLOBAL                     2: str
                        76      CALL_FUNCTION                   2
                        78      POP_JUMP_IF_FALSE               59 (to 118)
                        80      SETUP_FINALLY                   7 (to 96)
                        82      LOAD_FAST                       1: year
                        84      LOAD_METHOD                     5: encode
                        86      LOAD_CONST                      7: 'latin1'
                        88      CALL_METHOD                     1
                        90      STORE_FAST                      1: year
                        92      POP_BLOCK                       
                        94      JUMP_FORWARD                    11 (to 118)
                        96      DUP_TOP                         
                        98      LOAD_GLOBAL                     6: UnicodeEncodeError
                        100     JUMP_IF_NOT_EXC_MATCH           58 (to 116)
                        102     POP_TOP                         
                        104     POP_TOP                         
                        106     POP_TOP                         
                        108     LOAD_GLOBAL                     7: ValueError
                        110     LOAD_CONST                      8: "Failed to encode latin1 string when unpickling a date object. pickle.load(data, encoding='latin1') is assumed."
                        112     CALL_FUNCTION                   1
                        114     RAISE_VARARGS                   1
                        116     RERAISE                         0
                        118     LOAD_GLOBAL                     8: object
                        120     LOAD_METHOD                     9: __new__
                        122     LOAD_FAST                       0: cls
                        124     CALL_METHOD                     1
                        126     STORE_FAST                      4: self
                        128     LOAD_FAST                       4: self
                        130     LOAD_METHOD                     10: _date__setstate
                        132     LOAD_FAST                       1: year
                        134     CALL_METHOD                     1
                        136     POP_TOP                         
                        138     LOAD_CONST                      9: -1
                        140     LOAD_FAST                       4: self
                        142     STORE_ATTR                      11: _hashcode
                        144     LOAD_FAST                       4: self
                        146     RETURN_VALUE                    
                        148     LOAD_GLOBAL                     12: _check_date_fields
                        150     LOAD_FAST                       1: year
                        152     LOAD_FAST                       2: month
                        154     LOAD_FAST                       3: day
                        156     CALL_FUNCTION                   3
                        158     UNPACK_SEQUENCE                 3
                        160     STORE_FAST                      1: year
                        162     STORE_FAST                      2: month
                        164     STORE_FAST                      3: day
                        166     LOAD_GLOBAL                     8: object
                        168     LOAD_METHOD                     9: __new__
                        170     LOAD_FAST                       0: cls
                        172     CALL_METHOD                     1
                        174     STORE_FAST                      4: self
                        176     LOAD_FAST                       1: year
                        178     LOAD_FAST                       4: self
                        180     STORE_ATTR                      13: _year
                        182     LOAD_FAST                       2: month
                        184     LOAD_FAST                       4: self
                        186     STORE_ATTR                      14: _month
                        188     LOAD_FAST                       3: day
                        190     LOAD_FAST                       4: self
                        192     STORE_ATTR                      15: _day
                        194     LOAD_CONST                      9: -1
                        196     LOAD_FAST                       4: self
                        198     STORE_ATTR                      11: _hashcode
                        200     LOAD_FAST                       4: self
                        202     RETURN_VALUE                    
                'date.__new__'
                [Code]
                    File Name: datetime.py
                    Object Name: fromtimestamp
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        'localtime'
                    [Var Names]
                        'cls'
                        't'
                        'y'
                        'm'
                        'd'
                        'hh'
                        'mm'
                        'ss'
                        'weekday'
                        'jday'
                        'dst'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a date from a POSIX timestamp (like time.time()).'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _time
                        2       LOAD_METHOD                     1: localtime
                        4       LOAD_FAST                       1: t
                        6       CALL_METHOD                     1
                        8       UNPACK_SEQUENCE                 9
                        10      STORE_FAST                      2: y
                        12      STORE_FAST                      3: m
                        14      STORE_FAST                      4: d
                        16      STORE_FAST                      5: hh
                        18      STORE_FAST                      6: mm
                        20      STORE_FAST                      7: ss
                        22      STORE_FAST                      8: weekday
                        24      STORE_FAST                      9: jday
                        26      STORE_FAST                      10: dst
                        28      LOAD_FAST                       0: cls
                        30      LOAD_FAST                       2: y
                        32      LOAD_FAST                       3: m
                        34      LOAD_FAST                       4: d
                        36      CALL_FUNCTION                   3
                        38      RETURN_VALUE                    
                'date.fromtimestamp'
                [Code]
                    File Name: datetime.py
                    Object Name: today
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        'time'
                        'fromtimestamp'
                    [Var Names]
                        'cls'
                        't'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a date from time.time().'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _time
                        2       LOAD_METHOD                     1: time
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: t
                        8       LOAD_FAST                       0: cls
                        10      LOAD_METHOD                     2: fromtimestamp
                        12      LOAD_FAST                       1: t
                        14      CALL_METHOD                     1
                        16      RETURN_VALUE                    
                'date.today'
                [Code]
                    File Name: datetime.py
                    Object Name: fromordinal
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_ord2ymd'
                    [Var Names]
                        'cls'
                        'n'
                        'y'
                        'm'
                        'd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a date from a proleptic Gregorian ordinal.\n\n        January 1 of year 1 is day 1.  Only the year, month and day are\n        non-zero in the result.\n        '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _ord2ymd
                        2       LOAD_FAST                       1: n
                        4       CALL_FUNCTION                   1
                        6       UNPACK_SEQUENCE                 3
                        8       STORE_FAST                      2: y
                        10      STORE_FAST                      3: m
                        12      STORE_FAST                      4: d
                        14      LOAD_FAST                       0: cls
                        16      LOAD_FAST                       2: y
                        18      LOAD_FAST                       3: m
                        20      LOAD_FAST                       4: d
                        22      CALL_FUNCTION                   3
                        24      RETURN_VALUE                    
                'date.fromordinal'
                [Code]
                    File Name: datetime.py
                    Object Name: fromisoformat
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        'len'
                        '_parse_isoformat_date'
                        'Exception'
                        'ValueError'
                    [Var Names]
                        'cls'
                        'date_string'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a date from the output of date.isoformat().'
                        'fromisoformat: argument must be str'
                        10
                        'Invalid isoformat string: '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: date_string
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'fromisoformat: argument must be str'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      SETUP_FINALLY                   15 (to 50)
                        20      LOAD_GLOBAL                     3: len
                        22      LOAD_FAST                       1: date_string
                        24      CALL_FUNCTION                   1
                        26      LOAD_CONST                      2: 10
                        28      COMPARE_OP                      2 (==)
                        30      POP_JUMP_IF_TRUE                18 (to 36)
                        32      LOAD_ASSERTION_ERROR            
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       0: cls
                        38      LOAD_GLOBAL                     4: _parse_isoformat_date
                        40      LOAD_FAST                       1: date_string
                        42      CALL_FUNCTION                   1
                        44      CALL_FUNCTION_EX                0
                        46      POP_BLOCK                       
                        48      RETURN_VALUE                    
                        50      DUP_TOP                         
                        52      LOAD_GLOBAL                     5: Exception
                        54      JUMP_IF_NOT_EXC_MATCH           38 (to 76)
                        56      POP_TOP                         
                        58      POP_TOP                         
                        60      POP_TOP                         
                        62      LOAD_GLOBAL                     6: ValueError
                        64      LOAD_CONST                      3: 'Invalid isoformat string: '
                        66      LOAD_FAST                       1: date_string
                        68      FORMAT_VALUE                    2 (FVC_REPR)
                        70      BUILD_STRING                    2
                        72      CALL_FUNCTION                   1
                        74      RAISE_VARARGS                   1
                        76      RERAISE                         0
                'date.fromisoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: fromisocalendar
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'MINYEAR'
                        'MAXYEAR'
                        'ValueError'
                        '_ymd2ord'
                        '_is_leap'
                        '_isoweek1monday'
                        '_ord2ymd'
                    [Var Names]
                        'cls'
                        'year'
                        'week'
                        'day'
                        'out_of_range'
                        'first_weekday'
                        'day_offset'
                        'day_1'
                        'ord_day'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a date from the ISO year, week number and weekday.\n\n        This is the inverse of the date.isocalendar() function'
                        'Year is out of range: '
                        0
                        53
                        True
                        1
                        7
                        4
                        3
                        False
                        'Invalid week: '
                        8
                        'Invalid weekday: '
                        ' (range is [1, 7])'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: MINYEAR
                        2       LOAD_FAST                       1: year
                        4       DUP_TOP                         
                        6       ROT_THREE                       
                        8       COMPARE_OP                      1 (<=)
                        10      POP_JUMP_IF_FALSE               10 (to 20)
                        12      LOAD_GLOBAL                     1: MAXYEAR
                        14      COMPARE_OP                      1 (<=)
                        16      POP_JUMP_IF_TRUE                18 (to 36)
                        18      JUMP_FORWARD                    1 (to 22)
                        20      POP_TOP                         
                        22      LOAD_GLOBAL                     2: ValueError
                        24      LOAD_CONST                      1: 'Year is out of range: '
                        26      LOAD_FAST                       1: year
                        28      FORMAT_VALUE                    0 (FVC_NONE)
                        30      BUILD_STRING                    2
                        32      CALL_FUNCTION                   1
                        34      RAISE_VARARGS                   1
                        36      LOAD_CONST                      2: 0
                        38      LOAD_FAST                       2: week
                        40      DUP_TOP                         
                        42      ROT_THREE                       
                        44      COMPARE_OP                      0 (<)
                        46      POP_JUMP_IF_FALSE               28 (to 56)
                        48      LOAD_CONST                      3: 53
                        50      COMPARE_OP                      0 (<)
                        52      POP_JUMP_IF_TRUE                66 (to 132)
                        54      JUMP_FORWARD                    1 (to 58)
                        56      POP_TOP                         
                        58      LOAD_CONST                      4: True
                        60      STORE_FAST                      4: out_of_range
                        62      LOAD_FAST                       2: week
                        64      LOAD_CONST                      3: 53
                        66      COMPARE_OP                      2 (==)
                        68      POP_JUMP_IF_FALSE               57 (to 114)
                        70      LOAD_GLOBAL                     3: _ymd2ord
                        72      LOAD_FAST                       1: year
                        74      LOAD_CONST                      5: 1
                        76      LOAD_CONST                      5: 1
                        78      CALL_FUNCTION                   3
                        80      LOAD_CONST                      6: 7
                        82      BINARY_MODULO                   
                        84      STORE_FAST                      5: first_weekday
                        86      LOAD_FAST                       5: first_weekday
                        88      LOAD_CONST                      7: 4
                        90      COMPARE_OP                      2 (==)
                        92      POP_JUMP_IF_TRUE                55 (to 110)
                        94      LOAD_FAST                       5: first_weekday
                        96      LOAD_CONST                      8: 3
                        98      COMPARE_OP                      2 (==)
                        100     POP_JUMP_IF_FALSE               57 (to 114)
                        102     LOAD_GLOBAL                     4: _is_leap
                        104     LOAD_FAST                       1: year
                        106     CALL_FUNCTION                   1
                        108     POP_JUMP_IF_FALSE               57 (to 114)
                        110     LOAD_CONST                      9: False
                        112     STORE_FAST                      4: out_of_range
                        114     LOAD_FAST                       4: out_of_range
                        116     POP_JUMP_IF_FALSE               66 (to 132)
                        118     LOAD_GLOBAL                     2: ValueError
                        120     LOAD_CONST                      10: 'Invalid week: '
                        122     LOAD_FAST                       2: week
                        124     FORMAT_VALUE                    0 (FVC_NONE)
                        126     BUILD_STRING                    2
                        128     CALL_FUNCTION                   1
                        130     RAISE_VARARGS                   1
                        132     LOAD_CONST                      2: 0
                        134     LOAD_FAST                       3: day
                        136     DUP_TOP                         
                        138     ROT_THREE                       
                        140     COMPARE_OP                      0 (<)
                        142     POP_JUMP_IF_FALSE               76 (to 152)
                        144     LOAD_CONST                      11: 8
                        146     COMPARE_OP                      0 (<)
                        148     POP_JUMP_IF_TRUE                85 (to 170)
                        150     JUMP_FORWARD                    1 (to 154)
                        152     POP_TOP                         
                        154     LOAD_GLOBAL                     2: ValueError
                        156     LOAD_CONST                      12: 'Invalid weekday: '
                        158     LOAD_FAST                       3: day
                        160     FORMAT_VALUE                    0 (FVC_NONE)
                        162     LOAD_CONST                      13: ' (range is [1, 7])'
                        164     BUILD_STRING                    3
                        166     CALL_FUNCTION                   1
                        168     RAISE_VARARGS                   1
                        170     LOAD_FAST                       2: week
                        172     LOAD_CONST                      5: 1
                        174     BINARY_SUBTRACT                 
                        176     LOAD_CONST                      6: 7
                        178     BINARY_MULTIPLY                 
                        180     LOAD_FAST                       3: day
                        182     LOAD_CONST                      5: 1
                        184     BINARY_SUBTRACT                 
                        186     BINARY_ADD                      
                        188     STORE_FAST                      6: day_offset
                        190     LOAD_GLOBAL                     5: _isoweek1monday
                        192     LOAD_FAST                       1: year
                        194     CALL_FUNCTION                   1
                        196     STORE_FAST                      7: day_1
                        198     LOAD_FAST                       7: day_1
                        200     LOAD_FAST                       6: day_offset
                        202     BINARY_ADD                      
                        204     STORE_FAST                      8: ord_day
                        206     LOAD_FAST                       0: cls
                        208     LOAD_GLOBAL                     6: _ord2ymd
                        210     LOAD_FAST                       8: ord_day
                        212     CALL_FUNCTION                   1
                        214     CALL_FUNCTION_EX                0
                        216     RETURN_VALUE                    
                'date.fromisocalendar'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__module__'
                        '__qualname__'
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Convert to formal string, for repr().\n\n        >>> dt = datetime(2010, 1, 1)\n        >>> repr(dt)\n        'datetime.datetime(2010, 1, 1, 0, 0)'\n\n        >>> dt = datetime(2010, 1, 1, tzinfo=timezone.utc)\n        >>> repr(dt)\n        'datetime.datetime(2010, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)'\n        "
                        '%s.%s(%d, %d, %d)'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%s.%s(%d, %d, %d)'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __module__
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: __class__
                        12      LOAD_ATTR                       2: __qualname__
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       3: _year
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       4: _month
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       5: _day
                        26      BUILD_TUPLE                     5
                        28      BINARY_MODULO                   
                        30      RETURN_VALUE                    
                'date.__repr__'
                [Code]
                    File Name: datetime.py
                    Object Name: ctime
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'toordinal'
                        '_DAYNAMES'
                        '_MONTHNAMES'
                        '_month'
                        '_day'
                        '_year'
                    [Var Names]
                        'self'
                        'weekday'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return ctime() style string.'
                        7
                        '%s %s %2d 00:00:00 %04d'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: toordinal
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 7
                        8       BINARY_MODULO                   
                        10      JUMP_IF_TRUE_OR_POP             7 (to 14)
                        12      LOAD_CONST                      1: 7
                        14      STORE_FAST                      1: weekday
                        16      LOAD_CONST                      2: '%s %s %2d 00:00:00 %04d'
                        18      LOAD_GLOBAL                     1: _DAYNAMES
                        20      LOAD_FAST                       1: weekday
                        22      BINARY_SUBSCR                   
                        24      LOAD_GLOBAL                     2: _MONTHNAMES
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       3: _month
                        30      BINARY_SUBSCR                   
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _day
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       5: _year
                        40      BUILD_TUPLE                     4
                        42      BINARY_MODULO                   
                        44      RETURN_VALUE                    
                'date.ctime'
                [Code]
                    File Name: datetime.py
                    Object Name: strftime
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_wrap_strftime'
                        'timetuple'
                    [Var Names]
                        'self'
                        'fmt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Format using strftime().'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _wrap_strftime
                        2       LOAD_FAST                       0: self
                        4       LOAD_FAST                       1: fmt
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: timetuple
                        10      CALL_METHOD                     0
                        12      CALL_FUNCTION                   3
                        14      RETURN_VALUE                    
                'date.strftime'
                [Code]
                    File Name: datetime.py
                    Object Name: __format__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        'type'
                        '__name__'
                        'len'
                        'strftime'
                    [Var Names]
                        'self'
                        'fmt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'must be str, not %s'
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: fmt
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                14 (to 28)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'must be str, not %s'
                        14      LOAD_GLOBAL                     3: type
                        16      LOAD_FAST                       1: fmt
                        18      CALL_FUNCTION                   1
                        20      LOAD_ATTR                       4: __name__
                        22      BINARY_MODULO                   
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_GLOBAL                     5: len
                        30      LOAD_FAST                       1: fmt
                        32      CALL_FUNCTION                   1
                        34      LOAD_CONST                      2: 0
                        36      COMPARE_OP                      3 (!=)
                        38      POP_JUMP_IF_FALSE               25 (to 50)
                        40      LOAD_FAST                       0: self
                        42      LOAD_METHOD                     6: strftime
                        44      LOAD_FAST                       1: fmt
                        46      CALL_METHOD                     1
                        48      RETURN_VALUE                    
                        50      LOAD_GLOBAL                     1: str
                        52      LOAD_FAST                       0: self
                        54      CALL_FUNCTION                   1
                        56      RETURN_VALUE                    
                'date.__format__'
                [Code]
                    File Name: datetime.py
                    Object Name: isoformat
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the date formatted according to ISO.\n\n        This is 'YYYY-MM-DD'.\n\n        References:\n        - http://www.w3.org/TR/NOTE-datetime\n        - http://www.cl.cam.ac.uk/~mgk25/iso-time.html\n        "
                        '%04d-%02d-%02d'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%04d-%02d-%02d'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _year
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _month
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _day
                        14      BUILD_TUPLE                     3
                        16      BINARY_MODULO                   
                        18      RETURN_VALUE                    
                'date.isoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: year
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'year (1-9999)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _year
                        4       RETURN_VALUE                    
                'date.year'
                [Code]
                    File Name: datetime.py
                    Object Name: month
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_month'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'month (1-12)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _month
                        4       RETURN_VALUE                    
                'date.month'
                [Code]
                    File Name: datetime.py
                    Object Name: day
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'day (1-31)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _day
                        4       RETURN_VALUE                    
                'date.day'
                [Code]
                    File Name: datetime.py
                    Object Name: timetuple
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_build_struct_time'
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return local time tuple compatible with time.localtime().'
                        0
                        -1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _build_struct_time
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _year
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _month
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: _day
                        14      LOAD_CONST                      1: 0
                        16      LOAD_CONST                      1: 0
                        18      LOAD_CONST                      1: 0
                        20      LOAD_CONST                      2: -1
                        22      CALL_FUNCTION                   7
                        24      RETURN_VALUE                    
                'date.timetuple'
                [Code]
                    File Name: datetime.py
                    Object Name: toordinal
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_ymd2ord'
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return proleptic Gregorian ordinal for the year, month and day.\n\n        January 1 of year 1 is day 1.  Only the year, month and day values\n        contribute to the result.\n        '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _ymd2ord
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _year
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _month
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: _day
                        14      CALL_FUNCTION                   3
                        16      RETURN_VALUE                    
                'date.toordinal'
                [Code]
                    File Name: datetime.py
                    Object Name: replace
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                        '_month'
                        '_day'
                        'type'
                    [Var Names]
                        'self'
                        'year'
                        'month'
                        'day'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new date with new values for the specified fields.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: year
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: _year
                        12      STORE_FAST                      1: year
                        14      LOAD_FAST                       2: month
                        16      LOAD_CONST                      1: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               14 (to 28)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       1: _month
                        26      STORE_FAST                      2: month
                        28      LOAD_FAST                       3: day
                        30      LOAD_CONST                      1: None
                        32      IS_OP                           0 (is)
                        34      POP_JUMP_IF_FALSE               21 (to 42)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: _day
                        40      STORE_FAST                      3: day
                        42      LOAD_GLOBAL                     3: type
                        44      LOAD_FAST                       0: self
                        46      CALL_FUNCTION                   1
                        48      LOAD_FAST                       1: year
                        50      LOAD_FAST                       2: month
                        52      LOAD_FAST                       3: day
                        54      CALL_FUNCTION                   3
                        56      RETURN_VALUE                    
                'date.replace'
                [Code]
                    File Name: datetime.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      2 (==)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'date.__eq__'
                [Code]
                    File Name: datetime.py
                    Object Name: __le__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      1 (<=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'date.__le__'
                [Code]
                    File Name: datetime.py
                    Object Name: __lt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      0 (<)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'date.__lt__'
                [Code]
                    File Name: datetime.py
                    Object Name: __ge__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      5 (>=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'date.__ge__'
                [Code]
                    File Name: datetime.py
                    Object Name: __gt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      4 (>)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'date.__gt__'
                [Code]
                    File Name: datetime.py
                    Object Name: _cmp
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'date'
                        '_year'
                        '_month'
                        '_day'
                        '_cmp'
                    [Var Names]
                        'self'
                        'other'
                        'y'
                        'm'
                        'd'
                        'y2'
                        'm2'
                        'd2'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: date
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_ASSERTION_ERROR            
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _year
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       3: _month
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: _day
                        26      ROT_THREE                       
                        28      ROT_TWO                         
                        30      STORE_FAST                      2: y
                        32      STORE_FAST                      3: m
                        34      STORE_FAST                      4: d
                        36      LOAD_FAST                       1: other
                        38      LOAD_ATTR                       2: _year
                        40      LOAD_FAST                       1: other
                        42      LOAD_ATTR                       3: _month
                        44      LOAD_FAST                       1: other
                        46      LOAD_ATTR                       4: _day
                        48      ROT_THREE                       
                        50      ROT_TWO                         
                        52      STORE_FAST                      5: y2
                        54      STORE_FAST                      6: m2
                        56      STORE_FAST                      7: d2
                        58      LOAD_GLOBAL                     5: _cmp
                        60      LOAD_FAST                       2: y
                        62      LOAD_FAST                       3: m
                        64      LOAD_FAST                       4: d
                        66      BUILD_TUPLE                     3
                        68      LOAD_FAST                       5: y2
                        70      LOAD_FAST                       6: m2
                        72      LOAD_FAST                       7: d2
                        74      BUILD_TUPLE                     3
                        76      CALL_FUNCTION                   2
                        78      RETURN_VALUE                    
                'date._cmp'
                [Code]
                    File Name: datetime.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hashcode'
                        'hash'
                        '_getstate'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Hash.'
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hashcode
                        4       LOAD_CONST                      1: -1
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_GLOBAL                     1: hash
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     2: _getstate
                        16      CALL_METHOD                     0
                        18      CALL_FUNCTION                   1
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      0: _hashcode
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       0: _hashcode
                        28      RETURN_VALUE                    
                'date.__hash__'
                [Code]
                    File Name: datetime.py
                    Object Name: __add__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'toordinal'
                        'days'
                        '_MAXORDINAL'
                        'type'
                        'fromordinal'
                        'OverflowError'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                        'o'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Add a date to a timedelta.'
                        0
                        'result out of range'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               38 (to 76)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: toordinal
                        14      CALL_METHOD                     0
                        16      LOAD_FAST                       1: other
                        18      LOAD_ATTR                       3: days
                        20      BINARY_ADD                      
                        22      STORE_FAST                      2: o
                        24      LOAD_CONST                      1: 0
                        26      LOAD_FAST                       2: o
                        28      DUP_TOP                         
                        30      ROT_THREE                       
                        32      COMPARE_OP                      0 (<)
                        34      POP_JUMP_IF_FALSE               22 (to 44)
                        36      LOAD_GLOBAL                     4: _MAXORDINAL
                        38      COMPARE_OP                      1 (<=)
                        40      POP_JUMP_IF_FALSE               34 (to 68)
                        42      JUMP_FORWARD                    5 (to 54)
                        44      POP_TOP                         
                        46      LOAD_GLOBAL                     7: OverflowError
                        48      LOAD_CONST                      2: 'result out of range'
                        50      CALL_FUNCTION                   1
                        52      RAISE_VARARGS                   1
                        54      LOAD_GLOBAL                     5: type
                        56      LOAD_FAST                       0: self
                        58      CALL_FUNCTION                   1
                        60      LOAD_METHOD                     6: fromordinal
                        62      LOAD_FAST                       2: o
                        64      CALL_METHOD                     1
                        66      RETURN_VALUE                    
                        68      LOAD_GLOBAL                     7: OverflowError
                        70      LOAD_CONST                      2: 'result out of range'
                        72      CALL_FUNCTION                   1
                        74      RAISE_VARARGS                   1
                        76      LOAD_GLOBAL                     8: NotImplemented
                        78      RETURN_VALUE                    
                'date.__add__'
                [Code]
                    File Name: datetime.py
                    Object Name: __sub__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'days'
                        'date'
                        'toordinal'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                        'days1'
                        'days2'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Subtract two dates, or a date and a timedelta.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               13 (to 26)
                        10      LOAD_FAST                       0: self
                        12      LOAD_GLOBAL                     1: timedelta
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: days
                        18      UNARY_NEGATIVE                  
                        20      CALL_FUNCTION                   1
                        22      BINARY_ADD                      
                        24      RETURN_VALUE                    
                        26      LOAD_GLOBAL                     0: isinstance
                        28      LOAD_FAST                       1: other
                        30      LOAD_GLOBAL                     3: date
                        32      CALL_FUNCTION                   2
                        34      POP_JUMP_IF_FALSE               32 (to 64)
                        36      LOAD_FAST                       0: self
                        38      LOAD_METHOD                     4: toordinal
                        40      CALL_METHOD                     0
                        42      STORE_FAST                      2: days1
                        44      LOAD_FAST                       1: other
                        46      LOAD_METHOD                     4: toordinal
                        48      CALL_METHOD                     0
                        50      STORE_FAST                      3: days2
                        52      LOAD_GLOBAL                     1: timedelta
                        54      LOAD_FAST                       2: days1
                        56      LOAD_FAST                       3: days2
                        58      BINARY_SUBTRACT                 
                        60      CALL_FUNCTION                   1
                        62      RETURN_VALUE                    
                        64      LOAD_GLOBAL                     5: NotImplemented
                        66      RETURN_VALUE                    
                'date.__sub__'
                [Code]
                    File Name: datetime.py
                    Object Name: weekday
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'toordinal'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return day of the week, where Monday == 0 ... Sunday == 6.'
                        6
                        7
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: toordinal
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 6
                        8       BINARY_ADD                      
                        10      LOAD_CONST                      2: 7
                        12      BINARY_MODULO                   
                        14      RETURN_VALUE                    
                'date.weekday'
                [Code]
                    File Name: datetime.py
                    Object Name: isoweekday
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'toordinal'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return day of the week, where Monday == 1 ... Sunday == 7.'
                        7
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: toordinal
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 7
                        8       BINARY_MODULO                   
                        10      JUMP_IF_TRUE_OR_POP             7 (to 14)
                        12      LOAD_CONST                      1: 7
                        14      RETURN_VALUE                    
                'date.isoweekday'
                [Code]
                    File Name: datetime.py
                    Object Name: isocalendar
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                        '_isoweek1monday'
                        '_ymd2ord'
                        '_month'
                        '_day'
                        'divmod'
                        '_IsoCalendarDate'
                    [Var Names]
                        'self'
                        'year'
                        'week1monday'
                        'today'
                        'week'
                        'day'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return a named tuple containing ISO year, week number, and weekday.\n\n        The first ISO week of the year is the (Mon-Sun) week\n        containing the year's first Thursday; everything else derives\n        from that.\n\n        The first week is 1; Monday is 1 ... Sunday is 7.\n\n        ISO calendar algorithm taken from\n        http://www.phys.uu.nl/~vgent/calendar/isocalendar.htm\n        (used with permission)\n        "
                        7
                        0
                        1
                        52
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _year
                        4       STORE_FAST                      1: year
                        6       LOAD_GLOBAL                     1: _isoweek1monday
                        8       LOAD_FAST                       1: year
                        10      CALL_FUNCTION                   1
                        12      STORE_FAST                      2: week1monday
                        14      LOAD_GLOBAL                     2: _ymd2ord
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _year
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: _month
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       4: _day
                        28      CALL_FUNCTION                   3
                        30      STORE_FAST                      3: today
                        32      LOAD_GLOBAL                     5: divmod
                        34      LOAD_FAST                       3: today
                        36      LOAD_FAST                       2: week1monday
                        38      BINARY_SUBTRACT                 
                        40      LOAD_CONST                      1: 7
                        42      CALL_FUNCTION                   2
                        44      UNPACK_SEQUENCE                 2
                        46      STORE_FAST                      4: week
                        48      STORE_FAST                      5: day
                        50      LOAD_FAST                       4: week
                        52      LOAD_CONST                      2: 0
                        54      COMPARE_OP                      0 (<)
                        56      POP_JUMP_IF_FALSE               47 (to 94)
                        58      LOAD_FAST                       1: year
                        60      LOAD_CONST                      3: 1
                        62      INPLACE_SUBTRACT                
                        64      STORE_FAST                      1: year
                        66      LOAD_GLOBAL                     1: _isoweek1monday
                        68      LOAD_FAST                       1: year
                        70      CALL_FUNCTION                   1
                        72      STORE_FAST                      2: week1monday
                        74      LOAD_GLOBAL                     5: divmod
                        76      LOAD_FAST                       3: today
                        78      LOAD_FAST                       2: week1monday
                        80      BINARY_SUBTRACT                 
                        82      LOAD_CONST                      1: 7
                        84      CALL_FUNCTION                   2
                        86      UNPACK_SEQUENCE                 2
                        88      STORE_FAST                      4: week
                        90      STORE_FAST                      5: day
                        92      JUMP_FORWARD                    18 (to 130)
                        94      LOAD_FAST                       4: week
                        96      LOAD_CONST                      4: 52
                        98      COMPARE_OP                      5 (>=)
                        100     POP_JUMP_IF_FALSE               65 (to 130)
                        102     LOAD_FAST                       3: today
                        104     LOAD_GLOBAL                     1: _isoweek1monday
                        106     LOAD_FAST                       1: year
                        108     LOAD_CONST                      3: 1
                        110     BINARY_ADD                      
                        112     CALL_FUNCTION                   1
                        114     COMPARE_OP                      5 (>=)
                        116     POP_JUMP_IF_FALSE               65 (to 130)
                        118     LOAD_FAST                       1: year
                        120     LOAD_CONST                      3: 1
                        122     INPLACE_ADD                     
                        124     STORE_FAST                      1: year
                        126     LOAD_CONST                      2: 0
                        128     STORE_FAST                      4: week
                        130     LOAD_GLOBAL                     6: _IsoCalendarDate
                        132     LOAD_FAST                       1: year
                        134     LOAD_FAST                       4: week
                        136     LOAD_CONST                      3: 1
                        138     BINARY_ADD                      
                        140     LOAD_FAST                       5: day
                        142     LOAD_CONST                      3: 1
                        144     BINARY_ADD                      
                        146     CALL_FUNCTION                   3
                        148     RETURN_VALUE                    
                'date.isocalendar'
                [Code]
                    File Name: datetime.py
                    Object Name: _getstate
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        '_year'
                        'bytes'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                        'yhi'
                        'ylo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        256
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _year
                        6       LOAD_CONST                      1: 256
                        8       CALL_FUNCTION                   2
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      1: yhi
                        14      STORE_FAST                      2: ylo
                        16      LOAD_GLOBAL                     2: bytes
                        18      LOAD_FAST                       1: yhi
                        20      LOAD_FAST                       2: ylo
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _month
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _day
                        30      BUILD_LIST                      4
                        32      CALL_FUNCTION                   1
                        34      BUILD_TUPLE                     1
                        36      RETURN_VALUE                    
                'date._getstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __setstate
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_month'
                        '_day'
                        '_year'
                    [Var Names]
                        'self'
                        'string'
                        'yhi'
                        'ylo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        256
                    [Disassembly]
                        0       LOAD_FAST                       1: string
                        2       UNPACK_SEQUENCE                 4
                        4       STORE_FAST                      2: yhi
                        6       STORE_FAST                      3: ylo
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      0: _month
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      1: _day
                        16      LOAD_FAST                       2: yhi
                        18      LOAD_CONST                      1: 256
                        20      BINARY_MULTIPLY                 
                        22      LOAD_FAST                       3: ylo
                        24      BINARY_ADD                      
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      2: _year
                        30      LOAD_CONST                      0: None
                        32      RETURN_VALUE                    
                'date.__setstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '_getstate'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: _getstate
                        8       CALL_METHOD                     0
                        10      BUILD_TUPLE                     2
                        12      RETURN_VALUE                    
                'date.__reduce__'
                (
                    None
                    None
                )
                (
                    None
                    None
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'date'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Concrete date type.\n\n    Constructors:\n\n    __new__()\n    fromtimestamp()\n    today()\n    fromordinal()\n\n    Operators:\n\n    __repr__, __str__\n    __eq__, __le__, __lt__, __ge__, __gt__, __hash__\n    __add__, __radd__, __sub__ (add/radd only with timedelta arg)\n\n    Methods:\n\n    timetuple()\n    toordinal()\n    weekday()\n    isoweekday(), isocalendar(), isoformat()\n    ctime()\n    strftime()\n\n    Properties (readonly):\n    year, month, day\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('_year', '_month', '_day', '_hashcode')
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      68: (None, None)
                18      LOAD_CONST                      4: <CODE> __new__
                20      LOAD_CONST                      5: 'date.__new__'
                22      MAKE_FUNCTION                   1
                24      STORE_NAME                      5: __new__
                26      LOAD_NAME                       6: classmethod
                28      LOAD_CONST                      6: <CODE> fromtimestamp
                30      LOAD_CONST                      7: 'date.fromtimestamp'
                32      MAKE_FUNCTION                   0
                34      CALL_FUNCTION                   1
                36      STORE_NAME                      7: fromtimestamp
                38      LOAD_NAME                       6: classmethod
                40      LOAD_CONST                      8: <CODE> today
                42      LOAD_CONST                      9: 'date.today'
                44      MAKE_FUNCTION                   0
                46      CALL_FUNCTION                   1
                48      STORE_NAME                      8: today
                50      LOAD_NAME                       6: classmethod
                52      LOAD_CONST                      10: <CODE> fromordinal
                54      LOAD_CONST                      11: 'date.fromordinal'
                56      MAKE_FUNCTION                   0
                58      CALL_FUNCTION                   1
                60      STORE_NAME                      9: fromordinal
                62      LOAD_NAME                       6: classmethod
                64      LOAD_CONST                      12: <CODE> fromisoformat
                66      LOAD_CONST                      13: 'date.fromisoformat'
                68      MAKE_FUNCTION                   0
                70      CALL_FUNCTION                   1
                72      STORE_NAME                      10: fromisoformat
                74      LOAD_NAME                       6: classmethod
                76      LOAD_CONST                      14: <CODE> fromisocalendar
                78      LOAD_CONST                      15: 'date.fromisocalendar'
                80      MAKE_FUNCTION                   0
                82      CALL_FUNCTION                   1
                84      STORE_NAME                      11: fromisocalendar
                86      LOAD_CONST                      16: <CODE> __repr__
                88      LOAD_CONST                      17: 'date.__repr__'
                90      MAKE_FUNCTION                   0
                92      STORE_NAME                      12: __repr__
                94      LOAD_CONST                      18: <CODE> ctime
                96      LOAD_CONST                      19: 'date.ctime'
                98      MAKE_FUNCTION                   0
                100     STORE_NAME                      13: ctime
                102     LOAD_CONST                      20: <CODE> strftime
                104     LOAD_CONST                      21: 'date.strftime'
                106     MAKE_FUNCTION                   0
                108     STORE_NAME                      14: strftime
                110     LOAD_CONST                      22: <CODE> __format__
                112     LOAD_CONST                      23: 'date.__format__'
                114     MAKE_FUNCTION                   0
                116     STORE_NAME                      15: __format__
                118     LOAD_CONST                      24: <CODE> isoformat
                120     LOAD_CONST                      25: 'date.isoformat'
                122     MAKE_FUNCTION                   0
                124     STORE_NAME                      16: isoformat
                126     LOAD_NAME                       16: isoformat
                128     STORE_NAME                      17: __str__
                130     LOAD_NAME                       18: property
                132     LOAD_CONST                      26: <CODE> year
                134     LOAD_CONST                      27: 'date.year'
                136     MAKE_FUNCTION                   0
                138     CALL_FUNCTION                   1
                140     STORE_NAME                      19: year
                142     LOAD_NAME                       18: property
                144     LOAD_CONST                      28: <CODE> month
                146     LOAD_CONST                      29: 'date.month'
                148     MAKE_FUNCTION                   0
                150     CALL_FUNCTION                   1
                152     STORE_NAME                      20: month
                154     LOAD_NAME                       18: property
                156     LOAD_CONST                      30: <CODE> day
                158     LOAD_CONST                      31: 'date.day'
                160     MAKE_FUNCTION                   0
                162     CALL_FUNCTION                   1
                164     STORE_NAME                      21: day
                166     LOAD_CONST                      32: <CODE> timetuple
                168     LOAD_CONST                      33: 'date.timetuple'
                170     MAKE_FUNCTION                   0
                172     STORE_NAME                      22: timetuple
                174     LOAD_CONST                      34: <CODE> toordinal
                176     LOAD_CONST                      35: 'date.toordinal'
                178     MAKE_FUNCTION                   0
                180     STORE_NAME                      23: toordinal
                182     LOAD_CONST                      69: (None, None, None)
                184     LOAD_CONST                      36: <CODE> replace
                186     LOAD_CONST                      37: 'date.replace'
                188     MAKE_FUNCTION                   1
                190     STORE_NAME                      24: replace
                192     LOAD_CONST                      38: <CODE> __eq__
                194     LOAD_CONST                      39: 'date.__eq__'
                196     MAKE_FUNCTION                   0
                198     STORE_NAME                      25: __eq__
                200     LOAD_CONST                      40: <CODE> __le__
                202     LOAD_CONST                      41: 'date.__le__'
                204     MAKE_FUNCTION                   0
                206     STORE_NAME                      26: __le__
                208     LOAD_CONST                      42: <CODE> __lt__
                210     LOAD_CONST                      43: 'date.__lt__'
                212     MAKE_FUNCTION                   0
                214     STORE_NAME                      27: __lt__
                216     LOAD_CONST                      44: <CODE> __ge__
                218     LOAD_CONST                      45: 'date.__ge__'
                220     MAKE_FUNCTION                   0
                222     STORE_NAME                      28: __ge__
                224     LOAD_CONST                      46: <CODE> __gt__
                226     LOAD_CONST                      47: 'date.__gt__'
                228     MAKE_FUNCTION                   0
                230     STORE_NAME                      29: __gt__
                232     LOAD_CONST                      48: <CODE> _cmp
                234     LOAD_CONST                      49: 'date._cmp'
                236     MAKE_FUNCTION                   0
                238     STORE_NAME                      30: _cmp
                240     LOAD_CONST                      50: <CODE> __hash__
                242     LOAD_CONST                      51: 'date.__hash__'
                244     MAKE_FUNCTION                   0
                246     STORE_NAME                      31: __hash__
                248     LOAD_CONST                      52: <CODE> __add__
                250     LOAD_CONST                      53: 'date.__add__'
                252     MAKE_FUNCTION                   0
                254     STORE_NAME                      32: __add__
                256     LOAD_NAME                       32: __add__
                258     STORE_NAME                      33: __radd__
                260     LOAD_CONST                      54: <CODE> __sub__
                262     LOAD_CONST                      55: 'date.__sub__'
                264     MAKE_FUNCTION                   0
                266     STORE_NAME                      34: __sub__
                268     LOAD_CONST                      56: <CODE> weekday
                270     LOAD_CONST                      57: 'date.weekday'
                272     MAKE_FUNCTION                   0
                274     STORE_NAME                      35: weekday
                276     LOAD_CONST                      58: <CODE> isoweekday
                278     LOAD_CONST                      59: 'date.isoweekday'
                280     MAKE_FUNCTION                   0
                282     STORE_NAME                      36: isoweekday
                284     LOAD_CONST                      60: <CODE> isocalendar
                286     LOAD_CONST                      61: 'date.isocalendar'
                288     MAKE_FUNCTION                   0
                290     STORE_NAME                      37: isocalendar
                292     LOAD_CONST                      62: <CODE> _getstate
                294     LOAD_CONST                      63: 'date._getstate'
                296     MAKE_FUNCTION                   0
                298     STORE_NAME                      38: _getstate
                300     LOAD_CONST                      64: <CODE> __setstate
                302     LOAD_CONST                      65: 'date.__setstate'
                304     MAKE_FUNCTION                   0
                306     STORE_NAME                      39: _date__setstate
                308     LOAD_CONST                      66: <CODE> __reduce__
                310     LOAD_CONST                      67: 'date.__reduce__'
                312     MAKE_FUNCTION                   0
                314     STORE_NAME                      40: __reduce__
                316     LOAD_CONST                      3: None
                318     RETURN_VALUE                    
        'date'
        12
        31
        (
            'days'
        )
        [Code]
            File Name: datetime.py
            Object Name: tzinfo
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                'tzname'
                'utcoffset'
                'dst'
                'fromutc'
                '__reduce__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'tzinfo'
                'Abstract base class for time zone info classes.\n\n    Subclasses must override the name(), utcoffset() and dst() methods.\n    '
                (
                )
                [Code]
                    File Name: datetime.py
                    Object Name: tzname
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'datetime -> string name of time zone.'
                        'tzinfo subclass must override tzname()'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'tzinfo subclass must override tzname()'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'tzinfo.tzname'
                [Code]
                    File Name: datetime.py
                    Object Name: utcoffset
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'datetime -> timedelta, positive for east of UTC, negative for west of UTC'
                        'tzinfo subclass must override utcoffset()'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'tzinfo subclass must override utcoffset()'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'tzinfo.utcoffset'
                [Code]
                    File Name: datetime.py
                    Object Name: dst
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'datetime -> DST offset as timedelta, positive for east of UTC.\n\n        Return 0 if DST not in effect.  utcoffset() must include the DST\n        offset.\n        '
                        'tzinfo subclass must override dst()'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'tzinfo subclass must override dst()'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'tzinfo.dst'
                [Code]
                    File Name: datetime.py
                    Object Name: fromutc
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        'TypeError'
                        'tzinfo'
                        'ValueError'
                        'utcoffset'
                        'dst'
                    [Var Names]
                        'self'
                        'dt'
                        'dtoff'
                        'dtdst'
                        'delta'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'datetime in UTC -> datetime in local time.'
                        'fromutc() requires a datetime argument'
                        'dt.tzinfo is not self'
                        None
                        'fromutc() requires a non-None utcoffset() result'
                        'fromutc() requires a non-None dst() result'
                        'fromutc(): dt.dst gave inconsistent results; cannot convert'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: dt
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'fromutc() requires a datetime argument'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       1: dt
                        20      LOAD_ATTR                       3: tzinfo
                        22      LOAD_FAST                       0: self
                        24      IS_OP                           1 (is not)
                        26      POP_JUMP_IF_FALSE               18 (to 36)
                        28      LOAD_GLOBAL                     4: ValueError
                        30      LOAD_CONST                      2: 'dt.tzinfo is not self'
                        32      CALL_FUNCTION                   1
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       1: dt
                        38      LOAD_METHOD                     5: utcoffset
                        40      CALL_METHOD                     0
                        42      STORE_FAST                      2: dtoff
                        44      LOAD_FAST                       2: dtoff
                        46      LOAD_CONST                      3: None
                        48      IS_OP                           0 (is)
                        50      POP_JUMP_IF_FALSE               30 (to 60)
                        52      LOAD_GLOBAL                     4: ValueError
                        54      LOAD_CONST                      4: 'fromutc() requires a non-None utcoffset() result'
                        56      CALL_FUNCTION                   1
                        58      RAISE_VARARGS                   1
                        60      LOAD_FAST                       1: dt
                        62      LOAD_METHOD                     6: dst
                        64      CALL_METHOD                     0
                        66      STORE_FAST                      3: dtdst
                        68      LOAD_FAST                       3: dtdst
                        70      LOAD_CONST                      3: None
                        72      IS_OP                           0 (is)
                        74      POP_JUMP_IF_FALSE               42 (to 84)
                        76      LOAD_GLOBAL                     4: ValueError
                        78      LOAD_CONST                      5: 'fromutc() requires a non-None dst() result'
                        80      CALL_FUNCTION                   1
                        82      RAISE_VARARGS                   1
                        84      LOAD_FAST                       2: dtoff
                        86      LOAD_FAST                       3: dtdst
                        88      BINARY_SUBTRACT                 
                        90      STORE_FAST                      4: delta
                        92      LOAD_FAST                       4: delta
                        94      POP_JUMP_IF_FALSE               64 (to 128)
                        96      LOAD_FAST                       1: dt
                        98      LOAD_FAST                       4: delta
                        100     INPLACE_ADD                     
                        102     STORE_FAST                      1: dt
                        104     LOAD_FAST                       1: dt
                        106     LOAD_METHOD                     6: dst
                        108     CALL_METHOD                     0
                        110     STORE_FAST                      3: dtdst
                        112     LOAD_FAST                       3: dtdst
                        114     LOAD_CONST                      3: None
                        116     IS_OP                           0 (is)
                        118     POP_JUMP_IF_FALSE               64 (to 128)
                        120     LOAD_GLOBAL                     4: ValueError
                        122     LOAD_CONST                      6: 'fromutc(): dt.dst gave inconsistent results; cannot convert'
                        124     CALL_FUNCTION                   1
                        126     RAISE_VARARGS                   1
                        128     LOAD_FAST                       1: dt
                        130     LOAD_FAST                       3: dtdst
                        132     BINARY_ADD                      
                        134     RETURN_VALUE                    
                'tzinfo.fromutc'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'getattr'
                        '__class__'
                    [Var Names]
                        'self'
                        'getinitargs'
                        'args'
                        'getstate'
                        'state'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '__getinitargs__'
                        (
                        )
                        '__getstate__'
                        '__dict__'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: getattr
                        2       LOAD_FAST                       0: self
                        4       LOAD_CONST                      1: '__getinitargs__'
                        6       LOAD_CONST                      0: None
                        8       CALL_FUNCTION                   3
                        10      STORE_FAST                      1: getinitargs
                        12      LOAD_FAST                       1: getinitargs
                        14      POP_JUMP_IF_FALSE               12 (to 24)
                        16      LOAD_FAST                       1: getinitargs
                        18      CALL_FUNCTION                   0
                        20      STORE_FAST                      2: args
                        22      JUMP_FORWARD                    2 (to 28)
                        24      LOAD_CONST                      2: ()
                        26      STORE_FAST                      2: args
                        28      LOAD_GLOBAL                     0: getattr
                        30      LOAD_FAST                       0: self
                        32      LOAD_CONST                      3: '__getstate__'
                        34      LOAD_CONST                      0: None
                        36      CALL_FUNCTION                   3
                        38      STORE_FAST                      3: getstate
                        40      LOAD_FAST                       3: getstate
                        42      POP_JUMP_IF_FALSE               26 (to 52)
                        44      LOAD_FAST                       3: getstate
                        46      CALL_FUNCTION                   0
                        48      STORE_FAST                      4: state
                        50      JUMP_FORWARD                    8 (to 68)
                        52      LOAD_GLOBAL                     0: getattr
                        54      LOAD_FAST                       0: self
                        56      LOAD_CONST                      4: '__dict__'
                        58      LOAD_CONST                      0: None
                        60      CALL_FUNCTION                   3
                        62      JUMP_IF_TRUE_OR_POP             33 (to 66)
                        64      LOAD_CONST                      0: None
                        66      STORE_FAST                      4: state
                        68      LOAD_FAST                       4: state
                        70      LOAD_CONST                      0: None
                        72      IS_OP                           0 (is)
                        74      POP_JUMP_IF_FALSE               43 (to 86)
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       1: __class__
                        80      LOAD_FAST                       2: args
                        82      BUILD_TUPLE                     2
                        84      RETURN_VALUE                    
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       1: __class__
                        90      LOAD_FAST                       2: args
                        92      LOAD_FAST                       4: state
                        94      BUILD_TUPLE                     3
                        96      RETURN_VALUE                    
                'tzinfo.__reduce__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'tzinfo'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Abstract base class for time zone info classes.\n\n    Subclasses must override the name(), utcoffset() and dst() methods.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ()
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      3: <CODE> tzname
                18      LOAD_CONST                      4: 'tzinfo.tzname'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      5: tzname
                24      LOAD_CONST                      5: <CODE> utcoffset
                26      LOAD_CONST                      6: 'tzinfo.utcoffset'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      6: utcoffset
                32      LOAD_CONST                      7: <CODE> dst
                34      LOAD_CONST                      8: 'tzinfo.dst'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      7: dst
                40      LOAD_CONST                      9: <CODE> fromutc
                42      LOAD_CONST                      10: 'tzinfo.fromutc'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      8: fromutc
                48      LOAD_CONST                      11: <CODE> __reduce__
                50      LOAD_CONST                      12: 'tzinfo.__reduce__'
                52      MAKE_FUNCTION                   0
                54      STORE_NAME                      9: __reduce__
                56      LOAD_CONST                      13: None
                58      RETURN_VALUE                    
        'tzinfo'
        [Code]
            File Name: datetime.py
            Object Name: IsoCalendarDate
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__new__'
                'property'
                'year'
                'week'
                'weekday'
                '__reduce__'
                '__repr__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'IsoCalendarDate'
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 4
                    Pos Only Arg Count: 4
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'super'
                        '__new__'
                    [Var Names]
                        'cls'
                        'year'
                        'week'
                        'weekday'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: super
                        2       CALL_FUNCTION                   0
                        4       LOAD_METHOD                     1: __new__
                        6       LOAD_FAST                       0: cls
                        8       LOAD_FAST                       1: year
                        10      LOAD_FAST                       2: week
                        12      LOAD_FAST                       3: weekday
                        14      BUILD_TUPLE                     3
                        16      CALL_METHOD                     2
                        18      RETURN_VALUE                    
                'IsoCalendarDate.__new__'
                [Code]
                    File Name: datetime.py
                    Object Name: year
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_CONST                      1: 0
                        4       BINARY_SUBSCR                   
                        6       RETURN_VALUE                    
                'IsoCalendarDate.year'
                [Code]
                    File Name: datetime.py
                    Object Name: week
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_CONST                      1: 1
                        4       BINARY_SUBSCR                   
                        6       RETURN_VALUE                    
                'IsoCalendarDate.week'
                [Code]
                    File Name: datetime.py
                    Object Name: weekday
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        2
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_CONST                      1: 2
                        4       BINARY_SUBSCR                   
                        6       RETURN_VALUE                    
                'IsoCalendarDate.weekday'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'tuple'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: tuple
                        2       LOAD_GLOBAL                     0: tuple
                        4       LOAD_FAST                       0: self
                        6       CALL_FUNCTION                   1
                        8       BUILD_TUPLE                     1
                        10      BUILD_TUPLE                     2
                        12      RETURN_VALUE                    
                'IsoCalendarDate.__reduce__'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__name__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '(year='
                        0
                        ', week='
                        1
                        ', weekday='
                        2
                        ')'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_ATTR                       1: __name__
                        6       FORMAT_VALUE                    0 (FVC_NONE)
                        8       LOAD_CONST                      1: '(year='
                        10      LOAD_FAST                       0: self
                        12      LOAD_CONST                      2: 0
                        14      BINARY_SUBSCR                   
                        16      FORMAT_VALUE                    0 (FVC_NONE)
                        18      LOAD_CONST                      3: ', week='
                        20      LOAD_FAST                       0: self
                        22      LOAD_CONST                      4: 1
                        24      BINARY_SUBSCR                   
                        26      FORMAT_VALUE                    0 (FVC_NONE)
                        28      LOAD_CONST                      5: ', weekday='
                        30      LOAD_FAST                       0: self
                        32      LOAD_CONST                      6: 2
                        34      BINARY_SUBSCR                   
                        36      FORMAT_VALUE                    0 (FVC_NONE)
                        38      LOAD_CONST                      7: ')'
                        40      BUILD_STRING                    8
                        42      RETURN_VALUE                    
                'IsoCalendarDate.__repr__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'IsoCalendarDate'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __new__
                14      LOAD_CONST                      2: 'IsoCalendarDate.__new__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __new__
                20      LOAD_NAME                       4: property
                22      LOAD_CONST                      3: <CODE> year
                24      LOAD_CONST                      4: 'IsoCalendarDate.year'
                26      MAKE_FUNCTION                   0
                28      CALL_FUNCTION                   1
                30      STORE_NAME                      5: year
                32      LOAD_NAME                       4: property
                34      LOAD_CONST                      5: <CODE> week
                36      LOAD_CONST                      6: 'IsoCalendarDate.week'
                38      MAKE_FUNCTION                   0
                40      CALL_FUNCTION                   1
                42      STORE_NAME                      6: week
                44      LOAD_NAME                       4: property
                46      LOAD_CONST                      7: <CODE> weekday
                48      LOAD_CONST                      8: 'IsoCalendarDate.weekday'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      7: weekday
                56      LOAD_CONST                      9: <CODE> __reduce__
                58      LOAD_CONST                      10: 'IsoCalendarDate.__reduce__'
                60      MAKE_FUNCTION                   0
                62      STORE_NAME                      8: __reduce__
                64      LOAD_CONST                      11: <CODE> __repr__
                66      LOAD_CONST                      12: 'IsoCalendarDate.__repr__'
                68      MAKE_FUNCTION                   0
                70      STORE_NAME                      9: __repr__
                72      LOAD_CLOSURE                    0: __class__
                74      DUP_TOP                         
                76      STORE_NAME                      10: __classcell__
                78      RETURN_VALUE                    
        'IsoCalendarDate'
        [Code]
            File Name: datetime.py
            Object Name: time
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__new__'
                'property'
                'hour'
                'minute'
                'second'
                'microsecond'
                'tzinfo'
                'fold'
                '__eq__'
                '__le__'
                '__lt__'
                '__ge__'
                '__gt__'
                '_cmp'
                '__hash__'
                '_tzstr'
                '__repr__'
                'isoformat'
                '__str__'
                'classmethod'
                'fromisoformat'
                'strftime'
                '__format__'
                'utcoffset'
                'tzname'
                'dst'
                'replace'
                '_getstate'
                '_time__setstate'
                '__reduce_ex__'
                '__reduce__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'time'
                'Time with time zone.\n\n    Constructors:\n\n    __new__()\n\n    Operators:\n\n    __repr__, __str__\n    __eq__, __le__, __lt__, __ge__, __gt__, __hash__\n\n    Methods:\n\n    strftime()\n    isoformat()\n    utcoffset()\n    tzname()\n    dst()\n\n    Properties (readonly):\n    hour, minute, second, microsecond, tzinfo, fold\n    '
                (
                    '_hour'
                    '_minute'
                    '_second'
                    '_microsecond'
                    '_tzinfo'
                    '_hashcode'
                    '_fold'
                )
                0
                None
                (
                    'fold'
                )
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 8
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'bytes'
                        'str'
                        'len'
                        'ord'
                        'encode'
                        'UnicodeEncodeError'
                        'ValueError'
                        'object'
                        '__new__'
                        '_time__setstate'
                        '_hashcode'
                        '_check_time_fields'
                        '_check_tzinfo_arg'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        '_tzinfo'
                        '_fold'
                    [Var Names]
                        'cls'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        'fold'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Constructor.\n\n        Arguments:\n\n        hour, minute (required)\n        second, microsecond (default to zero)\n        tzinfo (default to None)\n        fold (keyword only, default to zero)\n        '
                        6
                        0
                        1
                        127
                        24
                        'latin1'
                        "Failed to encode latin1 string when unpickling a time object. pickle.load(data, encoding='latin1') is assumed."
                        None
                        -1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: hour
                        4       LOAD_GLOBAL                     1: bytes
                        6       LOAD_GLOBAL                     2: str
                        8       BUILD_TUPLE                     2
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_FALSE               67 (to 134)
                        14      LOAD_GLOBAL                     3: len
                        16      LOAD_FAST                       1: hour
                        18      CALL_FUNCTION                   1
                        20      LOAD_CONST                      1: 6
                        22      COMPARE_OP                      2 (==)
                        24      POP_JUMP_IF_FALSE               67 (to 134)
                        26      LOAD_GLOBAL                     4: ord
                        28      LOAD_FAST                       1: hour
                        30      LOAD_CONST                      2: 0
                        32      LOAD_CONST                      3: 1
                        34      BUILD_SLICE                     2
                        36      BINARY_SUBSCR                   
                        38      CALL_FUNCTION                   1
                        40      LOAD_CONST                      4: 127
                        42      BINARY_AND                      
                        44      LOAD_CONST                      5: 24
                        46      COMPARE_OP                      0 (<)
                        48      POP_JUMP_IF_FALSE               67 (to 134)
                        50      LOAD_GLOBAL                     0: isinstance
                        52      LOAD_FAST                       1: hour
                        54      LOAD_GLOBAL                     2: str
                        56      CALL_FUNCTION                   2
                        58      POP_JUMP_IF_FALSE               49 (to 98)
                        60      SETUP_FINALLY                   7 (to 76)
                        62      LOAD_FAST                       1: hour
                        64      LOAD_METHOD                     5: encode
                        66      LOAD_CONST                      6: 'latin1'
                        68      CALL_METHOD                     1
                        70      STORE_FAST                      1: hour
                        72      POP_BLOCK                       
                        74      JUMP_FORWARD                    11 (to 98)
                        76      DUP_TOP                         
                        78      LOAD_GLOBAL                     6: UnicodeEncodeError
                        80      JUMP_IF_NOT_EXC_MATCH           48 (to 96)
                        82      POP_TOP                         
                        84      POP_TOP                         
                        86      POP_TOP                         
                        88      LOAD_GLOBAL                     7: ValueError
                        90      LOAD_CONST                      7: "Failed to encode latin1 string when unpickling a time object. pickle.load(data, encoding='latin1') is assumed."
                        92      CALL_FUNCTION                   1
                        94      RAISE_VARARGS                   1
                        96      RERAISE                         0
                        98      LOAD_GLOBAL                     8: object
                        100     LOAD_METHOD                     9: __new__
                        102     LOAD_FAST                       0: cls
                        104     CALL_METHOD                     1
                        106     STORE_FAST                      7: self
                        108     LOAD_FAST                       7: self
                        110     LOAD_METHOD                     10: _time__setstate
                        112     LOAD_FAST                       1: hour
                        114     LOAD_FAST                       2: minute
                        116     JUMP_IF_TRUE_OR_POP             60 (to 120)
                        118     LOAD_CONST                      8: None
                        120     CALL_METHOD                     2
                        122     POP_TOP                         
                        124     LOAD_CONST                      9: -1
                        126     LOAD_FAST                       7: self
                        128     STORE_ATTR                      11: _hashcode
                        130     LOAD_FAST                       7: self
                        132     RETURN_VALUE                    
                        134     LOAD_GLOBAL                     12: _check_time_fields
                        136     LOAD_FAST                       1: hour
                        138     LOAD_FAST                       2: minute
                        140     LOAD_FAST                       3: second
                        142     LOAD_FAST                       4: microsecond
                        144     LOAD_FAST                       6: fold
                        146     CALL_FUNCTION                   5
                        148     UNPACK_SEQUENCE                 5
                        150     STORE_FAST                      1: hour
                        152     STORE_FAST                      2: minute
                        154     STORE_FAST                      3: second
                        156     STORE_FAST                      4: microsecond
                        158     STORE_FAST                      6: fold
                        160     LOAD_GLOBAL                     13: _check_tzinfo_arg
                        162     LOAD_FAST                       5: tzinfo
                        164     CALL_FUNCTION                   1
                        166     POP_TOP                         
                        168     LOAD_GLOBAL                     8: object
                        170     LOAD_METHOD                     9: __new__
                        172     LOAD_FAST                       0: cls
                        174     CALL_METHOD                     1
                        176     STORE_FAST                      7: self
                        178     LOAD_FAST                       1: hour
                        180     LOAD_FAST                       7: self
                        182     STORE_ATTR                      14: _hour
                        184     LOAD_FAST                       2: minute
                        186     LOAD_FAST                       7: self
                        188     STORE_ATTR                      15: _minute
                        190     LOAD_FAST                       3: second
                        192     LOAD_FAST                       7: self
                        194     STORE_ATTR                      16: _second
                        196     LOAD_FAST                       4: microsecond
                        198     LOAD_FAST                       7: self
                        200     STORE_ATTR                      17: _microsecond
                        202     LOAD_FAST                       5: tzinfo
                        204     LOAD_FAST                       7: self
                        206     STORE_ATTR                      18: _tzinfo
                        208     LOAD_CONST                      9: -1
                        210     LOAD_FAST                       7: self
                        212     STORE_ATTR                      11: _hashcode
                        214     LOAD_FAST                       6: fold
                        216     LOAD_FAST                       7: self
                        218     STORE_ATTR                      19: _fold
                        220     LOAD_FAST                       7: self
                        222     RETURN_VALUE                    
                'time.__new__'
                [Code]
                    File Name: datetime.py
                    Object Name: hour
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hour'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'hour (0-23)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hour
                        4       RETURN_VALUE                    
                'time.hour'
                [Code]
                    File Name: datetime.py
                    Object Name: minute
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_minute'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'minute (0-59)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _minute
                        4       RETURN_VALUE                    
                'time.minute'
                [Code]
                    File Name: datetime.py
                    Object Name: second
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_second'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'second (0-59)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _second
                        4       RETURN_VALUE                    
                'time.second'
                [Code]
                    File Name: datetime.py
                    Object Name: microsecond
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_microsecond'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'microsecond (0-999999)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _microsecond
                        4       RETURN_VALUE                    
                'time.microsecond'
                [Code]
                    File Name: datetime.py
                    Object Name: tzinfo
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'timezone info object'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       RETURN_VALUE                    
                'time.tzinfo'
                [Code]
                    File Name: datetime.py
                    Object Name: fold
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_fold'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _fold
                        4       RETURN_VALUE                    
                'time.fold'
                [Code]
                    File Name: datetime.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        (
                            'allow_mixed'
                        )
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _cmp
                        14      LOAD_FAST                       1: other
                        16      LOAD_CONST                      1: True
                        18      LOAD_CONST                      2: ('allow_mixed',)
                        20      CALL_FUNCTION_KW                2
                        22      LOAD_CONST                      3: 0
                        24      COMPARE_OP                      2 (==)
                        26      RETURN_VALUE                    
                        28      LOAD_GLOBAL                     3: NotImplemented
                        30      RETURN_VALUE                    
                'time.__eq__'
                [Code]
                    File Name: datetime.py
                    Object Name: __le__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      1 (<=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'time.__le__'
                [Code]
                    File Name: datetime.py
                    Object Name: __lt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      0 (<)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'time.__lt__'
                [Code]
                    File Name: datetime.py
                    Object Name: __ge__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      5 (>=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'time.__ge__'
                [Code]
                    File Name: datetime.py
                    Object Name: __gt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_cmp'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      4 (>)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: NotImplemented
                        26      RETURN_VALUE                    
                'time.__gt__'
                False
                [Code]
                    File Name: datetime.py
                    Object Name: _cmp
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'time'
                        '_tzinfo'
                        'utcoffset'
                        '_cmp'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        'TypeError'
                        'timedelta'
                    [Var Names]
                        'self'
                        'other'
                        'allow_mixed'
                        'mytz'
                        'ottz'
                        'myoff'
                        'otoff'
                        'base_compare'
                        'myhhmm'
                        'othhmm'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        2
                        'cannot compare naive and aware times'
                        60
                        1
                        (
                            'minutes'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: time
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_ASSERTION_ERROR            
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _tzinfo
                        18      STORE_FAST                      3: mytz
                        20      LOAD_FAST                       1: other
                        22      LOAD_ATTR                       2: _tzinfo
                        24      STORE_FAST                      4: ottz
                        26      LOAD_CONST                      0: None
                        28      DUP_TOP                         
                        30      STORE_FAST                      5: myoff
                        32      STORE_FAST                      6: otoff
                        34      LOAD_FAST                       3: mytz
                        36      LOAD_FAST                       4: ottz
                        38      IS_OP                           0 (is)
                        40      POP_JUMP_IF_FALSE               24 (to 48)
                        42      LOAD_CONST                      1: True
                        44      STORE_FAST                      7: base_compare
                        46      JUMP_FORWARD                    12 (to 72)
                        48      LOAD_FAST                       0: self
                        50      LOAD_METHOD                     3: utcoffset
                        52      CALL_METHOD                     0
                        54      STORE_FAST                      5: myoff
                        56      LOAD_FAST                       1: other
                        58      LOAD_METHOD                     3: utcoffset
                        60      CALL_METHOD                     0
                        62      STORE_FAST                      6: otoff
                        64      LOAD_FAST                       5: myoff
                        66      LOAD_FAST                       6: otoff
                        68      COMPARE_OP                      2 (==)
                        70      STORE_FAST                      7: base_compare
                        72      LOAD_FAST                       7: base_compare
                        74      POP_JUMP_IF_FALSE               59 (to 118)
                        76      LOAD_GLOBAL                     4: _cmp
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       5: _hour
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       6: _minute
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       7: _second
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       8: _microsecond
                        94      BUILD_TUPLE                     4
                        96      LOAD_FAST                       1: other
                        98      LOAD_ATTR                       5: _hour
                        100     LOAD_FAST                       1: other
                        102     LOAD_ATTR                       6: _minute
                        104     LOAD_FAST                       1: other
                        106     LOAD_ATTR                       7: _second
                        108     LOAD_FAST                       1: other
                        110     LOAD_ATTR                       8: _microsecond
                        112     BUILD_TUPLE                     4
                        114     CALL_FUNCTION                   2
                        116     RETURN_VALUE                    
                        118     LOAD_FAST                       5: myoff
                        120     LOAD_CONST                      0: None
                        122     IS_OP                           0 (is)
                        124     POP_JUMP_IF_TRUE                67 (to 134)
                        126     LOAD_FAST                       6: otoff
                        128     LOAD_CONST                      0: None
                        130     IS_OP                           0 (is)
                        132     POP_JUMP_IF_FALSE               75 (to 150)
                        134     LOAD_FAST                       2: allow_mixed
                        136     POP_JUMP_IF_FALSE               71 (to 142)
                        138     LOAD_CONST                      2: 2
                        140     RETURN_VALUE                    
                        142     LOAD_GLOBAL                     9: TypeError
                        144     LOAD_CONST                      3: 'cannot compare naive and aware times'
                        146     CALL_FUNCTION                   1
                        148     RAISE_VARARGS                   1
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       5: _hour
                        154     LOAD_CONST                      4: 60
                        156     BINARY_MULTIPLY                 
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       6: _minute
                        162     BINARY_ADD                      
                        164     LOAD_FAST                       5: myoff
                        166     LOAD_GLOBAL                     10: timedelta
                        168     LOAD_CONST                      5: 1
                        170     LOAD_CONST                      6: ('minutes',)
                        172     CALL_FUNCTION_KW                1
                        174     BINARY_FLOOR_DIVIDE             
                        176     BINARY_SUBTRACT                 
                        178     STORE_FAST                      8: myhhmm
                        180     LOAD_FAST                       1: other
                        182     LOAD_ATTR                       5: _hour
                        184     LOAD_CONST                      4: 60
                        186     BINARY_MULTIPLY                 
                        188     LOAD_FAST                       1: other
                        190     LOAD_ATTR                       6: _minute
                        192     BINARY_ADD                      
                        194     LOAD_FAST                       6: otoff
                        196     LOAD_GLOBAL                     10: timedelta
                        198     LOAD_CONST                      5: 1
                        200     LOAD_CONST                      6: ('minutes',)
                        202     CALL_FUNCTION_KW                1
                        204     BINARY_FLOOR_DIVIDE             
                        206     BINARY_SUBTRACT                 
                        208     STORE_FAST                      9: othhmm
                        210     LOAD_GLOBAL                     4: _cmp
                        212     LOAD_FAST                       8: myhhmm
                        214     LOAD_FAST                       0: self
                        216     LOAD_ATTR                       7: _second
                        218     LOAD_FAST                       0: self
                        220     LOAD_ATTR                       8: _microsecond
                        222     BUILD_TUPLE                     3
                        224     LOAD_FAST                       9: othhmm
                        226     LOAD_FAST                       1: other
                        228     LOAD_ATTR                       7: _second
                        230     LOAD_FAST                       1: other
                        232     LOAD_ATTR                       8: _microsecond
                        234     BUILD_TUPLE                     3
                        236     CALL_FUNCTION                   2
                        238     RETURN_VALUE                    
                'time._cmp'
                [Code]
                    File Name: datetime.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hashcode'
                        'fold'
                        'replace'
                        'utcoffset'
                        'hash'
                        '_getstate'
                        'divmod'
                        'timedelta'
                        'hour'
                        'minute'
                        'time'
                        'second'
                        'microsecond'
                    [Var Names]
                        'self'
                        't'
                        'tzoff'
                        'h'
                        'm'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Hash.'
                        -1
                        0
                        (
                            'fold'
                        )
                        (
                            'hours'
                            'minutes'
                        )
                        1
                        (
                            'hours'
                        )
                        (
                            'minutes'
                        )
                        'whole minute'
                        24
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hashcode
                        4       LOAD_CONST                      1: -1
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               109 (to 218)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: fold
                        14      POP_JUMP_IF_FALSE               15 (to 30)
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: replace
                        20      LOAD_CONST                      2: 0
                        22      LOAD_CONST                      3: ('fold',)
                        24      CALL_FUNCTION_KW                1
                        26      STORE_FAST                      1: t
                        28      JUMP_FORWARD                    2 (to 34)
                        30      LOAD_FAST                       0: self
                        32      STORE_FAST                      1: t
                        34      LOAD_FAST                       1: t
                        36      LOAD_METHOD                     3: utcoffset
                        38      CALL_METHOD                     0
                        40      STORE_FAST                      2: tzoff
                        42      LOAD_FAST                       2: tzoff
                        44      POP_JUMP_IF_TRUE                35 (to 70)
                        46      LOAD_GLOBAL                     4: hash
                        48      LOAD_FAST                       1: t
                        50      LOAD_METHOD                     5: _getstate
                        52      CALL_METHOD                     0
                        54      LOAD_CONST                      2: 0
                        56      BINARY_SUBSCR                   
                        58      CALL_FUNCTION                   1
                        60      LOAD_FAST                       0: self
                        62      STORE_ATTR                      0: _hashcode
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       0: _hashcode
                        68      RETURN_VALUE                    
                        70      LOAD_GLOBAL                     6: divmod
                        72      LOAD_GLOBAL                     7: timedelta
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       8: hour
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       9: minute
                        82      LOAD_CONST                      4: ('hours', 'minutes')
                        84      CALL_FUNCTION_KW                2
                        86      LOAD_FAST                       2: tzoff
                        88      BINARY_SUBTRACT                 
                        90      LOAD_GLOBAL                     7: timedelta
                        92      LOAD_CONST                      5: 1
                        94      LOAD_CONST                      6: ('hours',)
                        96      CALL_FUNCTION_KW                1
                        98      CALL_FUNCTION                   2
                        100     UNPACK_SEQUENCE                 2
                        102     STORE_FAST                      3: h
                        104     STORE_FAST                      4: m
                        106     LOAD_FAST                       4: m
                        108     LOAD_GLOBAL                     7: timedelta
                        110     LOAD_CONST                      5: 1
                        112     LOAD_CONST                      7: ('minutes',)
                        114     CALL_FUNCTION_KW                1
                        116     BINARY_MODULO                   
                        118     POP_JUMP_IF_FALSE               64 (to 128)
                        120     LOAD_ASSERTION_ERROR            
                        122     LOAD_CONST                      8: 'whole minute'
                        124     CALL_FUNCTION                   1
                        126     RAISE_VARARGS                   1
                        128     LOAD_FAST                       4: m
                        130     LOAD_GLOBAL                     7: timedelta
                        132     LOAD_CONST                      5: 1
                        134     LOAD_CONST                      7: ('minutes',)
                        136     CALL_FUNCTION_KW                1
                        138     INPLACE_FLOOR_DIVIDE            
                        140     STORE_FAST                      4: m
                        142     LOAD_CONST                      2: 0
                        144     LOAD_FAST                       3: h
                        146     DUP_TOP                         
                        148     ROT_THREE                       
                        150     COMPARE_OP                      1 (<=)
                        152     POP_JUMP_IF_FALSE               81 (to 162)
                        154     LOAD_CONST                      9: 24
                        156     COMPARE_OP                      0 (<)
                        158     POP_JUMP_IF_FALSE               98 (to 196)
                        160     JUMP_FORWARD                    2 (to 166)
                        162     POP_TOP                         
                        164     JUMP_FORWARD                    15 (to 196)
                        166     LOAD_GLOBAL                     4: hash
                        168     LOAD_GLOBAL                     10: time
                        170     LOAD_FAST                       3: h
                        172     LOAD_FAST                       4: m
                        174     LOAD_FAST                       0: self
                        176     LOAD_ATTR                       11: second
                        178     LOAD_FAST                       0: self
                        180     LOAD_ATTR                       12: microsecond
                        182     CALL_FUNCTION                   4
                        184     CALL_FUNCTION                   1
                        186     LOAD_FAST                       0: self
                        188     STORE_ATTR                      0: _hashcode
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       0: _hashcode
                        194     RETURN_VALUE                    
                        196     LOAD_GLOBAL                     4: hash
                        198     LOAD_FAST                       3: h
                        200     LOAD_FAST                       4: m
                        202     LOAD_FAST                       0: self
                        204     LOAD_ATTR                       11: second
                        206     LOAD_FAST                       0: self
                        208     LOAD_ATTR                       12: microsecond
                        210     BUILD_TUPLE                     4
                        212     CALL_FUNCTION                   1
                        214     LOAD_FAST                       0: self
                        216     STORE_ATTR                      0: _hashcode
                        218     LOAD_FAST                       0: self
                        220     LOAD_ATTR                       0: _hashcode
                        222     RETURN_VALUE                    
                'time.__hash__'
                [Code]
                    File Name: datetime.py
                    Object Name: _tzstr
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'utcoffset'
                        '_format_offset'
                    [Var Names]
                        'self'
                        'off'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return formatted timezone offset (+xx:xx) or an empty string.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: utcoffset
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: off
                        8       LOAD_GLOBAL                     1: _format_offset
                        10      LOAD_FAST                       1: off
                        12      CALL_FUNCTION                   1
                        14      RETURN_VALUE                    
                'time._tzstr'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_microsecond'
                        '_second'
                        '__class__'
                        '__module__'
                        '__qualname__'
                        '_hour'
                        '_minute'
                        '_tzinfo'
                        '_fold'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convert to formal string, for repr().'
                        0
                        ', %d, %d'
                        ', %d'
                        ''
                        '%s.%s(%d, %d%s)'
                        None
                        -1
                        ')'
                        ', tzinfo=%r'
                        ', fold=1)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _microsecond
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      3 (!=)
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_CONST                      2: ', %d, %d'
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _second
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _microsecond
                        20      BUILD_TUPLE                     2
                        22      BINARY_MODULO                   
                        24      STORE_FAST                      1: s
                        26      JUMP_FORWARD                    13 (to 54)
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       1: _second
                        32      LOAD_CONST                      1: 0
                        34      COMPARE_OP                      3 (!=)
                        36      POP_JUMP_IF_FALSE               25 (to 50)
                        38      LOAD_CONST                      3: ', %d'
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       1: _second
                        44      BINARY_MODULO                   
                        46      STORE_FAST                      1: s
                        48      JUMP_FORWARD                    2 (to 54)
                        50      LOAD_CONST                      4: ''
                        52      STORE_FAST                      1: s
                        54      LOAD_CONST                      5: '%s.%s(%d, %d%s)'
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       2: __class__
                        60      LOAD_ATTR                       3: __module__
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       2: __class__
                        66      LOAD_ATTR                       4: __qualname__
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       5: _hour
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       6: _minute
                        76      LOAD_FAST                       1: s
                        78      BUILD_TUPLE                     5
                        80      BINARY_MODULO                   
                        82      STORE_FAST                      1: s
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       7: _tzinfo
                        88      LOAD_CONST                      6: None
                        90      IS_OP                           1 (is not)
                        92      POP_JUMP_IF_FALSE               70 (to 140)
                        94      LOAD_FAST                       1: s
                        96      LOAD_CONST                      7: -1
                        98      LOAD_CONST                      6: None
                        100     BUILD_SLICE                     2
                        102     BINARY_SUBSCR                   
                        104     LOAD_CONST                      8: ')'
                        106     COMPARE_OP                      2 (==)
                        108     POP_JUMP_IF_TRUE                57 (to 114)
                        110     LOAD_ASSERTION_ERROR            
                        112     RAISE_VARARGS                   1
                        114     LOAD_FAST                       1: s
                        116     LOAD_CONST                      6: None
                        118     LOAD_CONST                      7: -1
                        120     BUILD_SLICE                     2
                        122     BINARY_SUBSCR                   
                        124     LOAD_CONST                      9: ', tzinfo=%r'
                        126     LOAD_FAST                       0: self
                        128     LOAD_ATTR                       7: _tzinfo
                        130     BINARY_MODULO                   
                        132     BINARY_ADD                      
                        134     LOAD_CONST                      8: ')'
                        136     BINARY_ADD                      
                        138     STORE_FAST                      1: s
                        140     LOAD_FAST                       0: self
                        142     LOAD_ATTR                       8: _fold
                        144     POP_JUMP_IF_FALSE               91 (to 182)
                        146     LOAD_FAST                       1: s
                        148     LOAD_CONST                      7: -1
                        150     LOAD_CONST                      6: None
                        152     BUILD_SLICE                     2
                        154     BINARY_SUBSCR                   
                        156     LOAD_CONST                      8: ')'
                        158     COMPARE_OP                      2 (==)
                        160     POP_JUMP_IF_TRUE                83 (to 166)
                        162     LOAD_ASSERTION_ERROR            
                        164     RAISE_VARARGS                   1
                        166     LOAD_FAST                       1: s
                        168     LOAD_CONST                      6: None
                        170     LOAD_CONST                      7: -1
                        172     BUILD_SLICE                     2
                        174     BINARY_SUBSCR                   
                        176     LOAD_CONST                      10: ', fold=1)'
                        178     BINARY_ADD                      
                        180     STORE_FAST                      1: s
                        182     LOAD_FAST                       1: s
                        184     RETURN_VALUE                    
                'time.__repr__'
                'auto'
                [Code]
                    File Name: datetime.py
                    Object Name: isoformat
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_format_time'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        '_tzstr'
                    [Var Names]
                        'self'
                        'timespec'
                        's'
                        'tz'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the time formatted according to ISO.\n\n        The full format is 'HH:MM:SS.mmmmmm+zz:zz'. By default, the fractional\n        part is omitted if self.microsecond == 0.\n\n        The optional argument timespec specifies the number of additional\n        terms of the time to include. Valid options are 'auto', 'hours',\n        'minutes', 'seconds', 'milliseconds' and 'microseconds'.\n        "
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _format_time
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _hour
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _minute
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: _second
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       4: _microsecond
                        18      LOAD_FAST                       1: timespec
                        20      CALL_FUNCTION                   5
                        22      STORE_FAST                      2: s
                        24      LOAD_FAST                       0: self
                        26      LOAD_METHOD                     5: _tzstr
                        28      CALL_METHOD                     0
                        30      STORE_FAST                      3: tz
                        32      LOAD_FAST                       3: tz
                        34      POP_JUMP_IF_FALSE               22 (to 44)
                        36      LOAD_FAST                       2: s
                        38      LOAD_FAST                       3: tz
                        40      INPLACE_ADD                     
                        42      STORE_FAST                      2: s
                        44      LOAD_FAST                       2: s
                        46      RETURN_VALUE                    
                'time.isoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: fromisoformat
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        '_parse_isoformat_time'
                        'Exception'
                        'ValueError'
                    [Var Names]
                        'cls'
                        'time_string'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a time from the output of isoformat().'
                        'fromisoformat: argument must be str'
                        'Invalid isoformat string: '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: time_string
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'fromisoformat: argument must be str'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      SETUP_FINALLY                   7 (to 34)
                        20      LOAD_FAST                       0: cls
                        22      LOAD_GLOBAL                     3: _parse_isoformat_time
                        24      LOAD_FAST                       1: time_string
                        26      CALL_FUNCTION                   1
                        28      CALL_FUNCTION_EX                0
                        30      POP_BLOCK                       
                        32      RETURN_VALUE                    
                        34      DUP_TOP                         
                        36      LOAD_GLOBAL                     4: Exception
                        38      JUMP_IF_NOT_EXC_MATCH           30 (to 60)
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      LOAD_GLOBAL                     5: ValueError
                        48      LOAD_CONST                      2: 'Invalid isoformat string: '
                        50      LOAD_FAST                       1: time_string
                        52      FORMAT_VALUE                    2 (FVC_REPR)
                        54      BUILD_STRING                    2
                        56      CALL_FUNCTION                   1
                        58      RAISE_VARARGS                   1
                        60      RERAISE                         0
                'time.fromisoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: strftime
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hour'
                        '_minute'
                        '_second'
                        '_wrap_strftime'
                    [Var Names]
                        'self'
                        'fmt'
                        'timetuple'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Format using strftime().  The date part of the timestamp passed\n        to underlying strftime should not be used.\n        '
                        1900
                        1
                        0
                        -1
                    [Disassembly]
                        0       LOAD_CONST                      1: 1900
                        2       LOAD_CONST                      2: 1
                        4       LOAD_CONST                      2: 1
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: _hour
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _minute
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _second
                        18      LOAD_CONST                      3: 0
                        20      LOAD_CONST                      2: 1
                        22      LOAD_CONST                      4: -1
                        24      BUILD_TUPLE                     9
                        26      STORE_FAST                      2: timetuple
                        28      LOAD_GLOBAL                     3: _wrap_strftime
                        30      LOAD_FAST                       0: self
                        32      LOAD_FAST                       1: fmt
                        34      LOAD_FAST                       2: timetuple
                        36      CALL_FUNCTION                   3
                        38      RETURN_VALUE                    
                'time.strftime'
                [Code]
                    File Name: datetime.py
                    Object Name: __format__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        'type'
                        '__name__'
                        'len'
                        'strftime'
                    [Var Names]
                        'self'
                        'fmt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'must be str, not %s'
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: fmt
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                14 (to 28)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'must be str, not %s'
                        14      LOAD_GLOBAL                     3: type
                        16      LOAD_FAST                       1: fmt
                        18      CALL_FUNCTION                   1
                        20      LOAD_ATTR                       4: __name__
                        22      BINARY_MODULO                   
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_GLOBAL                     5: len
                        30      LOAD_FAST                       1: fmt
                        32      CALL_FUNCTION                   1
                        34      LOAD_CONST                      2: 0
                        36      COMPARE_OP                      3 (!=)
                        38      POP_JUMP_IF_FALSE               25 (to 50)
                        40      LOAD_FAST                       0: self
                        42      LOAD_METHOD                     6: strftime
                        44      LOAD_FAST                       1: fmt
                        46      CALL_METHOD                     1
                        48      RETURN_VALUE                    
                        50      LOAD_GLOBAL                     1: str
                        52      LOAD_FAST                       0: self
                        54      CALL_FUNCTION                   1
                        56      RETURN_VALUE                    
                'time.__format__'
                [Code]
                    File Name: datetime.py
                    Object Name: utcoffset
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'utcoffset'
                        '_check_utc_offset'
                    [Var Names]
                        'self'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the timezone offset as timedelta, positive east of UTC\n         (negative west of UTC).'
                        None
                        'utcoffset'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: utcoffset
                        20      LOAD_CONST                      1: None
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: offset
                        26      LOAD_GLOBAL                     2: _check_utc_offset
                        28      LOAD_CONST                      2: 'utcoffset'
                        30      LOAD_FAST                       1: offset
                        32      CALL_FUNCTION                   2
                        34      POP_TOP                         
                        36      LOAD_FAST                       1: offset
                        38      RETURN_VALUE                    
                'time.utcoffset'
                [Code]
                    File Name: datetime.py
                    Object Name: tzname
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'tzname'
                        '_check_tzname'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the timezone name.\n\n        Note that the name is 100% informational -- there\'s no requirement that\n        it mean anything in particular. For example, "GMT", "UTC", "-500",\n        "-5:00", "EDT", "US/Eastern", "America/New York" are all valid replies.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: tzname
                        20      LOAD_CONST                      1: None
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: name
                        26      LOAD_GLOBAL                     2: _check_tzname
                        28      LOAD_FAST                       1: name
                        30      CALL_FUNCTION                   1
                        32      POP_TOP                         
                        34      LOAD_FAST                       1: name
                        36      RETURN_VALUE                    
                'time.tzname'
                [Code]
                    File Name: datetime.py
                    Object Name: dst
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'dst'
                        '_check_utc_offset'
                    [Var Names]
                        'self'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return 0 if DST is not in effect, or the DST offset (as timedelta\n        positive eastward) if DST is in effect.\n\n        This is purely informational; the DST offset has already been added to\n        the UTC offset returned by utcoffset() if applicable, so there's no\n        need to consult dst() unless you're interested in displaying the DST\n        info.\n        "
                        None
                        'dst'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: dst
                        20      LOAD_CONST                      1: None
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: offset
                        26      LOAD_GLOBAL                     2: _check_utc_offset
                        28      LOAD_CONST                      2: 'dst'
                        30      LOAD_FAST                       1: offset
                        32      CALL_FUNCTION                   2
                        34      POP_TOP                         
                        36      LOAD_FAST                       1: offset
                        38      RETURN_VALUE                    
                'time.dst'
                True
                [Code]
                    File Name: datetime.py
                    Object Name: replace
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        '_fold'
                        'type'
                    [Var Names]
                        'self'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        'fold'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new time with new values for the specified fields.'
                        None
                        True
                        (
                            'fold'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: hour
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: hour
                        12      STORE_FAST                      1: hour
                        14      LOAD_FAST                       2: minute
                        16      LOAD_CONST                      1: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               14 (to 28)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       1: minute
                        26      STORE_FAST                      2: minute
                        28      LOAD_FAST                       3: second
                        30      LOAD_CONST                      1: None
                        32      IS_OP                           0 (is)
                        34      POP_JUMP_IF_FALSE               21 (to 42)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: second
                        40      STORE_FAST                      3: second
                        42      LOAD_FAST                       4: microsecond
                        44      LOAD_CONST                      1: None
                        46      IS_OP                           0 (is)
                        48      POP_JUMP_IF_FALSE               28 (to 56)
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       3: microsecond
                        54      STORE_FAST                      4: microsecond
                        56      LOAD_FAST                       5: tzinfo
                        58      LOAD_CONST                      2: True
                        60      IS_OP                           0 (is)
                        62      POP_JUMP_IF_FALSE               35 (to 70)
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       4: tzinfo
                        68      STORE_FAST                      5: tzinfo
                        70      LOAD_FAST                       6: fold
                        72      LOAD_CONST                      1: None
                        74      IS_OP                           0 (is)
                        76      POP_JUMP_IF_FALSE               42 (to 84)
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       5: _fold
                        82      STORE_FAST                      6: fold
                        84      LOAD_GLOBAL                     6: type
                        86      LOAD_FAST                       0: self
                        88      CALL_FUNCTION                   1
                        90      LOAD_FAST                       1: hour
                        92      LOAD_FAST                       2: minute
                        94      LOAD_FAST                       3: second
                        96      LOAD_FAST                       4: microsecond
                        98      LOAD_FAST                       5: tzinfo
                        100     LOAD_FAST                       6: fold
                        102     LOAD_CONST                      3: ('fold',)
                        104     CALL_FUNCTION_KW                6
                        106     RETURN_VALUE                    
                'time.replace'
                3
                [Code]
                    File Name: datetime.py
                    Object Name: _getstate
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        '_microsecond'
                        '_hour'
                        '_fold'
                        'bytes'
                        '_minute'
                        '_second'
                        '_tzinfo'
                    [Var Names]
                        'self'
                        'protocol'
                        'us2'
                        'us3'
                        'us1'
                        'h'
                        'basestate'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        256
                        3
                        128
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _microsecond
                        6       LOAD_CONST                      1: 256
                        8       CALL_FUNCTION                   2
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      2: us2
                        14      STORE_FAST                      3: us3
                        16      LOAD_GLOBAL                     0: divmod
                        18      LOAD_FAST                       2: us2
                        20      LOAD_CONST                      1: 256
                        22      CALL_FUNCTION                   2
                        24      UNPACK_SEQUENCE                 2
                        26      STORE_FAST                      4: us1
                        28      STORE_FAST                      2: us2
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       2: _hour
                        34      STORE_FAST                      5: h
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       3: _fold
                        40      POP_JUMP_IF_FALSE               29 (to 58)
                        42      LOAD_FAST                       1: protocol
                        44      LOAD_CONST                      2: 3
                        46      COMPARE_OP                      4 (>)
                        48      POP_JUMP_IF_FALSE               29 (to 58)
                        50      LOAD_FAST                       5: h
                        52      LOAD_CONST                      3: 128
                        54      INPLACE_ADD                     
                        56      STORE_FAST                      5: h
                        58      LOAD_GLOBAL                     4: bytes
                        60      LOAD_FAST                       5: h
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       5: _minute
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       6: _second
                        70      LOAD_FAST                       4: us1
                        72      LOAD_FAST                       2: us2
                        74      LOAD_FAST                       3: us3
                        76      BUILD_LIST                      6
                        78      CALL_FUNCTION                   1
                        80      STORE_FAST                      6: basestate
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       7: _tzinfo
                        86      LOAD_CONST                      0: None
                        88      IS_OP                           0 (is)
                        90      POP_JUMP_IF_FALSE               49 (to 98)
                        92      LOAD_FAST                       6: basestate
                        94      BUILD_TUPLE                     1
                        96      RETURN_VALUE                    
                        98      LOAD_FAST                       6: basestate
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       7: _tzinfo
                        104     BUILD_TUPLE                     2
                        106     RETURN_VALUE                    
                'time._getstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __setstate
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        '_tzinfo_class'
                        'TypeError'
                        '_minute'
                        '_second'
                        '_fold'
                        '_hour'
                        '_microsecond'
                        '_tzinfo'
                    [Var Names]
                        'self'
                        'string'
                        'tzinfo'
                        'h'
                        'us1'
                        'us2'
                        'us3'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'bad tzinfo state arg'
                        127
                        1
                        128
                        0
                        8
                    [Disassembly]
                        0       LOAD_FAST                       2: tzinfo
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_FALSE               13 (to 26)
                        8       LOAD_GLOBAL                     0: isinstance
                        10      LOAD_FAST                       2: tzinfo
                        12      LOAD_GLOBAL                     1: _tzinfo_class
                        14      CALL_FUNCTION                   2
                        16      POP_JUMP_IF_TRUE                13 (to 26)
                        18      LOAD_GLOBAL                     2: TypeError
                        20      LOAD_CONST                      1: 'bad tzinfo state arg'
                        22      CALL_FUNCTION                   1
                        24      RAISE_VARARGS                   1
                        26      LOAD_FAST                       1: string
                        28      UNPACK_SEQUENCE                 6
                        30      STORE_FAST                      3: h
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      3: _minute
                        36      LOAD_FAST                       0: self
                        38      STORE_ATTR                      4: _second
                        40      STORE_FAST                      4: us1
                        42      STORE_FAST                      5: us2
                        44      STORE_FAST                      6: us3
                        46      LOAD_FAST                       3: h
                        48      LOAD_CONST                      2: 127
                        50      COMPARE_OP                      4 (>)
                        52      POP_JUMP_IF_FALSE               36 (to 72)
                        54      LOAD_CONST                      3: 1
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      5: _fold
                        60      LOAD_FAST                       3: h
                        62      LOAD_CONST                      4: 128
                        64      BINARY_SUBTRACT                 
                        66      LOAD_FAST                       0: self
                        68      STORE_ATTR                      6: _hour
                        70      JUMP_FORWARD                    6 (to 84)
                        72      LOAD_CONST                      5: 0
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      5: _fold
                        78      LOAD_FAST                       3: h
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      6: _hour
                        84      LOAD_FAST                       4: us1
                        86      LOAD_CONST                      6: 8
                        88      BINARY_LSHIFT                   
                        90      LOAD_FAST                       5: us2
                        92      BINARY_OR                       
                        94      LOAD_CONST                      6: 8
                        96      BINARY_LSHIFT                   
                        98      LOAD_FAST                       6: us3
                        100     BINARY_OR                       
                        102     LOAD_FAST                       0: self
                        104     STORE_ATTR                      7: _microsecond
                        106     LOAD_FAST                       2: tzinfo
                        108     LOAD_FAST                       0: self
                        110     STORE_ATTR                      8: _tzinfo
                        112     LOAD_CONST                      0: None
                        114     RETURN_VALUE                    
                'time.__setstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce_ex__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '_getstate'
                    [Var Names]
                        'self'
                        'protocol'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: _getstate
                        8       LOAD_FAST                       1: protocol
                        10      CALL_METHOD                     1
                        12      BUILD_TUPLE                     2
                        14      RETURN_VALUE                    
                'time.__reduce_ex__'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__reduce_ex__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        2
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: __reduce_ex__
                        4       LOAD_CONST                      1: 2
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'time.__reduce__'
                (
                    0
                    0
                    0
                    0
                    None
                )
                (
                    False
                )
                (
                    'auto'
                )
                (
                    None
                    None
                    None
                    None
                    True
                )
                (
                    3
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'time'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Time with time zone.\n\n    Constructors:\n\n    __new__()\n\n    Operators:\n\n    __repr__, __str__\n    __eq__, __le__, __lt__, __ge__, __gt__, __hash__\n\n    Methods:\n\n    strftime()\n    isoformat()\n    utcoffset()\n    tzname()\n    dst()\n\n    Properties (readonly):\n    hour, minute, second, microsecond, tzinfo, fold\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('_hour', '_minute', '_second', '_microsecond', '_tzinfo', '_hashcode', '_fold')
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      66: (0, 0, 0, 0, None)
                18      LOAD_CONST                      3: 0
                20      LOAD_CONST                      5: ('fold',)
                22      BUILD_CONST_KEY_MAP             1
                24      LOAD_CONST                      6: <CODE> __new__
                26      LOAD_CONST                      7: 'time.__new__'
                28      MAKE_FUNCTION                   3
                30      STORE_NAME                      5: __new__
                32      LOAD_NAME                       6: property
                34      LOAD_CONST                      8: <CODE> hour
                36      LOAD_CONST                      9: 'time.hour'
                38      MAKE_FUNCTION                   0
                40      CALL_FUNCTION                   1
                42      STORE_NAME                      7: hour
                44      LOAD_NAME                       6: property
                46      LOAD_CONST                      10: <CODE> minute
                48      LOAD_CONST                      11: 'time.minute'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      8: minute
                56      LOAD_NAME                       6: property
                58      LOAD_CONST                      12: <CODE> second
                60      LOAD_CONST                      13: 'time.second'
                62      MAKE_FUNCTION                   0
                64      CALL_FUNCTION                   1
                66      STORE_NAME                      9: second
                68      LOAD_NAME                       6: property
                70      LOAD_CONST                      14: <CODE> microsecond
                72      LOAD_CONST                      15: 'time.microsecond'
                74      MAKE_FUNCTION                   0
                76      CALL_FUNCTION                   1
                78      STORE_NAME                      10: microsecond
                80      LOAD_NAME                       6: property
                82      LOAD_CONST                      16: <CODE> tzinfo
                84      LOAD_CONST                      17: 'time.tzinfo'
                86      MAKE_FUNCTION                   0
                88      CALL_FUNCTION                   1
                90      STORE_NAME                      11: tzinfo
                92      LOAD_NAME                       6: property
                94      LOAD_CONST                      18: <CODE> fold
                96      LOAD_CONST                      19: 'time.fold'
                98      MAKE_FUNCTION                   0
                100     CALL_FUNCTION                   1
                102     STORE_NAME                      12: fold
                104     LOAD_CONST                      20: <CODE> __eq__
                106     LOAD_CONST                      21: 'time.__eq__'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      13: __eq__
                112     LOAD_CONST                      22: <CODE> __le__
                114     LOAD_CONST                      23: 'time.__le__'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      14: __le__
                120     LOAD_CONST                      24: <CODE> __lt__
                122     LOAD_CONST                      25: 'time.__lt__'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      15: __lt__
                128     LOAD_CONST                      26: <CODE> __ge__
                130     LOAD_CONST                      27: 'time.__ge__'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      16: __ge__
                136     LOAD_CONST                      28: <CODE> __gt__
                138     LOAD_CONST                      29: 'time.__gt__'
                140     MAKE_FUNCTION                   0
                142     STORE_NAME                      17: __gt__
                144     LOAD_CONST                      67: (False,)
                146     LOAD_CONST                      31: <CODE> _cmp
                148     LOAD_CONST                      32: 'time._cmp'
                150     MAKE_FUNCTION                   1
                152     STORE_NAME                      18: _cmp
                154     LOAD_CONST                      33: <CODE> __hash__
                156     LOAD_CONST                      34: 'time.__hash__'
                158     MAKE_FUNCTION                   0
                160     STORE_NAME                      19: __hash__
                162     LOAD_CONST                      35: <CODE> _tzstr
                164     LOAD_CONST                      36: 'time._tzstr'
                166     MAKE_FUNCTION                   0
                168     STORE_NAME                      20: _tzstr
                170     LOAD_CONST                      37: <CODE> __repr__
                172     LOAD_CONST                      38: 'time.__repr__'
                174     MAKE_FUNCTION                   0
                176     STORE_NAME                      21: __repr__
                178     LOAD_CONST                      68: ('auto',)
                180     LOAD_CONST                      40: <CODE> isoformat
                182     LOAD_CONST                      41: 'time.isoformat'
                184     MAKE_FUNCTION                   1
                186     STORE_NAME                      22: isoformat
                188     LOAD_NAME                       22: isoformat
                190     STORE_NAME                      23: __str__
                192     LOAD_NAME                       24: classmethod
                194     LOAD_CONST                      42: <CODE> fromisoformat
                196     LOAD_CONST                      43: 'time.fromisoformat'
                198     MAKE_FUNCTION                   0
                200     CALL_FUNCTION                   1
                202     STORE_NAME                      25: fromisoformat
                204     LOAD_CONST                      44: <CODE> strftime
                206     LOAD_CONST                      45: 'time.strftime'
                208     MAKE_FUNCTION                   0
                210     STORE_NAME                      26: strftime
                212     LOAD_CONST                      46: <CODE> __format__
                214     LOAD_CONST                      47: 'time.__format__'
                216     MAKE_FUNCTION                   0
                218     STORE_NAME                      27: __format__
                220     LOAD_CONST                      48: <CODE> utcoffset
                222     LOAD_CONST                      49: 'time.utcoffset'
                224     MAKE_FUNCTION                   0
                226     STORE_NAME                      28: utcoffset
                228     LOAD_CONST                      50: <CODE> tzname
                230     LOAD_CONST                      51: 'time.tzname'
                232     MAKE_FUNCTION                   0
                234     STORE_NAME                      29: tzname
                236     LOAD_CONST                      52: <CODE> dst
                238     LOAD_CONST                      53: 'time.dst'
                240     MAKE_FUNCTION                   0
                242     STORE_NAME                      30: dst
                244     NOP                             
                246     NOP                             
                248     LOAD_CONST                      69: (None, None, None, None, True)
                250     LOAD_CONST                      4: None
                252     LOAD_CONST                      5: ('fold',)
                254     BUILD_CONST_KEY_MAP             1
                256     LOAD_CONST                      55: <CODE> replace
                258     LOAD_CONST                      56: 'time.replace'
                260     MAKE_FUNCTION                   3
                262     STORE_NAME                      31: replace
                264     LOAD_CONST                      70: (3,)
                266     LOAD_CONST                      58: <CODE> _getstate
                268     LOAD_CONST                      59: 'time._getstate'
                270     MAKE_FUNCTION                   1
                272     STORE_NAME                      32: _getstate
                274     LOAD_CONST                      60: <CODE> __setstate
                276     LOAD_CONST                      61: 'time.__setstate'
                278     MAKE_FUNCTION                   0
                280     STORE_NAME                      33: _time__setstate
                282     LOAD_CONST                      62: <CODE> __reduce_ex__
                284     LOAD_CONST                      63: 'time.__reduce_ex__'
                286     MAKE_FUNCTION                   0
                288     STORE_NAME                      34: __reduce_ex__
                290     LOAD_CONST                      64: <CODE> __reduce__
                292     LOAD_CONST                      65: 'time.__reduce__'
                294     MAKE_FUNCTION                   0
                296     STORE_NAME                      35: __reduce__
                298     LOAD_CONST                      4: None
                300     RETURN_VALUE                    
        'time'
        [Code]
            File Name: datetime.py
            Object Name: datetime
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'date'
                '__slots__'
                'time'
                '__new__'
                'property'
                'hour'
                'minute'
                'second'
                'microsecond'
                'tzinfo'
                'fold'
                'classmethod'
                '_fromtimestamp'
                'fromtimestamp'
                'utcfromtimestamp'
                'now'
                'utcnow'
                'combine'
                'fromisoformat'
                'timetuple'
                '_mktime'
                'timestamp'
                'utctimetuple'
                'timetz'
                'replace'
                '_local_timezone'
                'astimezone'
                'ctime'
                'isoformat'
                '__repr__'
                '__str__'
                'strptime'
                'utcoffset'
                'tzname'
                'dst'
                '__eq__'
                '__le__'
                '__lt__'
                '__ge__'
                '__gt__'
                '_cmp'
                '__add__'
                '__radd__'
                '__sub__'
                '__hash__'
                '_getstate'
                '_datetime__setstate'
                '__reduce_ex__'
                '__reduce__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'datetime'
                'datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])\n\n    The year, month and day arguments are required. tzinfo may be None, or an\n    instance of a tzinfo subclass. The remaining arguments may be ints.\n    '
                None
                0
                (
                    'fold'
                )
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 9
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 11
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'bytes'
                        'str'
                        'len'
                        'ord'
                        'UnicodeEncodeError'
                        'ValueError'
                        'object'
                        '__new__'
                        '_datetime__setstate'
                        '_hashcode'
                        '_check_date_fields'
                        '_check_time_fields'
                        '_check_tzinfo_arg'
                        '_year'
                        '_month'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        '_tzinfo'
                        '_fold'
                    [Var Names]
                        'cls'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        'fold'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        10
                        1
                        2
                        3
                        127
                        12
                        'latin1'
                        "Failed to encode latin1 string when unpickling a datetime object. pickle.load(data, encoding='latin1') is assumed."
                        -1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: year
                        4       LOAD_GLOBAL                     1: bytes
                        6       LOAD_GLOBAL                     2: str
                        8       BUILD_TUPLE                     2
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_FALSE               73 (to 146)
                        14      LOAD_GLOBAL                     3: len
                        16      LOAD_FAST                       1: year
                        18      CALL_FUNCTION                   1
                        20      LOAD_CONST                      1: 10
                        22      COMPARE_OP                      2 (==)
                        24      POP_JUMP_IF_FALSE               73 (to 146)
                        26      LOAD_CONST                      2: 1
                        28      LOAD_GLOBAL                     4: ord
                        30      LOAD_FAST                       1: year
                        32      LOAD_CONST                      3: 2
                        34      LOAD_CONST                      4: 3
                        36      BUILD_SLICE                     2
                        38      BINARY_SUBSCR                   
                        40      CALL_FUNCTION                   1
                        42      LOAD_CONST                      5: 127
                        44      BINARY_AND                      
                        46      DUP_TOP                         
                        48      ROT_THREE                       
                        50      COMPARE_OP                      1 (<=)
                        52      POP_JUMP_IF_FALSE               31 (to 62)
                        54      LOAD_CONST                      6: 12
                        56      COMPARE_OP                      1 (<=)
                        58      POP_JUMP_IF_FALSE               73 (to 146)
                        60      JUMP_FORWARD                    2 (to 66)
                        62      POP_TOP                         
                        64      JUMP_FORWARD                    40 (to 146)
                        66      LOAD_GLOBAL                     0: isinstance
                        68      LOAD_FAST                       1: year
                        70      LOAD_GLOBAL                     2: str
                        72      CALL_FUNCTION                   2
                        74      POP_JUMP_IF_FALSE               57 (to 114)
                        76      SETUP_FINALLY                   7 (to 92)
                        78      LOAD_GLOBAL                     1: bytes
                        80      LOAD_FAST                       1: year
                        82      LOAD_CONST                      7: 'latin1'
                        84      CALL_FUNCTION                   2
                        86      STORE_FAST                      1: year
                        88      POP_BLOCK                       
                        90      JUMP_FORWARD                    11 (to 114)
                        92      DUP_TOP                         
                        94      LOAD_GLOBAL                     5: UnicodeEncodeError
                        96      JUMP_IF_NOT_EXC_MATCH           56 (to 112)
                        98      POP_TOP                         
                        100     POP_TOP                         
                        102     POP_TOP                         
                        104     LOAD_GLOBAL                     6: ValueError
                        106     LOAD_CONST                      8: "Failed to encode latin1 string when unpickling a datetime object. pickle.load(data, encoding='latin1') is assumed."
                        108     CALL_FUNCTION                   1
                        110     RAISE_VARARGS                   1
                        112     RERAISE                         0
                        114     LOAD_GLOBAL                     7: object
                        116     LOAD_METHOD                     8: __new__
                        118     LOAD_FAST                       0: cls
                        120     CALL_METHOD                     1
                        122     STORE_FAST                      10: self
                        124     LOAD_FAST                       10: self
                        126     LOAD_METHOD                     9: _datetime__setstate
                        128     LOAD_FAST                       1: year
                        130     LOAD_FAST                       2: month
                        132     CALL_METHOD                     2
                        134     POP_TOP                         
                        136     LOAD_CONST                      9: -1
                        138     LOAD_FAST                       10: self
                        140     STORE_ATTR                      10: _hashcode
                        142     LOAD_FAST                       10: self
                        144     RETURN_VALUE                    
                        146     LOAD_GLOBAL                     11: _check_date_fields
                        148     LOAD_FAST                       1: year
                        150     LOAD_FAST                       2: month
                        152     LOAD_FAST                       3: day
                        154     CALL_FUNCTION                   3
                        156     UNPACK_SEQUENCE                 3
                        158     STORE_FAST                      1: year
                        160     STORE_FAST                      2: month
                        162     STORE_FAST                      3: day
                        164     LOAD_GLOBAL                     12: _check_time_fields
                        166     LOAD_FAST                       4: hour
                        168     LOAD_FAST                       5: minute
                        170     LOAD_FAST                       6: second
                        172     LOAD_FAST                       7: microsecond
                        174     LOAD_FAST                       9: fold
                        176     CALL_FUNCTION                   5
                        178     UNPACK_SEQUENCE                 5
                        180     STORE_FAST                      4: hour
                        182     STORE_FAST                      5: minute
                        184     STORE_FAST                      6: second
                        186     STORE_FAST                      7: microsecond
                        188     STORE_FAST                      9: fold
                        190     LOAD_GLOBAL                     13: _check_tzinfo_arg
                        192     LOAD_FAST                       8: tzinfo
                        194     CALL_FUNCTION                   1
                        196     POP_TOP                         
                        198     LOAD_GLOBAL                     7: object
                        200     LOAD_METHOD                     8: __new__
                        202     LOAD_FAST                       0: cls
                        204     CALL_METHOD                     1
                        206     STORE_FAST                      10: self
                        208     LOAD_FAST                       1: year
                        210     LOAD_FAST                       10: self
                        212     STORE_ATTR                      14: _year
                        214     LOAD_FAST                       2: month
                        216     LOAD_FAST                       10: self
                        218     STORE_ATTR                      15: _month
                        220     LOAD_FAST                       3: day
                        222     LOAD_FAST                       10: self
                        224     STORE_ATTR                      16: _day
                        226     LOAD_FAST                       4: hour
                        228     LOAD_FAST                       10: self
                        230     STORE_ATTR                      17: _hour
                        232     LOAD_FAST                       5: minute
                        234     LOAD_FAST                       10: self
                        236     STORE_ATTR                      18: _minute
                        238     LOAD_FAST                       6: second
                        240     LOAD_FAST                       10: self
                        242     STORE_ATTR                      19: _second
                        244     LOAD_FAST                       7: microsecond
                        246     LOAD_FAST                       10: self
                        248     STORE_ATTR                      20: _microsecond
                        250     LOAD_FAST                       8: tzinfo
                        252     LOAD_FAST                       10: self
                        254     STORE_ATTR                      21: _tzinfo
                        256     LOAD_CONST                      9: -1
                        258     LOAD_FAST                       10: self
                        260     STORE_ATTR                      10: _hashcode
                        262     LOAD_FAST                       9: fold
                        264     LOAD_FAST                       10: self
                        266     STORE_ATTR                      22: _fold
                        268     LOAD_FAST                       10: self
                        270     RETURN_VALUE                    
                'datetime.__new__'
                [Code]
                    File Name: datetime.py
                    Object Name: hour
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hour'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'hour (0-23)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hour
                        4       RETURN_VALUE                    
                'datetime.hour'
                [Code]
                    File Name: datetime.py
                    Object Name: minute
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_minute'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'minute (0-59)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _minute
                        4       RETURN_VALUE                    
                'datetime.minute'
                [Code]
                    File Name: datetime.py
                    Object Name: second
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_second'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'second (0-59)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _second
                        4       RETURN_VALUE                    
                'datetime.second'
                [Code]
                    File Name: datetime.py
                    Object Name: microsecond
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_microsecond'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'microsecond (0-999999)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _microsecond
                        4       RETURN_VALUE                    
                'datetime.microsecond'
                [Code]
                    File Name: datetime.py
                    Object Name: tzinfo
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'timezone info object'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       RETURN_VALUE                    
                'datetime.tzinfo'
                [Code]
                    File Name: datetime.py
                    Object Name: fold
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_fold'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _fold
                        4       RETURN_VALUE                    
                'datetime.fold'
                [Code]
                    File Name: datetime.py
                    Object Name: _fromtimestamp
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 21
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_math'
                        'modf'
                        'round'
                        '_time'
                        'gmtime'
                        'localtime'
                        'min'
                        'sys'
                        'platform'
                        'startswith'
                        'timedelta'
                        'days'
                        '_fold'
                        'fromutc'
                    [Var Names]
                        'cls'
                        't'
                        'utc'
                        'tz'
                        'frac'
                        'us'
                        'converter'
                        'y'
                        'm'
                        'd'
                        'hh'
                        'mm'
                        'ss'
                        'weekday'
                        'jday'
                        'dst'
                        'result'
                        'max_fold_seconds'
                        'probe1'
                        'trans'
                        'probe2'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a datetime from a POSIX timestamp (like time.time()).\n\n        A timezone info object may be passed in as well.\n        '
                        1e+06
                        1000000
                        1
                        0
                        59
                        None
                        86400
                        'win'
                        6
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _math
                        2       LOAD_METHOD                     1: modf
                        4       LOAD_FAST                       1: t
                        6       CALL_METHOD                     1
                        8       UNPACK_SEQUENCE                 2
                        10      STORE_FAST                      4: frac
                        12      STORE_FAST                      1: t
                        14      LOAD_GLOBAL                     2: round
                        16      LOAD_FAST                       4: frac
                        18      LOAD_CONST                      1: 1e+06
                        20      BINARY_MULTIPLY                 
                        22      CALL_FUNCTION                   1
                        24      STORE_FAST                      5: us
                        26      LOAD_FAST                       5: us
                        28      LOAD_CONST                      2: 1000000
                        30      COMPARE_OP                      5 (>=)
                        32      POP_JUMP_IF_FALSE               26 (to 52)
                        34      LOAD_FAST                       1: t
                        36      LOAD_CONST                      3: 1
                        38      INPLACE_ADD                     
                        40      STORE_FAST                      1: t
                        42      LOAD_FAST                       5: us
                        44      LOAD_CONST                      2: 1000000
                        46      INPLACE_SUBTRACT                
                        48      STORE_FAST                      5: us
                        50      JUMP_FORWARD                    12 (to 76)
                        52      LOAD_FAST                       5: us
                        54      LOAD_CONST                      4: 0
                        56      COMPARE_OP                      0 (<)
                        58      POP_JUMP_IF_FALSE               38 (to 76)
                        60      LOAD_FAST                       1: t
                        62      LOAD_CONST                      3: 1
                        64      INPLACE_SUBTRACT                
                        66      STORE_FAST                      1: t
                        68      LOAD_FAST                       5: us
                        70      LOAD_CONST                      2: 1000000
                        72      INPLACE_ADD                     
                        74      STORE_FAST                      5: us
                        76      LOAD_FAST                       2: utc
                        78      POP_JUMP_IF_FALSE               43 (to 86)
                        80      LOAD_GLOBAL                     3: _time
                        82      LOAD_ATTR                       4: gmtime
                        84      JUMP_FORWARD                    2 (to 90)
                        86      LOAD_GLOBAL                     3: _time
                        88      LOAD_ATTR                       5: localtime
                        90      STORE_FAST                      6: converter
                        92      LOAD_FAST                       6: converter
                        94      LOAD_FAST                       1: t
                        96      CALL_FUNCTION                   1
                        98      UNPACK_SEQUENCE                 9
                        100     STORE_FAST                      7: y
                        102     STORE_FAST                      8: m
                        104     STORE_FAST                      9: d
                        106     STORE_FAST                      10: hh
                        108     STORE_FAST                      11: mm
                        110     STORE_FAST                      12: ss
                        112     STORE_FAST                      13: weekday
                        114     STORE_FAST                      14: jday
                        116     STORE_FAST                      15: dst
                        118     LOAD_GLOBAL                     6: min
                        120     LOAD_FAST                       12: ss
                        122     LOAD_CONST                      5: 59
                        124     CALL_FUNCTION                   2
                        126     STORE_FAST                      12: ss
                        128     LOAD_FAST                       0: cls
                        130     LOAD_FAST                       7: y
                        132     LOAD_FAST                       8: m
                        134     LOAD_FAST                       9: d
                        136     LOAD_FAST                       10: hh
                        138     LOAD_FAST                       11: mm
                        140     LOAD_FAST                       12: ss
                        142     LOAD_FAST                       5: us
                        144     LOAD_FAST                       3: tz
                        146     CALL_FUNCTION                   8
                        148     STORE_FAST                      16: result
                        150     LOAD_FAST                       3: tz
                        152     LOAD_CONST                      6: None
                        154     IS_OP                           0 (is)
                        156     POP_JUMP_IF_FALSE               177 (to 354)
                        158     LOAD_FAST                       2: utc
                        160     POP_JUMP_IF_TRUE                177 (to 354)
                        162     LOAD_CONST                      7: 86400
                        164     STORE_FAST                      17: max_fold_seconds
                        166     LOAD_FAST                       1: t
                        168     LOAD_FAST                       17: max_fold_seconds
                        170     COMPARE_OP                      0 (<)
                        172     POP_JUMP_IF_FALSE               95 (to 190)
                        174     LOAD_GLOBAL                     7: sys
                        176     LOAD_ATTR                       8: platform
                        178     LOAD_METHOD                     9: startswith
                        180     LOAD_CONST                      8: 'win'
                        182     CALL_METHOD                     1
                        184     POP_JUMP_IF_FALSE               95 (to 190)
                        186     LOAD_FAST                       16: result
                        188     RETURN_VALUE                    
                        190     LOAD_FAST                       6: converter
                        192     LOAD_FAST                       1: t
                        194     LOAD_FAST                       17: max_fold_seconds
                        196     BINARY_SUBTRACT                 
                        198     CALL_FUNCTION                   1
                        200     LOAD_CONST                      6: None
                        202     LOAD_CONST                      9: 6
                        204     BUILD_SLICE                     2
                        206     BINARY_SUBSCR                   
                        208     UNPACK_SEQUENCE                 6
                        210     STORE_FAST                      7: y
                        212     STORE_FAST                      8: m
                        214     STORE_FAST                      9: d
                        216     STORE_FAST                      10: hh
                        218     STORE_FAST                      11: mm
                        220     STORE_FAST                      12: ss
                        222     LOAD_FAST                       0: cls
                        224     LOAD_FAST                       7: y
                        226     LOAD_FAST                       8: m
                        228     LOAD_FAST                       9: d
                        230     LOAD_FAST                       10: hh
                        232     LOAD_FAST                       11: mm
                        234     LOAD_FAST                       12: ss
                        236     LOAD_FAST                       5: us
                        238     LOAD_FAST                       3: tz
                        240     CALL_FUNCTION                   8
                        242     STORE_FAST                      18: probe1
                        244     LOAD_FAST                       16: result
                        246     LOAD_FAST                       18: probe1
                        248     BINARY_SUBTRACT                 
                        250     LOAD_GLOBAL                     10: timedelta
                        252     LOAD_CONST                      4: 0
                        254     LOAD_FAST                       17: max_fold_seconds
                        256     CALL_FUNCTION                   2
                        258     BINARY_SUBTRACT                 
                        260     STORE_FAST                      19: trans
                        262     LOAD_FAST                       19: trans
                        264     LOAD_ATTR                       11: days
                        266     LOAD_CONST                      4: 0
                        268     COMPARE_OP                      0 (<)
                        270     POP_JUMP_IF_FALSE               175 (to 350)
                        272     LOAD_FAST                       6: converter
                        274     LOAD_FAST                       1: t
                        276     LOAD_FAST                       19: trans
                        278     LOAD_GLOBAL                     10: timedelta
                        280     LOAD_CONST                      4: 0
                        282     LOAD_CONST                      3: 1
                        284     CALL_FUNCTION                   2
                        286     BINARY_FLOOR_DIVIDE             
                        288     BINARY_ADD                      
                        290     CALL_FUNCTION                   1
                        292     LOAD_CONST                      6: None
                        294     LOAD_CONST                      9: 6
                        296     BUILD_SLICE                     2
                        298     BINARY_SUBSCR                   
                        300     UNPACK_SEQUENCE                 6
                        302     STORE_FAST                      7: y
                        304     STORE_FAST                      8: m
                        306     STORE_FAST                      9: d
                        308     STORE_FAST                      10: hh
                        310     STORE_FAST                      11: mm
                        312     STORE_FAST                      12: ss
                        314     LOAD_FAST                       0: cls
                        316     LOAD_FAST                       7: y
                        318     LOAD_FAST                       8: m
                        320     LOAD_FAST                       9: d
                        322     LOAD_FAST                       10: hh
                        324     LOAD_FAST                       11: mm
                        326     LOAD_FAST                       12: ss
                        328     LOAD_FAST                       5: us
                        330     LOAD_FAST                       3: tz
                        332     CALL_FUNCTION                   8
                        334     STORE_FAST                      20: probe2
                        336     LOAD_FAST                       20: probe2
                        338     LOAD_FAST                       16: result
                        340     COMPARE_OP                      2 (==)
                        342     POP_JUMP_IF_FALSE               175 (to 350)
                        344     LOAD_CONST                      3: 1
                        346     LOAD_FAST                       16: result
                        348     STORE_ATTR                      12: _fold
                        350     LOAD_FAST                       16: result
                        352     RETURN_VALUE                    
                        354     LOAD_FAST                       3: tz
                        356     LOAD_CONST                      6: None
                        358     IS_OP                           1 (is not)
                        360     POP_JUMP_IF_FALSE               186 (to 372)
                        362     LOAD_FAST                       3: tz
                        364     LOAD_METHOD                     13: fromutc
                        366     LOAD_FAST                       16: result
                        368     CALL_METHOD                     1
                        370     STORE_FAST                      16: result
                        372     LOAD_FAST                       16: result
                        374     RETURN_VALUE                    
                'datetime._fromtimestamp'
                [Code]
                    File Name: datetime.py
                    Object Name: fromtimestamp
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check_tzinfo_arg'
                        '_fromtimestamp'
                    [Var Names]
                        'cls'
                        't'
                        'tz'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a datetime from a POSIX timestamp (like time.time()).\n\n        A timezone info object may be passed in as well.\n        '
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _check_tzinfo_arg
                        2       LOAD_FAST                       2: tz
                        4       CALL_FUNCTION                   1
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: cls
                        10      LOAD_METHOD                     1: _fromtimestamp
                        12      LOAD_FAST                       1: t
                        14      LOAD_FAST                       2: tz
                        16      LOAD_CONST                      1: None
                        18      IS_OP                           1 (is not)
                        20      LOAD_FAST                       2: tz
                        22      CALL_METHOD                     3
                        24      RETURN_VALUE                    
                'datetime.fromtimestamp'
                [Code]
                    File Name: datetime.py
                    Object Name: utcfromtimestamp
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_fromtimestamp'
                    [Var Names]
                        'cls'
                        't'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a naive UTC datetime from a POSIX timestamp.'
                        True
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_METHOD                     0: _fromtimestamp
                        4       LOAD_FAST                       1: t
                        6       LOAD_CONST                      1: True
                        8       LOAD_CONST                      2: None
                        10      CALL_METHOD                     3
                        12      RETURN_VALUE                    
                'datetime.utcfromtimestamp'
                [Code]
                    File Name: datetime.py
                    Object Name: now
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        'time'
                        'fromtimestamp'
                    [Var Names]
                        'cls'
                        'tz'
                        't'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a datetime from time.time() and optional time zone info.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _time
                        2       LOAD_METHOD                     1: time
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      2: t
                        8       LOAD_FAST                       0: cls
                        10      LOAD_METHOD                     2: fromtimestamp
                        12      LOAD_FAST                       2: t
                        14      LOAD_FAST                       1: tz
                        16      CALL_METHOD                     2
                        18      RETURN_VALUE                    
                'datetime.now'
                [Code]
                    File Name: datetime.py
                    Object Name: utcnow
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        'time'
                        'utcfromtimestamp'
                    [Var Names]
                        'cls'
                        't'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a UTC datetime from time.time().'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _time
                        2       LOAD_METHOD                     1: time
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: t
                        8       LOAD_FAST                       0: cls
                        10      LOAD_METHOD                     2: utcfromtimestamp
                        12      LOAD_FAST                       1: t
                        14      CALL_METHOD                     1
                        16      RETURN_VALUE                    
                'datetime.utcnow'
                True
                [Code]
                    File Name: datetime.py
                    Object Name: combine
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        '_date_class'
                        'TypeError'
                        '_time_class'
                        'tzinfo'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'fold'
                    [Var Names]
                        'cls'
                        'date'
                        'time'
                        'tzinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a datetime from a given date and a given time.'
                        'date argument must be a date instance'
                        'time argument must be a time instance'
                        True
                        (
                            'fold'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: date
                        4       LOAD_GLOBAL                     1: _date_class
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'date argument must be a date instance'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_GLOBAL                     0: isinstance
                        20      LOAD_FAST                       2: time
                        22      LOAD_GLOBAL                     3: _time_class
                        24      CALL_FUNCTION                   2
                        26      POP_JUMP_IF_TRUE                18 (to 36)
                        28      LOAD_GLOBAL                     2: TypeError
                        30      LOAD_CONST                      2: 'time argument must be a time instance'
                        32      CALL_FUNCTION                   1
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       3: tzinfo
                        38      LOAD_CONST                      3: True
                        40      IS_OP                           0 (is)
                        42      POP_JUMP_IF_FALSE               25 (to 50)
                        44      LOAD_FAST                       2: time
                        46      LOAD_ATTR                       4: tzinfo
                        48      STORE_FAST                      3: tzinfo
                        50      LOAD_FAST                       0: cls
                        52      LOAD_FAST                       1: date
                        54      LOAD_ATTR                       5: year
                        56      LOAD_FAST                       1: date
                        58      LOAD_ATTR                       6: month
                        60      LOAD_FAST                       1: date
                        62      LOAD_ATTR                       7: day
                        64      LOAD_FAST                       2: time
                        66      LOAD_ATTR                       8: hour
                        68      LOAD_FAST                       2: time
                        70      LOAD_ATTR                       9: minute
                        72      LOAD_FAST                       2: time
                        74      LOAD_ATTR                       10: second
                        76      LOAD_FAST                       2: time
                        78      LOAD_ATTR                       11: microsecond
                        80      LOAD_FAST                       3: tzinfo
                        82      LOAD_FAST                       2: time
                        84      LOAD_ATTR                       12: fold
                        86      LOAD_CONST                      4: ('fold',)
                        88      CALL_FUNCTION_KW                9
                        90      RETURN_VALUE                    
                'datetime.combine'
                [Code]
                    File Name: datetime.py
                    Object Name: fromisoformat
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        '_parse_isoformat_date'
                        'ValueError'
                        '_parse_isoformat_time'
                    [Var Names]
                        'cls'
                        'date_string'
                        'dstr'
                        'tstr'
                        'date_components'
                        'time_components'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a datetime from the output of datetime.isoformat().'
                        'fromisoformat: argument must be str'
                        0
                        10
                        11
                        None
                        'Invalid isoformat string: '
                        (
                            0
                            0
                            0
                            0
                            None
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: date_string
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'fromisoformat: argument must be str'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       1: date_string
                        20      LOAD_CONST                      2: 0
                        22      LOAD_CONST                      3: 10
                        24      BUILD_SLICE                     2
                        26      BINARY_SUBSCR                   
                        28      STORE_FAST                      2: dstr
                        30      LOAD_FAST                       1: date_string
                        32      LOAD_CONST                      4: 11
                        34      LOAD_CONST                      5: None
                        36      BUILD_SLICE                     2
                        38      BINARY_SUBSCR                   
                        40      STORE_FAST                      3: tstr
                        42      SETUP_FINALLY                   6 (to 56)
                        44      LOAD_GLOBAL                     3: _parse_isoformat_date
                        46      LOAD_FAST                       2: dstr
                        48      CALL_FUNCTION                   1
                        50      STORE_FAST                      4: date_components
                        52      POP_BLOCK                       
                        54      JUMP_FORWARD                    14 (to 84)
                        56      DUP_TOP                         
                        58      LOAD_GLOBAL                     4: ValueError
                        60      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        62      POP_TOP                         
                        64      POP_TOP                         
                        66      POP_TOP                         
                        68      LOAD_GLOBAL                     4: ValueError
                        70      LOAD_CONST                      6: 'Invalid isoformat string: '
                        72      LOAD_FAST                       1: date_string
                        74      FORMAT_VALUE                    2 (FVC_REPR)
                        76      BUILD_STRING                    2
                        78      CALL_FUNCTION                   1
                        80      RAISE_VARARGS                   1
                        82      RERAISE                         0
                        84      LOAD_FAST                       3: tstr
                        86      POP_JUMP_IF_FALSE               65 (to 130)
                        88      SETUP_FINALLY                   6 (to 102)
                        90      LOAD_GLOBAL                     5: _parse_isoformat_time
                        92      LOAD_FAST                       3: tstr
                        94      CALL_FUNCTION                   1
                        96      STORE_FAST                      5: time_components
                        98      POP_BLOCK                       
                        100     JUMP_FORWARD                    18 (to 138)
                        102     DUP_TOP                         
                        104     LOAD_GLOBAL                     4: ValueError
                        106     JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                        108     POP_TOP                         
                        110     POP_TOP                         
                        112     POP_TOP                         
                        114     LOAD_GLOBAL                     4: ValueError
                        116     LOAD_CONST                      6: 'Invalid isoformat string: '
                        118     LOAD_FAST                       1: date_string
                        120     FORMAT_VALUE                    2 (FVC_REPR)
                        122     BUILD_STRING                    2
                        124     CALL_FUNCTION                   1
                        126     RAISE_VARARGS                   1
                        128     RERAISE                         0
                        130     BUILD_LIST                      0
                        132     LOAD_CONST                      7: (0, 0, 0, 0, None)
                        134     LIST_EXTEND                     1
                        136     STORE_FAST                      5: time_components
                        138     LOAD_FAST                       0: cls
                        140     LOAD_FAST                       4: date_components
                        142     LOAD_FAST                       5: time_components
                        144     BINARY_ADD                      
                        146     CALL_FUNCTION_EX                0
                        148     RETURN_VALUE                    
                'datetime.fromisoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: timetuple
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'dst'
                        '_build_struct_time'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                    [Var Names]
                        'self'
                        'dst'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return local time tuple compatible with time.localtime().'
                        None
                        -1
                        1
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: dst
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: dst
                        8       LOAD_FAST                       1: dst
                        10      LOAD_CONST                      1: None
                        12      IS_OP                           0 (is)
                        14      POP_JUMP_IF_FALSE               11 (to 22)
                        16      LOAD_CONST                      2: -1
                        18      STORE_FAST                      1: dst
                        20      JUMP_FORWARD                    7 (to 36)
                        22      LOAD_FAST                       1: dst
                        24      POP_JUMP_IF_FALSE               16 (to 32)
                        26      LOAD_CONST                      3: 1
                        28      STORE_FAST                      1: dst
                        30      JUMP_FORWARD                    2 (to 36)
                        32      LOAD_CONST                      4: 0
                        34      STORE_FAST                      1: dst
                        36      LOAD_GLOBAL                     1: _build_struct_time
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       2: year
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       3: month
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       4: day
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       5: hour
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       6: minute
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       7: second
                        62      LOAD_FAST                       1: dst
                        64      CALL_FUNCTION                   7
                        66      RETURN_VALUE                    
                'datetime.timetuple'
                [Code]
                    File Name: datetime.py
                    Object Name: _mktime
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'datetime'
                        'timedelta'
                        'fold'
                        'max'
                        'min'
                    [Var Names]
                        'self'
                        'max_fold_seconds'
                        't'
                        'local'
                        'a'
                        'u1'
                        't1'
                        'u2'
                        'b'
                        't2'
                    [Free Vars]
                    [Cell Vars]
                        'epoch'
                    [Constants]
                        'Return integer POSIX timestamp.'
                        1970
                        1
                        86400
                        0
                        [Code]
                            File Name: datetime.py
                            Object Name: local
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 7
                            Stack Size: 7
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                '_time'
                                'localtime'
                                'datetime'
                                'timedelta'
                            [Var Names]
                                'u'
                                'y'
                                'm'
                                'd'
                                'hh'
                                'mm'
                                'ss'
                            [Free Vars]
                                'epoch'
                            [Cell Vars]
                            [Constants]
                                None
                                6
                                0
                                1
                            [Disassembly]
                                0       LOAD_GLOBAL                     0: _time
                                2       LOAD_METHOD                     1: localtime
                                4       LOAD_FAST                       0: u
                                6       CALL_METHOD                     1
                                8       LOAD_CONST                      0: None
                                10      LOAD_CONST                      1: 6
                                12      BUILD_SLICE                     2
                                14      BINARY_SUBSCR                   
                                16      UNPACK_SEQUENCE                 6
                                18      STORE_FAST                      1: y
                                20      STORE_FAST                      2: m
                                22      STORE_FAST                      3: d
                                24      STORE_FAST                      4: hh
                                26      STORE_FAST                      5: mm
                                28      STORE_FAST                      6: ss
                                30      LOAD_GLOBAL                     2: datetime
                                32      LOAD_FAST                       1: y
                                34      LOAD_FAST                       2: m
                                36      LOAD_FAST                       3: d
                                38      LOAD_FAST                       4: hh
                                40      LOAD_FAST                       5: mm
                                42      LOAD_FAST                       6: ss
                                44      CALL_FUNCTION                   6
                                46      LOAD_DEREF                      0: epoch
                                48      BINARY_SUBTRACT                 
                                50      LOAD_GLOBAL                     3: timedelta
                                52      LOAD_CONST                      2: 0
                                54      LOAD_CONST                      3: 1
                                56      CALL_FUNCTION                   2
                                58      BINARY_FLOOR_DIVIDE             
                                60      RETURN_VALUE                    
                        'datetime._mktime.<locals>.local'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: datetime
                        2       LOAD_CONST                      1: 1970
                        4       LOAD_CONST                      2: 1
                        6       LOAD_CONST                      2: 1
                        8       CALL_FUNCTION                   3
                        10      STORE_DEREF                     0: epoch
                        12      LOAD_CONST                      3: 86400
                        14      STORE_FAST                      1: max_fold_seconds
                        16      LOAD_FAST                       0: self
                        18      LOAD_DEREF                      0: epoch
                        20      BINARY_SUBTRACT                 
                        22      LOAD_GLOBAL                     1: timedelta
                        24      LOAD_CONST                      4: 0
                        26      LOAD_CONST                      2: 1
                        28      CALL_FUNCTION                   2
                        30      BINARY_FLOOR_DIVIDE             
                        32      STORE_FAST                      2: t
                        34      LOAD_CLOSURE                    0: epoch
                        36      BUILD_TUPLE                     1
                        38      LOAD_CONST                      5: <CODE> local
                        40      LOAD_CONST                      6: 'datetime._mktime.<locals>.local'
                        42      MAKE_FUNCTION                   8
                        44      STORE_FAST                      3: local
                        46      LOAD_FAST                       3: local
                        48      LOAD_FAST                       2: t
                        50      CALL_FUNCTION                   1
                        52      LOAD_FAST                       2: t
                        54      BINARY_SUBTRACT                 
                        56      STORE_FAST                      4: a
                        58      LOAD_FAST                       2: t
                        60      LOAD_FAST                       4: a
                        62      BINARY_SUBTRACT                 
                        64      STORE_FAST                      5: u1
                        66      LOAD_FAST                       3: local
                        68      LOAD_FAST                       5: u1
                        70      CALL_FUNCTION                   1
                        72      STORE_FAST                      6: t1
                        74      LOAD_FAST                       6: t1
                        76      LOAD_FAST                       2: t
                        78      COMPARE_OP                      2 (==)
                        80      POP_JUMP_IF_FALSE               64 (to 128)
                        82      LOAD_FAST                       5: u1
                        84      LOAD_FAST                       1: max_fold_seconds
                        86      UNARY_NEGATIVE                  
                        88      LOAD_FAST                       1: max_fold_seconds
                        90      BUILD_TUPLE                     2
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       2: fold
                        96      BINARY_SUBSCR                   
                        98      BINARY_ADD                      
                        100     STORE_FAST                      7: u2
                        102     LOAD_FAST                       3: local
                        104     LOAD_FAST                       7: u2
                        106     CALL_FUNCTION                   1
                        108     LOAD_FAST                       7: u2
                        110     BINARY_SUBTRACT                 
                        112     STORE_FAST                      8: b
                        114     LOAD_FAST                       4: a
                        116     LOAD_FAST                       8: b
                        118     COMPARE_OP                      2 (==)
                        120     POP_JUMP_IF_FALSE               63 (to 126)
                        122     LOAD_FAST                       5: u1
                        124     RETURN_VALUE                    
                        126     JUMP_FORWARD                    10 (to 148)
                        128     LOAD_FAST                       6: t1
                        130     LOAD_FAST                       5: u1
                        132     BINARY_SUBTRACT                 
                        134     STORE_FAST                      8: b
                        136     LOAD_FAST                       4: a
                        138     LOAD_FAST                       8: b
                        140     COMPARE_OP                      3 (!=)
                        142     POP_JUMP_IF_TRUE                74 (to 148)
                        144     LOAD_ASSERTION_ERROR            
                        146     RAISE_VARARGS                   1
                        148     LOAD_FAST                       2: t
                        150     LOAD_FAST                       8: b
                        152     BINARY_SUBTRACT                 
                        154     STORE_FAST                      7: u2
                        156     LOAD_FAST                       3: local
                        158     LOAD_FAST                       7: u2
                        160     CALL_FUNCTION                   1
                        162     STORE_FAST                      9: t2
                        164     LOAD_FAST                       9: t2
                        166     LOAD_FAST                       2: t
                        168     COMPARE_OP                      2 (==)
                        170     POP_JUMP_IF_FALSE               88 (to 176)
                        172     LOAD_FAST                       7: u2
                        174     RETURN_VALUE                    
                        176     LOAD_FAST                       6: t1
                        178     LOAD_FAST                       2: t
                        180     COMPARE_OP                      2 (==)
                        182     POP_JUMP_IF_FALSE               94 (to 188)
                        184     LOAD_FAST                       5: u1
                        186     RETURN_VALUE                    
                        188     LOAD_GLOBAL                     3: max
                        190     LOAD_GLOBAL                     4: min
                        192     BUILD_TUPLE                     2
                        194     LOAD_FAST                       0: self
                        196     LOAD_ATTR                       2: fold
                        198     BINARY_SUBSCR                   
                        200     LOAD_FAST                       5: u1
                        202     LOAD_FAST                       7: u2
                        204     CALL_FUNCTION                   2
                        206     RETURN_VALUE                    
                'datetime._mktime'
                [Code]
                    File Name: datetime.py
                    Object Name: timestamp
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        '_mktime'
                        'microsecond'
                        '_EPOCH'
                        'total_seconds'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return POSIX timestamp as float'
                        None
                        1e+06
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               16 (to 32)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _mktime
                        14      CALL_METHOD                     0
                        16      STORE_FAST                      1: s
                        18      LOAD_FAST                       1: s
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: microsecond
                        24      LOAD_CONST                      2: 1e+06
                        26      BINARY_TRUE_DIVIDE              
                        28      BINARY_ADD                      
                        30      RETURN_VALUE                    
                        32      LOAD_FAST                       0: self
                        34      LOAD_GLOBAL                     3: _EPOCH
                        36      BINARY_SUBTRACT                 
                        38      LOAD_METHOD                     4: total_seconds
                        40      CALL_METHOD                     0
                        42      RETURN_VALUE                    
                'datetime.timestamp'
                [Code]
                    File Name: datetime.py
                    Object Name: utctimetuple
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'utcoffset'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        '_build_struct_time'
                    [Var Names]
                        'self'
                        'offset'
                        'y'
                        'm'
                        'd'
                        'hh'
                        'mm'
                        'ss'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return UTC time tuple compatible with time.gmtime().'
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: utcoffset
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: offset
                        8       LOAD_FAST                       1: offset
                        10      POP_JUMP_IF_FALSE               10 (to 20)
                        12      LOAD_FAST                       0: self
                        14      LOAD_FAST                       1: offset
                        16      INPLACE_SUBTRACT                
                        18      STORE_FAST                      0: self
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: year
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       2: month
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: day
                        32      ROT_THREE                       
                        34      ROT_TWO                         
                        36      STORE_FAST                      2: y
                        38      STORE_FAST                      3: m
                        40      STORE_FAST                      4: d
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       4: hour
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       5: minute
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       6: second
                        54      ROT_THREE                       
                        56      ROT_TWO                         
                        58      STORE_FAST                      5: hh
                        60      STORE_FAST                      6: mm
                        62      STORE_FAST                      7: ss
                        64      LOAD_GLOBAL                     7: _build_struct_time
                        66      LOAD_FAST                       2: y
                        68      LOAD_FAST                       3: m
                        70      LOAD_FAST                       4: d
                        72      LOAD_FAST                       5: hh
                        74      LOAD_FAST                       6: mm
                        76      LOAD_FAST                       7: ss
                        78      LOAD_CONST                      1: 0
                        80      CALL_FUNCTION                   7
                        82      RETURN_VALUE                    
                'datetime.utctimetuple'
                [Code]
                    File Name: datetime.py
                    Object Name: date
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'date'
                        '_year'
                        '_month'
                        '_day'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the date part.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: date
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _year
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _month
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: _day
                        14      CALL_FUNCTION                   3
                        16      RETURN_VALUE                    
                'datetime.date'
                [Code]
                    File Name: datetime.py
                    Object Name: time
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'time'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'fold'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the time part, with tzinfo None.'
                        (
                            'fold'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: time
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: hour
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: minute
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: second
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       4: microsecond
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       5: fold
                        22      LOAD_CONST                      1: ('fold',)
                        24      CALL_FUNCTION_KW                5
                        26      RETURN_VALUE                    
                'datetime.time'
                [Code]
                    File Name: datetime.py
                    Object Name: timetz
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'time'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        '_tzinfo'
                        'fold'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the time part, with same tzinfo.'
                        (
                            'fold'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: time
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: hour
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: minute
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: second
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       4: microsecond
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       5: _tzinfo
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       6: fold
                        26      LOAD_CONST                      1: ('fold',)
                        28      CALL_FUNCTION_KW                6
                        30      RETURN_VALUE                    
                'datetime.timetz'
                [Code]
                    File Name: datetime.py
                    Object Name: replace
                    Arg Count: 9
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 10
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        'fold'
                        'type'
                    [Var Names]
                        'self'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        'microsecond'
                        'tzinfo'
                        'fold'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new datetime with new values for the specified fields.'
                        None
                        True
                        (
                            'fold'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: year
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: year
                        12      STORE_FAST                      1: year
                        14      LOAD_FAST                       2: month
                        16      LOAD_CONST                      1: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               14 (to 28)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       1: month
                        26      STORE_FAST                      2: month
                        28      LOAD_FAST                       3: day
                        30      LOAD_CONST                      1: None
                        32      IS_OP                           0 (is)
                        34      POP_JUMP_IF_FALSE               21 (to 42)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: day
                        40      STORE_FAST                      3: day
                        42      LOAD_FAST                       4: hour
                        44      LOAD_CONST                      1: None
                        46      IS_OP                           0 (is)
                        48      POP_JUMP_IF_FALSE               28 (to 56)
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       3: hour
                        54      STORE_FAST                      4: hour
                        56      LOAD_FAST                       5: minute
                        58      LOAD_CONST                      1: None
                        60      IS_OP                           0 (is)
                        62      POP_JUMP_IF_FALSE               35 (to 70)
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       4: minute
                        68      STORE_FAST                      5: minute
                        70      LOAD_FAST                       6: second
                        72      LOAD_CONST                      1: None
                        74      IS_OP                           0 (is)
                        76      POP_JUMP_IF_FALSE               42 (to 84)
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       5: second
                        82      STORE_FAST                      6: second
                        84      LOAD_FAST                       7: microsecond
                        86      LOAD_CONST                      1: None
                        88      IS_OP                           0 (is)
                        90      POP_JUMP_IF_FALSE               49 (to 98)
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       6: microsecond
                        96      STORE_FAST                      7: microsecond
                        98      LOAD_FAST                       8: tzinfo
                        100     LOAD_CONST                      2: True
                        102     IS_OP                           0 (is)
                        104     POP_JUMP_IF_FALSE               56 (to 112)
                        106     LOAD_FAST                       0: self
                        108     LOAD_ATTR                       7: tzinfo
                        110     STORE_FAST                      8: tzinfo
                        112     LOAD_FAST                       9: fold
                        114     LOAD_CONST                      1: None
                        116     IS_OP                           0 (is)
                        118     POP_JUMP_IF_FALSE               63 (to 126)
                        120     LOAD_FAST                       0: self
                        122     LOAD_ATTR                       8: fold
                        124     STORE_FAST                      9: fold
                        126     LOAD_GLOBAL                     9: type
                        128     LOAD_FAST                       0: self
                        130     CALL_FUNCTION                   1
                        132     LOAD_FAST                       1: year
                        134     LOAD_FAST                       2: month
                        136     LOAD_FAST                       3: day
                        138     LOAD_FAST                       4: hour
                        140     LOAD_FAST                       5: minute
                        142     LOAD_FAST                       6: second
                        144     LOAD_FAST                       7: microsecond
                        146     LOAD_FAST                       8: tzinfo
                        148     LOAD_FAST                       9: fold
                        150     LOAD_CONST                      3: ('fold',)
                        152     CALL_FUNCTION_KW                9
                        154     RETURN_VALUE                    
                'datetime.replace'
                [Code]
                    File Name: datetime.py
                    Object Name: _local_timezone
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'tzinfo'
                        '_mktime'
                        '_EPOCH'
                        'timedelta'
                        '_time'
                        'localtime'
                        'datetime'
                        'tm_gmtoff'
                        'tm_zone'
                        'timezone'
                    [Var Names]
                        'self'
                        'ts'
                        'localtm'
                        'local'
                        'gmtoff'
                        'zone'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                        (
                            'seconds'
                        )
                        6
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: tzinfo
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _mktime
                        14      CALL_METHOD                     0
                        16      STORE_FAST                      1: ts
                        18      JUMP_FORWARD                    9 (to 38)
                        20      LOAD_FAST                       0: self
                        22      LOAD_GLOBAL                     2: _EPOCH
                        24      BINARY_SUBTRACT                 
                        26      LOAD_GLOBAL                     3: timedelta
                        28      LOAD_CONST                      1: 1
                        30      LOAD_CONST                      2: ('seconds',)
                        32      CALL_FUNCTION_KW                1
                        34      BINARY_FLOOR_DIVIDE             
                        36      STORE_FAST                      1: ts
                        38      LOAD_GLOBAL                     4: _time
                        40      LOAD_METHOD                     5: localtime
                        42      LOAD_FAST                       1: ts
                        44      CALL_METHOD                     1
                        46      STORE_FAST                      2: localtm
                        48      LOAD_GLOBAL                     6: datetime
                        50      LOAD_FAST                       2: localtm
                        52      LOAD_CONST                      0: None
                        54      LOAD_CONST                      3: 6
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      CALL_FUNCTION_EX                0
                        62      STORE_FAST                      3: local
                        64      LOAD_FAST                       2: localtm
                        66      LOAD_ATTR                       7: tm_gmtoff
                        68      STORE_FAST                      4: gmtoff
                        70      LOAD_FAST                       2: localtm
                        72      LOAD_ATTR                       8: tm_zone
                        74      STORE_FAST                      5: zone
                        76      LOAD_GLOBAL                     9: timezone
                        78      LOAD_GLOBAL                     3: timedelta
                        80      LOAD_FAST                       4: gmtoff
                        82      LOAD_CONST                      2: ('seconds',)
                        84      CALL_FUNCTION_KW                1
                        86      LOAD_FAST                       5: zone
                        88      CALL_FUNCTION                   2
                        90      RETURN_VALUE                    
                'datetime._local_timezone'
                [Code]
                    File Name: datetime.py
                    Object Name: astimezone
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_local_timezone'
                        'isinstance'
                        'tzinfo'
                        'TypeError'
                        'utcoffset'
                        'replace'
                        'fromutc'
                    [Var Names]
                        'self'
                        'tz'
                        'mytz'
                        'myoffset'
                        'utc'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'tz argument must be an instance of tzinfo'
                        (
                            'tzinfo'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: tz
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               9 (to 18)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: _local_timezone
                        12      CALL_METHOD                     0
                        14      STORE_FAST                      1: tz
                        16      JUMP_FORWARD                    9 (to 36)
                        18      LOAD_GLOBAL                     1: isinstance
                        20      LOAD_FAST                       1: tz
                        22      LOAD_GLOBAL                     2: tzinfo
                        24      CALL_FUNCTION                   2
                        26      POP_JUMP_IF_TRUE                18 (to 36)
                        28      LOAD_GLOBAL                     3: TypeError
                        30      LOAD_CONST                      1: 'tz argument must be an instance of tzinfo'
                        32      CALL_FUNCTION                   1
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: tzinfo
                        40      STORE_FAST                      2: mytz
                        42      LOAD_FAST                       2: mytz
                        44      LOAD_CONST                      0: None
                        46      IS_OP                           0 (is)
                        48      POP_JUMP_IF_FALSE               35 (to 70)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     0: _local_timezone
                        54      CALL_METHOD                     0
                        56      STORE_FAST                      2: mytz
                        58      LOAD_FAST                       2: mytz
                        60      LOAD_METHOD                     4: utcoffset
                        62      LOAD_FAST                       0: self
                        64      CALL_METHOD                     1
                        66      STORE_FAST                      3: myoffset
                        68      JUMP_FORWARD                    22 (to 114)
                        70      LOAD_FAST                       2: mytz
                        72      LOAD_METHOD                     4: utcoffset
                        74      LOAD_FAST                       0: self
                        76      CALL_METHOD                     1
                        78      STORE_FAST                      3: myoffset
                        80      LOAD_FAST                       3: myoffset
                        82      LOAD_CONST                      0: None
                        84      IS_OP                           0 (is)
                        86      POP_JUMP_IF_FALSE               57 (to 114)
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       5: replace
                        92      LOAD_CONST                      0: None
                        94      LOAD_CONST                      2: ('tzinfo',)
                        96      CALL_FUNCTION_KW                1
                        98      LOAD_METHOD                     0: _local_timezone
                        100     CALL_METHOD                     0
                        102     STORE_FAST                      2: mytz
                        104     LOAD_FAST                       2: mytz
                        106     LOAD_METHOD                     4: utcoffset
                        108     LOAD_FAST                       0: self
                        110     CALL_METHOD                     1
                        112     STORE_FAST                      3: myoffset
                        114     LOAD_FAST                       1: tz
                        116     LOAD_FAST                       2: mytz
                        118     IS_OP                           0 (is)
                        120     POP_JUMP_IF_FALSE               63 (to 126)
                        122     LOAD_FAST                       0: self
                        124     RETURN_VALUE                    
                        126     LOAD_FAST                       0: self
                        128     LOAD_FAST                       3: myoffset
                        130     BINARY_SUBTRACT                 
                        132     LOAD_ATTR                       5: replace
                        134     LOAD_FAST                       1: tz
                        136     LOAD_CONST                      2: ('tzinfo',)
                        138     CALL_FUNCTION_KW                1
                        140     STORE_FAST                      4: utc
                        142     LOAD_FAST                       1: tz
                        144     LOAD_METHOD                     6: fromutc
                        146     LOAD_FAST                       4: utc
                        148     CALL_METHOD                     1
                        150     RETURN_VALUE                    
                'datetime.astimezone'
                [Code]
                    File Name: datetime.py
                    Object Name: ctime
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'toordinal'
                        '_DAYNAMES'
                        '_MONTHNAMES'
                        '_month'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_year'
                    [Var Names]
                        'self'
                        'weekday'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return ctime() style string.'
                        7
                        '%s %s %2d %02d:%02d:%02d %04d'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: toordinal
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 7
                        8       BINARY_MODULO                   
                        10      JUMP_IF_TRUE_OR_POP             7 (to 14)
                        12      LOAD_CONST                      1: 7
                        14      STORE_FAST                      1: weekday
                        16      LOAD_CONST                      2: '%s %s %2d %02d:%02d:%02d %04d'
                        18      LOAD_GLOBAL                     1: _DAYNAMES
                        20      LOAD_FAST                       1: weekday
                        22      BINARY_SUBSCR                   
                        24      LOAD_GLOBAL                     2: _MONTHNAMES
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       3: _month
                        30      BINARY_SUBSCR                   
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _day
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       5: _hour
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       6: _minute
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       7: _second
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       8: _year
                        52      BUILD_TUPLE                     7
                        54      BINARY_MODULO                   
                        56      RETURN_VALUE                    
                'datetime.ctime'
                'T'
                'auto'
                [Code]
                    File Name: datetime.py
                    Object Name: isoformat
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                        '_month'
                        '_day'
                        '_format_time'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        'utcoffset'
                        '_format_offset'
                    [Var Names]
                        'self'
                        'sep'
                        'timespec'
                        's'
                        'off'
                        'tz'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the time formatted according to ISO.\n\n        The full format looks like 'YYYY-MM-DD HH:MM:SS.mmmmmm'.\n        By default, the fractional part is omitted if self.microsecond == 0.\n\n        If self.tzinfo is not None, the UTC offset is also attached, giving\n        giving a full format of 'YYYY-MM-DD HH:MM:SS.mmmmmm+HH:MM'.\n\n        Optional argument sep specifies the separator between date and\n        time, default 'T'.\n\n        The optional argument timespec specifies the number of additional\n        terms of the time to include. Valid options are 'auto', 'hours',\n        'minutes', 'seconds', 'milliseconds' and 'microseconds'.\n        "
                        '%04d-%02d-%02d%c'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%04d-%02d-%02d%c'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _year
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _month
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _day
                        14      LOAD_FAST                       1: sep
                        16      BUILD_TUPLE                     4
                        18      BINARY_MODULO                   
                        20      LOAD_GLOBAL                     3: _format_time
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: _hour
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       5: _minute
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       6: _second
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       7: _microsecond
                        38      LOAD_FAST                       2: timespec
                        40      CALL_FUNCTION                   5
                        42      BINARY_ADD                      
                        44      STORE_FAST                      3: s
                        46      LOAD_FAST                       0: self
                        48      LOAD_METHOD                     8: utcoffset
                        50      CALL_METHOD                     0
                        52      STORE_FAST                      4: off
                        54      LOAD_GLOBAL                     9: _format_offset
                        56      LOAD_FAST                       4: off
                        58      CALL_FUNCTION                   1
                        60      STORE_FAST                      5: tz
                        62      LOAD_FAST                       5: tz
                        64      POP_JUMP_IF_FALSE               37 (to 74)
                        66      LOAD_FAST                       3: s
                        68      LOAD_FAST                       5: tz
                        70      INPLACE_ADD                     
                        72      STORE_FAST                      3: s
                        74      LOAD_FAST                       3: s
                        76      RETURN_VALUE                    
                'datetime.isoformat'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_year'
                        '_month'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        '__class__'
                        '__module__'
                        '__qualname__'
                        'join'
                        'map'
                        'str'
                        '_tzinfo'
                        '_fold'
                    [Var Names]
                        'self'
                        'L'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convert to formal string, for repr().'
                        -1
                        0
                        '%s.%s(%s)'
                        ', '
                        None
                        ')'
                        ', tzinfo=%r'
                        ', fold=1)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _year
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _month
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: _day
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _hour
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       4: _minute
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       5: _second
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       6: _microsecond
                        28      BUILD_LIST                      7
                        30      STORE_FAST                      1: L
                        32      LOAD_FAST                       1: L
                        34      LOAD_CONST                      1: -1
                        36      BINARY_SUBSCR                   
                        38      LOAD_CONST                      2: 0
                        40      COMPARE_OP                      2 (==)
                        42      POP_JUMP_IF_FALSE               25 (to 50)
                        44      LOAD_FAST                       1: L
                        46      LOAD_CONST                      1: -1
                        48      DELETE_SUBSCR                   
                        50      LOAD_FAST                       1: L
                        52      LOAD_CONST                      1: -1
                        54      BINARY_SUBSCR                   
                        56      LOAD_CONST                      2: 0
                        58      COMPARE_OP                      2 (==)
                        60      POP_JUMP_IF_FALSE               34 (to 68)
                        62      LOAD_FAST                       1: L
                        64      LOAD_CONST                      1: -1
                        66      DELETE_SUBSCR                   
                        68      LOAD_CONST                      3: '%s.%s(%s)'
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       7: __class__
                        74      LOAD_ATTR                       8: __module__
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       7: __class__
                        80      LOAD_ATTR                       9: __qualname__
                        82      LOAD_CONST                      4: ', '
                        84      LOAD_METHOD                     10: join
                        86      LOAD_GLOBAL                     11: map
                        88      LOAD_GLOBAL                     12: str
                        90      LOAD_FAST                       1: L
                        92      CALL_FUNCTION                   2
                        94      CALL_METHOD                     1
                        96      BUILD_TUPLE                     3
                        98      BINARY_MODULO                   
                        100     STORE_FAST                      2: s
                        102     LOAD_FAST                       0: self
                        104     LOAD_ATTR                       13: _tzinfo
                        106     LOAD_CONST                      5: None
                        108     IS_OP                           1 (is not)
                        110     POP_JUMP_IF_FALSE               79 (to 158)
                        112     LOAD_FAST                       2: s
                        114     LOAD_CONST                      1: -1
                        116     LOAD_CONST                      5: None
                        118     BUILD_SLICE                     2
                        120     BINARY_SUBSCR                   
                        122     LOAD_CONST                      6: ')'
                        124     COMPARE_OP                      2 (==)
                        126     POP_JUMP_IF_TRUE                66 (to 132)
                        128     LOAD_ASSERTION_ERROR            
                        130     RAISE_VARARGS                   1
                        132     LOAD_FAST                       2: s
                        134     LOAD_CONST                      5: None
                        136     LOAD_CONST                      1: -1
                        138     BUILD_SLICE                     2
                        140     BINARY_SUBSCR                   
                        142     LOAD_CONST                      7: ', tzinfo=%r'
                        144     LOAD_FAST                       0: self
                        146     LOAD_ATTR                       13: _tzinfo
                        148     BINARY_MODULO                   
                        150     BINARY_ADD                      
                        152     LOAD_CONST                      6: ')'
                        154     BINARY_ADD                      
                        156     STORE_FAST                      2: s
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       14: _fold
                        162     POP_JUMP_IF_FALSE               100 (to 200)
                        164     LOAD_FAST                       2: s
                        166     LOAD_CONST                      1: -1
                        168     LOAD_CONST                      5: None
                        170     BUILD_SLICE                     2
                        172     BINARY_SUBSCR                   
                        174     LOAD_CONST                      6: ')'
                        176     COMPARE_OP                      2 (==)
                        178     POP_JUMP_IF_TRUE                92 (to 184)
                        180     LOAD_ASSERTION_ERROR            
                        182     RAISE_VARARGS                   1
                        184     LOAD_FAST                       2: s
                        186     LOAD_CONST                      5: None
                        188     LOAD_CONST                      1: -1
                        190     BUILD_SLICE                     2
                        192     BINARY_SUBSCR                   
                        194     LOAD_CONST                      8: ', fold=1)'
                        196     BINARY_ADD                      
                        198     STORE_FAST                      2: s
                        200     LOAD_FAST                       2: s
                        202     RETURN_VALUE                    
                'datetime.__repr__'
                [Code]
                    File Name: datetime.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isoformat'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convert to string, for str().'
                        ' '
                        (
                            'sep'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: isoformat
                        4       LOAD_CONST                      1: ' '
                        6       LOAD_CONST                      2: ('sep',)
                        8       CALL_FUNCTION_KW                1
                        10      RETURN_VALUE                    
                'datetime.__str__'
                [Code]
                    File Name: datetime.py
                    Object Name: strptime
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_strptime'
                        '_strptime_datetime'
                    [Var Names]
                        'cls'
                        'date_string'
                        'format'
                        '_strptime'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'string, format -> new datetime parsed from a string (like time.strptime()).'
                        0
                        None
                    [Disassembly]
                        0       LOAD_CONST                      1: 0
                        2       LOAD_CONST                      2: None
                        4       IMPORT_NAME                     0: _strptime
                        6       STORE_FAST                      3: _strptime
                        8       LOAD_FAST                       3: _strptime
                        10      LOAD_METHOD                     1: _strptime_datetime
                        12      LOAD_FAST                       0: cls
                        14      LOAD_FAST                       1: date_string
                        16      LOAD_FAST                       2: format
                        18      CALL_METHOD                     3
                        20      RETURN_VALUE                    
                'datetime.strptime'
                [Code]
                    File Name: datetime.py
                    Object Name: utcoffset
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'utcoffset'
                        '_check_utc_offset'
                    [Var Names]
                        'self'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the timezone offset as timedelta positive east of UTC (negative west of\n        UTC).'
                        None
                        'utcoffset'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: utcoffset
                        20      LOAD_FAST                       0: self
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: offset
                        26      LOAD_GLOBAL                     2: _check_utc_offset
                        28      LOAD_CONST                      2: 'utcoffset'
                        30      LOAD_FAST                       1: offset
                        32      CALL_FUNCTION                   2
                        34      POP_TOP                         
                        36      LOAD_FAST                       1: offset
                        38      RETURN_VALUE                    
                'datetime.utcoffset'
                [Code]
                    File Name: datetime.py
                    Object Name: tzname
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'tzname'
                        '_check_tzname'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the timezone name.\n\n        Note that the name is 100% informational -- there\'s no requirement that\n        it mean anything in particular. For example, "GMT", "UTC", "-500",\n        "-5:00", "EDT", "US/Eastern", "America/New York" are all valid replies.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: tzname
                        20      LOAD_FAST                       0: self
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: name
                        26      LOAD_GLOBAL                     2: _check_tzname
                        28      LOAD_FAST                       1: name
                        30      CALL_FUNCTION                   1
                        32      POP_TOP                         
                        34      LOAD_FAST                       1: name
                        36      RETURN_VALUE                    
                'datetime.tzname'
                [Code]
                    File Name: datetime.py
                    Object Name: dst
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_tzinfo'
                        'dst'
                        '_check_utc_offset'
                    [Var Names]
                        'self'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return 0 if DST is not in effect, or the DST offset (as timedelta\n        positive eastward) if DST is in effect.\n\n        This is purely informational; the DST offset has already been added to\n        the UTC offset returned by utcoffset() if applicable, so there's no\n        need to consult dst() unless you're interested in displaying the DST\n        info.\n        "
                        None
                        'dst'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _tzinfo
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: _tzinfo
                        18      LOAD_METHOD                     1: dst
                        20      LOAD_FAST                       0: self
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      1: offset
                        26      LOAD_GLOBAL                     2: _check_utc_offset
                        28      LOAD_CONST                      2: 'dst'
                        30      LOAD_FAST                       1: offset
                        32      CALL_FUNCTION                   2
                        34      POP_TOP                         
                        36      LOAD_FAST                       1: offset
                        38      RETURN_VALUE                    
                'datetime.dst'
                [Code]
                    File Name: datetime.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_cmp'
                        'date'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        (
                            'allow_mixed'
                        )
                        0
                        False
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _cmp
                        14      LOAD_FAST                       1: other
                        16      LOAD_CONST                      1: True
                        18      LOAD_CONST                      2: ('allow_mixed',)
                        20      CALL_FUNCTION_KW                2
                        22      LOAD_CONST                      3: 0
                        24      COMPARE_OP                      2 (==)
                        26      RETURN_VALUE                    
                        28      LOAD_GLOBAL                     0: isinstance
                        30      LOAD_FAST                       1: other
                        32      LOAD_GLOBAL                     3: date
                        34      CALL_FUNCTION                   2
                        36      POP_JUMP_IF_TRUE                21 (to 42)
                        38      LOAD_GLOBAL                     4: NotImplemented
                        40      RETURN_VALUE                    
                        42      LOAD_CONST                      4: False
                        44      RETURN_VALUE                    
                'datetime.__eq__'
                [Code]
                    File Name: datetime.py
                    Object Name: __le__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_cmp'
                        'date'
                        'NotImplemented'
                        '_cmperror'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      1 (<=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     0: isinstance
                        26      LOAD_FAST                       1: other
                        28      LOAD_GLOBAL                     3: date
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_TRUE                19 (to 38)
                        34      LOAD_GLOBAL                     4: NotImplemented
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     5: _cmperror
                        40      LOAD_FAST                       0: self
                        42      LOAD_FAST                       1: other
                        44      CALL_FUNCTION                   2
                        46      POP_TOP                         
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'datetime.__le__'
                [Code]
                    File Name: datetime.py
                    Object Name: __lt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_cmp'
                        'date'
                        'NotImplemented'
                        '_cmperror'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      0 (<)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     0: isinstance
                        26      LOAD_FAST                       1: other
                        28      LOAD_GLOBAL                     3: date
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_TRUE                19 (to 38)
                        34      LOAD_GLOBAL                     4: NotImplemented
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     5: _cmperror
                        40      LOAD_FAST                       0: self
                        42      LOAD_FAST                       1: other
                        44      CALL_FUNCTION                   2
                        46      POP_TOP                         
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'datetime.__lt__'
                [Code]
                    File Name: datetime.py
                    Object Name: __ge__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_cmp'
                        'date'
                        'NotImplemented'
                        '_cmperror'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      5 (>=)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     0: isinstance
                        26      LOAD_FAST                       1: other
                        28      LOAD_GLOBAL                     3: date
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_TRUE                19 (to 38)
                        34      LOAD_GLOBAL                     4: NotImplemented
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     5: _cmperror
                        40      LOAD_FAST                       0: self
                        42      LOAD_FAST                       1: other
                        44      CALL_FUNCTION                   2
                        46      POP_TOP                         
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'datetime.__ge__'
                [Code]
                    File Name: datetime.py
                    Object Name: __gt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_cmp'
                        'date'
                        'NotImplemented'
                        '_cmperror'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: _cmp
                        14      LOAD_FAST                       1: other
                        16      CALL_METHOD                     1
                        18      LOAD_CONST                      1: 0
                        20      COMPARE_OP                      4 (>)
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     0: isinstance
                        26      LOAD_FAST                       1: other
                        28      LOAD_GLOBAL                     3: date
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_TRUE                19 (to 38)
                        34      LOAD_GLOBAL                     4: NotImplemented
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     5: _cmperror
                        40      LOAD_FAST                       0: self
                        42      LOAD_FAST                       1: other
                        44      CALL_FUNCTION                   2
                        46      POP_TOP                         
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'datetime.__gt__'
                False
                [Code]
                    File Name: datetime.py
                    Object Name: _cmp
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_tzinfo'
                        'utcoffset'
                        'replace'
                        'fold'
                        '_cmp'
                        '_year'
                        '_month'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        'TypeError'
                        'days'
                    [Var Names]
                        'self'
                        'other'
                        'allow_mixed'
                        'mytz'
                        'ottz'
                        'myoff'
                        'otoff'
                        'base_compare'
                        'diff'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        (
                            'fold'
                        )
                        2
                        'cannot compare naive and aware datetimes'
                        0
                        -1
                        1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_ASSERTION_ERROR            
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _tzinfo
                        18      STORE_FAST                      3: mytz
                        20      LOAD_FAST                       1: other
                        22      LOAD_ATTR                       2: _tzinfo
                        24      STORE_FAST                      4: ottz
                        26      LOAD_CONST                      0: None
                        28      DUP_TOP                         
                        30      STORE_FAST                      5: myoff
                        32      STORE_FAST                      6: otoff
                        34      LOAD_FAST                       3: mytz
                        36      LOAD_FAST                       4: ottz
                        38      IS_OP                           0 (is)
                        40      POP_JUMP_IF_FALSE               24 (to 48)
                        42      LOAD_CONST                      1: True
                        44      STORE_FAST                      7: base_compare
                        46      JUMP_FORWARD                    42 (to 132)
                        48      LOAD_FAST                       0: self
                        50      LOAD_METHOD                     3: utcoffset
                        52      CALL_METHOD                     0
                        54      STORE_FAST                      5: myoff
                        56      LOAD_FAST                       1: other
                        58      LOAD_METHOD                     3: utcoffset
                        60      CALL_METHOD                     0
                        62      STORE_FAST                      6: otoff
                        64      LOAD_FAST                       2: allow_mixed
                        66      POP_JUMP_IF_FALSE               62 (to 124)
                        68      LOAD_FAST                       5: myoff
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       4: replace
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       5: fold
                        78      UNARY_NOT                       
                        80      LOAD_CONST                      2: ('fold',)
                        82      CALL_FUNCTION_KW                1
                        84      LOAD_METHOD                     3: utcoffset
                        86      CALL_METHOD                     0
                        88      COMPARE_OP                      3 (!=)
                        90      POP_JUMP_IF_FALSE               48 (to 96)
                        92      LOAD_CONST                      3: 2
                        94      RETURN_VALUE                    
                        96      LOAD_FAST                       6: otoff
                        98      LOAD_FAST                       1: other
                        100     LOAD_ATTR                       4: replace
                        102     LOAD_FAST                       1: other
                        104     LOAD_ATTR                       5: fold
                        106     UNARY_NOT                       
                        108     LOAD_CONST                      2: ('fold',)
                        110     CALL_FUNCTION_KW                1
                        112     LOAD_METHOD                     3: utcoffset
                        114     CALL_METHOD                     0
                        116     COMPARE_OP                      3 (!=)
                        118     POP_JUMP_IF_FALSE               62 (to 124)
                        120     LOAD_CONST                      3: 2
                        122     RETURN_VALUE                    
                        124     LOAD_FAST                       5: myoff
                        126     LOAD_FAST                       6: otoff
                        128     COMPARE_OP                      2 (==)
                        130     STORE_FAST                      7: base_compare
                        132     LOAD_FAST                       7: base_compare
                        134     POP_JUMP_IF_FALSE               101 (to 202)
                        136     LOAD_GLOBAL                     6: _cmp
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       7: _year
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       8: _month
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       9: _day
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       10: _hour
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       11: _minute
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       12: _second
                        162     LOAD_FAST                       0: self
                        164     LOAD_ATTR                       13: _microsecond
                        166     BUILD_TUPLE                     7
                        168     LOAD_FAST                       1: other
                        170     LOAD_ATTR                       7: _year
                        172     LOAD_FAST                       1: other
                        174     LOAD_ATTR                       8: _month
                        176     LOAD_FAST                       1: other
                        178     LOAD_ATTR                       9: _day
                        180     LOAD_FAST                       1: other
                        182     LOAD_ATTR                       10: _hour
                        184     LOAD_FAST                       1: other
                        186     LOAD_ATTR                       11: _minute
                        188     LOAD_FAST                       1: other
                        190     LOAD_ATTR                       12: _second
                        192     LOAD_FAST                       1: other
                        194     LOAD_ATTR                       13: _microsecond
                        196     BUILD_TUPLE                     7
                        198     CALL_FUNCTION                   2
                        200     RETURN_VALUE                    
                        202     LOAD_FAST                       5: myoff
                        204     LOAD_CONST                      0: None
                        206     IS_OP                           0 (is)
                        208     POP_JUMP_IF_TRUE                109 (to 218)
                        210     LOAD_FAST                       6: otoff
                        212     LOAD_CONST                      0: None
                        214     IS_OP                           0 (is)
                        216     POP_JUMP_IF_FALSE               117 (to 234)
                        218     LOAD_FAST                       2: allow_mixed
                        220     POP_JUMP_IF_FALSE               113 (to 226)
                        222     LOAD_CONST                      3: 2
                        224     RETURN_VALUE                    
                        226     LOAD_GLOBAL                     14: TypeError
                        228     LOAD_CONST                      4: 'cannot compare naive and aware datetimes'
                        230     CALL_FUNCTION                   1
                        232     RAISE_VARARGS                   1
                        234     LOAD_FAST                       0: self
                        236     LOAD_FAST                       1: other
                        238     BINARY_SUBTRACT                 
                        240     STORE_FAST                      8: diff
                        242     LOAD_FAST                       8: diff
                        244     LOAD_ATTR                       15: days
                        246     LOAD_CONST                      5: 0
                        248     COMPARE_OP                      0 (<)
                        250     POP_JUMP_IF_FALSE               128 (to 256)
                        252     LOAD_CONST                      6: -1
                        254     RETURN_VALUE                    
                        256     LOAD_FAST                       8: diff
                        258     POP_JUMP_IF_FALSE               132 (to 264)
                        260     LOAD_CONST                      7: 1
                        262     JUMP_IF_TRUE_OR_POP             133 (to 266)
                        264     LOAD_CONST                      5: 0
                        266     RETURN_VALUE                    
                'datetime._cmp'
                [Code]
                    File Name: datetime.py
                    Object Name: __add__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'NotImplemented'
                        'toordinal'
                        '_hour'
                        '_minute'
                        '_second'
                        '_microsecond'
                        'divmod'
                        'seconds'
                        'days'
                        '_MAXORDINAL'
                        'type'
                        'combine'
                        'date'
                        'fromordinal'
                        'time'
                        'microseconds'
                        '_tzinfo'
                        'OverflowError'
                    [Var Names]
                        'self'
                        'other'
                        'delta'
                        'hour'
                        'rem'
                        'minute'
                        'second'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Add a datetime and a timedelta.'
                        (
                            'hours'
                            'minutes'
                            'seconds'
                            'microseconds'
                        )
                        3600
                        60
                        0
                        (
                            'tzinfo'
                        )
                        'result out of range'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_GLOBAL                     2: NotImplemented
                        12      RETURN_VALUE                    
                        14      LOAD_GLOBAL                     1: timedelta
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     3: toordinal
                        20      CALL_METHOD                     0
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: _hour
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       5: _minute
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       6: _second
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       7: _microsecond
                        38      LOAD_CONST                      1: ('hours', 'minutes', 'seconds', 'microseconds')
                        40      CALL_FUNCTION_KW                5
                        42      STORE_FAST                      2: delta
                        44      LOAD_FAST                       2: delta
                        46      LOAD_FAST                       1: other
                        48      INPLACE_ADD                     
                        50      STORE_FAST                      2: delta
                        52      LOAD_GLOBAL                     8: divmod
                        54      LOAD_FAST                       2: delta
                        56      LOAD_ATTR                       9: seconds
                        58      LOAD_CONST                      2: 3600
                        60      CALL_FUNCTION                   2
                        62      UNPACK_SEQUENCE                 2
                        64      STORE_FAST                      3: hour
                        66      STORE_FAST                      4: rem
                        68      LOAD_GLOBAL                     8: divmod
                        70      LOAD_FAST                       4: rem
                        72      LOAD_CONST                      3: 60
                        74      CALL_FUNCTION                   2
                        76      UNPACK_SEQUENCE                 2
                        78      STORE_FAST                      5: minute
                        80      STORE_FAST                      6: second
                        82      LOAD_CONST                      4: 0
                        84      LOAD_FAST                       2: delta
                        86      LOAD_ATTR                       10: days
                        88      DUP_TOP                         
                        90      ROT_THREE                       
                        92      COMPARE_OP                      0 (<)
                        94      POP_JUMP_IF_FALSE               52 (to 104)
                        96      LOAD_GLOBAL                     11: _MAXORDINAL
                        98      COMPARE_OP                      1 (<=)
                        100     POP_JUMP_IF_FALSE               78 (to 156)
                        102     JUMP_FORWARD                    5 (to 114)
                        104     POP_TOP                         
                        106     LOAD_GLOBAL                     19: OverflowError
                        108     LOAD_CONST                      6: 'result out of range'
                        110     CALL_FUNCTION                   1
                        112     RAISE_VARARGS                   1
                        114     LOAD_GLOBAL                     12: type
                        116     LOAD_FAST                       0: self
                        118     CALL_FUNCTION                   1
                        120     LOAD_METHOD                     13: combine
                        122     LOAD_GLOBAL                     14: date
                        124     LOAD_METHOD                     15: fromordinal
                        126     LOAD_FAST                       2: delta
                        128     LOAD_ATTR                       10: days
                        130     CALL_METHOD                     1
                        132     LOAD_GLOBAL                     16: time
                        134     LOAD_FAST                       3: hour
                        136     LOAD_FAST                       5: minute
                        138     LOAD_FAST                       6: second
                        140     LOAD_FAST                       2: delta
                        142     LOAD_ATTR                       17: microseconds
                        144     LOAD_FAST                       0: self
                        146     LOAD_ATTR                       18: _tzinfo
                        148     LOAD_CONST                      5: ('tzinfo',)
                        150     CALL_FUNCTION_KW                5
                        152     CALL_METHOD                     2
                        154     RETURN_VALUE                    
                        156     LOAD_GLOBAL                     19: OverflowError
                        158     LOAD_CONST                      6: 'result out of range'
                        160     CALL_FUNCTION                   1
                        162     RAISE_VARARGS                   1
                'datetime.__add__'
                [Code]
                    File Name: datetime.py
                    Object Name: __sub__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        'timedelta'
                        'NotImplemented'
                        'toordinal'
                        '_second'
                        '_minute'
                        '_hour'
                        '_microsecond'
                        '_tzinfo'
                        'utcoffset'
                        'TypeError'
                    [Var Names]
                        'self'
                        'other'
                        'days1'
                        'days2'
                        'secs1'
                        'secs2'
                        'base'
                        'myoff'
                        'otoff'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Subtract two datetimes, or a datetime and a timedelta.'
                        60
                        3600
                        None
                        'cannot mix naive and timezone-aware time'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                17 (to 34)
                        10      LOAD_GLOBAL                     0: isinstance
                        12      LOAD_FAST                       1: other
                        14      LOAD_GLOBAL                     2: timedelta
                        16      CALL_FUNCTION                   2
                        18      POP_JUMP_IF_FALSE               15 (to 30)
                        20      LOAD_FAST                       0: self
                        22      LOAD_FAST                       1: other
                        24      UNARY_NEGATIVE                  
                        26      BINARY_ADD                      
                        28      RETURN_VALUE                    
                        30      LOAD_GLOBAL                     3: NotImplemented
                        32      RETURN_VALUE                    
                        34      LOAD_FAST                       0: self
                        36      LOAD_METHOD                     4: toordinal
                        38      CALL_METHOD                     0
                        40      STORE_FAST                      2: days1
                        42      LOAD_FAST                       1: other
                        44      LOAD_METHOD                     4: toordinal
                        46      CALL_METHOD                     0
                        48      STORE_FAST                      3: days2
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       5: _second
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       6: _minute
                        58      LOAD_CONST                      1: 60
                        60      BINARY_MULTIPLY                 
                        62      BINARY_ADD                      
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       7: _hour
                        68      LOAD_CONST                      2: 3600
                        70      BINARY_MULTIPLY                 
                        72      BINARY_ADD                      
                        74      STORE_FAST                      4: secs1
                        76      LOAD_FAST                       1: other
                        78      LOAD_ATTR                       5: _second
                        80      LOAD_FAST                       1: other
                        82      LOAD_ATTR                       6: _minute
                        84      LOAD_CONST                      1: 60
                        86      BINARY_MULTIPLY                 
                        88      BINARY_ADD                      
                        90      LOAD_FAST                       1: other
                        92      LOAD_ATTR                       7: _hour
                        94      LOAD_CONST                      2: 3600
                        96      BINARY_MULTIPLY                 
                        98      BINARY_ADD                      
                        100     STORE_FAST                      5: secs2
                        102     LOAD_GLOBAL                     2: timedelta
                        104     LOAD_FAST                       2: days1
                        106     LOAD_FAST                       3: days2
                        108     BINARY_SUBTRACT                 
                        110     LOAD_FAST                       4: secs1
                        112     LOAD_FAST                       5: secs2
                        114     BINARY_SUBTRACT                 
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       8: _microsecond
                        120     LOAD_FAST                       1: other
                        122     LOAD_ATTR                       8: _microsecond
                        124     BINARY_SUBTRACT                 
                        126     CALL_FUNCTION                   3
                        128     STORE_FAST                      6: base
                        130     LOAD_FAST                       0: self
                        132     LOAD_ATTR                       9: _tzinfo
                        134     LOAD_FAST                       1: other
                        136     LOAD_ATTR                       9: _tzinfo
                        138     IS_OP                           0 (is)
                        140     POP_JUMP_IF_FALSE               73 (to 146)
                        142     LOAD_FAST                       6: base
                        144     RETURN_VALUE                    
                        146     LOAD_FAST                       0: self
                        148     LOAD_METHOD                     10: utcoffset
                        150     CALL_METHOD                     0
                        152     STORE_FAST                      7: myoff
                        154     LOAD_FAST                       1: other
                        156     LOAD_METHOD                     10: utcoffset
                        158     CALL_METHOD                     0
                        160     STORE_FAST                      8: otoff
                        162     LOAD_FAST                       7: myoff
                        164     LOAD_FAST                       8: otoff
                        166     COMPARE_OP                      2 (==)
                        168     POP_JUMP_IF_FALSE               87 (to 174)
                        170     LOAD_FAST                       6: base
                        172     RETURN_VALUE                    
                        174     LOAD_FAST                       7: myoff
                        176     LOAD_CONST                      3: None
                        178     IS_OP                           0 (is)
                        180     POP_JUMP_IF_TRUE                95 (to 190)
                        182     LOAD_FAST                       8: otoff
                        184     LOAD_CONST                      3: None
                        186     IS_OP                           0 (is)
                        188     POP_JUMP_IF_FALSE               99 (to 198)
                        190     LOAD_GLOBAL                     11: TypeError
                        192     LOAD_CONST                      4: 'cannot mix naive and timezone-aware time'
                        194     CALL_FUNCTION                   1
                        196     RAISE_VARARGS                   1
                        198     LOAD_FAST                       6: base
                        200     LOAD_FAST                       8: otoff
                        202     BINARY_ADD                      
                        204     LOAD_FAST                       7: myoff
                        206     BINARY_SUBTRACT                 
                        208     RETURN_VALUE                    
                'datetime.__sub__'
                [Code]
                    File Name: datetime.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hashcode'
                        'fold'
                        'replace'
                        'utcoffset'
                        'hash'
                        '_getstate'
                        '_ymd2ord'
                        'year'
                        'month'
                        'day'
                        'hour'
                        'minute'
                        'second'
                        'timedelta'
                        'microsecond'
                    [Var Names]
                        'self'
                        't'
                        'tzoff'
                        'days'
                        'seconds'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        -1
                        0
                        (
                            'fold'
                        )
                        3600
                        60
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _hashcode
                        4       LOAD_CONST                      1: -1
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               71 (to 142)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: fold
                        14      POP_JUMP_IF_FALSE               15 (to 30)
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: replace
                        20      LOAD_CONST                      2: 0
                        22      LOAD_CONST                      3: ('fold',)
                        24      CALL_FUNCTION_KW                1
                        26      STORE_FAST                      1: t
                        28      JUMP_FORWARD                    2 (to 34)
                        30      LOAD_FAST                       0: self
                        32      STORE_FAST                      1: t
                        34      LOAD_FAST                       1: t
                        36      LOAD_METHOD                     3: utcoffset
                        38      CALL_METHOD                     0
                        40      STORE_FAST                      2: tzoff
                        42      LOAD_FAST                       2: tzoff
                        44      LOAD_CONST                      0: None
                        46      IS_OP                           0 (is)
                        48      POP_JUMP_IF_FALSE               37 (to 74)
                        50      LOAD_GLOBAL                     4: hash
                        52      LOAD_FAST                       1: t
                        54      LOAD_METHOD                     5: _getstate
                        56      CALL_METHOD                     0
                        58      LOAD_CONST                      2: 0
                        60      BINARY_SUBSCR                   
                        62      CALL_FUNCTION                   1
                        64      LOAD_FAST                       0: self
                        66      STORE_ATTR                      0: _hashcode
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       0: _hashcode
                        72      RETURN_VALUE                    
                        74      LOAD_GLOBAL                     6: _ymd2ord
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       7: year
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       8: month
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       9: day
                        88      CALL_FUNCTION                   3
                        90      STORE_FAST                      3: days
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       10: hour
                        96      LOAD_CONST                      4: 3600
                        98      BINARY_MULTIPLY                 
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       11: minute
                        104     LOAD_CONST                      5: 60
                        106     BINARY_MULTIPLY                 
                        108     BINARY_ADD                      
                        110     LOAD_FAST                       0: self
                        112     LOAD_ATTR                       12: second
                        114     BINARY_ADD                      
                        116     STORE_FAST                      4: seconds
                        118     LOAD_GLOBAL                     4: hash
                        120     LOAD_GLOBAL                     13: timedelta
                        122     LOAD_FAST                       3: days
                        124     LOAD_FAST                       4: seconds
                        126     LOAD_FAST                       0: self
                        128     LOAD_ATTR                       14: microsecond
                        130     CALL_FUNCTION                   3
                        132     LOAD_FAST                       2: tzoff
                        134     BINARY_SUBTRACT                 
                        136     CALL_FUNCTION                   1
                        138     LOAD_FAST                       0: self
                        140     STORE_ATTR                      0: _hashcode
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       0: _hashcode
                        146     RETURN_VALUE                    
                'datetime.__hash__'
                3
                [Code]
                    File Name: datetime.py
                    Object Name: _getstate
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        '_year'
                        '_microsecond'
                        '_month'
                        '_fold'
                        'bytes'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_tzinfo'
                    [Var Names]
                        'self'
                        'protocol'
                        'yhi'
                        'ylo'
                        'us2'
                        'us3'
                        'us1'
                        'm'
                        'basestate'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        256
                        3
                        128
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _year
                        6       LOAD_CONST                      1: 256
                        8       CALL_FUNCTION                   2
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      2: yhi
                        14      STORE_FAST                      3: ylo
                        16      LOAD_GLOBAL                     0: divmod
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _microsecond
                        22      LOAD_CONST                      1: 256
                        24      CALL_FUNCTION                   2
                        26      UNPACK_SEQUENCE                 2
                        28      STORE_FAST                      4: us2
                        30      STORE_FAST                      5: us3
                        32      LOAD_GLOBAL                     0: divmod
                        34      LOAD_FAST                       4: us2
                        36      LOAD_CONST                      1: 256
                        38      CALL_FUNCTION                   2
                        40      UNPACK_SEQUENCE                 2
                        42      STORE_FAST                      6: us1
                        44      STORE_FAST                      4: us2
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       3: _month
                        50      STORE_FAST                      7: m
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       4: _fold
                        56      POP_JUMP_IF_FALSE               37 (to 74)
                        58      LOAD_FAST                       1: protocol
                        60      LOAD_CONST                      2: 3
                        62      COMPARE_OP                      4 (>)
                        64      POP_JUMP_IF_FALSE               37 (to 74)
                        66      LOAD_FAST                       7: m
                        68      LOAD_CONST                      3: 128
                        70      INPLACE_ADD                     
                        72      STORE_FAST                      7: m
                        74      LOAD_GLOBAL                     5: bytes
                        76      LOAD_FAST                       2: yhi
                        78      LOAD_FAST                       3: ylo
                        80      LOAD_FAST                       7: m
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       6: _day
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       7: _hour
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       8: _minute
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       9: _second
                        98      LOAD_FAST                       6: us1
                        100     LOAD_FAST                       4: us2
                        102     LOAD_FAST                       5: us3
                        104     BUILD_LIST                      10
                        106     CALL_FUNCTION                   1
                        108     STORE_FAST                      8: basestate
                        110     LOAD_FAST                       0: self
                        112     LOAD_ATTR                       10: _tzinfo
                        114     LOAD_CONST                      0: None
                        116     IS_OP                           0 (is)
                        118     POP_JUMP_IF_FALSE               63 (to 126)
                        120     LOAD_FAST                       8: basestate
                        122     BUILD_TUPLE                     1
                        124     RETURN_VALUE                    
                        126     LOAD_FAST                       8: basestate
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       10: _tzinfo
                        132     BUILD_TUPLE                     2
                        134     RETURN_VALUE                    
                'datetime._getstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __setstate
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        '_tzinfo_class'
                        'TypeError'
                        '_day'
                        '_hour'
                        '_minute'
                        '_second'
                        '_fold'
                        '_month'
                        '_year'
                        '_microsecond'
                        '_tzinfo'
                    [Var Names]
                        'self'
                        'string'
                        'tzinfo'
                        'yhi'
                        'ylo'
                        'm'
                        'us1'
                        'us2'
                        'us3'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'bad tzinfo state arg'
                        127
                        1
                        128
                        0
                        256
                        8
                    [Disassembly]
                        0       LOAD_FAST                       2: tzinfo
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_FALSE               13 (to 26)
                        8       LOAD_GLOBAL                     0: isinstance
                        10      LOAD_FAST                       2: tzinfo
                        12      LOAD_GLOBAL                     1: _tzinfo_class
                        14      CALL_FUNCTION                   2
                        16      POP_JUMP_IF_TRUE                13 (to 26)
                        18      LOAD_GLOBAL                     2: TypeError
                        20      LOAD_CONST                      1: 'bad tzinfo state arg'
                        22      CALL_FUNCTION                   1
                        24      RAISE_VARARGS                   1
                        26      LOAD_FAST                       1: string
                        28      UNPACK_SEQUENCE                 10
                        30      STORE_FAST                      3: yhi
                        32      STORE_FAST                      4: ylo
                        34      STORE_FAST                      5: m
                        36      LOAD_FAST                       0: self
                        38      STORE_ATTR                      3: _day
                        40      LOAD_FAST                       0: self
                        42      STORE_ATTR                      4: _hour
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      5: _minute
                        48      LOAD_FAST                       0: self
                        50      STORE_ATTR                      6: _second
                        52      STORE_FAST                      6: us1
                        54      STORE_FAST                      7: us2
                        56      STORE_FAST                      8: us3
                        58      LOAD_FAST                       5: m
                        60      LOAD_CONST                      2: 127
                        62      COMPARE_OP                      4 (>)
                        64      POP_JUMP_IF_FALSE               42 (to 84)
                        66      LOAD_CONST                      3: 1
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      7: _fold
                        72      LOAD_FAST                       5: m
                        74      LOAD_CONST                      4: 128
                        76      BINARY_SUBTRACT                 
                        78      LOAD_FAST                       0: self
                        80      STORE_ATTR                      8: _month
                        82      JUMP_FORWARD                    6 (to 96)
                        84      LOAD_CONST                      5: 0
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      7: _fold
                        90      LOAD_FAST                       5: m
                        92      LOAD_FAST                       0: self
                        94      STORE_ATTR                      8: _month
                        96      LOAD_FAST                       3: yhi
                        98      LOAD_CONST                      6: 256
                        100     BINARY_MULTIPLY                 
                        102     LOAD_FAST                       4: ylo
                        104     BINARY_ADD                      
                        106     LOAD_FAST                       0: self
                        108     STORE_ATTR                      9: _year
                        110     LOAD_FAST                       6: us1
                        112     LOAD_CONST                      7: 8
                        114     BINARY_LSHIFT                   
                        116     LOAD_FAST                       7: us2
                        118     BINARY_OR                       
                        120     LOAD_CONST                      7: 8
                        122     BINARY_LSHIFT                   
                        124     LOAD_FAST                       8: us3
                        126     BINARY_OR                       
                        128     LOAD_FAST                       0: self
                        130     STORE_ATTR                      10: _microsecond
                        132     LOAD_FAST                       2: tzinfo
                        134     LOAD_FAST                       0: self
                        136     STORE_ATTR                      11: _tzinfo
                        138     LOAD_CONST                      0: None
                        140     RETURN_VALUE                    
                'datetime.__setstate'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce_ex__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '_getstate'
                    [Var Names]
                        'self'
                        'protocol'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: _getstate
                        8       LOAD_FAST                       1: protocol
                        10      CALL_METHOD                     1
                        12      BUILD_TUPLE                     2
                        14      RETURN_VALUE                    
                'datetime.__reduce_ex__'
                [Code]
                    File Name: datetime.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__reduce_ex__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        2
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: __reduce_ex__
                        4       LOAD_CONST                      1: 2
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'datetime.__reduce__'
                (
                    None
                    None
                    0
                    0
                    0
                    0
                    None
                )
                (
                    None
                )
                (
                    True
                )
                (
                    None
                    None
                    None
                    None
                    None
                    None
                    None
                    True
                )
                (
                    'T'
                    'auto'
                )
                (
                    False
                )
                (
                    3
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'datetime'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])\n\n    The year, month and day arguments are required. tzinfo may be None, or an\n    instance of a tzinfo subclass. The remaining arguments may be ints.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: date
                14      LOAD_ATTR                       5: __slots__
                16      LOAD_NAME                       6: time
                18      LOAD_ATTR                       5: __slots__
                20      BINARY_ADD                      
                22      STORE_NAME                      5: __slots__
                24      NOP                             
                26      NOP                             
                28      LOAD_CONST                      100: (None, None, 0, 0, 0, 0, None)
                30      LOAD_CONST                      3: 0
                32      LOAD_CONST                      4: ('fold',)
                34      BUILD_CONST_KEY_MAP             1
                36      LOAD_CONST                      5: <CODE> __new__
                38      LOAD_CONST                      6: 'datetime.__new__'
                40      MAKE_FUNCTION                   3
                42      STORE_NAME                      7: __new__
                44      LOAD_NAME                       8: property
                46      LOAD_CONST                      7: <CODE> hour
                48      LOAD_CONST                      8: 'datetime.hour'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      9: hour
                56      LOAD_NAME                       8: property
                58      LOAD_CONST                      9: <CODE> minute
                60      LOAD_CONST                      10: 'datetime.minute'
                62      MAKE_FUNCTION                   0
                64      CALL_FUNCTION                   1
                66      STORE_NAME                      10: minute
                68      LOAD_NAME                       8: property
                70      LOAD_CONST                      11: <CODE> second
                72      LOAD_CONST                      12: 'datetime.second'
                74      MAKE_FUNCTION                   0
                76      CALL_FUNCTION                   1
                78      STORE_NAME                      11: second
                80      LOAD_NAME                       8: property
                82      LOAD_CONST                      13: <CODE> microsecond
                84      LOAD_CONST                      14: 'datetime.microsecond'
                86      MAKE_FUNCTION                   0
                88      CALL_FUNCTION                   1
                90      STORE_NAME                      12: microsecond
                92      LOAD_NAME                       8: property
                94      LOAD_CONST                      15: <CODE> tzinfo
                96      LOAD_CONST                      16: 'datetime.tzinfo'
                98      MAKE_FUNCTION                   0
                100     CALL_FUNCTION                   1
                102     STORE_NAME                      13: tzinfo
                104     LOAD_NAME                       8: property
                106     LOAD_CONST                      17: <CODE> fold
                108     LOAD_CONST                      18: 'datetime.fold'
                110     MAKE_FUNCTION                   0
                112     CALL_FUNCTION                   1
                114     STORE_NAME                      14: fold
                116     LOAD_NAME                       15: classmethod
                118     LOAD_CONST                      19: <CODE> _fromtimestamp
                120     LOAD_CONST                      20: 'datetime._fromtimestamp'
                122     MAKE_FUNCTION                   0
                124     CALL_FUNCTION                   1
                126     STORE_NAME                      16: _fromtimestamp
                128     LOAD_NAME                       15: classmethod
                130     LOAD_CONST                      101: (None,)
                132     LOAD_CONST                      21: <CODE> fromtimestamp
                134     LOAD_CONST                      22: 'datetime.fromtimestamp'
                136     MAKE_FUNCTION                   1
                138     CALL_FUNCTION                   1
                140     STORE_NAME                      17: fromtimestamp
                142     LOAD_NAME                       15: classmethod
                144     LOAD_CONST                      23: <CODE> utcfromtimestamp
                146     LOAD_CONST                      24: 'datetime.utcfromtimestamp'
                148     MAKE_FUNCTION                   0
                150     CALL_FUNCTION                   1
                152     STORE_NAME                      18: utcfromtimestamp
                154     LOAD_NAME                       15: classmethod
                156     LOAD_CONST                      101: (None,)
                158     LOAD_CONST                      25: <CODE> now
                160     LOAD_CONST                      26: 'datetime.now'
                162     MAKE_FUNCTION                   1
                164     CALL_FUNCTION                   1
                166     STORE_NAME                      19: now
                168     LOAD_NAME                       15: classmethod
                170     LOAD_CONST                      27: <CODE> utcnow
                172     LOAD_CONST                      28: 'datetime.utcnow'
                174     MAKE_FUNCTION                   0
                176     CALL_FUNCTION                   1
                178     STORE_NAME                      20: utcnow
                180     LOAD_NAME                       15: classmethod
                182     LOAD_CONST                      102: (True,)
                184     LOAD_CONST                      30: <CODE> combine
                186     LOAD_CONST                      31: 'datetime.combine'
                188     MAKE_FUNCTION                   1
                190     CALL_FUNCTION                   1
                192     STORE_NAME                      21: combine
                194     LOAD_NAME                       15: classmethod
                196     LOAD_CONST                      32: <CODE> fromisoformat
                198     LOAD_CONST                      33: 'datetime.fromisoformat'
                200     MAKE_FUNCTION                   0
                202     CALL_FUNCTION                   1
                204     STORE_NAME                      22: fromisoformat
                206     LOAD_CONST                      34: <CODE> timetuple
                208     LOAD_CONST                      35: 'datetime.timetuple'
                210     MAKE_FUNCTION                   0
                212     STORE_NAME                      23: timetuple
                214     LOAD_CONST                      36: <CODE> _mktime
                216     LOAD_CONST                      37: 'datetime._mktime'
                218     MAKE_FUNCTION                   0
                220     STORE_NAME                      24: _mktime
                222     LOAD_CONST                      38: <CODE> timestamp
                224     LOAD_CONST                      39: 'datetime.timestamp'
                226     MAKE_FUNCTION                   0
                228     STORE_NAME                      25: timestamp
                230     LOAD_CONST                      40: <CODE> utctimetuple
                232     LOAD_CONST                      41: 'datetime.utctimetuple'
                234     MAKE_FUNCTION                   0
                236     STORE_NAME                      26: utctimetuple
                238     LOAD_CONST                      42: <CODE> date
                240     LOAD_CONST                      43: 'datetime.date'
                242     MAKE_FUNCTION                   0
                244     STORE_NAME                      4: date
                246     LOAD_CONST                      44: <CODE> time
                248     LOAD_CONST                      45: 'datetime.time'
                250     MAKE_FUNCTION                   0
                252     STORE_NAME                      6: time
                254     LOAD_CONST                      46: <CODE> timetz
                256     LOAD_CONST                      47: 'datetime.timetz'
                258     MAKE_FUNCTION                   0
                260     STORE_NAME                      27: timetz
                262     NOP                             
                264     NOP                             
                266     LOAD_CONST                      103: (None, None, None, None, None, None, None, True)
                268     LOAD_CONST                      2: None
                270     LOAD_CONST                      4: ('fold',)
                272     BUILD_CONST_KEY_MAP             1
                274     LOAD_CONST                      48: <CODE> replace
                276     LOAD_CONST                      49: 'datetime.replace'
                278     MAKE_FUNCTION                   3
                280     STORE_NAME                      28: replace
                282     LOAD_CONST                      50: <CODE> _local_timezone
                284     LOAD_CONST                      51: 'datetime._local_timezone'
                286     MAKE_FUNCTION                   0
                288     STORE_NAME                      29: _local_timezone
                290     LOAD_CONST                      101: (None,)
                292     LOAD_CONST                      52: <CODE> astimezone
                294     LOAD_CONST                      53: 'datetime.astimezone'
                296     MAKE_FUNCTION                   1
                298     STORE_NAME                      30: astimezone
                300     LOAD_CONST                      54: <CODE> ctime
                302     LOAD_CONST                      55: 'datetime.ctime'
                304     MAKE_FUNCTION                   0
                306     STORE_NAME                      31: ctime
                308     LOAD_CONST                      104: ('T', 'auto')
                310     LOAD_CONST                      58: <CODE> isoformat
                312     LOAD_CONST                      59: 'datetime.isoformat'
                314     MAKE_FUNCTION                   1
                316     STORE_NAME                      32: isoformat
                318     LOAD_CONST                      60: <CODE> __repr__
                320     LOAD_CONST                      61: 'datetime.__repr__'
                322     MAKE_FUNCTION                   0
                324     STORE_NAME                      33: __repr__
                326     LOAD_CONST                      62: <CODE> __str__
                328     LOAD_CONST                      63: 'datetime.__str__'
                330     MAKE_FUNCTION                   0
                332     STORE_NAME                      34: __str__
                334     LOAD_NAME                       15: classmethod
                336     LOAD_CONST                      64: <CODE> strptime
                338     LOAD_CONST                      65: 'datetime.strptime'
                340     MAKE_FUNCTION                   0
                342     CALL_FUNCTION                   1
                344     STORE_NAME                      35: strptime
                346     LOAD_CONST                      66: <CODE> utcoffset
                348     LOAD_CONST                      67: 'datetime.utcoffset'
                350     MAKE_FUNCTION                   0
                352     STORE_NAME                      36: utcoffset
                354     LOAD_CONST                      68: <CODE> tzname
                356     LOAD_CONST                      69: 'datetime.tzname'
                358     MAKE_FUNCTION                   0
                360     STORE_NAME                      37: tzname
                362     LOAD_CONST                      70: <CODE> dst
                364     LOAD_CONST                      71: 'datetime.dst'
                366     MAKE_FUNCTION                   0
                368     STORE_NAME                      38: dst
                370     LOAD_CONST                      72: <CODE> __eq__
                372     LOAD_CONST                      73: 'datetime.__eq__'
                374     MAKE_FUNCTION                   0
                376     STORE_NAME                      39: __eq__
                378     LOAD_CONST                      74: <CODE> __le__
                380     LOAD_CONST                      75: 'datetime.__le__'
                382     MAKE_FUNCTION                   0
                384     STORE_NAME                      40: __le__
                386     LOAD_CONST                      76: <CODE> __lt__
                388     LOAD_CONST                      77: 'datetime.__lt__'
                390     MAKE_FUNCTION                   0
                392     STORE_NAME                      41: __lt__
                394     LOAD_CONST                      78: <CODE> __ge__
                396     LOAD_CONST                      79: 'datetime.__ge__'
                398     MAKE_FUNCTION                   0
                400     STORE_NAME                      42: __ge__
                402     LOAD_CONST                      80: <CODE> __gt__
                404     LOAD_CONST                      81: 'datetime.__gt__'
                406     MAKE_FUNCTION                   0
                408     STORE_NAME                      43: __gt__
                410     LOAD_CONST                      105: (False,)
                412     LOAD_CONST                      83: <CODE> _cmp
                414     LOAD_CONST                      84: 'datetime._cmp'
                416     MAKE_FUNCTION                   1
                418     STORE_NAME                      44: _cmp
                420     LOAD_CONST                      85: <CODE> __add__
                422     LOAD_CONST                      86: 'datetime.__add__'
                424     MAKE_FUNCTION                   0
                426     STORE_NAME                      45: __add__
                428     LOAD_NAME                       45: __add__
                430     STORE_NAME                      46: __radd__
                432     LOAD_CONST                      87: <CODE> __sub__
                434     LOAD_CONST                      88: 'datetime.__sub__'
                436     MAKE_FUNCTION                   0
                438     STORE_NAME                      47: __sub__
                440     LOAD_CONST                      89: <CODE> __hash__
                442     LOAD_CONST                      90: 'datetime.__hash__'
                444     MAKE_FUNCTION                   0
                446     STORE_NAME                      48: __hash__
                448     LOAD_CONST                      106: (3,)
                450     LOAD_CONST                      92: <CODE> _getstate
                452     LOAD_CONST                      93: 'datetime._getstate'
                454     MAKE_FUNCTION                   1
                456     STORE_NAME                      49: _getstate
                458     LOAD_CONST                      94: <CODE> __setstate
                460     LOAD_CONST                      95: 'datetime.__setstate'
                462     MAKE_FUNCTION                   0
                464     STORE_NAME                      50: _datetime__setstate
                466     LOAD_CONST                      96: <CODE> __reduce_ex__
                468     LOAD_CONST                      97: 'datetime.__reduce_ex__'
                470     MAKE_FUNCTION                   0
                472     STORE_NAME                      51: __reduce_ex__
                474     LOAD_CONST                      98: <CODE> __reduce__
                476     LOAD_CONST                      99: 'datetime.__reduce__'
                478     MAKE_FUNCTION                   0
                480     STORE_NAME                      52: __reduce__
                482     LOAD_CONST                      2: None
                484     RETURN_VALUE                    
        'datetime'
        [Code]
            File Name: datetime.py
            Object Name: _isoweek1monday
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_ymd2ord'
            [Var Names]
                'year'
                'THURSDAY'
                'firstday'
                'firstweekday'
                'week1monday'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                3
                1
                6
                7
            [Disassembly]
                0       LOAD_CONST                      1: 3
                2       STORE_FAST                      1: THURSDAY
                4       LOAD_GLOBAL                     0: _ymd2ord
                6       LOAD_FAST                       0: year
                8       LOAD_CONST                      2: 1
                10      LOAD_CONST                      2: 1
                12      CALL_FUNCTION                   3
                14      STORE_FAST                      2: firstday
                16      LOAD_FAST                       2: firstday
                18      LOAD_CONST                      3: 6
                20      BINARY_ADD                      
                22      LOAD_CONST                      4: 7
                24      BINARY_MODULO                   
                26      STORE_FAST                      3: firstweekday
                28      LOAD_FAST                       2: firstday
                30      LOAD_FAST                       3: firstweekday
                32      BINARY_SUBTRACT                 
                34      STORE_FAST                      4: week1monday
                36      LOAD_FAST                       3: firstweekday
                38      LOAD_FAST                       1: THURSDAY
                40      COMPARE_OP                      4 (>)
                42      POP_JUMP_IF_FALSE               26 (to 52)
                44      LOAD_FAST                       4: week1monday
                46      LOAD_CONST                      4: 7
                48      INPLACE_ADD                     
                50      STORE_FAST                      4: week1monday
                52      LOAD_FAST                       4: week1monday
                54      RETURN_VALUE                    
        '_isoweek1monday'
        [Code]
            File Name: datetime.py
            Object Name: timezone
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__slots__'
                'object'
                '_Omitted'
                '__new__'
                'classmethod'
                '_create'
                '__getinitargs__'
                '__eq__'
                '__hash__'
                '__repr__'
                '__str__'
                'utcoffset'
                'tzname'
                'dst'
                'fromutc'
                'timedelta'
                '_maxoffset'
                '_minoffset'
                'staticmethod'
                '_name_from_offset'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'timezone'
                (
                    '_offset'
                    '_name'
                )
                [Code]
                    File Name: datetime.py
                    Object Name: __new__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timedelta'
                        'TypeError'
                        '_Omitted'
                        'utc'
                        'str'
                        '_minoffset'
                        '_maxoffset'
                        'ValueError'
                        '_create'
                    [Var Names]
                        'cls'
                        'offset'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'offset must be a timedelta'
                        'name must be a string'
                        'offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: offset
                        4       LOAD_GLOBAL                     1: timedelta
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'offset must be a timedelta'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       2: name
                        20      LOAD_FAST                       0: cls
                        22      LOAD_ATTR                       3: _Omitted
                        24      IS_OP                           0 (is)
                        26      POP_JUMP_IF_FALSE               22 (to 44)
                        28      LOAD_FAST                       1: offset
                        30      POP_JUMP_IF_TRUE                19 (to 38)
                        32      LOAD_FAST                       0: cls
                        34      LOAD_ATTR                       4: utc
                        36      RETURN_VALUE                    
                        38      LOAD_CONST                      0: None
                        40      STORE_FAST                      2: name
                        42      JUMP_FORWARD                    9 (to 62)
                        44      LOAD_GLOBAL                     0: isinstance
                        46      LOAD_FAST                       2: name
                        48      LOAD_GLOBAL                     5: str
                        50      CALL_FUNCTION                   2
                        52      POP_JUMP_IF_TRUE                31 (to 62)
                        54      LOAD_GLOBAL                     2: TypeError
                        56      LOAD_CONST                      2: 'name must be a string'
                        58      CALL_FUNCTION                   1
                        60      RAISE_VARARGS                   1
                        62      LOAD_FAST                       0: cls
                        64      LOAD_ATTR                       6: _minoffset
                        66      LOAD_FAST                       1: offset
                        68      DUP_TOP                         
                        70      ROT_THREE                       
                        72      COMPARE_OP                      1 (<=)
                        74      POP_JUMP_IF_FALSE               46 (to 92)
                        76      LOAD_FAST                       0: cls
                        78      LOAD_ATTR                       7: _maxoffset
                        80      COMPARE_OP                      1 (<=)
                        82      POP_JUMP_IF_TRUE                51 (to 102)
                        84      LOAD_GLOBAL                     8: ValueError
                        86      LOAD_CONST                      3: 'offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).'
                        88      CALL_FUNCTION                   1
                        90      RAISE_VARARGS                   1
                        92      POP_TOP                         
                        94      LOAD_GLOBAL                     8: ValueError
                        96      LOAD_CONST                      3: 'offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).'
                        98      CALL_FUNCTION                   1
                        100     RAISE_VARARGS                   1
                        102     LOAD_FAST                       0: cls
                        104     LOAD_METHOD                     9: _create
                        106     LOAD_FAST                       1: offset
                        108     LOAD_FAST                       2: name
                        110     CALL_METHOD                     2
                        112     RETURN_VALUE                    
                'timezone.__new__'
                None
                [Code]
                    File Name: datetime.py
                    Object Name: _create
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'tzinfo'
                        '__new__'
                        '_offset'
                        '_name'
                    [Var Names]
                        'cls'
                        'offset'
                        'name'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: tzinfo
                        2       LOAD_METHOD                     1: __new__
                        4       LOAD_FAST                       0: cls
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      3: self
                        10      LOAD_FAST                       1: offset
                        12      LOAD_FAST                       3: self
                        14      STORE_ATTR                      2: _offset
                        16      LOAD_FAST                       2: name
                        18      LOAD_FAST                       3: self
                        20      STORE_ATTR                      3: _name
                        22      LOAD_FAST                       3: self
                        24      RETURN_VALUE                    
                'timezone._create'
                [Code]
                    File Name: datetime.py
                    Object Name: __getinitargs__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_name'
                        '_offset'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'pickle support'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _name
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               9 (to 18)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _offset
                        14      BUILD_TUPLE                     1
                        16      RETURN_VALUE                    
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       1: _offset
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       0: _name
                        26      BUILD_TUPLE                     2
                        28      RETURN_VALUE                    
                'timezone.__getinitargs__'
                [Code]
                    File Name: datetime.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'timezone'
                        '_offset'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: timezone
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _offset
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: _offset
                        18      COMPARE_OP                      2 (==)
                        20      RETURN_VALUE                    
                        22      LOAD_GLOBAL                     3: NotImplemented
                        24      RETURN_VALUE                    
                'timezone.__eq__'
                [Code]
                    File Name: datetime.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hash'
                        '_offset'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hash
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _offset
                        6       CALL_FUNCTION                   1
                        8       RETURN_VALUE                    
                'timezone.__hash__'
                [Code]
                    File Name: datetime.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'utc'
                        '_name'
                        '__class__'
                        '__module__'
                        '__qualname__'
                        '_offset'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convert to formal string, for repr().\n\n        >>> tz = timezone.utc\n        >>> repr(tz)\n        \'datetime.timezone.utc\'\n        >>> tz = timezone(timedelta(hours=-5), \'EST\')\n        >>> repr(tz)\n        "datetime.timezone(datetime.timedelta(-1, 68400), \'EST\')"\n        '
                        'datetime.timezone.utc'
                        None
                        '%s.%s(%r)'
                        '%s.%s(%r, %r)'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: utc
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: 'datetime.timezone.utc'
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       1: _name
                        18      LOAD_CONST                      2: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               24 (to 48)
                        24      LOAD_CONST                      3: '%s.%s(%r)'
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       2: __class__
                        30      LOAD_ATTR                       3: __module__
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       2: __class__
                        36      LOAD_ATTR                       4: __qualname__
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       5: _offset
                        42      BUILD_TUPLE                     3
                        44      BINARY_MODULO                   
                        46      RETURN_VALUE                    
                        48      LOAD_CONST                      4: '%s.%s(%r, %r)'
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       2: __class__
                        54      LOAD_ATTR                       3: __module__
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       2: __class__
                        60      LOAD_ATTR                       4: __qualname__
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       5: _offset
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       1: _name
                        70      BUILD_TUPLE                     4
                        72      BINARY_MODULO                   
                        74      RETURN_VALUE                    
                'timezone.__repr__'
                [Code]
                    File Name: datetime.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'tzname'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: tzname
                        4       LOAD_CONST                      0: None
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'timezone.__str__'
                [Code]
                    File Name: datetime.py
                    Object Name: utcoffset
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_offset'
                        'TypeError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'utcoffset() argument must be a datetime instance or None'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: dt
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_FAST                       1: dt
                        12      LOAD_CONST                      0: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               12 (to 24)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _offset
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: TypeError
                        26      LOAD_CONST                      1: 'utcoffset() argument must be a datetime instance or None'
                        28      CALL_FUNCTION                   1
                        30      RAISE_VARARGS                   1
                'timezone.utcoffset'
                [Code]
                    File Name: datetime.py
                    Object Name: tzname
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        '_name'
                        '_name_from_offset'
                        '_offset'
                        'TypeError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'tzname() argument must be a datetime instance or None'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: dt
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_FAST                       1: dt
                        12      LOAD_CONST                      0: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               23 (to 46)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _name
                        22      LOAD_CONST                      0: None
                        24      IS_OP                           0 (is)
                        26      POP_JUMP_IF_FALSE               20 (to 40)
                        28      LOAD_FAST                       0: self
                        30      LOAD_METHOD                     3: _name_from_offset
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _offset
                        36      CALL_METHOD                     1
                        38      RETURN_VALUE                    
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       2: _name
                        44      RETURN_VALUE                    
                        46      LOAD_GLOBAL                     5: TypeError
                        48      LOAD_CONST                      1: 'tzname() argument must be a datetime instance or None'
                        50      CALL_FUNCTION                   1
                        52      RAISE_VARARGS                   1
                'timezone.tzname'
                [Code]
                    File Name: datetime.py
                    Object Name: dst
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        'TypeError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'dst() argument must be a datetime instance or None'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: dt
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_FAST                       1: dt
                        12      LOAD_CONST                      0: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                        22      LOAD_GLOBAL                     2: TypeError
                        24      LOAD_CONST                      1: 'dst() argument must be a datetime instance or None'
                        26      CALL_FUNCTION                   1
                        28      RAISE_VARARGS                   1
                'timezone.dst'
                [Code]
                    File Name: datetime.py
                    Object Name: fromutc
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'datetime'
                        'tzinfo'
                        'ValueError'
                        '_offset'
                        'TypeError'
                    [Var Names]
                        'self'
                        'dt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'fromutc: dt.tzinfo is not self'
                        'fromutc() argument must be a datetime instance or None'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: dt
                        4       LOAD_GLOBAL                     1: datetime
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               19 (to 38)
                        10      LOAD_FAST                       1: dt
                        12      LOAD_ATTR                       2: tzinfo
                        14      LOAD_FAST                       0: self
                        16      IS_OP                           1 (is not)
                        18      POP_JUMP_IF_FALSE               14 (to 28)
                        20      LOAD_GLOBAL                     3: ValueError
                        22      LOAD_CONST                      1: 'fromutc: dt.tzinfo is not self'
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_FAST                       1: dt
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       4: _offset
                        34      BINARY_ADD                      
                        36      RETURN_VALUE                    
                        38      LOAD_GLOBAL                     5: TypeError
                        40      LOAD_CONST                      2: 'fromutc() argument must be a datetime instance or None'
                        42      CALL_FUNCTION                   1
                        44      RAISE_VARARGS                   1
                'timezone.fromutc'
                24
                -1
                (
                    'hours'
                    'microseconds'
                )
                [Code]
                    File Name: datetime.py
                    Object Name: _name_from_offset
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'timedelta'
                        'divmod'
                        'seconds'
                        'microseconds'
                    [Var Names]
                        'delta'
                        'sign'
                        'hours'
                        'rest'
                        'minutes'
                        'seconds'
                        'microseconds'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'UTC'
                        0
                        '-'
                        '+'
                        1
                        (
                            'hours'
                        )
                        (
                            'minutes'
                        )
                        '02d'
                        ':'
                        '.'
                        '06d'
                    [Disassembly]
                        0       LOAD_FAST                       0: delta
                        2       POP_JUMP_IF_TRUE                4 (to 8)
                        4       LOAD_CONST                      1: 'UTC'
                        6       RETURN_VALUE                    
                        8       LOAD_FAST                       0: delta
                        10      LOAD_GLOBAL                     0: timedelta
                        12      LOAD_CONST                      2: 0
                        14      CALL_FUNCTION                   1
                        16      COMPARE_OP                      0 (<)
                        18      POP_JUMP_IF_FALSE               16 (to 32)
                        20      LOAD_CONST                      3: '-'
                        22      STORE_FAST                      1: sign
                        24      LOAD_FAST                       0: delta
                        26      UNARY_NEGATIVE                  
                        28      STORE_FAST                      0: delta
                        30      JUMP_FORWARD                    2 (to 36)
                        32      LOAD_CONST                      4: '+'
                        34      STORE_FAST                      1: sign
                        36      LOAD_GLOBAL                     1: divmod
                        38      LOAD_FAST                       0: delta
                        40      LOAD_GLOBAL                     0: timedelta
                        42      LOAD_CONST                      5: 1
                        44      LOAD_CONST                      6: ('hours',)
                        46      CALL_FUNCTION_KW                1
                        48      CALL_FUNCTION                   2
                        50      UNPACK_SEQUENCE                 2
                        52      STORE_FAST                      2: hours
                        54      STORE_FAST                      3: rest
                        56      LOAD_GLOBAL                     1: divmod
                        58      LOAD_FAST                       3: rest
                        60      LOAD_GLOBAL                     0: timedelta
                        62      LOAD_CONST                      5: 1
                        64      LOAD_CONST                      7: ('minutes',)
                        66      CALL_FUNCTION_KW                1
                        68      CALL_FUNCTION                   2
                        70      UNPACK_SEQUENCE                 2
                        72      STORE_FAST                      4: minutes
                        74      STORE_FAST                      3: rest
                        76      LOAD_FAST                       3: rest
                        78      LOAD_ATTR                       2: seconds
                        80      STORE_FAST                      5: seconds
                        82      LOAD_FAST                       3: rest
                        84      LOAD_ATTR                       3: microseconds
                        86      STORE_FAST                      6: microseconds
                        88      LOAD_FAST                       6: microseconds
                        90      POP_JUMP_IF_FALSE               66 (to 132)
                        92      LOAD_CONST                      1: 'UTC'
                        94      LOAD_FAST                       1: sign
                        96      FORMAT_VALUE                    0 (FVC_NONE)
                        98      LOAD_FAST                       2: hours
                        100     LOAD_CONST                      8: '02d'
                        102     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        104     LOAD_CONST                      9: ':'
                        106     LOAD_FAST                       4: minutes
                        108     LOAD_CONST                      8: '02d'
                        110     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        112     LOAD_CONST                      9: ':'
                        114     LOAD_FAST                       5: seconds
                        116     LOAD_CONST                      8: '02d'
                        118     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        120     LOAD_CONST                      10: '.'
                        122     LOAD_FAST                       6: microseconds
                        124     LOAD_CONST                      11: '06d'
                        126     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        128     BUILD_STRING                    9
                        130     RETURN_VALUE                    
                        132     LOAD_FAST                       5: seconds
                        134     POP_JUMP_IF_FALSE               84 (to 168)
                        136     LOAD_CONST                      1: 'UTC'
                        138     LOAD_FAST                       1: sign
                        140     FORMAT_VALUE                    0 (FVC_NONE)
                        142     LOAD_FAST                       2: hours
                        144     LOAD_CONST                      8: '02d'
                        146     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        148     LOAD_CONST                      9: ':'
                        150     LOAD_FAST                       4: minutes
                        152     LOAD_CONST                      8: '02d'
                        154     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        156     LOAD_CONST                      9: ':'
                        158     LOAD_FAST                       5: seconds
                        160     LOAD_CONST                      8: '02d'
                        162     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        164     BUILD_STRING                    7
                        166     RETURN_VALUE                    
                        168     LOAD_CONST                      1: 'UTC'
                        170     LOAD_FAST                       1: sign
                        172     FORMAT_VALUE                    0 (FVC_NONE)
                        174     LOAD_FAST                       2: hours
                        176     LOAD_CONST                      8: '02d'
                        178     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        180     LOAD_CONST                      9: ':'
                        182     LOAD_FAST                       4: minutes
                        184     LOAD_CONST                      8: '02d'
                        186     FORMAT_VALUE                    4 (FVC_NONE | FVS_HAVE_SPEC)
                        188     BUILD_STRING                    5
                        190     RETURN_VALUE                    
                'timezone._name_from_offset'
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'timezone'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: ('_offset', '_name')
                10      STORE_NAME                      3: __slots__
                12      LOAD_NAME                       4: object
                14      CALL_FUNCTION                   0
                16      STORE_NAME                      5: _Omitted
                18      LOAD_NAME                       5: _Omitted
                20      BUILD_TUPLE                     1
                22      LOAD_CONST                      2: <CODE> __new__
                24      LOAD_CONST                      3: 'timezone.__new__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      6: __new__
                30      LOAD_NAME                       7: classmethod
                32      LOAD_CONST                      30: (None,)
                34      LOAD_CONST                      5: <CODE> _create
                36      LOAD_CONST                      6: 'timezone._create'
                38      MAKE_FUNCTION                   1
                40      CALL_FUNCTION                   1
                42      STORE_NAME                      8: _create
                44      LOAD_CONST                      7: <CODE> __getinitargs__
                46      LOAD_CONST                      8: 'timezone.__getinitargs__'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      9: __getinitargs__
                52      LOAD_CONST                      9: <CODE> __eq__
                54      LOAD_CONST                      10: 'timezone.__eq__'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      10: __eq__
                60      LOAD_CONST                      11: <CODE> __hash__
                62      LOAD_CONST                      12: 'timezone.__hash__'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      11: __hash__
                68      LOAD_CONST                      13: <CODE> __repr__
                70      LOAD_CONST                      14: 'timezone.__repr__'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      12: __repr__
                76      LOAD_CONST                      15: <CODE> __str__
                78      LOAD_CONST                      16: 'timezone.__str__'
                80      MAKE_FUNCTION                   0
                82      STORE_NAME                      13: __str__
                84      LOAD_CONST                      17: <CODE> utcoffset
                86      LOAD_CONST                      18: 'timezone.utcoffset'
                88      MAKE_FUNCTION                   0
                90      STORE_NAME                      14: utcoffset
                92      LOAD_CONST                      19: <CODE> tzname
                94      LOAD_CONST                      20: 'timezone.tzname'
                96      MAKE_FUNCTION                   0
                98      STORE_NAME                      15: tzname
                100     LOAD_CONST                      21: <CODE> dst
                102     LOAD_CONST                      22: 'timezone.dst'
                104     MAKE_FUNCTION                   0
                106     STORE_NAME                      16: dst
                108     LOAD_CONST                      23: <CODE> fromutc
                110     LOAD_CONST                      24: 'timezone.fromutc'
                112     MAKE_FUNCTION                   0
                114     STORE_NAME                      17: fromutc
                116     LOAD_NAME                       18: timedelta
                118     LOAD_CONST                      25: 24
                120     LOAD_CONST                      26: -1
                122     LOAD_CONST                      27: ('hours', 'microseconds')
                124     CALL_FUNCTION_KW                2
                126     STORE_NAME                      19: _maxoffset
                128     LOAD_NAME                       19: _maxoffset
                130     UNARY_NEGATIVE                  
                132     STORE_NAME                      20: _minoffset
                134     LOAD_NAME                       21: staticmethod
                136     LOAD_CONST                      28: <CODE> _name_from_offset
                138     LOAD_CONST                      29: 'timezone._name_from_offset'
                140     MAKE_FUNCTION                   0
                142     CALL_FUNCTION                   1
                144     STORE_NAME                      22: _name_from_offset
                146     LOAD_CONST                      4: None
                148     RETURN_VALUE                    
        'timezone'
        (
            'hours'
            'minutes'
        )
        1970
        (
            'tzinfo'
        )
        (
            '*'
        )
        (
            '__doc__'
        )
        (
            'auto'
        )
    [Disassembly]
        0       LOAD_CONST                      0: 'Concrete date/time and related types.\n\nSee http://www.iana.org/time-zones/repository/tz-link.html for\ntime zone and DST data sources.\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: ('date', 'datetime', 'time', 'timedelta', 'timezone', 'tzinfo', 'MINYEAR', 'MAXYEAR')
        6       STORE_NAME                      1: __all__
        8       LOAD_CONST                      2: 0
        10      LOAD_CONST                      3: None
        12      IMPORT_NAME                     2: time
        14      STORE_NAME                      3: _time
        16      LOAD_CONST                      2: 0
        18      LOAD_CONST                      3: None
        20      IMPORT_NAME                     4: math
        22      STORE_NAME                      5: _math
        24      LOAD_CONST                      2: 0
        26      LOAD_CONST                      3: None
        28      IMPORT_NAME                     6: sys
        30      STORE_NAME                      6: sys
        32      LOAD_CONST                      2: 0
        34      LOAD_CONST                      4: ('index',)
        36      IMPORT_NAME                     7: operator
        38      IMPORT_FROM                     8: index
        40      STORE_NAME                      9: _index
        42      POP_TOP                         
        44      LOAD_CONST                      5: <CODE> _cmp
        46      LOAD_CONST                      6: '_cmp'
        48      MAKE_FUNCTION                   0
        50      STORE_NAME                      10: _cmp
        52      LOAD_CONST                      7: 1
        54      STORE_NAME                      11: MINYEAR
        56      LOAD_CONST                      8: 9999
        58      STORE_NAME                      12: MAXYEAR
        60      LOAD_CONST                      9: 3652059
        62      STORE_NAME                      13: _MAXORDINAL
        64      BUILD_LIST                      0
        66      LOAD_CONST                      10: (-1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
        68      LIST_EXTEND                     1
        70      STORE_NAME                      14: _DAYS_IN_MONTH
        72      LOAD_CONST                      11: -1
        74      BUILD_LIST                      1
        76      STORE_NAME                      15: _DAYS_BEFORE_MONTH
        78      LOAD_CONST                      2: 0
        80      STORE_NAME                      16: dbm
        82      LOAD_NAME                       14: _DAYS_IN_MONTH
        84      LOAD_CONST                      7: 1
        86      LOAD_CONST                      3: None
        88      BUILD_SLICE                     2
        90      BINARY_SUBSCR                   
        92      GET_ITER                        
        94      FOR_ITER                        11 (to 118)
        96      STORE_NAME                      17: dim
        98      LOAD_NAME                       15: _DAYS_BEFORE_MONTH
        100     LOAD_METHOD                     18: append
        102     LOAD_NAME                       16: dbm
        104     CALL_METHOD                     1
        106     POP_TOP                         
        108     LOAD_NAME                       16: dbm
        110     LOAD_NAME                       17: dim
        112     INPLACE_ADD                     
        114     STORE_NAME                      16: dbm
        116     JUMP_ABSOLUTE                   47 (to 94)
        118     DELETE_NAME                     16: dbm
        120     DELETE_NAME                     17: dim
        122     LOAD_CONST                      12: <CODE> _is_leap
        124     LOAD_CONST                      13: '_is_leap'
        126     MAKE_FUNCTION                   0
        128     STORE_NAME                      19: _is_leap
        130     LOAD_CONST                      14: <CODE> _days_before_year
        132     LOAD_CONST                      15: '_days_before_year'
        134     MAKE_FUNCTION                   0
        136     STORE_NAME                      20: _days_before_year
        138     LOAD_CONST                      16: <CODE> _days_in_month
        140     LOAD_CONST                      17: '_days_in_month'
        142     MAKE_FUNCTION                   0
        144     STORE_NAME                      21: _days_in_month
        146     LOAD_CONST                      18: <CODE> _days_before_month
        148     LOAD_CONST                      19: '_days_before_month'
        150     MAKE_FUNCTION                   0
        152     STORE_NAME                      22: _days_before_month
        154     LOAD_CONST                      20: <CODE> _ymd2ord
        156     LOAD_CONST                      21: '_ymd2ord'
        158     MAKE_FUNCTION                   0
        160     STORE_NAME                      23: _ymd2ord
        162     LOAD_NAME                       20: _days_before_year
        164     LOAD_CONST                      22: 401
        166     CALL_FUNCTION                   1
        168     STORE_NAME                      24: _DI400Y
        170     LOAD_NAME                       20: _days_before_year
        172     LOAD_CONST                      23: 101
        174     CALL_FUNCTION                   1
        176     STORE_NAME                      25: _DI100Y
        178     LOAD_NAME                       20: _days_before_year
        180     LOAD_CONST                      24: 5
        182     CALL_FUNCTION                   1
        184     STORE_NAME                      26: _DI4Y
        186     LOAD_NAME                       26: _DI4Y
        188     LOAD_CONST                      25: 1461
        190     COMPARE_OP                      2 (==)
        192     POP_JUMP_IF_TRUE                99 (to 198)
        194     LOAD_ASSERTION_ERROR            
        196     RAISE_VARARGS                   1
        198     LOAD_NAME                       24: _DI400Y
        200     LOAD_CONST                      26: 4
        202     LOAD_NAME                       25: _DI100Y
        204     BINARY_MULTIPLY                 
        206     LOAD_CONST                      7: 1
        208     BINARY_ADD                      
        210     COMPARE_OP                      2 (==)
        212     POP_JUMP_IF_TRUE                109 (to 218)
        214     LOAD_ASSERTION_ERROR            
        216     RAISE_VARARGS                   1
        218     LOAD_NAME                       25: _DI100Y
        220     LOAD_CONST                      27: 25
        222     LOAD_NAME                       26: _DI4Y
        224     BINARY_MULTIPLY                 
        226     LOAD_CONST                      7: 1
        228     BINARY_SUBTRACT                 
        230     COMPARE_OP                      2 (==)
        232     POP_JUMP_IF_TRUE                119 (to 238)
        234     LOAD_ASSERTION_ERROR            
        236     RAISE_VARARGS                   1
        238     LOAD_CONST                      28: <CODE> _ord2ymd
        240     LOAD_CONST                      29: '_ord2ymd'
        242     MAKE_FUNCTION                   0
        244     STORE_NAME                      27: _ord2ymd
        246     BUILD_LIST                      0
        248     LOAD_CONST                      30: (None, 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
        250     LIST_EXTEND                     1
        252     STORE_NAME                      28: _MONTHNAMES
        254     BUILD_LIST                      0
        256     LOAD_CONST                      31: (None, 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')
        258     LIST_EXTEND                     1
        260     STORE_NAME                      29: _DAYNAMES
        262     LOAD_CONST                      32: <CODE> _build_struct_time
        264     LOAD_CONST                      33: '_build_struct_time'
        266     MAKE_FUNCTION                   0
        268     STORE_NAME                      30: _build_struct_time
        270     LOAD_CONST                      92: ('auto',)
        272     LOAD_CONST                      35: <CODE> _format_time
        274     LOAD_CONST                      36: '_format_time'
        276     MAKE_FUNCTION                   1
        278     STORE_NAME                      31: _format_time
        280     LOAD_CONST                      37: <CODE> _format_offset
        282     LOAD_CONST                      38: '_format_offset'
        284     MAKE_FUNCTION                   0
        286     STORE_NAME                      32: _format_offset
        288     LOAD_CONST                      39: <CODE> _wrap_strftime
        290     LOAD_CONST                      40: '_wrap_strftime'
        292     MAKE_FUNCTION                   0
        294     STORE_NAME                      33: _wrap_strftime
        296     LOAD_CONST                      41: <CODE> _parse_isoformat_date
        298     LOAD_CONST                      42: '_parse_isoformat_date'
        300     MAKE_FUNCTION                   0
        302     STORE_NAME                      34: _parse_isoformat_date
        304     LOAD_CONST                      43: <CODE> _parse_hh_mm_ss_ff
        306     LOAD_CONST                      44: '_parse_hh_mm_ss_ff'
        308     MAKE_FUNCTION                   0
        310     STORE_NAME                      35: _parse_hh_mm_ss_ff
        312     LOAD_CONST                      45: <CODE> _parse_isoformat_time
        314     LOAD_CONST                      46: '_parse_isoformat_time'
        316     MAKE_FUNCTION                   0
        318     STORE_NAME                      36: _parse_isoformat_time
        320     LOAD_CONST                      47: <CODE> _check_tzname
        322     LOAD_CONST                      48: '_check_tzname'
        324     MAKE_FUNCTION                   0
        326     STORE_NAME                      37: _check_tzname
        328     LOAD_CONST                      49: <CODE> _check_utc_offset
        330     LOAD_CONST                      50: '_check_utc_offset'
        332     MAKE_FUNCTION                   0
        334     STORE_NAME                      38: _check_utc_offset
        336     LOAD_CONST                      51: <CODE> _check_date_fields
        338     LOAD_CONST                      52: '_check_date_fields'
        340     MAKE_FUNCTION                   0
        342     STORE_NAME                      39: _check_date_fields
        344     LOAD_CONST                      53: <CODE> _check_time_fields
        346     LOAD_CONST                      54: '_check_time_fields'
        348     MAKE_FUNCTION                   0
        350     STORE_NAME                      40: _check_time_fields
        352     LOAD_CONST                      55: <CODE> _check_tzinfo_arg
        354     LOAD_CONST                      56: '_check_tzinfo_arg'
        356     MAKE_FUNCTION                   0
        358     STORE_NAME                      41: _check_tzinfo_arg
        360     LOAD_CONST                      57: <CODE> _cmperror
        362     LOAD_CONST                      58: '_cmperror'
        364     MAKE_FUNCTION                   0
        366     STORE_NAME                      42: _cmperror
        368     LOAD_CONST                      59: <CODE> _divide_and_round
        370     LOAD_CONST                      60: '_divide_and_round'
        372     MAKE_FUNCTION                   0
        374     STORE_NAME                      43: _divide_and_round
        376     LOAD_BUILD_CLASS                
        378     LOAD_CONST                      61: <CODE> timedelta
        380     LOAD_CONST                      62: 'timedelta'
        382     MAKE_FUNCTION                   0
        384     LOAD_CONST                      62: 'timedelta'
        386     CALL_FUNCTION                   2
        388     STORE_NAME                      44: timedelta
        390     LOAD_NAME                       44: timedelta
        392     LOAD_CONST                      63: -999999999
        394     CALL_FUNCTION                   1
        396     LOAD_NAME                       44: timedelta
        398     STORE_ATTR                      45: min
        400     LOAD_NAME                       44: timedelta
        402     LOAD_CONST                      64: 999999999
        404     LOAD_CONST                      65: 23
        406     LOAD_CONST                      66: 59
        408     LOAD_CONST                      66: 59
        410     LOAD_CONST                      67: 999999
        412     LOAD_CONST                      68: ('days', 'hours', 'minutes', 'seconds', 'microseconds')
        414     CALL_FUNCTION_KW                5
        416     LOAD_NAME                       44: timedelta
        418     STORE_ATTR                      46: max
        420     LOAD_NAME                       44: timedelta
        422     LOAD_CONST                      7: 1
        424     LOAD_CONST                      69: ('microseconds',)
        426     CALL_FUNCTION_KW                1
        428     LOAD_NAME                       44: timedelta
        430     STORE_ATTR                      47: resolution
        432     LOAD_BUILD_CLASS                
        434     LOAD_CONST                      70: <CODE> date
        436     LOAD_CONST                      71: 'date'
        438     MAKE_FUNCTION                   0
        440     LOAD_CONST                      71: 'date'
        442     CALL_FUNCTION                   2
        444     STORE_NAME                      48: date
        446     LOAD_NAME                       48: date
        448     STORE_NAME                      49: _date_class
        450     LOAD_NAME                       48: date
        452     LOAD_CONST                      7: 1
        454     LOAD_CONST                      7: 1
        456     LOAD_CONST                      7: 1
        458     CALL_FUNCTION                   3
        460     LOAD_NAME                       48: date
        462     STORE_ATTR                      45: min
        464     LOAD_NAME                       48: date
        466     LOAD_CONST                      8: 9999
        468     LOAD_CONST                      72: 12
        470     LOAD_CONST                      73: 31
        472     CALL_FUNCTION                   3
        474     LOAD_NAME                       48: date
        476     STORE_ATTR                      46: max
        478     LOAD_NAME                       44: timedelta
        480     LOAD_CONST                      7: 1
        482     LOAD_CONST                      74: ('days',)
        484     CALL_FUNCTION_KW                1
        486     LOAD_NAME                       48: date
        488     STORE_ATTR                      47: resolution
        490     LOAD_BUILD_CLASS                
        492     LOAD_CONST                      75: <CODE> tzinfo
        494     LOAD_CONST                      76: 'tzinfo'
        496     MAKE_FUNCTION                   0
        498     LOAD_CONST                      76: 'tzinfo'
        500     CALL_FUNCTION                   2
        502     STORE_NAME                      50: tzinfo
        504     LOAD_BUILD_CLASS                
        506     LOAD_CONST                      77: <CODE> IsoCalendarDate
        508     LOAD_CONST                      78: 'IsoCalendarDate'
        510     MAKE_FUNCTION                   0
        512     LOAD_CONST                      78: 'IsoCalendarDate'
        514     LOAD_NAME                       51: tuple
        516     CALL_FUNCTION                   3
        518     STORE_NAME                      52: IsoCalendarDate
        520     LOAD_NAME                       52: IsoCalendarDate
        522     STORE_NAME                      53: _IsoCalendarDate
        524     DELETE_NAME                     52: IsoCalendarDate
        526     LOAD_NAME                       50: tzinfo
        528     STORE_NAME                      54: _tzinfo_class
        530     LOAD_BUILD_CLASS                
        532     LOAD_CONST                      79: <CODE> time
        534     LOAD_CONST                      80: 'time'
        536     MAKE_FUNCTION                   0
        538     LOAD_CONST                      80: 'time'
        540     CALL_FUNCTION                   2
        542     STORE_NAME                      2: time
        544     LOAD_NAME                       2: time
        546     STORE_NAME                      55: _time_class
        548     LOAD_NAME                       2: time
        550     LOAD_CONST                      2: 0
        552     LOAD_CONST                      2: 0
        554     LOAD_CONST                      2: 0
        556     CALL_FUNCTION                   3
        558     LOAD_NAME                       2: time
        560     STORE_ATTR                      45: min
        562     LOAD_NAME                       2: time
        564     LOAD_CONST                      65: 23
        566     LOAD_CONST                      66: 59
        568     LOAD_CONST                      66: 59
        570     LOAD_CONST                      67: 999999
        572     CALL_FUNCTION                   4
        574     LOAD_NAME                       2: time
        576     STORE_ATTR                      46: max
        578     LOAD_NAME                       44: timedelta
        580     LOAD_CONST                      7: 1
        582     LOAD_CONST                      69: ('microseconds',)
        584     CALL_FUNCTION_KW                1
        586     LOAD_NAME                       2: time
        588     STORE_ATTR                      47: resolution
        590     LOAD_BUILD_CLASS                
        592     LOAD_CONST                      81: <CODE> datetime
        594     LOAD_CONST                      82: 'datetime'
        596     MAKE_FUNCTION                   0
        598     LOAD_CONST                      82: 'datetime'
        600     LOAD_NAME                       48: date
        602     CALL_FUNCTION                   3
        604     STORE_NAME                      56: datetime
        606     LOAD_NAME                       56: datetime
        608     LOAD_CONST                      7: 1
        610     LOAD_CONST                      7: 1
        612     LOAD_CONST                      7: 1
        614     CALL_FUNCTION                   3
        616     LOAD_NAME                       56: datetime
        618     STORE_ATTR                      45: min
        620     LOAD_NAME                       56: datetime
        622     LOAD_CONST                      8: 9999
        624     LOAD_CONST                      72: 12
        626     LOAD_CONST                      73: 31
        628     LOAD_CONST                      65: 23
        630     LOAD_CONST                      66: 59
        632     LOAD_CONST                      66: 59
        634     LOAD_CONST                      67: 999999
        636     CALL_FUNCTION                   7
        638     LOAD_NAME                       56: datetime
        640     STORE_ATTR                      46: max
        642     LOAD_NAME                       44: timedelta
        644     LOAD_CONST                      7: 1
        646     LOAD_CONST                      69: ('microseconds',)
        648     CALL_FUNCTION_KW                1
        650     LOAD_NAME                       56: datetime
        652     STORE_ATTR                      47: resolution
        654     LOAD_CONST                      83: <CODE> _isoweek1monday
        656     LOAD_CONST                      84: '_isoweek1monday'
        658     MAKE_FUNCTION                   0
        660     STORE_NAME                      57: _isoweek1monday
        662     LOAD_BUILD_CLASS                
        664     LOAD_CONST                      85: <CODE> timezone
        666     LOAD_CONST                      86: 'timezone'
        668     MAKE_FUNCTION                   0
        670     LOAD_CONST                      86: 'timezone'
        672     LOAD_NAME                       50: tzinfo
        674     CALL_FUNCTION                   3
        676     STORE_NAME                      58: timezone
        678     LOAD_NAME                       58: timezone
        680     LOAD_METHOD                     59: _create
        682     LOAD_NAME                       44: timedelta
        684     LOAD_CONST                      2: 0
        686     CALL_FUNCTION                   1
        688     CALL_METHOD                     1
        690     LOAD_NAME                       58: timezone
        692     STORE_ATTR                      60: utc
        694     LOAD_NAME                       58: timezone
        696     LOAD_METHOD                     59: _create
        698     LOAD_NAME                       44: timedelta
        700     LOAD_CONST                      65: 23
        702     LOAD_CONST                      66: 59
        704     LOAD_CONST                      87: ('hours', 'minutes')
        706     CALL_FUNCTION_KW                2
        708     UNARY_NEGATIVE                  
        710     CALL_METHOD                     1
        712     LOAD_NAME                       58: timezone
        714     STORE_ATTR                      45: min
        716     LOAD_NAME                       58: timezone
        718     LOAD_METHOD                     59: _create
        720     LOAD_NAME                       44: timedelta
        722     LOAD_CONST                      65: 23
        724     LOAD_CONST                      66: 59
        726     LOAD_CONST                      87: ('hours', 'minutes')
        728     CALL_FUNCTION_KW                2
        730     CALL_METHOD                     1
        732     LOAD_NAME                       58: timezone
        734     STORE_ATTR                      46: max
        736     LOAD_NAME                       56: datetime
        738     LOAD_CONST                      88: 1970
        740     LOAD_CONST                      7: 1
        742     LOAD_CONST                      7: 1
        744     LOAD_NAME                       58: timezone
        746     LOAD_ATTR                       60: utc
        748     LOAD_CONST                      89: ('tzinfo',)
        750     CALL_FUNCTION_KW                4
        752     STORE_NAME                      61: _EPOCH
        754     SETUP_FINALLY                   6 (to 768)
        756     LOAD_CONST                      2: 0
        758     LOAD_CONST                      90: ('*',)
        760     IMPORT_NAME                     62: _datetime
        762     IMPORT_STAR                     
        764     POP_BLOCK                       
        766     JUMP_FORWARD                    11 (to 790)
        768     DUP_TOP                         
        770     LOAD_NAME                       63: ImportError
        772     JUMP_IF_NOT_EXC_MATCH           394 (to 788)
        776     POP_TOP                         
        778     POP_TOP                         
        780     POP_TOP                         
        782     POP_EXCEPT                      
        784     LOAD_CONST                      3: None
        786     RETURN_VALUE                    
        788     RERAISE                         0
        790     DELETE_NAME                     29: _DAYNAMES
        792     DELETE_NAME                     15: _DAYS_BEFORE_MONTH
        794     DELETE_NAME                     14: _DAYS_IN_MONTH
        796     DELETE_NAME                     25: _DI100Y
        798     DELETE_NAME                     24: _DI400Y
        800     DELETE_NAME                     26: _DI4Y
        802     DELETE_NAME                     61: _EPOCH
        804     DELETE_NAME                     13: _MAXORDINAL
        806     DELETE_NAME                     28: _MONTHNAMES
        808     DELETE_NAME                     30: _build_struct_time
        810     DELETE_NAME                     39: _check_date_fields
        812     DELETE_NAME                     40: _check_time_fields
        814     DELETE_NAME                     41: _check_tzinfo_arg
        816     DELETE_NAME                     37: _check_tzname
        818     DELETE_NAME                     38: _check_utc_offset
        820     DELETE_NAME                     10: _cmp
        822     DELETE_NAME                     42: _cmperror
        824     DELETE_NAME                     49: _date_class
        826     DELETE_NAME                     22: _days_before_month
        828     DELETE_NAME                     20: _days_before_year
        830     DELETE_NAME                     21: _days_in_month
        832     DELETE_NAME                     31: _format_time
        834     DELETE_NAME                     32: _format_offset
        836     DELETE_NAME                     9: _index
        838     DELETE_NAME                     19: _is_leap
        840     DELETE_NAME                     57: _isoweek1monday
        842     DELETE_NAME                     5: _math
        844     DELETE_NAME                     27: _ord2ymd
        846     DELETE_NAME                     3: _time
        848     DELETE_NAME                     55: _time_class
        850     DELETE_NAME                     54: _tzinfo_class
        852     DELETE_NAME                     33: _wrap_strftime
        854     DELETE_NAME                     23: _ymd2ord
        856     DELETE_NAME                     43: _divide_and_round
        858     DELETE_NAME                     34: _parse_isoformat_date
        860     DELETE_NAME                     36: _parse_isoformat_time
        862     DELETE_NAME                     35: _parse_hh_mm_ss_ff
        864     DELETE_NAME                     53: _IsoCalendarDate
        866     LOAD_CONST                      2: 0
        868     LOAD_CONST                      91: ('__doc__',)
        870     IMPORT_NAME                     62: _datetime
        872     IMPORT_FROM                     0: __doc__
        874     STORE_NAME                      0: __doc__
        876     POP_TOP                         
        878     LOAD_CONST                      3: None
        880     RETURN_VALUE                    
