message.pyc (Python 3.10)
[Code]
    File Name: email/message.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 4
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        '__all__'
        're'
        'uu'
        'quopri'
        'io'
        'BytesIO'
        'StringIO'
        'email'
        'utils'
        'errors'
        'email._policybase'
        'Policy'
        'compat32'
        'charset'
        '_charset'
        'email._encoded_words'
        'decode_b'
        'Charset'
        'SEMISPACE'
        'compile'
        'tspecials'
        '_splitparam'
        '_formatparam'
        '_parseparam'
        '_unquotevalue'
        'Message'
        'MIMEPart'
        'EmailMessage'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        'Basic message object for the email package object model.'
        'Message'
        'EmailMessage'
        0
        None
        (
            'BytesIO'
            'StringIO'
        )
        (
            'utils'
        )
        (
            'errors'
        )
        (
            'Policy'
            'compat32'
        )
        (
            'charset'
        )
        (
            'decode_b'
        )
        '; '
        '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
        [Code]
            File Name: email/message.py
            Object Name: _splitparam
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'str'
                'partition'
                'strip'
            [Var Names]
                'param'
                'a'
                'sep'
                'b'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                ';'
            [Disassembly]
                0       LOAD_GLOBAL                     0: str
                2       LOAD_FAST                       0: param
                4       CALL_FUNCTION                   1
                6       LOAD_METHOD                     1: partition
                8       LOAD_CONST                      1: ';'
                10      CALL_METHOD                     1
                12      UNPACK_SEQUENCE                 3
                14      STORE_FAST                      1: a
                16      STORE_FAST                      2: sep
                18      STORE_FAST                      3: b
                20      LOAD_FAST                       2: sep
                22      POP_JUMP_IF_TRUE                18 (to 36)
                24      LOAD_FAST                       1: a
                26      LOAD_METHOD                     2: strip
                28      CALL_METHOD                     0
                30      LOAD_CONST                      0: None
                32      BUILD_TUPLE                     2
                34      RETURN_VALUE                    
                36      LOAD_FAST                       1: a
                38      LOAD_METHOD                     2: strip
                40      CALL_METHOD                     0
                42      LOAD_FAST                       3: b
                44      LOAD_METHOD                     2: strip
                46      CALL_METHOD                     0
                48      BUILD_TUPLE                     2
                50      RETURN_VALUE                    
        '_splitparam'
        True
        [Code]
            File Name: email/message.py
            Object Name: _formatparam
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'len'
                'isinstance'
                'tuple'
                'utils'
                'encode_rfc2231'
                'encode'
                'UnicodeEncodeError'
                'tspecials'
                'search'
                'quote'
            [Var Names]
                'param'
                'value'
                'quote'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Convenience function to format and return a key=value pair.\n\n    This will quote the value if needed or if quote is true.  If value is a\n    three tuple (charset, language, value), it will be encoded according\n    to RFC2231 rules.  If it contains non-ascii characters it will likewise\n    be encoded according to RFC2231 rules, using the utf-8 charset and\n    a null language.\n    '
                None
                0
                '*'
                2
                1
                '%s=%s'
                'ascii'
                'utf-8'
                ''
                '%s="%s"'
            [Disassembly]
                0       LOAD_FAST                       1: value
                2       LOAD_CONST                      1: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               94 (to 188)
                8       LOAD_GLOBAL                     0: len
                10      LOAD_FAST                       1: value
                12      CALL_FUNCTION                   1
                14      LOAD_CONST                      2: 0
                16      COMPARE_OP                      4 (>)
                18      POP_JUMP_IF_FALSE               94 (to 188)
                20      LOAD_GLOBAL                     1: isinstance
                22      LOAD_FAST                       1: value
                24      LOAD_GLOBAL                     2: tuple
                26      CALL_FUNCTION                   2
                28      POP_JUMP_IF_FALSE               38 (to 76)
                30      LOAD_FAST                       0: param
                32      LOAD_CONST                      3: '*'
                34      INPLACE_ADD                     
                36      STORE_FAST                      0: param
                38      LOAD_GLOBAL                     3: utils
                40      LOAD_METHOD                     4: encode_rfc2231
                42      LOAD_FAST                       1: value
                44      LOAD_CONST                      4: 2
                46      BINARY_SUBSCR                   
                48      LOAD_FAST                       1: value
                50      LOAD_CONST                      2: 0
                52      BINARY_SUBSCR                   
                54      LOAD_FAST                       1: value
                56      LOAD_CONST                      5: 1
                58      BINARY_SUBSCR                   
                60      CALL_METHOD                     3
                62      STORE_FAST                      1: value
                64      LOAD_CONST                      6: '%s=%s'
                66      LOAD_FAST                       0: param
                68      LOAD_FAST                       1: value
                70      BUILD_TUPLE                     2
                72      BINARY_MODULO                   
                74      RETURN_VALUE                    
                76      SETUP_FINALLY                   7 (to 92)
                78      LOAD_FAST                       1: value
                80      LOAD_METHOD                     5: encode
                82      LOAD_CONST                      7: 'ascii'
                84      CALL_METHOD                     1
                86      POP_TOP                         
                88      POP_BLOCK                       
                90      JUMP_FORWARD                    26 (to 144)
                92      DUP_TOP                         
                94      LOAD_GLOBAL                     6: UnicodeEncodeError
                96      JUMP_IF_NOT_EXC_MATCH           71 (to 142)
                98      POP_TOP                         
                100     POP_TOP                         
                102     POP_TOP                         
                104     LOAD_FAST                       0: param
                106     LOAD_CONST                      3: '*'
                108     INPLACE_ADD                     
                110     STORE_FAST                      0: param
                112     LOAD_GLOBAL                     3: utils
                114     LOAD_METHOD                     4: encode_rfc2231
                116     LOAD_FAST                       1: value
                118     LOAD_CONST                      8: 'utf-8'
                120     LOAD_CONST                      9: ''
                122     CALL_METHOD                     3
                124     STORE_FAST                      1: value
                126     LOAD_CONST                      6: '%s=%s'
                128     LOAD_FAST                       0: param
                130     LOAD_FAST                       1: value
                132     BUILD_TUPLE                     2
                134     BINARY_MODULO                   
                136     ROT_FOUR                        
                138     POP_EXCEPT                      
                140     RETURN_VALUE                    
                142     RERAISE                         0
                144     LOAD_FAST                       2: quote
                146     POP_JUMP_IF_TRUE                79 (to 158)
                148     LOAD_GLOBAL                     7: tspecials
                150     LOAD_METHOD                     8: search
                152     LOAD_FAST                       1: value
                154     CALL_METHOD                     1
                156     POP_JUMP_IF_FALSE               88 (to 176)
                158     LOAD_CONST                      10: '%s="%s"'
                160     LOAD_FAST                       0: param
                162     LOAD_GLOBAL                     3: utils
                164     LOAD_METHOD                     9: quote
                166     LOAD_FAST                       1: value
                168     CALL_METHOD                     1
                170     BUILD_TUPLE                     2
                172     BINARY_MODULO                   
                174     RETURN_VALUE                    
                176     LOAD_CONST                      6: '%s=%s'
                178     LOAD_FAST                       0: param
                180     LOAD_FAST                       1: value
                182     BUILD_TUPLE                     2
                184     BINARY_MODULO                   
                186     RETURN_VALUE                    
                188     LOAD_FAST                       0: param
                190     RETURN_VALUE                    
        '_formatparam'
        [Code]
            File Name: email/message.py
            Object Name: _parseparam
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'str'
                'find'
                'count'
                'len'
                'index'
                'strip'
                'lower'
                'append'
            [Var Names]
                's'
                'plist'
                'end'
                'f'
                'i'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                ';'
                1
                0
                '"'
                '\\"'
                2
                '='
            [Disassembly]
                0       LOAD_CONST                      1: ';'
                2       LOAD_GLOBAL                     0: str
                4       LOAD_FAST                       0: s
                6       CALL_FUNCTION                   1
                8       BINARY_ADD                      
                10      STORE_FAST                      0: s
                12      BUILD_LIST                      0
                14      STORE_FAST                      1: plist
                16      LOAD_FAST                       0: s
                18      LOAD_CONST                      0: None
                20      LOAD_CONST                      2: 1
                22      BUILD_SLICE                     2
                24      BINARY_SUBSCR                   
                26      LOAD_CONST                      1: ';'
                28      COMPARE_OP                      2 (==)
                30      POP_JUMP_IF_FALSE               141 (to 282)
                32      LOAD_FAST                       0: s
                34      LOAD_CONST                      2: 1
                36      LOAD_CONST                      0: None
                38      BUILD_SLICE                     2
                40      BINARY_SUBSCR                   
                42      STORE_FAST                      0: s
                44      LOAD_FAST                       0: s
                46      LOAD_METHOD                     1: find
                48      LOAD_CONST                      1: ';'
                50      CALL_METHOD                     1
                52      STORE_FAST                      2: end
                54      LOAD_FAST                       2: end
                56      LOAD_CONST                      3: 0
                58      COMPARE_OP                      4 (>)
                60      POP_JUMP_IF_FALSE               75 (to 150)
                62      LOAD_FAST                       0: s
                64      LOAD_METHOD                     2: count
                66      LOAD_CONST                      4: '"'
                68      LOAD_CONST                      3: 0
                70      LOAD_FAST                       2: end
                72      CALL_METHOD                     3
                74      LOAD_FAST                       0: s
                76      LOAD_METHOD                     2: count
                78      LOAD_CONST                      5: '\\"'
                80      LOAD_CONST                      3: 0
                82      LOAD_FAST                       2: end
                84      CALL_METHOD                     3
                86      BINARY_SUBTRACT                 
                88      LOAD_CONST                      6: 2
                90      BINARY_MODULO                   
                92      POP_JUMP_IF_FALSE               75 (to 150)
                94      LOAD_FAST                       0: s
                96      LOAD_METHOD                     1: find
                98      LOAD_CONST                      1: ';'
                100     LOAD_FAST                       2: end
                102     LOAD_CONST                      2: 1
                104     BINARY_ADD                      
                106     CALL_METHOD                     2
                108     STORE_FAST                      2: end
                110     LOAD_FAST                       2: end
                112     LOAD_CONST                      3: 0
                114     COMPARE_OP                      4 (>)
                116     POP_JUMP_IF_FALSE               75 (to 150)
                118     LOAD_FAST                       0: s
                120     LOAD_METHOD                     2: count
                122     LOAD_CONST                      4: '"'
                124     LOAD_CONST                      3: 0
                126     LOAD_FAST                       2: end
                128     CALL_METHOD                     3
                130     LOAD_FAST                       0: s
                132     LOAD_METHOD                     2: count
                134     LOAD_CONST                      5: '\\"'
                136     LOAD_CONST                      3: 0
                138     LOAD_FAST                       2: end
                140     CALL_METHOD                     3
                142     BINARY_SUBTRACT                 
                144     LOAD_CONST                      6: 2
                146     BINARY_MODULO                   
                148     POP_JUMP_IF_TRUE                47 (to 94)
                150     LOAD_FAST                       2: end
                152     LOAD_CONST                      3: 0
                154     COMPARE_OP                      0 (<)
                156     POP_JUMP_IF_FALSE               83 (to 166)
                158     LOAD_GLOBAL                     3: len
                160     LOAD_FAST                       0: s
                162     CALL_FUNCTION                   1
                164     STORE_FAST                      2: end
                166     LOAD_FAST                       0: s
                168     LOAD_CONST                      0: None
                170     LOAD_FAST                       2: end
                172     BUILD_SLICE                     2
                174     BINARY_SUBSCR                   
                176     STORE_FAST                      3: f
                178     LOAD_CONST                      7: '='
                180     LOAD_FAST                       3: f
                182     CONTAINS_OP                     0 (in)
                184     POP_JUMP_IF_FALSE               120 (to 240)
                186     LOAD_FAST                       3: f
                188     LOAD_METHOD                     4: index
                190     LOAD_CONST                      7: '='
                192     CALL_METHOD                     1
                194     STORE_FAST                      4: i
                196     LOAD_FAST                       3: f
                198     LOAD_CONST                      0: None
                200     LOAD_FAST                       4: i
                202     BUILD_SLICE                     2
                204     BINARY_SUBSCR                   
                206     LOAD_METHOD                     5: strip
                208     CALL_METHOD                     0
                210     LOAD_METHOD                     6: lower
                212     CALL_METHOD                     0
                214     LOAD_CONST                      7: '='
                216     BINARY_ADD                      
                218     LOAD_FAST                       3: f
                220     LOAD_FAST                       4: i
                222     LOAD_CONST                      2: 1
                224     BINARY_ADD                      
                226     LOAD_CONST                      0: None
                228     BUILD_SLICE                     2
                230     BINARY_SUBSCR                   
                232     LOAD_METHOD                     5: strip
                234     CALL_METHOD                     0
                236     BINARY_ADD                      
                238     STORE_FAST                      3: f
                240     LOAD_FAST                       1: plist
                242     LOAD_METHOD                     7: append
                244     LOAD_FAST                       3: f
                246     LOAD_METHOD                     5: strip
                248     CALL_METHOD                     0
                250     CALL_METHOD                     1
                252     POP_TOP                         
                254     LOAD_FAST                       0: s
                256     LOAD_FAST                       2: end
                258     LOAD_CONST                      0: None
                260     BUILD_SLICE                     2
                262     BINARY_SUBSCR                   
                264     STORE_FAST                      0: s
                266     LOAD_FAST                       0: s
                268     LOAD_CONST                      0: None
                270     LOAD_CONST                      2: 1
                272     BUILD_SLICE                     2
                274     BINARY_SUBSCR                   
                276     LOAD_CONST                      1: ';'
                278     COMPARE_OP                      2 (==)
                280     POP_JUMP_IF_TRUE                16 (to 32)
                282     LOAD_FAST                       1: plist
                284     RETURN_VALUE                    
        '_parseparam'
        [Code]
            File Name: email/message.py
            Object Name: _unquotevalue
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'tuple'
                'utils'
                'unquote'
            [Var Names]
                'value'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                1
                2
            [Disassembly]
                0       LOAD_GLOBAL                     0: isinstance
                2       LOAD_FAST                       0: value
                4       LOAD_GLOBAL                     1: tuple
                6       CALL_FUNCTION                   2
                8       POP_JUMP_IF_FALSE               19 (to 38)
                10      LOAD_FAST                       0: value
                12      LOAD_CONST                      1: 0
                14      BINARY_SUBSCR                   
                16      LOAD_FAST                       0: value
                18      LOAD_CONST                      2: 1
                20      BINARY_SUBSCR                   
                22      LOAD_GLOBAL                     2: utils
                24      LOAD_METHOD                     3: unquote
                26      LOAD_FAST                       0: value
                28      LOAD_CONST                      3: 2
                30      BINARY_SUBSCR                   
                32      CALL_METHOD                     1
                34      BUILD_TUPLE                     3
                36      RETURN_VALUE                    
                38      LOAD_GLOBAL                     2: utils
                40      LOAD_METHOD                     3: unquote
                42      LOAD_FAST                       0: value
                44      CALL_METHOD                     1
                46      RETURN_VALUE                    
        '_unquotevalue'
        [Code]
            File Name: email/message.py
            Object Name: Message
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'compat32'
                '__init__'
                '__str__'
                'as_string'
                '__bytes__'
                'as_bytes'
                'is_multipart'
                'set_unixfrom'
                'get_unixfrom'
                'attach'
                'get_payload'
                'set_payload'
                'set_charset'
                'get_charset'
                '__len__'
                '__getitem__'
                '__setitem__'
                '__delitem__'
                '__contains__'
                '__iter__'
                'keys'
                'values'
                'items'
                'get'
                'set_raw'
                'raw_items'
                'get_all'
                'add_header'
                'replace_header'
                'get_content_type'
                'get_content_maintype'
                'get_content_subtype'
                'get_default_type'
                'set_default_type'
                '_get_params_preserve'
                'get_params'
                'get_param'
                'set_param'
                'del_param'
                'set_type'
                'get_filename'
                'get_boundary'
                'set_boundary'
                'get_content_charset'
                'get_charsets'
                'get_content_disposition'
                'email.iterators'
                'walk'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Message'
                "Basic message object.\n\n    A message object is defined as something that has a bunch of RFC 2822\n    headers and a payload.  It may optionally have an envelope header\n    (a.k.a. Unix-From or From_ header).  If the message is a container (i.e. a\n    multipart or a message/rfc822), then the payload is a list of Message\n    objects, otherwise it is a string.\n\n    Message objects implement part of the `mapping' interface, which assumes\n    there is exactly one occurrence of the header per message.  Some headers\n    do in fact appear multiple times (e.g. Received) and for those headers,\n    you must use the explicit API to set or get all the headers.  Not all of\n    the mapping methods are implemented.\n    "
                [Code]
                    File Name: email/message.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'policy'
                        '_headers'
                        '_unixfrom'
                        '_payload'
                        '_charset'
                        'preamble'
                        'epilogue'
                        'defects'
                        '_default_type'
                    [Var Names]
                        'self'
                        'policy'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'text/plain'
                    [Disassembly]
                        0       LOAD_FAST                       1: policy
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: policy
                        6       BUILD_LIST                      0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _headers
                        12      LOAD_CONST                      0: None
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _unixfrom
                        18      LOAD_CONST                      0: None
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: _payload
                        24      LOAD_CONST                      0: None
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      4: _charset
                        30      LOAD_CONST                      0: None
                        32      DUP_TOP                         
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      5: preamble
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      6: epilogue
                        42      BUILD_LIST                      0
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      7: defects
                        48      LOAD_CONST                      1: 'text/plain'
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      8: _default_type
                        54      LOAD_CONST                      0: None
                        56      RETURN_VALUE                    
                'Message.__init__'
                [Code]
                    File Name: email/message.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'as_string'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the entire formatted message as a string.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: as_string
                        4       CALL_METHOD                     0
                        6       RETURN_VALUE                    
                'Message.__str__'
                False
                0
                None
                [Code]
                    File Name: email/message.py
                    Object Name: as_string
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'email.generator'
                        'Generator'
                        'policy'
                        'StringIO'
                        'flatten'
                        'getvalue'
                    [Var Names]
                        'self'
                        'unixfrom'
                        'maxheaderlen'
                        'policy'
                        'Generator'
                        'fp'
                        'g'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the entire formatted message as a string.\n\n        Optional \'unixfrom\', when true, means include the Unix From_ envelope\n        header.  For backward compatibility reasons, if maxheaderlen is\n        not specified it defaults to 0, so you must override it explicitly\n        if you want a different maxheaderlen.  \'policy\' is passed to the\n        Generator instance used to serialize the message; if it is not\n        specified the policy associated with the message instance is used.\n\n        If the message object contains binary data that is not encoded\n        according to RFC standards, the non-compliant data will be replaced by\n        unicode "unknown character" code points.\n        '
                        0
                        (
                            'Generator'
                        )
                        None
                        False
                        (
                            'mangle_from_'
                            'maxheaderlen'
                            'policy'
                        )
                        (
                            'unixfrom'
                        )
                    [Disassembly]
                        0       LOAD_CONST                      1: 0
                        2       LOAD_CONST                      2: ('Generator',)
                        4       IMPORT_NAME                     0: email.generator
                        6       IMPORT_FROM                     1: Generator
                        8       STORE_FAST                      4: Generator
                        10      POP_TOP                         
                        12      LOAD_FAST                       3: policy
                        14      LOAD_CONST                      3: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               13 (to 26)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: policy
                        24      JUMP_FORWARD                    1 (to 28)
                        26      LOAD_FAST                       3: policy
                        28      STORE_FAST                      3: policy
                        30      LOAD_GLOBAL                     3: StringIO
                        32      CALL_FUNCTION                   0
                        34      STORE_FAST                      5: fp
                        36      LOAD_FAST                       4: Generator
                        38      LOAD_FAST                       5: fp
                        40      LOAD_CONST                      4: False
                        42      LOAD_FAST                       2: maxheaderlen
                        44      LOAD_FAST                       3: policy
                        46      LOAD_CONST                      5: ('mangle_from_', 'maxheaderlen', 'policy')
                        48      CALL_FUNCTION_KW                4
                        50      STORE_FAST                      6: g
                        52      LOAD_FAST                       6: g
                        54      LOAD_ATTR                       4: flatten
                        56      LOAD_FAST                       0: self
                        58      LOAD_FAST                       1: unixfrom
                        60      LOAD_CONST                      6: ('unixfrom',)
                        62      CALL_FUNCTION_KW                2
                        64      POP_TOP                         
                        66      LOAD_FAST                       5: fp
                        68      LOAD_METHOD                     5: getvalue
                        70      CALL_METHOD                     0
                        72      RETURN_VALUE                    
                'Message.as_string'
                [Code]
                    File Name: email/message.py
                    Object Name: __bytes__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'as_bytes'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the entire formatted message as a bytes object.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: as_bytes
                        4       CALL_METHOD                     0
                        6       RETURN_VALUE                    
                'Message.__bytes__'
                [Code]
                    File Name: email/message.py
                    Object Name: as_bytes
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'email.generator'
                        'BytesGenerator'
                        'policy'
                        'BytesIO'
                        'flatten'
                        'getvalue'
                    [Var Names]
                        'self'
                        'unixfrom'
                        'policy'
                        'BytesGenerator'
                        'fp'
                        'g'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the entire formatted message as a bytes object.\n\n        Optional 'unixfrom', when true, means include the Unix From_ envelope\n        header.  'policy' is passed to the BytesGenerator instance used to\n        serialize the message; if not specified the policy associated with\n        the message instance is used.\n        "
                        0
                        (
                            'BytesGenerator'
                        )
                        None
                        False
                        (
                            'mangle_from_'
                            'policy'
                        )
                        (
                            'unixfrom'
                        )
                    [Disassembly]
                        0       LOAD_CONST                      1: 0
                        2       LOAD_CONST                      2: ('BytesGenerator',)
                        4       IMPORT_NAME                     0: email.generator
                        6       IMPORT_FROM                     1: BytesGenerator
                        8       STORE_FAST                      3: BytesGenerator
                        10      POP_TOP                         
                        12      LOAD_FAST                       2: policy
                        14      LOAD_CONST                      3: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               13 (to 26)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: policy
                        24      JUMP_FORWARD                    1 (to 28)
                        26      LOAD_FAST                       2: policy
                        28      STORE_FAST                      2: policy
                        30      LOAD_GLOBAL                     3: BytesIO
                        32      CALL_FUNCTION                   0
                        34      STORE_FAST                      4: fp
                        36      LOAD_FAST                       3: BytesGenerator
                        38      LOAD_FAST                       4: fp
                        40      LOAD_CONST                      4: False
                        42      LOAD_FAST                       2: policy
                        44      LOAD_CONST                      5: ('mangle_from_', 'policy')
                        46      CALL_FUNCTION_KW                3
                        48      STORE_FAST                      5: g
                        50      LOAD_FAST                       5: g
                        52      LOAD_ATTR                       4: flatten
                        54      LOAD_FAST                       0: self
                        56      LOAD_FAST                       1: unixfrom
                        58      LOAD_CONST                      6: ('unixfrom',)
                        60      CALL_FUNCTION_KW                2
                        62      POP_TOP                         
                        64      LOAD_FAST                       4: fp
                        66      LOAD_METHOD                     5: getvalue
                        68      CALL_METHOD                     0
                        70      RETURN_VALUE                    
                'Message.as_bytes'
                [Code]
                    File Name: email/message.py
                    Object Name: is_multipart
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        '_payload'
                        'list'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if the message consists of multiple parts.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _payload
                        6       LOAD_GLOBAL                     2: list
                        8       CALL_FUNCTION                   2
                        10      RETURN_VALUE                    
                'Message.is_multipart'
                [Code]
                    File Name: email/message.py
                    Object Name: set_unixfrom
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_unixfrom'
                    [Var Names]
                        'self'
                        'unixfrom'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: unixfrom
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _unixfrom
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'Message.set_unixfrom'
                [Code]
                    File Name: email/message.py
                    Object Name: get_unixfrom
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_unixfrom'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _unixfrom
                        4       RETURN_VALUE                    
                'Message.get_unixfrom'
                [Code]
                    File Name: email/message.py
                    Object Name: attach
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_payload'
                        'append'
                        'AttributeError'
                        'TypeError'
                    [Var Names]
                        'self'
                        'payload'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Add the given payload to the current payload.\n\n        The current payload will always be a list of objects after this method\n        is called.  If you want to set the payload to a scalar object, use\n        set_payload() instead.\n        '
                        None
                        'Attach is not valid on a message with a non-multipart payload'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _payload
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       1: payload
                        12      BUILD_LIST                      1
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      0: _payload
                        18      LOAD_CONST                      1: None
                        20      RETURN_VALUE                    
                        22      SETUP_FINALLY                   9 (to 42)
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       0: _payload
                        28      LOAD_METHOD                     1: append
                        30      LOAD_FAST                       1: payload
                        32      CALL_METHOD                     1
                        34      POP_TOP                         
                        36      POP_BLOCK                       
                        38      LOAD_CONST                      1: None
                        40      RETURN_VALUE                    
                        42      DUP_TOP                         
                        44      LOAD_GLOBAL                     2: AttributeError
                        46      JUMP_IF_NOT_EXC_MATCH           31 (to 62)
                        48      POP_TOP                         
                        50      POP_TOP                         
                        52      POP_TOP                         
                        54      LOAD_GLOBAL                     3: TypeError
                        56      LOAD_CONST                      2: 'Attach is not valid on a message with a non-multipart payload'
                        58      CALL_FUNCTION                   1
                        60      RAISE_VARARGS                   1
                        62      RERAISE                         0
                'Message.attach'
                [Code]
                    File Name: email/message.py
                    Object Name: get_payload
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'is_multipart'
                        '_payload'
                        'isinstance'
                        'list'
                        'TypeError'
                        'type'
                        'str'
                        'get'
                        'lower'
                        'utils'
                        '_has_surrogates'
                        'encode'
                        'decode'
                        'get_param'
                        'LookupError'
                        'UnicodeError'
                        'quopri'
                        'decodestring'
                        'decode_b'
                        'join'
                        'splitlines'
                        'policy'
                        'handle_defect'
                        'BytesIO'
                        'uu'
                        'getvalue'
                        'Error'
                    [Var Names]
                        'self'
                        'i'
                        'decode'
                        'payload'
                        'cte'
                        'bpayload'
                        'value'
                        'defects'
                        'defect'
                        'in_file'
                        'out_file'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return a reference to the payload.\n\n        The payload will either be a list object or a string.  If you mutate\n        the list object, you modify the message's payload in place.  Optional\n        i returns that index into the payload.\n\n        Optional decode is a flag indicating whether the payload should be\n        decoded or not, according to the Content-Transfer-Encoding header\n        (default is False).\n\n        When True and the message is not a multipart, the payload will be\n        decoded if this header's value is `quoted-printable' or `base64'.  If\n        some other encoding is used, or the header is missing, or if the\n        payload has bogus data (i.e. bogus base64 or uuencoded data), the\n        payload is returned as-is.\n\n        If the message is a multipart and the decode flag is True, then None\n        is returned.\n        "
                        None
                        'Expected list, got %s'
                        'content-transfer-encoding'
                        ''
                        'ascii'
                        'surrogateescape'
                        'charset'
                        'replace'
                        'raw-unicode-escape'
                        'quoted-printable'
                        'base64'
                        b''
                        (
                            'x-uuencode'
                            'uuencode'
                            'uue'
                            'x-uue'
                        )
                        True
                        (
                            'quiet'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: is_multipart
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               20 (to 40)
                        8       LOAD_FAST                       2: decode
                        10      POP_JUMP_IF_FALSE               8 (to 16)
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       1: i
                        18      LOAD_CONST                      1: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               15 (to 30)
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       1: _payload
                        28      RETURN_VALUE                    
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       1: _payload
                        34      LOAD_FAST                       1: i
                        36      BINARY_SUBSCR                   
                        38      RETURN_VALUE                    
                        40      LOAD_FAST                       1: i
                        42      LOAD_CONST                      1: None
                        44      IS_OP                           1 (is not)
                        46      POP_JUMP_IF_FALSE               39 (to 78)
                        48      LOAD_GLOBAL                     2: isinstance
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       1: _payload
                        54      LOAD_GLOBAL                     3: list
                        56      CALL_FUNCTION                   2
                        58      POP_JUMP_IF_TRUE                39 (to 78)
                        60      LOAD_GLOBAL                     4: TypeError
                        62      LOAD_CONST                      2: 'Expected list, got %s'
                        64      LOAD_GLOBAL                     5: type
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       1: _payload
                        70      CALL_FUNCTION                   1
                        72      BINARY_MODULO                   
                        74      CALL_FUNCTION                   1
                        76      RAISE_VARARGS                   1
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       1: _payload
                        82      STORE_FAST                      3: payload
                        84      LOAD_GLOBAL                     6: str
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     7: get
                        90      LOAD_CONST                      3: 'content-transfer-encoding'
                        92      LOAD_CONST                      4: ''
                        94      CALL_METHOD                     2
                        96      CALL_FUNCTION                   1
                        98      LOAD_METHOD                     8: lower
                        100     CALL_METHOD                     0
                        102     STORE_FAST                      4: cte
                        104     LOAD_GLOBAL                     2: isinstance
                        106     LOAD_FAST                       3: payload
                        108     LOAD_GLOBAL                     6: str
                        110     CALL_FUNCTION                   2
                        112     POP_JUMP_IF_FALSE               123 (to 246)
                        114     LOAD_GLOBAL                     9: utils
                        116     LOAD_METHOD                     10: _has_surrogates
                        118     LOAD_FAST                       3: payload
                        120     CALL_METHOD                     1
                        122     POP_JUMP_IF_FALSE               99 (to 198)
                        124     LOAD_FAST                       3: payload
                        126     LOAD_METHOD                     11: encode
                        128     LOAD_CONST                      5: 'ascii'
                        130     LOAD_CONST                      6: 'surrogateescape'
                        132     CALL_METHOD                     2
                        134     STORE_FAST                      5: bpayload
                        136     LOAD_FAST                       2: decode
                        138     POP_JUMP_IF_TRUE                98 (to 196)
                        140     SETUP_FINALLY                   12 (to 166)
                        142     LOAD_FAST                       5: bpayload
                        144     LOAD_METHOD                     12: decode
                        146     LOAD_FAST                       0: self
                        148     LOAD_METHOD                     13: get_param
                        150     LOAD_CONST                      7: 'charset'
                        152     LOAD_CONST                      5: 'ascii'
                        154     CALL_METHOD                     2
                        156     LOAD_CONST                      8: 'replace'
                        158     CALL_METHOD                     2
                        160     STORE_FAST                      3: payload
                        162     POP_BLOCK                       
                        164     JUMP_FORWARD                    40 (to 246)
                        166     DUP_TOP                         
                        168     LOAD_GLOBAL                     14: LookupError
                        170     JUMP_IF_NOT_EXC_MATCH           97 (to 194)
                        172     POP_TOP                         
                        174     POP_TOP                         
                        176     POP_TOP                         
                        178     LOAD_FAST                       5: bpayload
                        180     LOAD_METHOD                     12: decode
                        182     LOAD_CONST                      5: 'ascii'
                        184     LOAD_CONST                      8: 'replace'
                        186     CALL_METHOD                     2
                        188     STORE_FAST                      3: payload
                        190     POP_EXCEPT                      
                        192     JUMP_FORWARD                    26 (to 246)
                        194     RERAISE                         0
                        196     JUMP_FORWARD                    24 (to 246)
                        198     LOAD_FAST                       2: decode
                        200     POP_JUMP_IF_FALSE               123 (to 246)
                        202     SETUP_FINALLY                   7 (to 218)
                        204     LOAD_FAST                       3: payload
                        206     LOAD_METHOD                     11: encode
                        208     LOAD_CONST                      5: 'ascii'
                        210     CALL_METHOD                     1
                        212     STORE_FAST                      5: bpayload
                        214     POP_BLOCK                       
                        216     JUMP_FORWARD                    14 (to 246)
                        218     DUP_TOP                         
                        220     LOAD_GLOBAL                     15: UnicodeError
                        222     JUMP_IF_NOT_EXC_MATCH           122 (to 244)
                        224     POP_TOP                         
                        226     POP_TOP                         
                        228     POP_TOP                         
                        230     LOAD_FAST                       3: payload
                        232     LOAD_METHOD                     11: encode
                        234     LOAD_CONST                      9: 'raw-unicode-escape'
                        236     CALL_METHOD                     1
                        238     STORE_FAST                      5: bpayload
                        240     POP_EXCEPT                      
                        242     JUMP_FORWARD                    1 (to 246)
                        244     RERAISE                         0
                        246     LOAD_FAST                       2: decode
                        248     POP_JUMP_IF_TRUE                127 (to 254)
                        250     LOAD_FAST                       3: payload
                        252     RETURN_VALUE                    
                        254     LOAD_FAST                       4: cte
                        256     LOAD_CONST                      10: 'quoted-printable'
                        258     COMPARE_OP                      2 (==)
                        260     POP_JUMP_IF_FALSE               136 (to 272)
                        262     LOAD_GLOBAL                     16: quopri
                        264     LOAD_METHOD                     17: decodestring
                        266     LOAD_FAST                       5: bpayload
                        268     CALL_METHOD                     1
                        270     RETURN_VALUE                    
                        272     LOAD_FAST                       4: cte
                        274     LOAD_CONST                      11: 'base64'
                        276     COMPARE_OP                      2 (==)
                        278     POP_JUMP_IF_FALSE               165 (to 330)
                        280     LOAD_GLOBAL                     18: decode_b
                        282     LOAD_CONST                      12: b''
                        284     LOAD_METHOD                     19: join
                        286     LOAD_FAST                       5: bpayload
                        288     LOAD_METHOD                     20: splitlines
                        290     CALL_METHOD                     0
                        292     CALL_METHOD                     1
                        294     CALL_FUNCTION                   1
                        296     UNPACK_SEQUENCE                 2
                        298     STORE_FAST                      6: value
                        300     STORE_FAST                      7: defects
                        302     LOAD_FAST                       7: defects
                        304     GET_ITER                        
                        306     FOR_ITER                        9 (to 326)
                        308     STORE_FAST                      8: defect
                        310     LOAD_FAST                       0: self
                        312     LOAD_ATTR                       21: policy
                        314     LOAD_METHOD                     22: handle_defect
                        316     LOAD_FAST                       0: self
                        318     LOAD_FAST                       8: defect
                        320     CALL_METHOD                     2
                        322     POP_TOP                         
                        324     JUMP_ABSOLUTE                   153 (to 306)
                        326     LOAD_FAST                       6: value
                        328     RETURN_VALUE                    
                        330     LOAD_FAST                       4: cte
                        332     LOAD_CONST                      13: ('x-uuencode', 'uuencode', 'uue', 'x-uue')
                        334     CONTAINS_OP                     0 (in)
                        336     POP_JUMP_IF_FALSE               202 (to 404)
                        338     LOAD_GLOBAL                     23: BytesIO
                        340     LOAD_FAST                       5: bpayload
                        342     CALL_FUNCTION                   1
                        344     STORE_FAST                      9: in_file
                        346     LOAD_GLOBAL                     23: BytesIO
                        348     CALL_FUNCTION                   0
                        350     STORE_FAST                      10: out_file
                        352     SETUP_FINALLY                   13 (to 380)
                        354     LOAD_GLOBAL                     24: uu
                        356     LOAD_ATTR                       12: decode
                        358     LOAD_FAST                       9: in_file
                        360     LOAD_FAST                       10: out_file
                        362     LOAD_CONST                      14: True
                        364     LOAD_CONST                      15: ('quiet',)
                        366     CALL_FUNCTION_KW                3
                        368     POP_TOP                         
                        370     LOAD_FAST                       10: out_file
                        372     LOAD_METHOD                     25: getvalue
                        374     CALL_METHOD                     0
                        376     POP_BLOCK                       
                        378     RETURN_VALUE                    
                        380     DUP_TOP                         
                        382     LOAD_GLOBAL                     24: uu
                        384     LOAD_ATTR                       26: Error
                        386     JUMP_IF_NOT_EXC_MATCH           201 (to 402)
                        388     POP_TOP                         
                        390     POP_TOP                         
                        392     POP_TOP                         
                        394     LOAD_FAST                       5: bpayload
                        396     ROT_FOUR                        
                        398     POP_EXCEPT                      
                        400     RETURN_VALUE                    
                        402     RERAISE                         0
                        404     LOAD_GLOBAL                     2: isinstance
                        406     LOAD_FAST                       3: payload
                        408     LOAD_GLOBAL                     6: str
                        410     CALL_FUNCTION                   2
                        412     POP_JUMP_IF_FALSE               209 (to 418)
                        414     LOAD_FAST                       5: bpayload
                        416     RETURN_VALUE                    
                        418     LOAD_FAST                       3: payload
                        420     RETURN_VALUE                    
                'Message.get_payload'
                [Code]
                    File Name: email/message.py
                    Object Name: set_payload
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        '_payload'
                        'isinstance'
                        'Charset'
                        'encode'
                        'output_charset'
                        'decode'
                        'set_charset'
                    [Var Names]
                        'self'
                        'payload'
                        'charset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Set the payload to the given value.\n\n        Optional charset sets the message's default character set.  See\n        set_charset() for details.\n        "
                        'encode'
                        None
                        'decode'
                        'ascii'
                        'surrogateescape'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_FAST                       1: payload
                        4       LOAD_CONST                      1: 'encode'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               29 (to 58)
                        10      LOAD_FAST                       2: charset
                        12      LOAD_CONST                      2: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               14 (to 28)
                        18      LOAD_FAST                       1: payload
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      1: _payload
                        24      LOAD_CONST                      2: None
                        26      RETURN_VALUE                    
                        28      LOAD_GLOBAL                     2: isinstance
                        30      LOAD_FAST                       2: charset
                        32      LOAD_GLOBAL                     3: Charset
                        34      CALL_FUNCTION                   2
                        36      POP_JUMP_IF_TRUE                23 (to 46)
                        38      LOAD_GLOBAL                     3: Charset
                        40      LOAD_FAST                       2: charset
                        42      CALL_FUNCTION                   1
                        44      STORE_FAST                      2: charset
                        46      LOAD_FAST                       1: payload
                        48      LOAD_METHOD                     4: encode
                        50      LOAD_FAST                       2: charset
                        52      LOAD_ATTR                       5: output_charset
                        54      CALL_METHOD                     1
                        56      STORE_FAST                      1: payload
                        58      LOAD_GLOBAL                     0: hasattr
                        60      LOAD_FAST                       1: payload
                        62      LOAD_CONST                      3: 'decode'
                        64      CALL_FUNCTION                   2
                        66      POP_JUMP_IF_FALSE               42 (to 84)
                        68      LOAD_FAST                       1: payload
                        70      LOAD_METHOD                     6: decode
                        72      LOAD_CONST                      4: 'ascii'
                        74      LOAD_CONST                      5: 'surrogateescape'
                        76      CALL_METHOD                     2
                        78      LOAD_FAST                       0: self
                        80      STORE_ATTR                      1: _payload
                        82      JUMP_FORWARD                    3 (to 90)
                        84      LOAD_FAST                       1: payload
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      1: _payload
                        90      LOAD_FAST                       2: charset
                        92      LOAD_CONST                      2: None
                        94      IS_OP                           1 (is not)
                        96      POP_JUMP_IF_FALSE               56 (to 112)
                        98      LOAD_FAST                       0: self
                        100     LOAD_METHOD                     7: set_charset
                        102     LOAD_FAST                       2: charset
                        104     CALL_METHOD                     1
                        106     POP_TOP                         
                        108     LOAD_CONST                      2: None
                        110     RETURN_VALUE                    
                        112     LOAD_CONST                      2: None
                        114     RETURN_VALUE                    
                'Message.set_payload'
                [Code]
                    File Name: email/message.py
                    Object Name: set_charset
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'del_param'
                        '_charset'
                        'isinstance'
                        'Charset'
                        'add_header'
                        'get_output_charset'
                        'set_param'
                        'body_encode'
                        '_payload'
                        'get_body_encoding'
                        'TypeError'
                        'encode'
                        'UnicodeError'
                        'output_charset'
                    [Var Names]
                        'self'
                        'charset'
                        'cte'
                        'payload'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set the charset of the payload to a given character set.\n\n        charset can be a Charset instance, a string naming a character set, or\n        None.  If it is a string it will be converted to a Charset instance.\n        If charset is None, the charset parameter will be removed from the\n        Content-Type field.  Anything else will generate a TypeError.\n\n        The message will be assumed to be of type text/* encoded with\n        charset.input_charset.  It will be converted to charset.output_charset\n        and encoded properly, if needed, when generating the plain text\n        representation of the message.  MIME headers (MIME-Version,\n        Content-Type, Content-Transfer-Encoding) will be added as needed.\n        '
                        None
                        'charset'
                        'MIME-Version'
                        '1.0'
                        'Content-Type'
                        'text/plain'
                        (
                            'charset'
                        )
                        'Content-Transfer-Encoding'
                        'ascii'
                        'surrogateescape'
                    [Disassembly]
                        0       LOAD_FAST                       1: charset
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               14 (to 28)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: del_param
                        12      LOAD_CONST                      2: 'charset'
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      LOAD_CONST                      1: None
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      1: _charset
                        24      LOAD_CONST                      1: None
                        26      RETURN_VALUE                    
                        28      LOAD_GLOBAL                     2: isinstance
                        30      LOAD_FAST                       1: charset
                        32      LOAD_GLOBAL                     3: Charset
                        34      CALL_FUNCTION                   2
                        36      POP_JUMP_IF_TRUE                23 (to 46)
                        38      LOAD_GLOBAL                     3: Charset
                        40      LOAD_FAST                       1: charset
                        42      CALL_FUNCTION                   1
                        44      STORE_FAST                      1: charset
                        46      LOAD_FAST                       1: charset
                        48      LOAD_FAST                       0: self
                        50      STORE_ATTR                      1: _charset
                        52      LOAD_CONST                      3: 'MIME-Version'
                        54      LOAD_FAST                       0: self
                        56      CONTAINS_OP                     1 (not in)
                        58      POP_JUMP_IF_FALSE               36 (to 72)
                        60      LOAD_FAST                       0: self
                        62      LOAD_METHOD                     4: add_header
                        64      LOAD_CONST                      3: 'MIME-Version'
                        66      LOAD_CONST                      4: '1.0'
                        68      CALL_METHOD                     2
                        70      POP_TOP                         
                        72      LOAD_CONST                      5: 'Content-Type'
                        74      LOAD_FAST                       0: self
                        76      CONTAINS_OP                     1 (not in)
                        78      POP_JUMP_IF_FALSE               51 (to 102)
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       4: add_header
                        84      LOAD_CONST                      5: 'Content-Type'
                        86      LOAD_CONST                      6: 'text/plain'
                        88      LOAD_FAST                       1: charset
                        90      LOAD_METHOD                     5: get_output_charset
                        92      CALL_METHOD                     0
                        94      LOAD_CONST                      7: ('charset',)
                        96      CALL_FUNCTION_KW                3
                        98      POP_TOP                         
                        100     JUMP_FORWARD                    8 (to 118)
                        102     LOAD_FAST                       0: self
                        104     LOAD_METHOD                     6: set_param
                        106     LOAD_CONST                      2: 'charset'
                        108     LOAD_FAST                       1: charset
                        110     LOAD_METHOD                     5: get_output_charset
                        112     CALL_METHOD                     0
                        114     CALL_METHOD                     2
                        116     POP_TOP                         
                        118     LOAD_FAST                       1: charset
                        120     LOAD_FAST                       1: charset
                        122     LOAD_METHOD                     5: get_output_charset
                        124     CALL_METHOD                     0
                        126     COMPARE_OP                      3 (!=)
                        128     POP_JUMP_IF_FALSE               72 (to 144)
                        130     LOAD_FAST                       1: charset
                        132     LOAD_METHOD                     7: body_encode
                        134     LOAD_FAST                       0: self
                        136     LOAD_ATTR                       8: _payload
                        138     CALL_METHOD                     1
                        140     LOAD_FAST                       0: self
                        142     STORE_ATTR                      8: _payload
                        144     LOAD_CONST                      8: 'Content-Transfer-Encoding'
                        146     LOAD_FAST                       0: self
                        148     CONTAINS_OP                     1 (not in)
                        150     POP_JUMP_IF_FALSE               139 (to 278)
                        152     LOAD_FAST                       1: charset
                        154     LOAD_METHOD                     9: get_body_encoding
                        156     CALL_METHOD                     0
                        158     STORE_FAST                      2: cte
                        160     SETUP_FINALLY                   7 (to 176)
                        162     LOAD_FAST                       2: cte
                        164     LOAD_FAST                       0: self
                        166     CALL_FUNCTION                   1
                        168     POP_TOP                         
                        170     POP_BLOCK                       
                        172     LOAD_CONST                      1: None
                        174     RETURN_VALUE                    
                        176     DUP_TOP                         
                        178     LOAD_GLOBAL                     10: TypeError
                        180     JUMP_IF_NOT_EXC_MATCH           138 (to 276)
                        182     POP_TOP                         
                        184     POP_TOP                         
                        186     POP_TOP                         
                        188     LOAD_FAST                       0: self
                        190     LOAD_ATTR                       8: _payload
                        192     STORE_FAST                      3: payload
                        194     LOAD_FAST                       3: payload
                        196     POP_JUMP_IF_FALSE               123 (to 246)
                        198     SETUP_FINALLY                   8 (to 216)
                        200     LOAD_FAST                       3: payload
                        202     LOAD_METHOD                     11: encode
                        204     LOAD_CONST                      9: 'ascii'
                        206     LOAD_CONST                      10: 'surrogateescape'
                        208     CALL_METHOD                     2
                        210     STORE_FAST                      3: payload
                        212     POP_BLOCK                       
                        214     JUMP_FORWARD                    15 (to 246)
                        216     DUP_TOP                         
                        218     LOAD_GLOBAL                     12: UnicodeError
                        220     JUMP_IF_NOT_EXC_MATCH           122 (to 244)
                        222     POP_TOP                         
                        224     POP_TOP                         
                        226     POP_TOP                         
                        228     LOAD_FAST                       3: payload
                        230     LOAD_METHOD                     11: encode
                        232     LOAD_FAST                       1: charset
                        234     LOAD_ATTR                       13: output_charset
                        236     CALL_METHOD                     1
                        238     STORE_FAST                      3: payload
                        240     POP_EXCEPT                      
                        242     JUMP_FORWARD                    1 (to 246)
                        244     RERAISE                         0
                        246     LOAD_FAST                       1: charset
                        248     LOAD_METHOD                     7: body_encode
                        250     LOAD_FAST                       3: payload
                        252     CALL_METHOD                     1
                        254     LOAD_FAST                       0: self
                        256     STORE_ATTR                      8: _payload
                        258     LOAD_FAST                       0: self
                        260     LOAD_METHOD                     4: add_header
                        262     LOAD_CONST                      8: 'Content-Transfer-Encoding'
                        264     LOAD_FAST                       2: cte
                        266     CALL_METHOD                     2
                        268     POP_TOP                         
                        270     POP_EXCEPT                      
                        272     LOAD_CONST                      1: None
                        274     RETURN_VALUE                    
                        276     RERAISE                         0
                        278     LOAD_CONST                      1: None
                        280     RETURN_VALUE                    
                'Message.set_charset'
                [Code]
                    File Name: email/message.py
                    Object Name: get_charset
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_charset'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the Charset instance associated with the message's payload.\n        "
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _charset
                        4       RETURN_VALUE                    
                'Message.get_charset'
                [Code]
                    File Name: email/message.py
                    Object Name: __len__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        '_headers'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the total number of headers, including duplicates.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _headers
                        6       CALL_FUNCTION                   1
                        8       RETURN_VALUE                    
                'Message.__len__'
                [Code]
                    File Name: email/message.py
                    Object Name: __getitem__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Get a header value.\n\n        Return None if the header is missing instead of raising an exception.\n\n        Note that if the header appeared multiple times, exactly which\n        occurrence gets returned is undefined.  Use get_all() to get all\n        the values matching a header field name.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get
                        4       LOAD_FAST                       1: name
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'Message.__getitem__'
                [Code]
                    File Name: email/message.py
                    Object Name: __setitem__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'policy'
                        'header_max_count'
                        'lower'
                        '_headers'
                        'ValueError'
                        'format'
                        'append'
                        'header_store_parse'
                    [Var Names]
                        'self'
                        'name'
                        'val'
                        'max_count'
                        'lname'
                        'found'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set the value of a header.\n\n        Note: this does not overwrite an existing header with the same field\n        name.  Use __delitem__() first to delete any existing headers.\n        '
                        0
                        1
                        'There may be at most {} {} headers in a message'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: policy
                        4       LOAD_METHOD                     1: header_max_count
                        6       LOAD_FAST                       1: name
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      3: max_count
                        12      LOAD_FAST                       3: max_count
                        14      POP_JUMP_IF_FALSE               44 (to 88)
                        16      LOAD_FAST                       1: name
                        18      LOAD_METHOD                     2: lower
                        20      CALL_METHOD                     0
                        22      STORE_FAST                      4: lname
                        24      LOAD_CONST                      1: 0
                        26      STORE_FAST                      5: found
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: _headers
                        32      GET_ITER                        
                        34      FOR_ITER                        26 (to 88)
                        36      UNPACK_SEQUENCE                 2
                        38      STORE_FAST                      6: k
                        40      STORE_FAST                      7: v
                        42      LOAD_FAST                       6: k
                        44      LOAD_METHOD                     2: lower
                        46      CALL_METHOD                     0
                        48      LOAD_FAST                       4: lname
                        50      COMPARE_OP                      2 (==)
                        52      POP_JUMP_IF_FALSE               43 (to 86)
                        54      LOAD_FAST                       5: found
                        56      LOAD_CONST                      2: 1
                        58      INPLACE_ADD                     
                        60      STORE_FAST                      5: found
                        62      LOAD_FAST                       5: found
                        64      LOAD_FAST                       3: max_count
                        66      COMPARE_OP                      5 (>=)
                        68      POP_JUMP_IF_FALSE               43 (to 86)
                        70      LOAD_GLOBAL                     4: ValueError
                        72      LOAD_CONST                      3: 'There may be at most {} {} headers in a message'
                        74      LOAD_METHOD                     5: format
                        76      LOAD_FAST                       3: max_count
                        78      LOAD_FAST                       1: name
                        80      CALL_METHOD                     2
                        82      CALL_FUNCTION                   1
                        84      RAISE_VARARGS                   1
                        86      JUMP_ABSOLUTE                   17 (to 34)
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       3: _headers
                        92      LOAD_METHOD                     6: append
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       0: policy
                        98      LOAD_METHOD                     7: header_store_parse
                        100     LOAD_FAST                       1: name
                        102     LOAD_FAST                       2: val
                        104     CALL_METHOD                     2
                        106     CALL_METHOD                     1
                        108     POP_TOP                         
                        110     LOAD_CONST                      4: None
                        112     RETURN_VALUE                    
                'Message.__setitem__'
                [Code]
                    File Name: email/message.py
                    Object Name: __delitem__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                        '_headers'
                        'append'
                    [Var Names]
                        'self'
                        'name'
                        'newheaders'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Delete all occurrences of a header, if present.\n\n        Does not raise an exception if the header is missing.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_METHOD                     0: lower
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: name
                        8       BUILD_LIST                      0
                        10      STORE_FAST                      2: newheaders
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _headers
                        16      GET_ITER                        
                        18      FOR_ITER                        17 (to 54)
                        20      UNPACK_SEQUENCE                 2
                        22      STORE_FAST                      3: k
                        24      STORE_FAST                      4: v
                        26      LOAD_FAST                       3: k
                        28      LOAD_METHOD                     0: lower
                        30      CALL_METHOD                     0
                        32      LOAD_FAST                       1: name
                        34      COMPARE_OP                      3 (!=)
                        36      POP_JUMP_IF_FALSE               26 (to 52)
                        38      LOAD_FAST                       2: newheaders
                        40      LOAD_METHOD                     2: append
                        42      LOAD_FAST                       3: k
                        44      LOAD_FAST                       4: v
                        46      BUILD_TUPLE                     2
                        48      CALL_METHOD                     1
                        50      POP_TOP                         
                        52      JUMP_ABSOLUTE                   9 (to 18)
                        54      LOAD_FAST                       2: newheaders
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      1: _headers
                        60      LOAD_CONST                      1: None
                        62      RETURN_VALUE                    
                'Message.__delitem__'
                [Code]
                    File Name: email/message.py
                    Object Name: __contains__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                        '_headers'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'lower'
                            [Var Names]
                                '.0'
                                'k'
                                'v'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        8 (to 22)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: k
                                10      STORE_FAST                      2: v
                                12      LOAD_FAST                       1: k
                                14      LOAD_METHOD                     0: lower
                                16      CALL_METHOD                     0
                                18      LIST_APPEND                     2
                                20      JUMP_ABSOLUTE                   2 (to 4)
                                22      RETURN_VALUE                    
                        'Message.__contains__.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_METHOD                     0: lower
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: <CODE> <listcomp>
                        8       LOAD_CONST                      2: 'Message.__contains__.<locals>.<listcomp>'
                        10      MAKE_FUNCTION                   0
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _headers
                        16      GET_ITER                        
                        18      CALL_FUNCTION                   1
                        20      CONTAINS_OP                     0 (in)
                        22      RETURN_VALUE                    
                'Message.__contains__'
                [Code]
                    File Name: email/message.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        '_headers'
                    [Var Names]
                        'self'
                        'field'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _headers
                        6       GET_ITER                        
                        8       FOR_ITER                        7 (to 24)
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      1: field
                        14      STORE_FAST                      2: value
                        16      LOAD_FAST                       1: field
                        18      YIELD_VALUE                     
                        20      POP_TOP                         
                        22      JUMP_ABSOLUTE                   4 (to 8)
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'Message.__iter__'
                [Code]
                    File Name: email/message.py
                    Object Name: keys
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_headers'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return a list of all the message's header field names.\n\n        These will be sorted in the order they appeared in the original\n        message, or were added to the message, and may contain duplicates.\n        Any fields deleted and re-inserted are always appended to the header\n        list.\n        "
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                            [Var Names]
                                '.0'
                                'k'
                                'v'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: k
                                10      STORE_FAST                      2: v
                                12      LOAD_FAST                       1: k
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        'Message.keys.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'Message.keys.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: _headers
                        10      GET_ITER                        
                        12      CALL_FUNCTION                   1
                        14      RETURN_VALUE                    
                'Message.keys'
                [Code]
                    File Name: email/message.py
                    Object Name: values
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '_headers'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        "Return a list of all the message's header values.\n\n        These will be sorted in the order they appeared in the original\n        message, or were added to the message, and may contain duplicates.\n        Any fields deleted and re-inserted are always appended to the header\n        list.\n        "
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 6
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'policy'
                                'header_fetch_parse'
                            [Var Names]
                                '.0'
                                'k'
                                'v'
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        11 (to 28)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: k
                                10      STORE_FAST                      2: v
                                12      LOAD_DEREF                      0: self
                                14      LOAD_ATTR                       0: policy
                                16      LOAD_METHOD                     1: header_fetch_parse
                                18      LOAD_FAST                       1: k
                                20      LOAD_FAST                       2: v
                                22      CALL_METHOD                     2
                                24      LIST_APPEND                     2
                                26      JUMP_ABSOLUTE                   2 (to 4)
                                28      RETURN_VALUE                    
                        'Message.values.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CLOSURE                    0: self
                        2       BUILD_TUPLE                     1
                        4       LOAD_CONST                      1: <CODE> <listcomp>
                        6       LOAD_CONST                      2: 'Message.values.<locals>.<listcomp>'
                        8       MAKE_FUNCTION                   8
                        10      LOAD_DEREF                      0: self
                        12      LOAD_ATTR                       0: _headers
                        14      GET_ITER                        
                        16      CALL_FUNCTION                   1
                        18      RETURN_VALUE                    
                'Message.values'
                [Code]
                    File Name: email/message.py
                    Object Name: items
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '_headers'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        "Get all the message's header fields and values.\n\n        These will be sorted in the order they appeared in the original\n        message, or were added to the message, and may contain duplicates.\n        Any fields deleted and re-inserted are always appended to the header\n        list.\n        "
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 7
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'policy'
                                'header_fetch_parse'
                            [Var Names]
                                '.0'
                                'k'
                                'v'
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        13 (to 32)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: k
                                10      STORE_FAST                      2: v
                                12      LOAD_FAST                       1: k
                                14      LOAD_DEREF                      0: self
                                16      LOAD_ATTR                       0: policy
                                18      LOAD_METHOD                     1: header_fetch_parse
                                20      LOAD_FAST                       1: k
                                22      LOAD_FAST                       2: v
                                24      CALL_METHOD                     2
                                26      BUILD_TUPLE                     2
                                28      LIST_APPEND                     2
                                30      JUMP_ABSOLUTE                   2 (to 4)
                                32      RETURN_VALUE                    
                        'Message.items.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CLOSURE                    0: self
                        2       BUILD_TUPLE                     1
                        4       LOAD_CONST                      1: <CODE> <listcomp>
                        6       LOAD_CONST                      2: 'Message.items.<locals>.<listcomp>'
                        8       MAKE_FUNCTION                   8
                        10      LOAD_DEREF                      0: self
                        12      LOAD_ATTR                       0: _headers
                        14      GET_ITER                        
                        16      CALL_FUNCTION                   1
                        18      RETURN_VALUE                    
                'Message.items'
                [Code]
                    File Name: email/message.py
                    Object Name: get
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                        '_headers'
                        'policy'
                        'header_fetch_parse'
                    [Var Names]
                        'self'
                        'name'
                        'failobj'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Get a header value.\n\n        Like __getitem__() but return failobj instead of None when the field\n        is missing.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_METHOD                     0: lower
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: name
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: _headers
                        12      GET_ITER                        
                        14      FOR_ITER                        19 (to 54)
                        16      UNPACK_SEQUENCE                 2
                        18      STORE_FAST                      3: k
                        20      STORE_FAST                      4: v
                        22      LOAD_FAST                       3: k
                        24      LOAD_METHOD                     0: lower
                        26      CALL_METHOD                     0
                        28      LOAD_FAST                       1: name
                        30      COMPARE_OP                      2 (==)
                        32      POP_JUMP_IF_FALSE               26 (to 52)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       2: policy
                        38      LOAD_METHOD                     3: header_fetch_parse
                        40      LOAD_FAST                       3: k
                        42      LOAD_FAST                       4: v
                        44      CALL_METHOD                     2
                        46      ROT_TWO                         
                        48      POP_TOP                         
                        50      RETURN_VALUE                    
                        52      JUMP_ABSOLUTE                   7 (to 14)
                        54      LOAD_FAST                       2: failobj
                        56      RETURN_VALUE                    
                'Message.get'
                [Code]
                    File Name: email/message.py
                    Object Name: set_raw
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_headers'
                        'append'
                    [Var Names]
                        'self'
                        'name'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Store name and value in the model without modification.\n\n        This is an "internal" API, intended only for use by a parser.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _headers
                        4       LOAD_METHOD                     1: append
                        6       LOAD_FAST                       1: name
                        8       LOAD_FAST                       2: value
                        10      BUILD_TUPLE                     2
                        12      CALL_METHOD                     1
                        14      POP_TOP                         
                        16      LOAD_CONST                      1: None
                        18      RETURN_VALUE                    
                'Message.set_raw'
                [Code]
                    File Name: email/message.py
                    Object Name: raw_items
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'iter'
                        '_headers'
                        'copy'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the (name, value) header pairs without modification.\n\n        This is an "internal" API, intended only for use by a generator.\n        '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: iter
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _headers
                        6       LOAD_METHOD                     2: copy
                        8       CALL_METHOD                     0
                        10      CALL_FUNCTION                   1
                        12      RETURN_VALUE                    
                'Message.raw_items'
                [Code]
                    File Name: email/message.py
                    Object Name: get_all
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                        '_headers'
                        'append'
                        'policy'
                        'header_fetch_parse'
                    [Var Names]
                        'self'
                        'name'
                        'failobj'
                        'values'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a list of all the values for the named field.\n\n        These will be sorted in the order they appeared in the original\n        message, and may contain duplicates.  Any fields deleted and\n        re-inserted are always appended to the header list.\n\n        If no such fields exist, failobj is returned (defaults to None).\n        '
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      3: values
                        4       LOAD_FAST                       1: name
                        6       LOAD_METHOD                     0: lower
                        8       CALL_METHOD                     0
                        10      STORE_FAST                      1: name
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _headers
                        16      GET_ITER                        
                        18      FOR_ITER                        20 (to 60)
                        20      UNPACK_SEQUENCE                 2
                        22      STORE_FAST                      4: k
                        24      STORE_FAST                      5: v
                        26      LOAD_FAST                       4: k
                        28      LOAD_METHOD                     0: lower
                        30      CALL_METHOD                     0
                        32      LOAD_FAST                       1: name
                        34      COMPARE_OP                      2 (==)
                        36      POP_JUMP_IF_FALSE               29 (to 58)
                        38      LOAD_FAST                       3: values
                        40      LOAD_METHOD                     2: append
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       3: policy
                        46      LOAD_METHOD                     4: header_fetch_parse
                        48      LOAD_FAST                       4: k
                        50      LOAD_FAST                       5: v
                        52      CALL_METHOD                     2
                        54      CALL_METHOD                     1
                        56      POP_TOP                         
                        58      JUMP_ABSOLUTE                   9 (to 18)
                        60      LOAD_FAST                       3: values
                        62      POP_JUMP_IF_TRUE                34 (to 68)
                        64      LOAD_FAST                       2: failobj
                        66      RETURN_VALUE                    
                        68      LOAD_FAST                       3: values
                        70      RETURN_VALUE                    
                'Message.get_all'
                [Code]
                    File Name: email/message.py
                    Object Name: add_header
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'items'
                        'append'
                        'replace'
                        '_formatparam'
                        'insert'
                        'SEMISPACE'
                        'join'
                    [Var Names]
                        'self'
                        '_name'
                        '_value'
                        '_params'
                        'parts'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Extended header setting.\n\n        name is the header field to add.  keyword arguments can be used to set\n        additional parameters for the header field, with underscores converted\n        to dashes.  Normally the parameter will be added as key="value" unless\n        value is None, in which case only the key will be added.  If a\n        parameter value contains non-ASCII characters it can be specified as a\n        three-tuple of (charset, language, value), in which case it will be\n        encoded according to RFC2231 rules.  Otherwise it will be encoded using\n        the utf-8 charset and a language of \'\'.\n\n        Examples:\n\n        msg.add_header(\'content-disposition\', \'attachment\', filename=\'bud.gif\')\n        msg.add_header(\'content-disposition\', \'attachment\',\n                       filename=(\'utf-8\', \'\', Fußballer.ppt\'))\n        msg.add_header(\'content-disposition\', \'attachment\',\n                       filename=\'Fußballer.ppt\'))\n        '
                        None
                        '_'
                        '-'
                        0
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      4: parts
                        4       LOAD_FAST                       3: _params
                        6       LOAD_METHOD                     0: items
                        8       CALL_METHOD                     0
                        10      GET_ITER                        
                        12      FOR_ITER                        30 (to 74)
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      5: k
                        18      STORE_FAST                      6: v
                        20      LOAD_FAST                       6: v
                        22      LOAD_CONST                      1: None
                        24      IS_OP                           0 (is)
                        26      POP_JUMP_IF_FALSE               24 (to 48)
                        28      LOAD_FAST                       4: parts
                        30      LOAD_METHOD                     1: append
                        32      LOAD_FAST                       5: k
                        34      LOAD_METHOD                     2: replace
                        36      LOAD_CONST                      2: '_'
                        38      LOAD_CONST                      3: '-'
                        40      CALL_METHOD                     2
                        42      CALL_METHOD                     1
                        44      POP_TOP                         
                        46      JUMP_ABSOLUTE                   6 (to 12)
                        48      LOAD_FAST                       4: parts
                        50      LOAD_METHOD                     1: append
                        52      LOAD_GLOBAL                     3: _formatparam
                        54      LOAD_FAST                       5: k
                        56      LOAD_METHOD                     2: replace
                        58      LOAD_CONST                      2: '_'
                        60      LOAD_CONST                      3: '-'
                        62      CALL_METHOD                     2
                        64      LOAD_FAST                       6: v
                        66      CALL_FUNCTION                   2
                        68      CALL_METHOD                     1
                        70      POP_TOP                         
                        72      JUMP_ABSOLUTE                   6 (to 12)
                        74      LOAD_FAST                       2: _value
                        76      LOAD_CONST                      1: None
                        78      IS_OP                           1 (is not)
                        80      POP_JUMP_IF_FALSE               47 (to 94)
                        82      LOAD_FAST                       4: parts
                        84      LOAD_METHOD                     4: insert
                        86      LOAD_CONST                      4: 0
                        88      LOAD_FAST                       2: _value
                        90      CALL_METHOD                     2
                        92      POP_TOP                         
                        94      LOAD_GLOBAL                     5: SEMISPACE
                        96      LOAD_METHOD                     6: join
                        98      LOAD_FAST                       4: parts
                        100     CALL_METHOD                     1
                        102     LOAD_FAST                       0: self
                        104     LOAD_FAST                       1: _name
                        106     STORE_SUBSCR                    
                        108     LOAD_CONST                      1: None
                        110     RETURN_VALUE                    
                'Message.add_header'
                [Code]
                    File Name: email/message.py
                    Object Name: replace_header
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                        'zip'
                        'range'
                        'len'
                        '_headers'
                        'policy'
                        'header_store_parse'
                        'KeyError'
                    [Var Names]
                        'self'
                        '_name'
                        '_value'
                        'i'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Replace a header.\n\n        Replace the first matching header found in the message, retaining\n        header order and case.  If no matching header was found, a KeyError is\n        raised.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: _name
                        2       LOAD_METHOD                     0: lower
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: _name
                        8       LOAD_GLOBAL                     1: zip
                        10      LOAD_GLOBAL                     2: range
                        12      LOAD_GLOBAL                     3: len
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       4: _headers
                        18      CALL_FUNCTION                   1
                        20      CALL_FUNCTION                   1
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: _headers
                        26      CALL_FUNCTION                   2
                        28      GET_ITER                        
                        30      FOR_ITER                        25 (to 82)
                        32      UNPACK_SEQUENCE                 2
                        34      STORE_FAST                      3: i
                        36      UNPACK_SEQUENCE                 2
                        38      STORE_FAST                      4: k
                        40      STORE_FAST                      5: v
                        42      LOAD_FAST                       4: k
                        44      LOAD_METHOD                     0: lower
                        46      CALL_METHOD                     0
                        48      LOAD_FAST                       1: _name
                        50      COMPARE_OP                      2 (==)
                        52      POP_JUMP_IF_FALSE               40 (to 80)
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       5: policy
                        58      LOAD_METHOD                     6: header_store_parse
                        60      LOAD_FAST                       4: k
                        62      LOAD_FAST                       2: _value
                        64      CALL_METHOD                     2
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       4: _headers
                        70      LOAD_FAST                       3: i
                        72      STORE_SUBSCR                    
                        74      POP_TOP                         
                        76      LOAD_CONST                      1: None
                        78      RETURN_VALUE                    
                        80      JUMP_ABSOLUTE                   15 (to 30)
                        82      LOAD_GLOBAL                     7: KeyError
                        84      LOAD_FAST                       1: _name
                        86      CALL_FUNCTION                   1
                        88      RAISE_VARARGS                   1
                'Message.replace_header'
                [Code]
                    File Name: email/message.py
                    Object Name: get_content_type
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        'get'
                        'get_default_type'
                        '_splitparam'
                        'lower'
                        'count'
                    [Var Names]
                        'self'
                        'missing'
                        'value'
                        'ctype'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the message's content type.\n\n        The returned string is coerced to lower case of the form\n        `maintype/subtype'.  If there was no Content-Type header in the\n        message, the default type as given by get_default_type() will be\n        returned.  Since according to RFC 2045, messages always have a default\n        type this will always return a value.\n\n        RFC 2045 defines a message's default type to be text/plain unless it\n        appears inside a multipart/digest container, in which case it would be\n        message/rfc822.\n        "
                        'content-type'
                        0
                        '/'
                        1
                        'text/plain'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      1: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get
                        10      LOAD_CONST                      1: 'content-type'
                        12      LOAD_FAST                       1: missing
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      2: value
                        18      LOAD_FAST                       2: value
                        20      LOAD_FAST                       1: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               17 (to 34)
                        26      LOAD_FAST                       0: self
                        28      LOAD_METHOD                     2: get_default_type
                        30      CALL_METHOD                     0
                        32      RETURN_VALUE                    
                        34      LOAD_GLOBAL                     3: _splitparam
                        36      LOAD_FAST                       2: value
                        38      CALL_FUNCTION                   1
                        40      LOAD_CONST                      2: 0
                        42      BINARY_SUBSCR                   
                        44      LOAD_METHOD                     4: lower
                        46      CALL_METHOD                     0
                        48      STORE_FAST                      3: ctype
                        50      LOAD_FAST                       3: ctype
                        52      LOAD_METHOD                     5: count
                        54      LOAD_CONST                      3: '/'
                        56      CALL_METHOD                     1
                        58      LOAD_CONST                      4: 1
                        60      COMPARE_OP                      3 (!=)
                        62      POP_JUMP_IF_FALSE               34 (to 68)
                        64      LOAD_CONST                      5: 'text/plain'
                        66      RETURN_VALUE                    
                        68      LOAD_FAST                       3: ctype
                        70      RETURN_VALUE                    
                'Message.get_content_type'
                [Code]
                    File Name: email/message.py
                    Object Name: get_content_maintype
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get_content_type'
                        'split'
                    [Var Names]
                        'self'
                        'ctype'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the message's main content type.\n\n        This is the `maintype' part of the string returned by\n        get_content_type().\n        "
                        '/'
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get_content_type
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: ctype
                        8       LOAD_FAST                       1: ctype
                        10      LOAD_METHOD                     1: split
                        12      LOAD_CONST                      1: '/'
                        14      CALL_METHOD                     1
                        16      LOAD_CONST                      2: 0
                        18      BINARY_SUBSCR                   
                        20      RETURN_VALUE                    
                'Message.get_content_maintype'
                [Code]
                    File Name: email/message.py
                    Object Name: get_content_subtype
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get_content_type'
                        'split'
                    [Var Names]
                        'self'
                        'ctype'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Returns the message's sub-content type.\n\n        This is the `subtype' part of the string returned by\n        get_content_type().\n        "
                        '/'
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get_content_type
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: ctype
                        8       LOAD_FAST                       1: ctype
                        10      LOAD_METHOD                     1: split
                        12      LOAD_CONST                      1: '/'
                        14      CALL_METHOD                     1
                        16      LOAD_CONST                      2: 1
                        18      BINARY_SUBSCR                   
                        20      RETURN_VALUE                    
                'Message.get_content_subtype'
                [Code]
                    File Name: email/message.py
                    Object Name: get_default_type
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_default_type'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the `default' content type.\n\n        Most messages have a default content type of text/plain, except for\n        messages that are subparts of multipart/digest containers.  Such\n        subparts have a default content type of message/rfc822.\n        "
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _default_type
                        4       RETURN_VALUE                    
                'Message.get_default_type'
                [Code]
                    File Name: email/message.py
                    Object Name: set_default_type
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_default_type'
                    [Var Names]
                        'self'
                        'ctype'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set the `default\' content type.\n\n        ctype should be either "text/plain" or "message/rfc822", although this\n        is not enforced.  The default content type is not stored in the\n        Content-Type header.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: ctype
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _default_type
                        6       LOAD_CONST                      1: None
                        8       RETURN_VALUE                    
                'Message.set_default_type'
                [Code]
                    File Name: email/message.py
                    Object Name: _get_params_preserve
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        'get'
                        '_parseparam'
                        'split'
                        'strip'
                        'ValueError'
                        'append'
                        'utils'
                        'decode_params'
                    [Var Names]
                        'self'
                        'failobj'
                        'header'
                        'missing'
                        'value'
                        'params'
                        'p'
                        'name'
                        'val'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '='
                        1
                        ''
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      3: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get
                        10      LOAD_FAST                       2: header
                        12      LOAD_FAST                       3: missing
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      4: value
                        18      LOAD_FAST                       4: value
                        20      LOAD_FAST                       3: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               15 (to 30)
                        26      LOAD_FAST                       1: failobj
                        28      RETURN_VALUE                    
                        30      BUILD_LIST                      0
                        32      STORE_FAST                      5: params
                        34      LOAD_GLOBAL                     2: _parseparam
                        36      LOAD_FAST                       4: value
                        38      CALL_FUNCTION                   1
                        40      GET_ITER                        
                        42      FOR_ITER                        43 (to 130)
                        44      STORE_FAST                      6: p
                        46      SETUP_FINALLY                   18 (to 84)
                        48      LOAD_FAST                       6: p
                        50      LOAD_METHOD                     3: split
                        52      LOAD_CONST                      1: '='
                        54      LOAD_CONST                      2: 1
                        56      CALL_METHOD                     2
                        58      UNPACK_SEQUENCE                 2
                        60      STORE_FAST                      7: name
                        62      STORE_FAST                      8: val
                        64      LOAD_FAST                       7: name
                        66      LOAD_METHOD                     4: strip
                        68      CALL_METHOD                     0
                        70      STORE_FAST                      7: name
                        72      LOAD_FAST                       8: val
                        74      LOAD_METHOD                     4: strip
                        76      CALL_METHOD                     0
                        78      STORE_FAST                      8: val
                        80      POP_BLOCK                       
                        82      JUMP_FORWARD                    15 (to 114)
                        84      DUP_TOP                         
                        86      LOAD_GLOBAL                     5: ValueError
                        88      JUMP_IF_NOT_EXC_MATCH           56 (to 112)
                        90      POP_TOP                         
                        92      POP_TOP                         
                        94      POP_TOP                         
                        96      LOAD_FAST                       6: p
                        98      LOAD_METHOD                     4: strip
                        100     CALL_METHOD                     0
                        102     STORE_FAST                      7: name
                        104     LOAD_CONST                      3: ''
                        106     STORE_FAST                      8: val
                        108     POP_EXCEPT                      
                        110     JUMP_FORWARD                    1 (to 114)
                        112     RERAISE                         0
                        114     LOAD_FAST                       5: params
                        116     LOAD_METHOD                     6: append
                        118     LOAD_FAST                       7: name
                        120     LOAD_FAST                       8: val
                        122     BUILD_TUPLE                     2
                        124     CALL_METHOD                     1
                        126     POP_TOP                         
                        128     JUMP_ABSOLUTE                   21 (to 42)
                        130     LOAD_GLOBAL                     7: utils
                        132     LOAD_METHOD                     8: decode_params
                        134     LOAD_FAST                       5: params
                        136     CALL_METHOD                     1
                        138     STORE_FAST                      5: params
                        140     LOAD_FAST                       5: params
                        142     RETURN_VALUE                    
                'Message._get_params_preserve'
                'content-type'
                True
                [Code]
                    File Name: email/message.py
                    Object Name: get_params
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        '_get_params_preserve'
                    [Var Names]
                        'self'
                        'failobj'
                        'header'
                        'unquote'
                        'missing'
                        'params'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the message's Content-Type parameters, as a list.\n\n        The elements of the returned list are 2-tuples of key/value pairs, as\n        split on the `=' sign.  The left hand side of the `=' is the key,\n        while the right hand side is the value.  If there is no `=' sign in\n        the parameter the value is the empty string.  The value is as\n        described in the get_param() method.\n\n        Optional failobj is the object to return if there is no Content-Type\n        header.  Optional header is the header to search instead of\n        Content-Type.  If unquote is True, the value is unquoted.\n        "
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 5
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                '_unquotevalue'
                            [Var Names]
                                '.0'
                                'k'
                                'v'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        10 (to 26)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: k
                                10      STORE_FAST                      2: v
                                12      LOAD_FAST                       1: k
                                14      LOAD_GLOBAL                     0: _unquotevalue
                                16      LOAD_FAST                       2: v
                                18      CALL_FUNCTION                   1
                                20      BUILD_TUPLE                     2
                                22      LIST_APPEND                     2
                                24      JUMP_ABSOLUTE                   2 (to 4)
                                26      RETURN_VALUE                    
                        'Message.get_params.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      4: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: _get_params_preserve
                        10      LOAD_FAST                       4: missing
                        12      LOAD_FAST                       2: header
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      5: params
                        18      LOAD_FAST                       5: params
                        20      LOAD_FAST                       4: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               15 (to 30)
                        26      LOAD_FAST                       1: failobj
                        28      RETURN_VALUE                    
                        30      LOAD_FAST                       3: unquote
                        32      POP_JUMP_IF_FALSE               24 (to 48)
                        34      LOAD_CONST                      1: <CODE> <listcomp>
                        36      LOAD_CONST                      2: 'Message.get_params.<locals>.<listcomp>'
                        38      MAKE_FUNCTION                   0
                        40      LOAD_FAST                       5: params
                        42      GET_ITER                        
                        44      CALL_FUNCTION                   1
                        46      RETURN_VALUE                    
                        48      LOAD_FAST                       5: params
                        50      RETURN_VALUE                    
                'Message.get_params'
                [Code]
                    File Name: email/message.py
                    Object Name: get_param
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_get_params_preserve'
                        'lower'
                        '_unquotevalue'
                    [Var Names]
                        'self'
                        'param'
                        'failobj'
                        'header'
                        'unquote'
                        'k'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the parameter value if found in the Content-Type header.\n\n        Optional failobj is the object to return if there is no Content-Type\n        header, or the Content-Type header has no such parameter.  Optional\n        header is the header to search instead of Content-Type.\n\n        Parameter keys are always compared case insensitively.  The return\n        value can either be a string, or a 3-tuple if the parameter was RFC\n        2231 encoded.  When it's a 3-tuple, the elements of the value are of\n        the form (CHARSET, LANGUAGE, VALUE).  Note that both CHARSET and\n        LANGUAGE can be None, in which case you should consider VALUE to be\n        encoded in the us-ascii charset.  You can usually ignore LANGUAGE.\n        The parameter value (either the returned string, or the VALUE item in\n        the 3-tuple) is always unquoted, unless unquote is set to False.\n\n        If your application doesn't care whether the parameter was RFC 2231\n        encoded, it can turn the return value into a string as follows:\n\n            rawparam = msg.get_param('foo')\n            param = email.utils.collapse_rfc2231_value(rawparam)\n\n        "
                    [Disassembly]
                        0       LOAD_FAST                       3: header
                        2       LOAD_FAST                       0: self
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               6 (to 12)
                        8       LOAD_FAST                       2: failobj
                        10      RETURN_VALUE                    
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     0: _get_params_preserve
                        16      LOAD_FAST                       2: failobj
                        18      LOAD_FAST                       3: header
                        20      CALL_METHOD                     2
                        22      GET_ITER                        
                        24      FOR_ITER                        24 (to 74)
                        26      UNPACK_SEQUENCE                 2
                        28      STORE_FAST                      5: k
                        30      STORE_FAST                      6: v
                        32      LOAD_FAST                       5: k
                        34      LOAD_METHOD                     1: lower
                        36      CALL_METHOD                     0
                        38      LOAD_FAST                       1: param
                        40      LOAD_METHOD                     1: lower
                        42      CALL_METHOD                     0
                        44      COMPARE_OP                      2 (==)
                        46      POP_JUMP_IF_FALSE               36 (to 72)
                        48      LOAD_FAST                       4: unquote
                        50      POP_JUMP_IF_FALSE               32 (to 64)
                        52      LOAD_GLOBAL                     2: _unquotevalue
                        54      LOAD_FAST                       6: v
                        56      CALL_FUNCTION                   1
                        58      ROT_TWO                         
                        60      POP_TOP                         
                        62      RETURN_VALUE                    
                        64      LOAD_FAST                       6: v
                        66      ROT_TWO                         
                        68      POP_TOP                         
                        70      RETURN_VALUE                    
                        72      JUMP_ABSOLUTE                   12 (to 24)
                        74      LOAD_FAST                       2: failobj
                        76      RETURN_VALUE                    
                'Message.get_param'
                'Content-Type'
                ''
                [Code]
                    File Name: email/message.py
                    Object Name: set_param
                    Arg Count: 8
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 12
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'tuple'
                        'lower'
                        'get'
                        'get_param'
                        '_formatparam'
                        'SEMISPACE'
                        'join'
                        'get_params'
                        'replace_header'
                    [Var Names]
                        'self'
                        'param'
                        'value'
                        'header'
                        'requote'
                        'charset'
                        'language'
                        'replace'
                        'ctype'
                        'old_param'
                        'old_value'
                        'append_param'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set a parameter in the Content-Type header.\n\n        If the parameter already exists in the header, its value will be\n        replaced with the new value.\n\n        If header is Content-Type and has not yet been defined for this\n        message, it will be set to "text/plain" and the new parameter and\n        value will be appended as per RFC 2045.\n\n        An alternate header can be specified in the header argument, and all\n        parameters will be quoted as necessary unless requote is False.\n\n        If charset is specified, the parameter will be encoded according to RFC\n        2231.  Optional language specifies the RFC 2231 language, defaulting\n        to the empty string.  Both charset and language should be strings.\n        '
                        'content-type'
                        'text/plain'
                        (
                            'header'
                        )
                        ''
                        (
                            'header'
                            'unquote'
                        )
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       2: value
                        4       LOAD_GLOBAL                     1: tuple
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                12 (to 24)
                        10      LOAD_FAST                       5: charset
                        12      POP_JUMP_IF_FALSE               12 (to 24)
                        14      LOAD_FAST                       5: charset
                        16      LOAD_FAST                       6: language
                        18      LOAD_FAST                       2: value
                        20      BUILD_TUPLE                     3
                        22      STORE_FAST                      2: value
                        24      LOAD_FAST                       3: header
                        26      LOAD_FAST                       0: self
                        28      CONTAINS_OP                     1 (not in)
                        30      POP_JUMP_IF_FALSE               25 (to 50)
                        32      LOAD_FAST                       3: header
                        34      LOAD_METHOD                     2: lower
                        36      CALL_METHOD                     0
                        38      LOAD_CONST                      1: 'content-type'
                        40      COMPARE_OP                      2 (==)
                        42      POP_JUMP_IF_FALSE               25 (to 50)
                        44      LOAD_CONST                      2: 'text/plain'
                        46      STORE_FAST                      8: ctype
                        48      JUMP_FORWARD                    5 (to 60)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     3: get
                        54      LOAD_FAST                       3: header
                        56      CALL_METHOD                     1
                        58      STORE_FAST                      8: ctype
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       4: get_param
                        64      LOAD_FAST                       1: param
                        66      LOAD_FAST                       3: header
                        68      LOAD_CONST                      3: ('header',)
                        70      CALL_FUNCTION_KW                2
                        72      POP_JUMP_IF_TRUE                58 (to 116)
                        74      LOAD_FAST                       8: ctype
                        76      POP_JUMP_IF_TRUE                46 (to 92)
                        78      LOAD_GLOBAL                     5: _formatparam
                        80      LOAD_FAST                       1: param
                        82      LOAD_FAST                       2: value
                        84      LOAD_FAST                       4: requote
                        86      CALL_FUNCTION                   3
                        88      STORE_FAST                      8: ctype
                        90      JUMP_FORWARD                    61 (to 214)
                        92      LOAD_GLOBAL                     6: SEMISPACE
                        94      LOAD_METHOD                     7: join
                        96      LOAD_FAST                       8: ctype
                        98      LOAD_GLOBAL                     5: _formatparam
                        100     LOAD_FAST                       1: param
                        102     LOAD_FAST                       2: value
                        104     LOAD_FAST                       4: requote
                        106     CALL_FUNCTION                   3
                        108     BUILD_LIST                      2
                        110     CALL_METHOD                     1
                        112     STORE_FAST                      8: ctype
                        114     JUMP_FORWARD                    49 (to 214)
                        116     LOAD_CONST                      4: ''
                        118     STORE_FAST                      8: ctype
                        120     LOAD_FAST                       0: self
                        122     LOAD_ATTR                       8: get_params
                        124     LOAD_FAST                       3: header
                        126     LOAD_FAST                       4: requote
                        128     LOAD_CONST                      5: ('header', 'unquote')
                        130     CALL_FUNCTION_KW                2
                        132     GET_ITER                        
                        134     FOR_ITER                        39 (to 214)
                        136     UNPACK_SEQUENCE                 2
                        138     STORE_FAST                      9: old_param
                        140     STORE_FAST                      10: old_value
                        142     LOAD_CONST                      4: ''
                        144     STORE_FAST                      11: append_param
                        146     LOAD_FAST                       9: old_param
                        148     LOAD_METHOD                     2: lower
                        150     CALL_METHOD                     0
                        152     LOAD_FAST                       1: param
                        154     LOAD_METHOD                     2: lower
                        156     CALL_METHOD                     0
                        158     COMPARE_OP                      2 (==)
                        160     POP_JUMP_IF_FALSE               88 (to 176)
                        162     LOAD_GLOBAL                     5: _formatparam
                        164     LOAD_FAST                       1: param
                        166     LOAD_FAST                       2: value
                        168     LOAD_FAST                       4: requote
                        170     CALL_FUNCTION                   3
                        172     STORE_FAST                      11: append_param
                        174     JUMP_FORWARD                    6 (to 188)
                        176     LOAD_GLOBAL                     5: _formatparam
                        178     LOAD_FAST                       9: old_param
                        180     LOAD_FAST                       10: old_value
                        182     LOAD_FAST                       4: requote
                        184     CALL_FUNCTION                   3
                        186     STORE_FAST                      11: append_param
                        188     LOAD_FAST                       8: ctype
                        190     POP_JUMP_IF_TRUE                99 (to 198)
                        192     LOAD_FAST                       11: append_param
                        194     STORE_FAST                      8: ctype
                        196     JUMP_ABSOLUTE                   67 (to 134)
                        198     LOAD_GLOBAL                     6: SEMISPACE
                        200     LOAD_METHOD                     7: join
                        202     LOAD_FAST                       8: ctype
                        204     LOAD_FAST                       11: append_param
                        206     BUILD_LIST                      2
                        208     CALL_METHOD                     1
                        210     STORE_FAST                      8: ctype
                        212     JUMP_ABSOLUTE                   67 (to 134)
                        214     LOAD_FAST                       8: ctype
                        216     LOAD_FAST                       0: self
                        218     LOAD_METHOD                     3: get
                        220     LOAD_FAST                       3: header
                        222     CALL_METHOD                     1
                        224     COMPARE_OP                      3 (!=)
                        226     POP_JUMP_IF_FALSE               133 (to 266)
                        228     LOAD_FAST                       7: replace
                        230     POP_JUMP_IF_FALSE               124 (to 248)
                        232     LOAD_FAST                       0: self
                        234     LOAD_METHOD                     9: replace_header
                        236     LOAD_FAST                       3: header
                        238     LOAD_FAST                       8: ctype
                        240     CALL_METHOD                     2
                        242     POP_TOP                         
                        244     LOAD_CONST                      6: None
                        246     RETURN_VALUE                    
                        248     LOAD_FAST                       0: self
                        250     LOAD_FAST                       3: header
                        252     DELETE_SUBSCR                   
                        254     LOAD_FAST                       8: ctype
                        256     LOAD_FAST                       0: self
                        258     LOAD_FAST                       3: header
                        260     STORE_SUBSCR                    
                        262     LOAD_CONST                      6: None
                        264     RETURN_VALUE                    
                        266     LOAD_CONST                      6: None
                        268     RETURN_VALUE                    
                'Message.set_param'
                [Code]
                    File Name: email/message.py
                    Object Name: del_param
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get_params'
                        'lower'
                        '_formatparam'
                        'SEMISPACE'
                        'join'
                        'get'
                    [Var Names]
                        'self'
                        'param'
                        'header'
                        'requote'
                        'new_ctype'
                        'p'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Remove the given parameter completely from the Content-Type header.\n\n        The header will be re-written in place without the parameter or its\n        value. All values will be quoted as necessary unless requote is\n        False.  Optional header specifies an alternative to the Content-Type\n        header.\n        '
                        None
                        ''
                        (
                            'header'
                            'unquote'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       2: header
                        2       LOAD_FAST                       0: self
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               6 (to 12)
                        8       LOAD_CONST                      1: None
                        10      RETURN_VALUE                    
                        12      LOAD_CONST                      2: ''
                        14      STORE_FAST                      4: new_ctype
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: get_params
                        20      LOAD_FAST                       2: header
                        22      LOAD_FAST                       3: requote
                        24      LOAD_CONST                      3: ('header', 'unquote')
                        26      CALL_FUNCTION_KW                2
                        28      GET_ITER                        
                        30      FOR_ITER                        32 (to 96)
                        32      UNPACK_SEQUENCE                 2
                        34      STORE_FAST                      5: p
                        36      STORE_FAST                      6: v
                        38      LOAD_FAST                       5: p
                        40      LOAD_METHOD                     1: lower
                        42      CALL_METHOD                     0
                        44      LOAD_FAST                       1: param
                        46      LOAD_METHOD                     1: lower
                        48      CALL_METHOD                     0
                        50      COMPARE_OP                      3 (!=)
                        52      POP_JUMP_IF_FALSE               47 (to 94)
                        54      LOAD_FAST                       4: new_ctype
                        56      POP_JUMP_IF_TRUE                36 (to 72)
                        58      LOAD_GLOBAL                     2: _formatparam
                        60      LOAD_FAST                       5: p
                        62      LOAD_FAST                       6: v
                        64      LOAD_FAST                       3: requote
                        66      CALL_FUNCTION                   3
                        68      STORE_FAST                      4: new_ctype
                        70      JUMP_ABSOLUTE                   15 (to 30)
                        72      LOAD_GLOBAL                     3: SEMISPACE
                        74      LOAD_METHOD                     4: join
                        76      LOAD_FAST                       4: new_ctype
                        78      LOAD_GLOBAL                     2: _formatparam
                        80      LOAD_FAST                       5: p
                        82      LOAD_FAST                       6: v
                        84      LOAD_FAST                       3: requote
                        86      CALL_FUNCTION                   3
                        88      BUILD_LIST                      2
                        90      CALL_METHOD                     1
                        92      STORE_FAST                      4: new_ctype
                        94      JUMP_ABSOLUTE                   15 (to 30)
                        96      LOAD_FAST                       4: new_ctype
                        98      LOAD_FAST                       0: self
                        100     LOAD_METHOD                     5: get
                        102     LOAD_FAST                       2: header
                        104     CALL_METHOD                     1
                        106     COMPARE_OP                      3 (!=)
                        108     POP_JUMP_IF_FALSE               64 (to 128)
                        110     LOAD_FAST                       0: self
                        112     LOAD_FAST                       2: header
                        114     DELETE_SUBSCR                   
                        116     LOAD_FAST                       4: new_ctype
                        118     LOAD_FAST                       0: self
                        120     LOAD_FAST                       2: header
                        122     STORE_SUBSCR                    
                        124     LOAD_CONST                      1: None
                        126     RETURN_VALUE                    
                        128     LOAD_CONST                      1: None
                        130     RETURN_VALUE                    
                'Message.del_param'
                [Code]
                    File Name: email/message.py
                    Object Name: set_type
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'count'
                        'ValueError'
                        'lower'
                        'get_params'
                        'set_param'
                    [Var Names]
                        'self'
                        'type'
                        'header'
                        'requote'
                        'params'
                        'p'
                        'v'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set the main type and subtype for the Content-Type header.\n\n        type must be a string in the form "maintype/subtype", otherwise a\n        ValueError is raised.\n\n        This method replaces the Content-Type header, keeping all the\n        parameters in place.  If requote is False, this leaves the existing\n        header\'s quoting as is.  Otherwise, the parameters will be quoted (the\n        default).\n\n        An alternative header can be specified in the header argument.  When\n        the Content-Type header is set, we\'ll always also add a MIME-Version\n        header.\n        '
                        '/'
                        1
                        'content-type'
                        'mime-version'
                        '1.0'
                        'MIME-Version'
                        None
                        (
                            'header'
                            'unquote'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: type
                        2       LOAD_METHOD                     0: count
                        4       LOAD_CONST                      1: '/'
                        6       CALL_METHOD                     1
                        8       LOAD_CONST                      2: 1
                        10      COMPARE_OP                      2 (==)
                        12      POP_JUMP_IF_TRUE                9 (to 18)
                        14      LOAD_GLOBAL                     1: ValueError
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       2: header
                        20      LOAD_METHOD                     2: lower
                        22      CALL_METHOD                     0
                        24      LOAD_CONST                      3: 'content-type'
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               22 (to 44)
                        30      LOAD_FAST                       0: self
                        32      LOAD_CONST                      4: 'mime-version'
                        34      DELETE_SUBSCR                   
                        36      LOAD_CONST                      5: '1.0'
                        38      LOAD_FAST                       0: self
                        40      LOAD_CONST                      6: 'MIME-Version'
                        42      STORE_SUBSCR                    
                        44      LOAD_FAST                       2: header
                        46      LOAD_FAST                       0: self
                        48      CONTAINS_OP                     1 (not in)
                        50      POP_JUMP_IF_FALSE               32 (to 64)
                        52      LOAD_FAST                       1: type
                        54      LOAD_FAST                       0: self
                        56      LOAD_FAST                       2: header
                        58      STORE_SUBSCR                    
                        60      LOAD_CONST                      7: None
                        62      RETURN_VALUE                    
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       3: get_params
                        68      LOAD_FAST                       2: header
                        70      LOAD_FAST                       3: requote
                        72      LOAD_CONST                      8: ('header', 'unquote')
                        74      CALL_FUNCTION_KW                2
                        76      STORE_FAST                      4: params
                        78      LOAD_FAST                       0: self
                        80      LOAD_FAST                       2: header
                        82      DELETE_SUBSCR                   
                        84      LOAD_FAST                       1: type
                        86      LOAD_FAST                       0: self
                        88      LOAD_FAST                       2: header
                        90      STORE_SUBSCR                    
                        92      LOAD_FAST                       4: params
                        94      LOAD_CONST                      2: 1
                        96      LOAD_CONST                      7: None
                        98      BUILD_SLICE                     2
                        100     BINARY_SUBSCR                   
                        102     GET_ITER                        
                        104     FOR_ITER                        12 (to 130)
                        106     UNPACK_SEQUENCE                 2
                        108     STORE_FAST                      5: p
                        110     STORE_FAST                      6: v
                        112     LOAD_FAST                       0: self
                        114     LOAD_METHOD                     4: set_param
                        116     LOAD_FAST                       5: p
                        118     LOAD_FAST                       6: v
                        120     LOAD_FAST                       2: header
                        122     LOAD_FAST                       3: requote
                        124     CALL_METHOD                     4
                        126     POP_TOP                         
                        128     JUMP_ABSOLUTE                   52 (to 104)
                        130     LOAD_CONST                      7: None
                        132     RETURN_VALUE                    
                'Message.set_type'
                [Code]
                    File Name: email/message.py
                    Object Name: get_filename
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        'get_param'
                        'utils'
                        'collapse_rfc2231_value'
                        'strip'
                    [Var Names]
                        'self'
                        'failobj'
                        'missing'
                        'filename'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the filename associated with the payload if present.\n\n        The filename is extracted from the Content-Disposition header's\n        `filename' parameter, and it is unquoted.  If that header is missing\n        the `filename' parameter, this method falls back to looking for the\n        `name' parameter.\n        "
                        'filename'
                        'content-disposition'
                        'name'
                        'content-type'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      2: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get_param
                        10      LOAD_CONST                      1: 'filename'
                        12      LOAD_FAST                       2: missing
                        14      LOAD_CONST                      2: 'content-disposition'
                        16      CALL_METHOD                     3
                        18      STORE_FAST                      3: filename
                        20      LOAD_FAST                       3: filename
                        22      LOAD_FAST                       2: missing
                        24      IS_OP                           0 (is)
                        26      POP_JUMP_IF_FALSE               21 (to 42)
                        28      LOAD_FAST                       0: self
                        30      LOAD_METHOD                     1: get_param
                        32      LOAD_CONST                      3: 'name'
                        34      LOAD_FAST                       2: missing
                        36      LOAD_CONST                      4: 'content-type'
                        38      CALL_METHOD                     3
                        40      STORE_FAST                      3: filename
                        42      LOAD_FAST                       3: filename
                        44      LOAD_FAST                       2: missing
                        46      IS_OP                           0 (is)
                        48      POP_JUMP_IF_FALSE               27 (to 54)
                        50      LOAD_FAST                       1: failobj
                        52      RETURN_VALUE                    
                        54      LOAD_GLOBAL                     2: utils
                        56      LOAD_METHOD                     3: collapse_rfc2231_value
                        58      LOAD_FAST                       3: filename
                        60      CALL_METHOD                     1
                        62      LOAD_METHOD                     4: strip
                        64      CALL_METHOD                     0
                        66      RETURN_VALUE                    
                'Message.get_filename'
                [Code]
                    File Name: email/message.py
                    Object Name: get_boundary
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        'get_param'
                        'utils'
                        'collapse_rfc2231_value'
                        'rstrip'
                    [Var Names]
                        'self'
                        'failobj'
                        'missing'
                        'boundary'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the boundary associated with the payload if present.\n\n        The boundary is extracted from the Content-Type header's `boundary'\n        parameter, and it is unquoted.\n        "
                        'boundary'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      2: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get_param
                        10      LOAD_CONST                      1: 'boundary'
                        12      LOAD_FAST                       2: missing
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      3: boundary
                        18      LOAD_FAST                       3: boundary
                        20      LOAD_FAST                       2: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               15 (to 30)
                        26      LOAD_FAST                       1: failobj
                        28      RETURN_VALUE                    
                        30      LOAD_GLOBAL                     2: utils
                        32      LOAD_METHOD                     3: collapse_rfc2231_value
                        34      LOAD_FAST                       3: boundary
                        36      CALL_METHOD                     1
                        38      LOAD_METHOD                     4: rstrip
                        40      CALL_METHOD                     0
                        42      RETURN_VALUE                    
                'Message.get_boundary'
                [Code]
                    File Name: email/message.py
                    Object Name: set_boundary
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 14
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        '_get_params_preserve'
                        'errors'
                        'HeaderParseError'
                        'lower'
                        'append'
                        '_headers'
                        'SEMISPACE'
                        'join'
                        'policy'
                        'header_store_parse'
                    [Var Names]
                        'self'
                        'boundary'
                        'missing'
                        'params'
                        'newparams'
                        'foundp'
                        'pk'
                        'pv'
                        'newheaders'
                        'h'
                        'v'
                        'parts'
                        'k'
                        'val'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Set the boundary parameter in Content-Type to 'boundary'.\n\n        This is subtly different than deleting the Content-Type header and\n        adding a new one with a new boundary parameter via add_header().  The\n        main difference is that using the set_boundary() method preserves the\n        order of the Content-Type header in the original message.\n\n        HeaderParseError is raised if the message has no Content-Type header.\n        "
                        'content-type'
                        'No Content-Type header found'
                        False
                        'boundary'
                        '"%s"'
                        True
                        ''
                        '%s=%s'
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      2: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: _get_params_preserve
                        10      LOAD_FAST                       2: missing
                        12      LOAD_CONST                      1: 'content-type'
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      3: params
                        18      LOAD_FAST                       3: params
                        20      LOAD_FAST                       2: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               18 (to 36)
                        26      LOAD_GLOBAL                     2: errors
                        28      LOAD_METHOD                     3: HeaderParseError
                        30      LOAD_CONST                      2: 'No Content-Type header found'
                        32      CALL_METHOD                     1
                        34      RAISE_VARARGS                   1
                        36      BUILD_LIST                      0
                        38      STORE_FAST                      4: newparams
                        40      LOAD_CONST                      3: False
                        42      STORE_FAST                      5: foundp
                        44      LOAD_FAST                       3: params
                        46      GET_ITER                        
                        48      FOR_ITER                        29 (to 108)
                        50      UNPACK_SEQUENCE                 2
                        52      STORE_FAST                      6: pk
                        54      STORE_FAST                      7: pv
                        56      LOAD_FAST                       6: pk
                        58      LOAD_METHOD                     4: lower
                        60      CALL_METHOD                     0
                        62      LOAD_CONST                      4: 'boundary'
                        64      COMPARE_OP                      2 (==)
                        66      POP_JUMP_IF_FALSE               46 (to 92)
                        68      LOAD_FAST                       4: newparams
                        70      LOAD_METHOD                     5: append
                        72      LOAD_CONST                      4: 'boundary'
                        74      LOAD_CONST                      5: '"%s"'
                        76      LOAD_FAST                       1: boundary
                        78      BINARY_MODULO                   
                        80      BUILD_TUPLE                     2
                        82      CALL_METHOD                     1
                        84      POP_TOP                         
                        86      LOAD_CONST                      6: True
                        88      STORE_FAST                      5: foundp
                        90      JUMP_ABSOLUTE                   24 (to 48)
                        92      LOAD_FAST                       4: newparams
                        94      LOAD_METHOD                     5: append
                        96      LOAD_FAST                       6: pk
                        98      LOAD_FAST                       7: pv
                        100     BUILD_TUPLE                     2
                        102     CALL_METHOD                     1
                        104     POP_TOP                         
                        106     JUMP_ABSOLUTE                   24 (to 48)
                        108     LOAD_FAST                       5: foundp
                        110     POP_JUMP_IF_TRUE                65 (to 130)
                        112     LOAD_FAST                       4: newparams
                        114     LOAD_METHOD                     5: append
                        116     LOAD_CONST                      4: 'boundary'
                        118     LOAD_CONST                      5: '"%s"'
                        120     LOAD_FAST                       1: boundary
                        122     BINARY_MODULO                   
                        124     BUILD_TUPLE                     2
                        126     CALL_METHOD                     1
                        128     POP_TOP                         
                        130     BUILD_LIST                      0
                        132     STORE_FAST                      8: newheaders
                        134     LOAD_FAST                       0: self
                        136     LOAD_ATTR                       6: _headers
                        138     GET_ITER                        
                        140     FOR_ITER                        61 (to 264)
                        142     UNPACK_SEQUENCE                 2
                        144     STORE_FAST                      9: h
                        146     STORE_FAST                      10: v
                        148     LOAD_FAST                       9: h
                        150     LOAD_METHOD                     4: lower
                        152     CALL_METHOD                     0
                        154     LOAD_CONST                      1: 'content-type'
                        156     COMPARE_OP                      2 (==)
                        158     POP_JUMP_IF_FALSE               124 (to 248)
                        160     BUILD_LIST                      0
                        162     STORE_FAST                      11: parts
                        164     LOAD_FAST                       4: newparams
                        166     GET_ITER                        
                        168     FOR_ITER                        23 (to 216)
                        170     UNPACK_SEQUENCE                 2
                        172     STORE_FAST                      12: k
                        174     STORE_FAST                      10: v
                        176     LOAD_FAST                       10: v
                        178     LOAD_CONST                      7: ''
                        180     COMPARE_OP                      2 (==)
                        182     POP_JUMP_IF_FALSE               98 (to 196)
                        184     LOAD_FAST                       11: parts
                        186     LOAD_METHOD                     5: append
                        188     LOAD_FAST                       12: k
                        190     CALL_METHOD                     1
                        192     POP_TOP                         
                        194     JUMP_ABSOLUTE                   84 (to 168)
                        196     LOAD_FAST                       11: parts
                        198     LOAD_METHOD                     5: append
                        200     LOAD_CONST                      8: '%s=%s'
                        202     LOAD_FAST                       12: k
                        204     LOAD_FAST                       10: v
                        206     BUILD_TUPLE                     2
                        208     BINARY_MODULO                   
                        210     CALL_METHOD                     1
                        212     POP_TOP                         
                        214     JUMP_ABSOLUTE                   84 (to 168)
                        216     LOAD_GLOBAL                     7: SEMISPACE
                        218     LOAD_METHOD                     8: join
                        220     LOAD_FAST                       11: parts
                        222     CALL_METHOD                     1
                        224     STORE_FAST                      13: val
                        226     LOAD_FAST                       8: newheaders
                        228     LOAD_METHOD                     5: append
                        230     LOAD_FAST                       0: self
                        232     LOAD_ATTR                       9: policy
                        234     LOAD_METHOD                     10: header_store_parse
                        236     LOAD_FAST                       9: h
                        238     LOAD_FAST                       13: val
                        240     CALL_METHOD                     2
                        242     CALL_METHOD                     1
                        244     POP_TOP                         
                        246     JUMP_ABSOLUTE                   70 (to 140)
                        248     LOAD_FAST                       8: newheaders
                        250     LOAD_METHOD                     5: append
                        252     LOAD_FAST                       9: h
                        254     LOAD_FAST                       10: v
                        256     BUILD_TUPLE                     2
                        258     CALL_METHOD                     1
                        260     POP_TOP                         
                        262     JUMP_ABSOLUTE                   70 (to 140)
                        264     LOAD_FAST                       8: newheaders
                        266     LOAD_FAST                       0: self
                        268     STORE_ATTR                      6: _headers
                        270     LOAD_CONST                      9: None
                        272     RETURN_VALUE                    
                'Message.set_boundary'
                [Code]
                    File Name: email/message.py
                    Object Name: get_content_charset
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        'get_param'
                        'isinstance'
                        'tuple'
                        'encode'
                        'str'
                        'LookupError'
                        'UnicodeError'
                        'lower'
                    [Var Names]
                        'self'
                        'failobj'
                        'missing'
                        'charset'
                        'pcharset'
                        'as_bytes'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the charset parameter of the Content-Type header.\n\n        The returned string is always coerced to lower case.  If there is no\n        Content-Type header, or if that header has no charset parameter,\n        failobj is returned.\n        '
                        'charset'
                        0
                        'us-ascii'
                        2
                        'raw-unicode-escape'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      2: missing
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get_param
                        10      LOAD_CONST                      1: 'charset'
                        12      LOAD_FAST                       2: missing
                        14      CALL_METHOD                     2
                        16      STORE_FAST                      3: charset
                        18      LOAD_FAST                       3: charset
                        20      LOAD_FAST                       2: missing
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               15 (to 30)
                        26      LOAD_FAST                       1: failobj
                        28      RETURN_VALUE                    
                        30      LOAD_GLOBAL                     2: isinstance
                        32      LOAD_FAST                       3: charset
                        34      LOAD_GLOBAL                     3: tuple
                        36      CALL_FUNCTION                   2
                        38      POP_JUMP_IF_FALSE               56 (to 112)
                        40      LOAD_FAST                       3: charset
                        42      LOAD_CONST                      2: 0
                        44      BINARY_SUBSCR                   
                        46      JUMP_IF_TRUE_OR_POP             25 (to 50)
                        48      LOAD_CONST                      3: 'us-ascii'
                        50      STORE_FAST                      4: pcharset
                        52      SETUP_FINALLY                   14 (to 82)
                        54      LOAD_FAST                       3: charset
                        56      LOAD_CONST                      4: 2
                        58      BINARY_SUBSCR                   
                        60      LOAD_METHOD                     4: encode
                        62      LOAD_CONST                      5: 'raw-unicode-escape'
                        64      CALL_METHOD                     1
                        66      STORE_FAST                      5: as_bytes
                        68      LOAD_GLOBAL                     5: str
                        70      LOAD_FAST                       5: as_bytes
                        72      LOAD_FAST                       4: pcharset
                        74      CALL_FUNCTION                   2
                        76      STORE_FAST                      3: charset
                        78      POP_BLOCK                       
                        80      JUMP_FORWARD                    15 (to 112)
                        82      DUP_TOP                         
                        84      LOAD_GLOBAL                     6: LookupError
                        86      LOAD_GLOBAL                     7: UnicodeError
                        88      BUILD_TUPLE                     2
                        90      JUMP_IF_NOT_EXC_MATCH           55 (to 110)
                        92      POP_TOP                         
                        94      POP_TOP                         
                        96      POP_TOP                         
                        98      LOAD_FAST                       3: charset
                        100     LOAD_CONST                      4: 2
                        102     BINARY_SUBSCR                   
                        104     STORE_FAST                      3: charset
                        106     POP_EXCEPT                      
                        108     JUMP_FORWARD                    1 (to 112)
                        110     RERAISE                         0
                        112     SETUP_FINALLY                   10 (to 134)
                        114     LOAD_FAST                       3: charset
                        116     LOAD_METHOD                     4: encode
                        118     LOAD_CONST                      3: 'us-ascii'
                        120     CALL_METHOD                     1
                        122     POP_TOP                         
                        124     POP_BLOCK                       
                        126     LOAD_FAST                       3: charset
                        128     LOAD_METHOD                     8: lower
                        130     CALL_METHOD                     0
                        132     RETURN_VALUE                    
                        134     DUP_TOP                         
                        136     LOAD_GLOBAL                     7: UnicodeError
                        138     JUMP_IF_NOT_EXC_MATCH           77 (to 154)
                        140     POP_TOP                         
                        142     POP_TOP                         
                        144     POP_TOP                         
                        146     LOAD_FAST                       1: failobj
                        148     ROT_FOUR                        
                        150     POP_EXCEPT                      
                        152     RETURN_VALUE                    
                        154     RERAISE                         0
                'Message.get_content_charset'
                [Code]
                    File Name: email/message.py
                    Object Name: get_charsets
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'walk'
                    [Var Names]
                        'self'
                        'failobj'
                    [Free Vars]
                    [Cell Vars]
                        'failobj'
                    [Constants]
                        'Return a list containing the charset(s) used in this message.\n\n        The returned list of items describes the Content-Type headers\'\n        charset parameter for this message and all the subparts in its\n        payload.\n\n        Each item will either be a string (the value of the charset parameter\n        in the Content-Type header of that part) or the value of the\n        \'failobj\' parameter (defaults to None), if the part does not have a\n        main MIME type of "text", or the charset is not defined.\n\n        The list will contain one string for each part of the message, plus\n        one for the container message (i.e. self), so that a non-multipart\n        message will still return a list of length 1.\n        '
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 5
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'get_content_charset'
                            [Var Names]
                                '.0'
                                'part'
                            [Free Vars]
                                'failobj'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        7 (to 20)
                                6       STORE_FAST                      1: part
                                8       LOAD_FAST                       1: part
                                10      LOAD_METHOD                     0: get_content_charset
                                12      LOAD_DEREF                      0: failobj
                                14      CALL_METHOD                     1
                                16      LIST_APPEND                     2
                                18      JUMP_ABSOLUTE                   2 (to 4)
                                20      RETURN_VALUE                    
                        'Message.get_charsets.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CLOSURE                    0: failobj
                        2       BUILD_TUPLE                     1
                        4       LOAD_CONST                      1: <CODE> <listcomp>
                        6       LOAD_CONST                      2: 'Message.get_charsets.<locals>.<listcomp>'
                        8       MAKE_FUNCTION                   8
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     0: walk
                        14      CALL_METHOD                     0
                        16      GET_ITER                        
                        18      CALL_FUNCTION                   1
                        20      RETURN_VALUE                    
                'Message.get_charsets'
                [Code]
                    File Name: email/message.py
                    Object Name: get_content_disposition
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get'
                        '_splitparam'
                        'lower'
                    [Var Names]
                        'self'
                        'value'
                        'c_d'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the message's content-disposition if it exists, or None.\n\n        The return values can be either 'inline', 'attachment' or None\n        according to the rfc2183.\n        "
                        'content-disposition'
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get
                        4       LOAD_CONST                      1: 'content-disposition'
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      1: value
                        10      LOAD_FAST                       1: value
                        12      LOAD_CONST                      2: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_CONST                      2: None
                        20      RETURN_VALUE                    
                        22      LOAD_GLOBAL                     1: _splitparam
                        24      LOAD_FAST                       1: value
                        26      CALL_FUNCTION                   1
                        28      LOAD_CONST                      3: 0
                        30      BINARY_SUBSCR                   
                        32      LOAD_METHOD                     2: lower
                        34      CALL_METHOD                     0
                        36      STORE_FAST                      2: c_d
                        38      LOAD_FAST                       2: c_d
                        40      RETURN_VALUE                    
                'Message.get_content_disposition'
                (
                    'walk'
                )
                (
                    False
                    0
                    None
                )
                (
                    False
                    None
                )
                (
                    None
                    False
                )
                (
                    None
                )
                (
                    None
                    'content-type'
                    True
                )
                (
                    'Content-Type'
                    True
                    None
                    ''
                    False
                )
                (
                    'content-type'
                    True
                )
                (
                    'Content-Type'
                    True
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Message'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "Basic message object.\n\n    A message object is defined as something that has a bunch of RFC 2822\n    headers and a payload.  It may optionally have an envelope header\n    (a.k.a. Unix-From or From_ header).  If the message is a container (i.e. a\n    multipart or a message/rfc822), then the payload is a list of Message\n    objects, otherwise it is a string.\n\n    Message objects implement part of the `mapping' interface, which assumes\n    there is exactly one occurrence of the header per message.  Some headers\n    do in fact appear multiple times (e.g. Received) and for those headers,\n    you must use the explicit API to set or get all the headers.  Not all of\n    the mapping methods are implemented.\n    "
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: compat32
                14      BUILD_TUPLE                     1
                16      LOAD_CONST                      2: <CODE> __init__
                18      LOAD_CONST                      3: 'Message.__init__'
                20      MAKE_FUNCTION                   1
                22      STORE_NAME                      5: __init__
                24      LOAD_CONST                      4: <CODE> __str__
                26      LOAD_CONST                      5: 'Message.__str__'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      6: __str__
                32      LOAD_CONST                      100: (False, 0, None)
                34      LOAD_CONST                      9: <CODE> as_string
                36      LOAD_CONST                      10: 'Message.as_string'
                38      MAKE_FUNCTION                   1
                40      STORE_NAME                      7: as_string
                42      LOAD_CONST                      11: <CODE> __bytes__
                44      LOAD_CONST                      12: 'Message.__bytes__'
                46      MAKE_FUNCTION                   0
                48      STORE_NAME                      8: __bytes__
                50      LOAD_CONST                      101: (False, None)
                52      LOAD_CONST                      13: <CODE> as_bytes
                54      LOAD_CONST                      14: 'Message.as_bytes'
                56      MAKE_FUNCTION                   1
                58      STORE_NAME                      9: as_bytes
                60      LOAD_CONST                      15: <CODE> is_multipart
                62      LOAD_CONST                      16: 'Message.is_multipart'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      10: is_multipart
                68      LOAD_CONST                      17: <CODE> set_unixfrom
                70      LOAD_CONST                      18: 'Message.set_unixfrom'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      11: set_unixfrom
                76      LOAD_CONST                      19: <CODE> get_unixfrom
                78      LOAD_CONST                      20: 'Message.get_unixfrom'
                80      MAKE_FUNCTION                   0
                82      STORE_NAME                      12: get_unixfrom
                84      LOAD_CONST                      21: <CODE> attach
                86      LOAD_CONST                      22: 'Message.attach'
                88      MAKE_FUNCTION                   0
                90      STORE_NAME                      13: attach
                92      LOAD_CONST                      102: (None, False)
                94      LOAD_CONST                      23: <CODE> get_payload
                96      LOAD_CONST                      24: 'Message.get_payload'
                98      MAKE_FUNCTION                   1
                100     STORE_NAME                      14: get_payload
                102     LOAD_CONST                      103: (None,)
                104     LOAD_CONST                      25: <CODE> set_payload
                106     LOAD_CONST                      26: 'Message.set_payload'
                108     MAKE_FUNCTION                   1
                110     STORE_NAME                      15: set_payload
                112     LOAD_CONST                      27: <CODE> set_charset
                114     LOAD_CONST                      28: 'Message.set_charset'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      16: set_charset
                120     LOAD_CONST                      29: <CODE> get_charset
                122     LOAD_CONST                      30: 'Message.get_charset'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      17: get_charset
                128     LOAD_CONST                      31: <CODE> __len__
                130     LOAD_CONST                      32: 'Message.__len__'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      18: __len__
                136     LOAD_CONST                      33: <CODE> __getitem__
                138     LOAD_CONST                      34: 'Message.__getitem__'
                140     MAKE_FUNCTION                   0
                142     STORE_NAME                      19: __getitem__
                144     LOAD_CONST                      35: <CODE> __setitem__
                146     LOAD_CONST                      36: 'Message.__setitem__'
                148     MAKE_FUNCTION                   0
                150     STORE_NAME                      20: __setitem__
                152     LOAD_CONST                      37: <CODE> __delitem__
                154     LOAD_CONST                      38: 'Message.__delitem__'
                156     MAKE_FUNCTION                   0
                158     STORE_NAME                      21: __delitem__
                160     LOAD_CONST                      39: <CODE> __contains__
                162     LOAD_CONST                      40: 'Message.__contains__'
                164     MAKE_FUNCTION                   0
                166     STORE_NAME                      22: __contains__
                168     LOAD_CONST                      41: <CODE> __iter__
                170     LOAD_CONST                      42: 'Message.__iter__'
                172     MAKE_FUNCTION                   0
                174     STORE_NAME                      23: __iter__
                176     LOAD_CONST                      43: <CODE> keys
                178     LOAD_CONST                      44: 'Message.keys'
                180     MAKE_FUNCTION                   0
                182     STORE_NAME                      24: keys
                184     LOAD_CONST                      45: <CODE> values
                186     LOAD_CONST                      46: 'Message.values'
                188     MAKE_FUNCTION                   0
                190     STORE_NAME                      25: values
                192     LOAD_CONST                      47: <CODE> items
                194     LOAD_CONST                      48: 'Message.items'
                196     MAKE_FUNCTION                   0
                198     STORE_NAME                      26: items
                200     LOAD_CONST                      103: (None,)
                202     LOAD_CONST                      49: <CODE> get
                204     LOAD_CONST                      50: 'Message.get'
                206     MAKE_FUNCTION                   1
                208     STORE_NAME                      27: get
                210     LOAD_CONST                      51: <CODE> set_raw
                212     LOAD_CONST                      52: 'Message.set_raw'
                214     MAKE_FUNCTION                   0
                216     STORE_NAME                      28: set_raw
                218     LOAD_CONST                      53: <CODE> raw_items
                220     LOAD_CONST                      54: 'Message.raw_items'
                222     MAKE_FUNCTION                   0
                224     STORE_NAME                      29: raw_items
                226     LOAD_CONST                      103: (None,)
                228     LOAD_CONST                      55: <CODE> get_all
                230     LOAD_CONST                      56: 'Message.get_all'
                232     MAKE_FUNCTION                   1
                234     STORE_NAME                      30: get_all
                236     LOAD_CONST                      57: <CODE> add_header
                238     LOAD_CONST                      58: 'Message.add_header'
                240     MAKE_FUNCTION                   0
                242     STORE_NAME                      31: add_header
                244     LOAD_CONST                      59: <CODE> replace_header
                246     LOAD_CONST                      60: 'Message.replace_header'
                248     MAKE_FUNCTION                   0
                250     STORE_NAME                      32: replace_header
                252     LOAD_CONST                      61: <CODE> get_content_type
                254     LOAD_CONST                      62: 'Message.get_content_type'
                256     MAKE_FUNCTION                   0
                258     STORE_NAME                      33: get_content_type
                260     LOAD_CONST                      63: <CODE> get_content_maintype
                262     LOAD_CONST                      64: 'Message.get_content_maintype'
                264     MAKE_FUNCTION                   0
                266     STORE_NAME                      34: get_content_maintype
                268     LOAD_CONST                      65: <CODE> get_content_subtype
                270     LOAD_CONST                      66: 'Message.get_content_subtype'
                272     MAKE_FUNCTION                   0
                274     STORE_NAME                      35: get_content_subtype
                276     LOAD_CONST                      67: <CODE> get_default_type
                278     LOAD_CONST                      68: 'Message.get_default_type'
                280     MAKE_FUNCTION                   0
                282     STORE_NAME                      36: get_default_type
                284     LOAD_CONST                      69: <CODE> set_default_type
                286     LOAD_CONST                      70: 'Message.set_default_type'
                288     MAKE_FUNCTION                   0
                290     STORE_NAME                      37: set_default_type
                292     LOAD_CONST                      71: <CODE> _get_params_preserve
                294     LOAD_CONST                      72: 'Message._get_params_preserve'
                296     MAKE_FUNCTION                   0
                298     STORE_NAME                      38: _get_params_preserve
                300     LOAD_CONST                      104: (None, 'content-type', True)
                302     LOAD_CONST                      75: <CODE> get_params
                304     LOAD_CONST                      76: 'Message.get_params'
                306     MAKE_FUNCTION                   1
                308     STORE_NAME                      39: get_params
                310     NOP                             
                312     NOP                             
                314     LOAD_CONST                      104: (None, 'content-type', True)
                316     LOAD_CONST                      77: <CODE> get_param
                318     LOAD_CONST                      78: 'Message.get_param'
                320     MAKE_FUNCTION                   1
                322     STORE_NAME                      40: get_param
                324     NOP                             
                326     NOP                             
                328     LOAD_CONST                      105: ('Content-Type', True, None, '', False)
                330     LOAD_CONST                      81: <CODE> set_param
                332     LOAD_CONST                      82: 'Message.set_param'
                334     MAKE_FUNCTION                   1
                336     STORE_NAME                      41: set_param
                338     LOAD_CONST                      106: ('content-type', True)
                340     LOAD_CONST                      83: <CODE> del_param
                342     LOAD_CONST                      84: 'Message.del_param'
                344     MAKE_FUNCTION                   1
                346     STORE_NAME                      42: del_param
                348     LOAD_CONST                      107: ('Content-Type', True)
                350     LOAD_CONST                      85: <CODE> set_type
                352     LOAD_CONST                      86: 'Message.set_type'
                354     MAKE_FUNCTION                   1
                356     STORE_NAME                      43: set_type
                358     LOAD_CONST                      103: (None,)
                360     LOAD_CONST                      87: <CODE> get_filename
                362     LOAD_CONST                      88: 'Message.get_filename'
                364     MAKE_FUNCTION                   1
                366     STORE_NAME                      44: get_filename
                368     LOAD_CONST                      103: (None,)
                370     LOAD_CONST                      89: <CODE> get_boundary
                372     LOAD_CONST                      90: 'Message.get_boundary'
                374     MAKE_FUNCTION                   1
                376     STORE_NAME                      45: get_boundary
                378     LOAD_CONST                      91: <CODE> set_boundary
                380     LOAD_CONST                      92: 'Message.set_boundary'
                382     MAKE_FUNCTION                   0
                384     STORE_NAME                      46: set_boundary
                386     LOAD_CONST                      103: (None,)
                388     LOAD_CONST                      93: <CODE> get_content_charset
                390     LOAD_CONST                      94: 'Message.get_content_charset'
                392     MAKE_FUNCTION                   1
                394     STORE_NAME                      47: get_content_charset
                396     LOAD_CONST                      103: (None,)
                398     LOAD_CONST                      95: <CODE> get_charsets
                400     LOAD_CONST                      96: 'Message.get_charsets'
                402     MAKE_FUNCTION                   1
                404     STORE_NAME                      48: get_charsets
                406     LOAD_CONST                      97: <CODE> get_content_disposition
                408     LOAD_CONST                      98: 'Message.get_content_disposition'
                410     MAKE_FUNCTION                   0
                412     STORE_NAME                      49: get_content_disposition
                414     LOAD_CONST                      7: 0
                416     LOAD_CONST                      99: ('walk',)
                418     IMPORT_NAME                     50: email.iterators
                420     IMPORT_FROM                     51: walk
                422     STORE_NAME                      51: walk
                424     POP_TOP                         
                426     LOAD_CONST                      8: None
                428     RETURN_VALUE                    
        [Code]
            File Name: email/message.py
            Object Name: MIMEPart
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'as_string'
                '__str__'
                'is_attachment'
                '_find_body'
                'get_body'
                '_body_types'
                'iter_attachments'
                'iter_parts'
                'get_content'
                'set_content'
                '_make_multipart'
                'make_related'
                'make_alternative'
                'make_mixed'
                '_add_multipart'
                'add_related'
                'add_alternative'
                'add_attachment'
                'clear'
                'clear_content'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'MIMEPart'
                None
                [Code]
                    File Name: email/message.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'email.policy'
                        'default'
                        'super'
                        '__init__'
                    [Var Names]
                        'self'
                        'policy'
                        'default'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        (
                            'default'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: policy
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               12 (to 24)
                        8       LOAD_CONST                      1: 0
                        10      LOAD_CONST                      2: ('default',)
                        12      IMPORT_NAME                     0: email.policy
                        14      IMPORT_FROM                     1: default
                        16      STORE_FAST                      2: default
                        18      POP_TOP                         
                        20      LOAD_FAST                       2: default
                        22      STORE_FAST                      1: policy
                        24      LOAD_GLOBAL                     2: super
                        26      CALL_FUNCTION                   0
                        28      LOAD_METHOD                     3: __init__
                        30      LOAD_FAST                       1: policy
                        32      CALL_METHOD                     1
                        34      POP_TOP                         
                        36      LOAD_CONST                      0: None
                        38      RETURN_VALUE                    
                'MIMEPart.__init__'
                False
                [Code]
                    File Name: email/message.py
                    Object Name: as_string
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'policy'
                        'max_line_length'
                        'super'
                        'as_string'
                    [Var Names]
                        'self'
                        'unixfrom'
                        'maxheaderlen'
                        'policy'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        "Return the entire formatted message as a string.\n\n        Optional 'unixfrom', when true, means include the Unix From_ envelope\n        header.  maxheaderlen is retained for backward compatibility with the\n        base Message class, but defaults to None, meaning that the policy value\n        for max_line_length controls the header maximum length.  'policy' is\n        passed to the Generator instance used to serialize the message; if it\n        is not specified the policy associated with the message instance is\n        used.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       3: policy
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: policy
                        12      JUMP_FORWARD                    1 (to 16)
                        14      LOAD_FAST                       3: policy
                        16      STORE_FAST                      3: policy
                        18      LOAD_FAST                       2: maxheaderlen
                        20      LOAD_CONST                      1: None
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               16 (to 32)
                        26      LOAD_FAST                       3: policy
                        28      LOAD_ATTR                       1: max_line_length
                        30      STORE_FAST                      2: maxheaderlen
                        32      LOAD_GLOBAL                     2: super
                        34      CALL_FUNCTION                   0
                        36      LOAD_METHOD                     3: as_string
                        38      LOAD_FAST                       1: unixfrom
                        40      LOAD_FAST                       2: maxheaderlen
                        42      LOAD_FAST                       3: policy
                        44      CALL_METHOD                     3
                        46      RETURN_VALUE                    
                'MIMEPart.as_string'
                [Code]
                    File Name: email/message.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'as_string'
                        'policy'
                        'clone'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        (
                            'utf8'
                        )
                        (
                            'policy'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: as_string
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: policy
                        8       LOAD_ATTR                       2: clone
                        10      LOAD_CONST                      1: True
                        12      LOAD_CONST                      2: ('utf8',)
                        14      CALL_FUNCTION_KW                1
                        16      LOAD_CONST                      3: ('policy',)
                        18      CALL_FUNCTION_KW                1
                        20      RETURN_VALUE                    
                'MIMEPart.__str__'
                [Code]
                    File Name: email/message.py
                    Object Name: is_attachment
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get'
                        'content_disposition'
                    [Var Names]
                        'self'
                        'c_d'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'content-disposition'
                        False
                        'attachment'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get
                        4       LOAD_CONST                      1: 'content-disposition'
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      1: c_d
                        10      LOAD_FAST                       1: c_d
                        12      LOAD_CONST                      0: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_CONST                      2: False
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       1: c_d
                        24      LOAD_ATTR                       1: content_disposition
                        26      LOAD_CONST                      3: 'attachment'
                        28      COMPARE_OP                      2 (==)
                        30      RETURN_VALUE                    
                'MIMEPart.is_attachment'
                [Code]
                    File Name: email/message.py
                    Object Name: _find_body
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 5
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'is_attachment'
                        'get_content_type'
                        'split'
                        'index'
                        'is_multipart'
                        'iter_parts'
                        '_find_body'
                        'get_param'
                        'get_payload'
                    [Var Names]
                        'self'
                        'part'
                        'preferencelist'
                        'maintype'
                        'subtype'
                        'subpart'
                        'candidate'
                        'start'
                        'subparts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '/'
                        'text'
                        'multipart'
                        'related'
                        'start'
                        'content-id'
                        0
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       1: part
                        4       LOAD_METHOD                     0: is_attachment
                        6       CALL_METHOD                     0
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       1: part
                        16      LOAD_METHOD                     1: get_content_type
                        18      CALL_METHOD                     0
                        20      LOAD_METHOD                     2: split
                        22      LOAD_CONST                      1: '/'
                        24      CALL_METHOD                     1
                        26      UNPACK_SEQUENCE                 2
                        28      STORE_FAST                      3: maintype
                        30      STORE_FAST                      4: subtype
                        32      LOAD_FAST                       3: maintype
                        34      LOAD_CONST                      2: 'text'
                        36      COMPARE_OP                      2 (==)
                        38      POP_JUMP_IF_FALSE               34 (to 68)
                        40      LOAD_FAST                       4: subtype
                        42      LOAD_FAST                       2: preferencelist
                        44      CONTAINS_OP                     0 (in)
                        46      POP_JUMP_IF_FALSE               32 (to 64)
                        48      LOAD_FAST                       2: preferencelist
                        50      LOAD_METHOD                     3: index
                        52      LOAD_FAST                       4: subtype
                        54      CALL_METHOD                     1
                        56      LOAD_FAST                       1: part
                        58      BUILD_TUPLE                     2
                        60      YIELD_VALUE                     
                        62      POP_TOP                         
                        64      LOAD_CONST                      0: None
                        66      RETURN_VALUE                    
                        68      LOAD_FAST                       3: maintype
                        70      LOAD_CONST                      3: 'multipart'
                        72      COMPARE_OP                      3 (!=)
                        74      POP_JUMP_IF_TRUE                42 (to 84)
                        76      LOAD_FAST                       0: self
                        78      LOAD_METHOD                     4: is_multipart
                        80      CALL_METHOD                     0
                        82      POP_JUMP_IF_TRUE                44 (to 88)
                        84      LOAD_CONST                      0: None
                        86      RETURN_VALUE                    
                        88      LOAD_FAST                       4: subtype
                        90      LOAD_CONST                      4: 'related'
                        92      COMPARE_OP                      3 (!=)
                        94      POP_JUMP_IF_FALSE               66 (to 132)
                        96      LOAD_FAST                       1: part
                        98      LOAD_METHOD                     5: iter_parts
                        100     CALL_METHOD                     0
                        102     GET_ITER                        
                        104     FOR_ITER                        11 (to 128)
                        106     STORE_FAST                      5: subpart
                        108     LOAD_FAST                       0: self
                        110     LOAD_METHOD                     6: _find_body
                        112     LOAD_FAST                       5: subpart
                        114     LOAD_FAST                       2: preferencelist
                        116     CALL_METHOD                     2
                        118     GET_YIELD_FROM_ITER             
                        120     LOAD_CONST                      0: None
                        122     YIELD_FROM                      
                        124     POP_TOP                         
                        126     JUMP_ABSOLUTE                   52 (to 104)
                        128     LOAD_CONST                      0: None
                        130     RETURN_VALUE                    
                        132     LOAD_CONST                      4: 'related'
                        134     LOAD_FAST                       2: preferencelist
                        136     CONTAINS_OP                     0 (in)
                        138     POP_JUMP_IF_FALSE               78 (to 156)
                        140     LOAD_FAST                       2: preferencelist
                        142     LOAD_METHOD                     3: index
                        144     LOAD_CONST                      4: 'related'
                        146     CALL_METHOD                     1
                        148     LOAD_FAST                       1: part
                        150     BUILD_TUPLE                     2
                        152     YIELD_VALUE                     
                        154     POP_TOP                         
                        156     LOAD_CONST                      0: None
                        158     STORE_FAST                      6: candidate
                        160     LOAD_FAST                       1: part
                        162     LOAD_METHOD                     7: get_param
                        164     LOAD_CONST                      5: 'start'
                        166     CALL_METHOD                     1
                        168     STORE_FAST                      7: start
                        170     LOAD_FAST                       7: start
                        172     POP_JUMP_IF_FALSE               104 (to 208)
                        174     LOAD_FAST                       1: part
                        176     LOAD_METHOD                     5: iter_parts
                        178     CALL_METHOD                     0
                        180     GET_ITER                        
                        182     FOR_ITER                        12 (to 208)
                        184     STORE_FAST                      5: subpart
                        186     LOAD_FAST                       5: subpart
                        188     LOAD_CONST                      6: 'content-id'
                        190     BINARY_SUBSCR                   
                        192     LOAD_FAST                       7: start
                        194     COMPARE_OP                      2 (==)
                        196     POP_JUMP_IF_FALSE               103 (to 206)
                        198     LOAD_FAST                       5: subpart
                        200     STORE_FAST                      6: candidate
                        202     POP_TOP                         
                        204     JUMP_FORWARD                    1 (to 208)
                        206     JUMP_ABSOLUTE                   91 (to 182)
                        208     LOAD_FAST                       6: candidate
                        210     LOAD_CONST                      0: None
                        212     IS_OP                           0 (is)
                        214     POP_JUMP_IF_FALSE               120 (to 240)
                        216     LOAD_FAST                       1: part
                        218     LOAD_METHOD                     8: get_payload
                        220     CALL_METHOD                     0
                        222     STORE_FAST                      8: subparts
                        224     LOAD_FAST                       8: subparts
                        226     POP_JUMP_IF_FALSE               118 (to 236)
                        228     LOAD_FAST                       8: subparts
                        230     LOAD_CONST                      7: 0
                        232     BINARY_SUBSCR                   
                        234     JUMP_FORWARD                    1 (to 238)
                        236     LOAD_CONST                      0: None
                        238     STORE_FAST                      6: candidate
                        240     LOAD_FAST                       6: candidate
                        242     LOAD_CONST                      0: None
                        244     IS_OP                           1 (is not)
                        246     POP_JUMP_IF_FALSE               135 (to 270)
                        248     LOAD_FAST                       0: self
                        250     LOAD_METHOD                     6: _find_body
                        252     LOAD_FAST                       6: candidate
                        254     LOAD_FAST                       2: preferencelist
                        256     CALL_METHOD                     2
                        258     GET_YIELD_FROM_ITER             
                        260     LOAD_CONST                      0: None
                        262     YIELD_FROM                      
                        264     POP_TOP                         
                        266     LOAD_CONST                      0: None
                        268     RETURN_VALUE                    
                        270     LOAD_CONST                      0: None
                        272     RETURN_VALUE                    
                'MIMEPart._find_body'
                (
                    'related'
                    'html'
                    'plain'
                )
                [Code]
                    File Name: email/message.py
                    Object Name: get_body
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        '_find_body'
                    [Var Names]
                        'self'
                        'preferencelist'
                        'best_prio'
                        'body'
                        'prio'
                        'part'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return best candidate mime part for display as 'body' of message.\n\n        Do a depth first search, starting with self, looking for the first part\n        matching each of the items in preferencelist, and return the part\n        corresponding to the first item that has a match, or None if no items\n        have a match.  If 'related' is not included in preferencelist, consider\n        the root part of any multipart/related encountered as a candidate\n        match.  Ignore parts with 'Content-Disposition: attachment'.\n        "
                        None
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_FAST                       1: preferencelist
                        4       CALL_FUNCTION                   1
                        6       STORE_FAST                      2: best_prio
                        8       LOAD_CONST                      1: None
                        10      STORE_FAST                      3: body
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: _find_body
                        16      LOAD_FAST                       0: self
                        18      LOAD_FAST                       1: preferencelist
                        20      CALL_METHOD                     2
                        22      GET_ITER                        
                        24      FOR_ITER                        19 (to 64)
                        26      UNPACK_SEQUENCE                 2
                        28      STORE_FAST                      4: prio
                        30      STORE_FAST                      5: part
                        32      LOAD_FAST                       4: prio
                        34      LOAD_FAST                       2: best_prio
                        36      COMPARE_OP                      0 (<)
                        38      POP_JUMP_IF_FALSE               31 (to 62)
                        40      LOAD_FAST                       4: prio
                        42      STORE_FAST                      2: best_prio
                        44      LOAD_FAST                       5: part
                        46      STORE_FAST                      3: body
                        48      LOAD_FAST                       4: prio
                        50      LOAD_CONST                      2: 0
                        52      COMPARE_OP                      2 (==)
                        54      POP_JUMP_IF_FALSE               31 (to 62)
                        56      POP_TOP                         
                        58      LOAD_FAST                       3: body
                        60      RETURN_VALUE                    
                        62      JUMP_ABSOLUTE                   12 (to 24)
                        64      LOAD_FAST                       3: body
                        66      RETURN_VALUE                    
                'MIMEPart.get_body'
                frozenset({
                    (
                        'text'
                        'html'
                    )
                    (
                        'text'
                        'plain'
                    )
                    (
                        'multipart'
                        'related'
                    )
                    (
                        'multipart'
                        'alternative'
                    )
                })
                [Code]
                    File Name: email/message.py
                    Object Name: iter_attachments
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 8
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'get_content_type'
                        'split'
                        'get_payload'
                        'copy'
                        'AttributeError'
                        'get_param'
                        'get'
                        'append'
                        'pop'
                        '_body_types'
                        'is_attachment'
                    [Var Names]
                        'self'
                        'maintype'
                        'subtype'
                        'payload'
                        'parts'
                        'start'
                        'found'
                        'attachments'
                        'part'
                        'seen'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return an iterator over the non-main parts of a multipart.\n\n        Skip the first of each occurrence of text/plain, text/html,\n        multipart/related, or multipart/alternative in the multipart (unless\n        they have a 'Content-Disposition: attachment' header) and include all\n        remaining subparts in the returned iterator.  When applied to a\n        multipart/related, return all parts except the root part.  Return an\n        empty iterator when applied to a multipart/alternative or a\n        non-multipart.\n        "
                        '/'
                        'multipart'
                        'alternative'
                        None
                        'related'
                        'start'
                        False
                        'content-id'
                        True
                        0
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: get_content_type
                        6       CALL_METHOD                     0
                        8       LOAD_METHOD                     1: split
                        10      LOAD_CONST                      1: '/'
                        12      CALL_METHOD                     1
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      1: maintype
                        18      STORE_FAST                      2: subtype
                        20      LOAD_FAST                       1: maintype
                        22      LOAD_CONST                      2: 'multipart'
                        24      COMPARE_OP                      3 (!=)
                        26      POP_JUMP_IF_TRUE                18 (to 36)
                        28      LOAD_FAST                       2: subtype
                        30      LOAD_CONST                      3: 'alternative'
                        32      COMPARE_OP                      2 (==)
                        34      POP_JUMP_IF_FALSE               20 (to 40)
                        36      LOAD_CONST                      4: None
                        38      RETURN_VALUE                    
                        40      LOAD_FAST                       0: self
                        42      LOAD_METHOD                     2: get_payload
                        44      CALL_METHOD                     0
                        46      STORE_FAST                      3: payload
                        48      SETUP_FINALLY                   6 (to 62)
                        50      LOAD_FAST                       3: payload
                        52      LOAD_METHOD                     3: copy
                        54      CALL_METHOD                     0
                        56      STORE_FAST                      4: parts
                        58      POP_BLOCK                       
                        60      JUMP_FORWARD                    10 (to 82)
                        62      DUP_TOP                         
                        64      LOAD_GLOBAL                     4: AttributeError
                        66      JUMP_IF_NOT_EXC_MATCH           40 (to 80)
                        68      POP_TOP                         
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_EXCEPT                      
                        76      LOAD_CONST                      4: None
                        78      RETURN_VALUE                    
                        80      RERAISE                         0
                        82      LOAD_FAST                       1: maintype
                        84      LOAD_CONST                      2: 'multipart'
                        86      COMPARE_OP                      2 (==)
                        88      POP_JUMP_IF_FALSE               101 (to 202)
                        90      LOAD_FAST                       2: subtype
                        92      LOAD_CONST                      5: 'related'
                        94      COMPARE_OP                      2 (==)
                        96      POP_JUMP_IF_FALSE               101 (to 202)
                        98      LOAD_FAST                       0: self
                        100     LOAD_METHOD                     5: get_param
                        102     LOAD_CONST                      6: 'start'
                        104     CALL_METHOD                     1
                        106     STORE_FAST                      5: start
                        108     LOAD_FAST                       5: start
                        110     POP_JUMP_IF_FALSE               89 (to 178)
                        112     LOAD_CONST                      7: False
                        114     STORE_FAST                      6: found
                        116     BUILD_LIST                      0
                        118     STORE_FAST                      7: attachments
                        120     LOAD_FAST                       4: parts
                        122     GET_ITER                        
                        124     FOR_ITER                        17 (to 160)
                        126     STORE_FAST                      8: part
                        128     LOAD_FAST                       8: part
                        130     LOAD_METHOD                     6: get
                        132     LOAD_CONST                      8: 'content-id'
                        134     CALL_METHOD                     1
                        136     LOAD_FAST                       5: start
                        138     COMPARE_OP                      2 (==)
                        140     POP_JUMP_IF_FALSE               74 (to 148)
                        142     LOAD_CONST                      9: True
                        144     STORE_FAST                      6: found
                        146     JUMP_ABSOLUTE                   62 (to 124)
                        148     LOAD_FAST                       7: attachments
                        150     LOAD_METHOD                     7: append
                        152     LOAD_FAST                       8: part
                        154     CALL_METHOD                     1
                        156     POP_TOP                         
                        158     JUMP_ABSOLUTE                   62 (to 124)
                        160     LOAD_FAST                       6: found
                        162     POP_JUMP_IF_FALSE               89 (to 178)
                        164     LOAD_FAST                       7: attachments
                        166     GET_YIELD_FROM_ITER             
                        168     LOAD_CONST                      4: None
                        170     YIELD_FROM                      
                        172     POP_TOP                         
                        174     LOAD_CONST                      4: None
                        176     RETURN_VALUE                    
                        178     LOAD_FAST                       4: parts
                        180     LOAD_METHOD                     8: pop
                        182     LOAD_CONST                      10: 0
                        184     CALL_METHOD                     1
                        186     POP_TOP                         
                        188     LOAD_FAST                       4: parts
                        190     GET_YIELD_FROM_ITER             
                        192     LOAD_CONST                      4: None
                        194     YIELD_FROM                      
                        196     POP_TOP                         
                        198     LOAD_CONST                      4: None
                        200     RETURN_VALUE                    
                        202     BUILD_LIST                      0
                        204     STORE_FAST                      9: seen
                        206     LOAD_FAST                       4: parts
                        208     GET_ITER                        
                        210     FOR_ITER                        35 (to 282)
                        212     STORE_FAST                      8: part
                        214     LOAD_FAST                       8: part
                        216     LOAD_METHOD                     0: get_content_type
                        218     CALL_METHOD                     0
                        220     LOAD_METHOD                     1: split
                        222     LOAD_CONST                      1: '/'
                        224     CALL_METHOD                     1
                        226     UNPACK_SEQUENCE                 2
                        228     STORE_FAST                      1: maintype
                        230     STORE_FAST                      2: subtype
                        232     LOAD_FAST                       1: maintype
                        234     LOAD_FAST                       2: subtype
                        236     BUILD_TUPLE                     2
                        238     LOAD_FAST                       0: self
                        240     LOAD_ATTR                       9: _body_types
                        242     CONTAINS_OP                     0 (in)
                        244     POP_JUMP_IF_FALSE               137 (to 274)
                        246     LOAD_FAST                       8: part
                        248     LOAD_METHOD                     10: is_attachment
                        250     CALL_METHOD                     0
                        252     POP_JUMP_IF_TRUE                137 (to 274)
                        254     LOAD_FAST                       2: subtype
                        256     LOAD_FAST                       9: seen
                        258     CONTAINS_OP                     1 (not in)
                        260     POP_JUMP_IF_FALSE               137 (to 274)
                        262     LOAD_FAST                       9: seen
                        264     LOAD_METHOD                     7: append
                        266     LOAD_FAST                       2: subtype
                        268     CALL_METHOD                     1
                        270     POP_TOP                         
                        272     JUMP_ABSOLUTE                   105 (to 210)
                        274     LOAD_FAST                       8: part
                        276     YIELD_VALUE                     
                        278     POP_TOP                         
                        280     JUMP_ABSOLUTE                   105 (to 210)
                        282     LOAD_CONST                      4: None
                        284     RETURN_VALUE                    
                'MIMEPart.iter_attachments'
                [Code]
                    File Name: email/message.py
                    Object Name: iter_parts
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'is_multipart'
                        'get_payload'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return an iterator over all immediate subparts of a multipart.\n\n        Return an empty iterator for a non-multipart.\n        '
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: is_multipart
                        6       CALL_METHOD                     0
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: get_payload
                        14      CALL_METHOD                     0
                        16      GET_YIELD_FROM_ITER             
                        18      LOAD_CONST                      1: None
                        20      YIELD_FROM                      
                        22      POP_TOP                         
                        24      LOAD_CONST                      1: None
                        26      RETURN_VALUE                    
                        28      LOAD_CONST                      1: None
                        30      RETURN_VALUE                    
                'MIMEPart.iter_parts'
                (
                    'content_manager'
                )
                [Code]
                    File Name: email/message.py
                    Object Name: get_content
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'policy'
                        'content_manager'
                        'get_content'
                    [Var Names]
                        'self'
                        'content_manager'
                        'args'
                        'kw'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: content_manager
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: policy
                        12      LOAD_ATTR                       1: content_manager
                        14      STORE_FAST                      1: content_manager
                        16      LOAD_FAST                       1: content_manager
                        18      LOAD_ATTR                       2: get_content
                        20      LOAD_FAST                       0: self
                        22      BUILD_LIST                      1
                        24      LOAD_FAST                       2: args
                        26      LIST_EXTEND                     1
                        28      LIST_TO_TUPLE                   
                        30      BUILD_MAP                       0
                        32      LOAD_FAST                       3: kw
                        34      DICT_MERGE                      1
                        36      CALL_FUNCTION_EX                1
                        38      RETURN_VALUE                    
                'MIMEPart.get_content'
                [Code]
                    File Name: email/message.py
                    Object Name: set_content
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'policy'
                        'content_manager'
                        'set_content'
                    [Var Names]
                        'self'
                        'content_manager'
                        'args'
                        'kw'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: content_manager
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: policy
                        12      LOAD_ATTR                       1: content_manager
                        14      STORE_FAST                      1: content_manager
                        16      LOAD_FAST                       1: content_manager
                        18      LOAD_ATTR                       2: set_content
                        20      LOAD_FAST                       0: self
                        22      BUILD_LIST                      1
                        24      LOAD_FAST                       2: args
                        26      LIST_EXTEND                     1
                        28      LIST_TO_TUPLE                   
                        30      BUILD_MAP                       0
                        32      LOAD_FAST                       3: kw
                        34      DICT_MERGE                      1
                        36      CALL_FUNCTION_EX                1
                        38      POP_TOP                         
                        40      LOAD_CONST                      0: None
                        42      RETURN_VALUE                    
                'MIMEPart.set_content'
                [Code]
                    File Name: email/message.py
                    Object Name: _make_multipart
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get_content_maintype'
                        'get_content_subtype'
                        'ValueError'
                        'format'
                        '_headers'
                        'lower'
                        'startswith'
                        'append'
                        'type'
                        'policy'
                        '_payload'
                        'set_param'
                    [Var Names]
                        'self'
                        'subtype'
                        'disallowed_subtypes'
                        'boundary'
                        'existing_subtype'
                        'keep_headers'
                        'part_headers'
                        'name'
                        'value'
                        'part'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'multipart'
                        'Cannot convert {} to {}'
                        'content-'
                        (
                            'policy'
                        )
                        'multipart/'
                        'Content-Type'
                        'boundary'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get_content_maintype
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 'multipart'
                        8       COMPARE_OP                      2 (==)
                        10      POP_JUMP_IF_FALSE               27 (to 54)
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: get_content_subtype
                        16      CALL_METHOD                     0
                        18      STORE_FAST                      4: existing_subtype
                        20      LOAD_FAST                       2: disallowed_subtypes
                        22      LOAD_FAST                       1: subtype
                        24      BUILD_TUPLE                     1
                        26      BINARY_ADD                      
                        28      STORE_FAST                      2: disallowed_subtypes
                        30      LOAD_FAST                       4: existing_subtype
                        32      LOAD_FAST                       2: disallowed_subtypes
                        34      CONTAINS_OP                     0 (in)
                        36      POP_JUMP_IF_FALSE               27 (to 54)
                        38      LOAD_GLOBAL                     2: ValueError
                        40      LOAD_CONST                      2: 'Cannot convert {} to {}'
                        42      LOAD_METHOD                     3: format
                        44      LOAD_FAST                       4: existing_subtype
                        46      LOAD_FAST                       1: subtype
                        48      CALL_METHOD                     2
                        50      CALL_FUNCTION                   1
                        52      RAISE_VARARGS                   1
                        54      BUILD_LIST                      0
                        56      STORE_FAST                      5: keep_headers
                        58      BUILD_LIST                      0
                        60      STORE_FAST                      6: part_headers
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       4: _headers
                        66      GET_ITER                        
                        68      FOR_ITER                        26 (to 122)
                        70      UNPACK_SEQUENCE                 2
                        72      STORE_FAST                      7: name
                        74      STORE_FAST                      8: value
                        76      LOAD_FAST                       7: name
                        78      LOAD_METHOD                     5: lower
                        80      CALL_METHOD                     0
                        82      LOAD_METHOD                     6: startswith
                        84      LOAD_CONST                      3: 'content-'
                        86      CALL_METHOD                     1
                        88      POP_JUMP_IF_FALSE               53 (to 106)
                        90      LOAD_FAST                       6: part_headers
                        92      LOAD_METHOD                     7: append
                        94      LOAD_FAST                       7: name
                        96      LOAD_FAST                       8: value
                        98      BUILD_TUPLE                     2
                        100     CALL_METHOD                     1
                        102     POP_TOP                         
                        104     JUMP_ABSOLUTE                   34 (to 68)
                        106     LOAD_FAST                       5: keep_headers
                        108     LOAD_METHOD                     7: append
                        110     LOAD_FAST                       7: name
                        112     LOAD_FAST                       8: value
                        114     BUILD_TUPLE                     2
                        116     CALL_METHOD                     1
                        118     POP_TOP                         
                        120     JUMP_ABSOLUTE                   34 (to 68)
                        122     LOAD_FAST                       6: part_headers
                        124     POP_JUMP_IF_FALSE               83 (to 166)
                        126     LOAD_GLOBAL                     8: type
                        128     LOAD_FAST                       0: self
                        130     CALL_FUNCTION                   1
                        132     LOAD_FAST                       0: self
                        134     LOAD_ATTR                       9: policy
                        136     LOAD_CONST                      4: ('policy',)
                        138     CALL_FUNCTION_KW                1
                        140     STORE_FAST                      9: part
                        142     LOAD_FAST                       6: part_headers
                        144     LOAD_FAST                       9: part
                        146     STORE_ATTR                      4: _headers
                        148     LOAD_FAST                       0: self
                        150     LOAD_ATTR                       10: _payload
                        152     LOAD_FAST                       9: part
                        154     STORE_ATTR                      10: _payload
                        156     LOAD_FAST                       9: part
                        158     BUILD_LIST                      1
                        160     LOAD_FAST                       0: self
                        162     STORE_ATTR                      10: _payload
                        164     JUMP_FORWARD                    3 (to 172)
                        166     BUILD_LIST                      0
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      10: _payload
                        172     LOAD_FAST                       5: keep_headers
                        174     LOAD_FAST                       0: self
                        176     STORE_ATTR                      4: _headers
                        178     LOAD_CONST                      5: 'multipart/'
                        180     LOAD_FAST                       1: subtype
                        182     BINARY_ADD                      
                        184     LOAD_FAST                       0: self
                        186     LOAD_CONST                      6: 'Content-Type'
                        188     STORE_SUBSCR                    
                        190     LOAD_FAST                       3: boundary
                        192     LOAD_CONST                      0: None
                        194     IS_OP                           1 (is not)
                        196     POP_JUMP_IF_FALSE               107 (to 214)
                        198     LOAD_FAST                       0: self
                        200     LOAD_METHOD                     11: set_param
                        202     LOAD_CONST                      7: 'boundary'
                        204     LOAD_FAST                       3: boundary
                        206     CALL_METHOD                     2
                        208     POP_TOP                         
                        210     LOAD_CONST                      0: None
                        212     RETURN_VALUE                    
                        214     LOAD_CONST                      0: None
                        216     RETURN_VALUE                    
                'MIMEPart._make_multipart'
                [Code]
                    File Name: email/message.py
                    Object Name: make_related
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_make_multipart'
                    [Var Names]
                        'self'
                        'boundary'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'related'
                        (
                            'alternative'
                            'mixed'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _make_multipart
                        4       LOAD_CONST                      1: 'related'
                        6       LOAD_CONST                      2: ('alternative', 'mixed')
                        8       LOAD_FAST                       1: boundary
                        10      CALL_METHOD                     3
                        12      POP_TOP                         
                        14      LOAD_CONST                      0: None
                        16      RETURN_VALUE                    
                'MIMEPart.make_related'
                [Code]
                    File Name: email/message.py
                    Object Name: make_alternative
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_make_multipart'
                    [Var Names]
                        'self'
                        'boundary'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'alternative'
                        (
                            'mixed'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _make_multipart
                        4       LOAD_CONST                      1: 'alternative'
                        6       LOAD_CONST                      2: ('mixed',)
                        8       LOAD_FAST                       1: boundary
                        10      CALL_METHOD                     3
                        12      POP_TOP                         
                        14      LOAD_CONST                      0: None
                        16      RETURN_VALUE                    
                'MIMEPart.make_alternative'
                [Code]
                    File Name: email/message.py
                    Object Name: make_mixed
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_make_multipart'
                    [Var Names]
                        'self'
                        'boundary'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'mixed'
                        (
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _make_multipart
                        4       LOAD_CONST                      1: 'mixed'
                        6       LOAD_CONST                      2: ()
                        8       LOAD_FAST                       1: boundary
                        10      CALL_METHOD                     3
                        12      POP_TOP                         
                        14      LOAD_CONST                      0: None
                        16      RETURN_VALUE                    
                'MIMEPart.make_mixed'
                (
                    '_disp'
                )
                [Code]
                    File Name: email/message.py
                    Object Name: _add_multipart
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 6
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'get_content_maintype'
                        'get_content_subtype'
                        'getattr'
                        'type'
                        'policy'
                        'set_content'
                        'attach'
                    [Var Names]
                        'self'
                        '_subtype'
                        '_disp'
                        'args'
                        'kw'
                        'part'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'multipart'
                        'make_'
                        (
                            'policy'
                        )
                        'content-disposition'
                        'Content-Disposition'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get_content_maintype
                        4       CALL_METHOD                     0
                        6       LOAD_CONST                      1: 'multipart'
                        8       COMPARE_OP                      3 (!=)
                        10      POP_JUMP_IF_TRUE                12 (to 24)
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: get_content_subtype
                        16      CALL_METHOD                     0
                        18      LOAD_FAST                       1: _subtype
                        20      COMPARE_OP                      3 (!=)
                        22      POP_JUMP_IF_FALSE               20 (to 40)
                        24      LOAD_GLOBAL                     2: getattr
                        26      LOAD_FAST                       0: self
                        28      LOAD_CONST                      2: 'make_'
                        30      LOAD_FAST                       1: _subtype
                        32      BINARY_ADD                      
                        34      CALL_FUNCTION                   2
                        36      CALL_FUNCTION                   0
                        38      POP_TOP                         
                        40      LOAD_GLOBAL                     3: type
                        42      LOAD_FAST                       0: self
                        44      CALL_FUNCTION                   1
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       4: policy
                        50      LOAD_CONST                      3: ('policy',)
                        52      CALL_FUNCTION_KW                1
                        54      STORE_FAST                      5: part
                        56      LOAD_FAST                       5: part
                        58      LOAD_ATTR                       5: set_content
                        60      LOAD_FAST                       3: args
                        62      BUILD_MAP                       0
                        64      LOAD_FAST                       4: kw
                        66      DICT_MERGE                      1
                        68      CALL_FUNCTION_EX                1
                        70      POP_TOP                         
                        72      LOAD_FAST                       2: _disp
                        74      POP_JUMP_IF_FALSE               46 (to 92)
                        76      LOAD_CONST                      4: 'content-disposition'
                        78      LOAD_FAST                       5: part
                        80      CONTAINS_OP                     1 (not in)
                        82      POP_JUMP_IF_FALSE               46 (to 92)
                        84      LOAD_FAST                       2: _disp
                        86      LOAD_FAST                       5: part
                        88      LOAD_CONST                      5: 'Content-Disposition'
                        90      STORE_SUBSCR                    
                        92      LOAD_FAST                       0: self
                        94      LOAD_METHOD                     6: attach
                        96      LOAD_FAST                       5: part
                        98      CALL_METHOD                     1
                        100     POP_TOP                         
                        102     LOAD_CONST                      0: None
                        104     RETURN_VALUE                    
                'MIMEPart._add_multipart'
                [Code]
                    File Name: email/message.py
                    Object Name: add_related
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        '_add_multipart'
                    [Var Names]
                        'self'
                        'args'
                        'kw'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'related'
                        '_disp'
                        'inline'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _add_multipart
                        4       LOAD_CONST                      1: 'related'
                        6       BUILD_LIST                      1
                        8       LOAD_FAST                       1: args
                        10      LIST_EXTEND                     1
                        12      LIST_TO_TUPLE                   
                        14      LOAD_CONST                      2: '_disp'
                        16      LOAD_CONST                      3: 'inline'
                        18      BUILD_MAP                       1
                        20      LOAD_FAST                       2: kw
                        22      DICT_MERGE                      1
                        24      CALL_FUNCTION_EX                1
                        26      POP_TOP                         
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                'MIMEPart.add_related'
                [Code]
                    File Name: email/message.py
                    Object Name: add_alternative
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        '_add_multipart'
                    [Var Names]
                        'self'
                        'args'
                        'kw'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'alternative'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _add_multipart
                        4       LOAD_CONST                      1: 'alternative'
                        6       BUILD_LIST                      1
                        8       LOAD_FAST                       1: args
                        10      LIST_EXTEND                     1
                        12      LIST_TO_TUPLE                   
                        14      BUILD_MAP                       0
                        16      LOAD_FAST                       2: kw
                        18      DICT_MERGE                      1
                        20      CALL_FUNCTION_EX                1
                        22      POP_TOP                         
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'MIMEPart.add_alternative'
                [Code]
                    File Name: email/message.py
                    Object Name: add_attachment
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        '_add_multipart'
                    [Var Names]
                        'self'
                        'args'
                        'kw'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'mixed'
                        '_disp'
                        'attachment'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _add_multipart
                        4       LOAD_CONST                      1: 'mixed'
                        6       BUILD_LIST                      1
                        8       LOAD_FAST                       1: args
                        10      LIST_EXTEND                     1
                        12      LIST_TO_TUPLE                   
                        14      LOAD_CONST                      2: '_disp'
                        16      LOAD_CONST                      3: 'attachment'
                        18      BUILD_MAP                       1
                        20      LOAD_FAST                       2: kw
                        22      DICT_MERGE                      1
                        24      CALL_FUNCTION_EX                1
                        26      POP_TOP                         
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                'MIMEPart.add_attachment'
                [Code]
                    File Name: email/message.py
                    Object Name: clear
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_headers'
                        '_payload'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _headers
                        6       LOAD_CONST                      0: None
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _payload
                        12      LOAD_CONST                      0: None
                        14      RETURN_VALUE                    
                'MIMEPart.clear'
                [Code]
                    File Name: email/message.py
                    Object Name: clear_content
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_headers'
                        '_payload'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        [Code]
                            File Name: email/message.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 5
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'lower'
                                'startswith'
                            [Var Names]
                                '.0'
                                'n'
                                'v'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                'content-'
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        15 (to 36)
                                6       UNPACK_SEQUENCE                 2
                                8       STORE_FAST                      1: n
                                10      STORE_FAST                      2: v
                                12      LOAD_FAST                       1: n
                                14      LOAD_METHOD                     0: lower
                                16      CALL_METHOD                     0
                                18      LOAD_METHOD                     1: startswith
                                20      LOAD_CONST                      0: 'content-'
                                22      CALL_METHOD                     1
                                24      POP_JUMP_IF_TRUE                2 (to 4)
                                26      LOAD_FAST                       1: n
                                28      LOAD_FAST                       2: v
                                30      BUILD_TUPLE                     2
                                32      LIST_APPEND                     2
                                34      JUMP_ABSOLUTE                   2 (to 4)
                                36      RETURN_VALUE                    
                        'MIMEPart.clear_content.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'MIMEPart.clear_content.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: _headers
                        10      GET_ITER                        
                        12      CALL_FUNCTION                   1
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      0: _headers
                        18      LOAD_CONST                      0: None
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      1: _payload
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'MIMEPart.clear_content'
                (
                    None
                )
                (
                    False
                    None
                    None
                )
                (
                    (
                        'related'
                        'html'
                        'plain'
                    )
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'MIMEPart'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      47: (None,)
                10      LOAD_CLOSURE                    0: __class__
                12      BUILD_TUPLE                     1
                14      LOAD_CONST                      2: <CODE> __init__
                16      LOAD_CONST                      3: 'MIMEPart.__init__'
                18      MAKE_FUNCTION                   9
                20      STORE_NAME                      3: __init__
                22      LOAD_CONST                      48: (False, None, None)
                24      LOAD_CLOSURE                    0: __class__
                26      BUILD_TUPLE                     1
                28      LOAD_CONST                      5: <CODE> as_string
                30      LOAD_CONST                      6: 'MIMEPart.as_string'
                32      MAKE_FUNCTION                   9
                34      STORE_NAME                      4: as_string
                36      LOAD_CONST                      7: <CODE> __str__
                38      LOAD_CONST                      8: 'MIMEPart.__str__'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      5: __str__
                44      LOAD_CONST                      9: <CODE> is_attachment
                46      LOAD_CONST                      10: 'MIMEPart.is_attachment'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      6: is_attachment
                52      LOAD_CONST                      11: <CODE> _find_body
                54      LOAD_CONST                      12: 'MIMEPart._find_body'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      7: _find_body
                60      LOAD_CONST                      49: (('related', 'html', 'plain'),)
                62      LOAD_CONST                      14: <CODE> get_body
                64      LOAD_CONST                      15: 'MIMEPart.get_body'
                66      MAKE_FUNCTION                   1
                68      STORE_NAME                      8: get_body
                70      BUILD_SET                       0
                72      LOAD_CONST                      16: frozenset({('text', 'html'), ('text', 'plain'), ('multipart', 'related'), ('multipart', 'alternative')})
                74      SET_UPDATE                      1
                76      STORE_NAME                      9: _body_types
                78      LOAD_CONST                      17: <CODE> iter_attachments
                80      LOAD_CONST                      18: 'MIMEPart.iter_attachments'
                82      MAKE_FUNCTION                   0
                84      STORE_NAME                      10: iter_attachments
                86      LOAD_CONST                      19: <CODE> iter_parts
                88      LOAD_CONST                      20: 'MIMEPart.iter_parts'
                90      MAKE_FUNCTION                   0
                92      STORE_NAME                      11: iter_parts
                94      LOAD_CONST                      1: None
                96      LOAD_CONST                      21: ('content_manager',)
                98      BUILD_CONST_KEY_MAP             1
                100     LOAD_CONST                      22: <CODE> get_content
                102     LOAD_CONST                      23: 'MIMEPart.get_content'
                104     MAKE_FUNCTION                   2
                106     STORE_NAME                      12: get_content
                108     LOAD_CONST                      1: None
                110     LOAD_CONST                      21: ('content_manager',)
                112     BUILD_CONST_KEY_MAP             1
                114     LOAD_CONST                      24: <CODE> set_content
                116     LOAD_CONST                      25: 'MIMEPart.set_content'
                118     MAKE_FUNCTION                   2
                120     STORE_NAME                      13: set_content
                122     LOAD_CONST                      26: <CODE> _make_multipart
                124     LOAD_CONST                      27: 'MIMEPart._make_multipart'
                126     MAKE_FUNCTION                   0
                128     STORE_NAME                      14: _make_multipart
                130     LOAD_CONST                      47: (None,)
                132     LOAD_CONST                      28: <CODE> make_related
                134     LOAD_CONST                      29: 'MIMEPart.make_related'
                136     MAKE_FUNCTION                   1
                138     STORE_NAME                      15: make_related
                140     LOAD_CONST                      47: (None,)
                142     LOAD_CONST                      30: <CODE> make_alternative
                144     LOAD_CONST                      31: 'MIMEPart.make_alternative'
                146     MAKE_FUNCTION                   1
                148     STORE_NAME                      16: make_alternative
                150     LOAD_CONST                      47: (None,)
                152     LOAD_CONST                      32: <CODE> make_mixed
                154     LOAD_CONST                      33: 'MIMEPart.make_mixed'
                156     MAKE_FUNCTION                   1
                158     STORE_NAME                      17: make_mixed
                160     LOAD_CONST                      1: None
                162     LOAD_CONST                      34: ('_disp',)
                164     BUILD_CONST_KEY_MAP             1
                166     LOAD_CONST                      35: <CODE> _add_multipart
                168     LOAD_CONST                      36: 'MIMEPart._add_multipart'
                170     MAKE_FUNCTION                   2
                172     STORE_NAME                      18: _add_multipart
                174     LOAD_CONST                      37: <CODE> add_related
                176     LOAD_CONST                      38: 'MIMEPart.add_related'
                178     MAKE_FUNCTION                   0
                180     STORE_NAME                      19: add_related
                182     LOAD_CONST                      39: <CODE> add_alternative
                184     LOAD_CONST                      40: 'MIMEPart.add_alternative'
                186     MAKE_FUNCTION                   0
                188     STORE_NAME                      20: add_alternative
                190     LOAD_CONST                      41: <CODE> add_attachment
                192     LOAD_CONST                      42: 'MIMEPart.add_attachment'
                194     MAKE_FUNCTION                   0
                196     STORE_NAME                      21: add_attachment
                198     LOAD_CONST                      43: <CODE> clear
                200     LOAD_CONST                      44: 'MIMEPart.clear'
                202     MAKE_FUNCTION                   0
                204     STORE_NAME                      22: clear
                206     LOAD_CONST                      45: <CODE> clear_content
                208     LOAD_CONST                      46: 'MIMEPart.clear_content'
                210     MAKE_FUNCTION                   0
                212     STORE_NAME                      23: clear_content
                214     LOAD_CLOSURE                    0: __class__
                216     DUP_TOP                         
                218     STORE_NAME                      24: __classcell__
                220     RETURN_VALUE                    
        'MIMEPart'
        [Code]
            File Name: email/message.py
            Object Name: EmailMessage
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'set_content'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'EmailMessage'
                [Code]
                    File Name: email/message.py
                    Object Name: set_content
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x0000000F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS)
                    [Names]
                        'super'
                        'set_content'
                    [Var Names]
                        'self'
                        'args'
                        'kw'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        'MIME-Version'
                        '1.0'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: super
                        2       CALL_FUNCTION                   0
                        4       LOAD_ATTR                       1: set_content
                        6       LOAD_FAST                       1: args
                        8       BUILD_MAP                       0
                        10      LOAD_FAST                       2: kw
                        12      DICT_MERGE                      1
                        14      CALL_FUNCTION_EX                1
                        16      POP_TOP                         
                        18      LOAD_CONST                      1: 'MIME-Version'
                        20      LOAD_FAST                       0: self
                        22      CONTAINS_OP                     1 (not in)
                        24      POP_JUMP_IF_FALSE               19 (to 38)
                        26      LOAD_CONST                      2: '1.0'
                        28      LOAD_FAST                       0: self
                        30      LOAD_CONST                      1: 'MIME-Version'
                        32      STORE_SUBSCR                    
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                        38      LOAD_CONST                      0: None
                        40      RETURN_VALUE                    
                'EmailMessage.set_content'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'EmailMessage'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> set_content
                14      LOAD_CONST                      2: 'EmailMessage.set_content'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: set_content
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        (
            None
            True
        )
    [Disassembly]
        0       LOAD_CONST                      0: 'Basic message object for the email package object model.'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: 'Message'
        6       LOAD_CONST                      2: 'EmailMessage'
        8       BUILD_LIST                      2
        10      STORE_NAME                      1: __all__
        12      LOAD_CONST                      3: 0
        14      LOAD_CONST                      4: None
        16      IMPORT_NAME                     2: re
        18      STORE_NAME                      2: re
        20      LOAD_CONST                      3: 0
        22      LOAD_CONST                      4: None
        24      IMPORT_NAME                     3: uu
        26      STORE_NAME                      3: uu
        28      LOAD_CONST                      3: 0
        30      LOAD_CONST                      4: None
        32      IMPORT_NAME                     4: quopri
        34      STORE_NAME                      4: quopri
        36      LOAD_CONST                      3: 0
        38      LOAD_CONST                      5: ('BytesIO', 'StringIO')
        40      IMPORT_NAME                     5: io
        42      IMPORT_FROM                     6: BytesIO
        44      STORE_NAME                      6: BytesIO
        46      IMPORT_FROM                     7: StringIO
        48      STORE_NAME                      7: StringIO
        50      POP_TOP                         
        52      LOAD_CONST                      3: 0
        54      LOAD_CONST                      6: ('utils',)
        56      IMPORT_NAME                     8: email
        58      IMPORT_FROM                     9: utils
        60      STORE_NAME                      9: utils
        62      POP_TOP                         
        64      LOAD_CONST                      3: 0
        66      LOAD_CONST                      7: ('errors',)
        68      IMPORT_NAME                     8: email
        70      IMPORT_FROM                     10: errors
        72      STORE_NAME                      10: errors
        74      POP_TOP                         
        76      LOAD_CONST                      3: 0
        78      LOAD_CONST                      8: ('Policy', 'compat32')
        80      IMPORT_NAME                     11: email._policybase
        82      IMPORT_FROM                     12: Policy
        84      STORE_NAME                      12: Policy
        86      IMPORT_FROM                     13: compat32
        88      STORE_NAME                      13: compat32
        90      POP_TOP                         
        92      LOAD_CONST                      3: 0
        94      LOAD_CONST                      9: ('charset',)
        96      IMPORT_NAME                     8: email
        98      IMPORT_FROM                     14: charset
        100     STORE_NAME                      15: _charset
        102     POP_TOP                         
        104     LOAD_CONST                      3: 0
        106     LOAD_CONST                      10: ('decode_b',)
        108     IMPORT_NAME                     16: email._encoded_words
        110     IMPORT_FROM                     17: decode_b
        112     STORE_NAME                      17: decode_b
        114     POP_TOP                         
        116     LOAD_NAME                       15: _charset
        118     LOAD_ATTR                       18: Charset
        120     STORE_NAME                      18: Charset
        122     LOAD_CONST                      11: '; '
        124     STORE_NAME                      19: SEMISPACE
        126     LOAD_NAME                       2: re
        128     LOAD_METHOD                     20: compile
        130     LOAD_CONST                      12: '[ \\(\\)<>@,;:\\\\"/\\[\\]\\?=]'
        132     CALL_METHOD                     1
        134     STORE_NAME                      21: tspecials
        136     LOAD_CONST                      13: <CODE> _splitparam
        138     LOAD_CONST                      14: '_splitparam'
        140     MAKE_FUNCTION                   0
        142     STORE_NAME                      22: _splitparam
        144     LOAD_CONST                      26: (None, True)
        146     LOAD_CONST                      16: <CODE> _formatparam
        148     LOAD_CONST                      17: '_formatparam'
        150     MAKE_FUNCTION                   1
        152     STORE_NAME                      23: _formatparam
        154     LOAD_CONST                      18: <CODE> _parseparam
        156     LOAD_CONST                      19: '_parseparam'
        158     MAKE_FUNCTION                   0
        160     STORE_NAME                      24: _parseparam
        162     LOAD_CONST                      20: <CODE> _unquotevalue
        164     LOAD_CONST                      21: '_unquotevalue'
        166     MAKE_FUNCTION                   0
        168     STORE_NAME                      25: _unquotevalue
        170     LOAD_BUILD_CLASS                
        172     LOAD_CONST                      22: <CODE> Message
        174     LOAD_CONST                      1: 'Message'
        176     MAKE_FUNCTION                   0
        178     LOAD_CONST                      1: 'Message'
        180     CALL_FUNCTION                   2
        182     STORE_NAME                      26: Message
        184     LOAD_BUILD_CLASS                
        186     LOAD_CONST                      23: <CODE> MIMEPart
        188     LOAD_CONST                      24: 'MIMEPart'
        190     MAKE_FUNCTION                   0
        192     LOAD_CONST                      24: 'MIMEPart'
        194     LOAD_NAME                       26: Message
        196     CALL_FUNCTION                   3
        198     STORE_NAME                      27: MIMEPart
        200     LOAD_BUILD_CLASS                
        202     LOAD_CONST                      25: <CODE> EmailMessage
        204     LOAD_CONST                      2: 'EmailMessage'
        206     MAKE_FUNCTION                   0
        208     LOAD_CONST                      2: 'EmailMessage'
        210     LOAD_NAME                       27: MIMEPart
        212     CALL_FUNCTION                   3
        214     STORE_NAME                      28: EmailMessage
        216     LOAD_CONST                      4: None
        218     RETURN_VALUE                    
