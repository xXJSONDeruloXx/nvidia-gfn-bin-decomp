optparse.pyc (Python 3.10)
[Code]
    File Name: optparse.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        '__version__'
        '__all__'
        '__copyright__'
        'sys'
        'os'
        'textwrap'
        '_repr'
        'gettext'
        'ngettext'
        'ImportError'
        '_'
        'Exception'
        'OptParseError'
        'OptionError'
        'OptionConflictError'
        'OptionValueError'
        'BadOptionError'
        'AmbiguousOptionError'
        'HelpFormatter'
        'IndentedHelpFormatter'
        'TitledHelpFormatter'
        '_parse_num'
        '_parse_int'
        'float'
        'complex'
        '_builtin_cvt'
        'check_builtin'
        'check_choice'
        'NO_DEFAULT'
        'Option'
        'SUPPRESS_HELP'
        'SUPPRESS_USAGE'
        'Values'
        'OptionContainer'
        'OptionGroup'
        'OptionParser'
        '_match_abbrev'
        'make_option'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        'A powerful, extensible, and easy-to-use option parser.\n\nBy Greg Ward <gward@python.net>\n\nOriginally distributed as Optik.\n\nFor support, use the optik-users@lists.sourceforge.net mailing list\n(http://lists.sourceforge.net/lists/listinfo/optik-users).\n\nSimple usage example:\n\n   from optparse import OptionParser\n\n   parser = OptionParser()\n   parser.add_option("-f", "--file", dest="filename",\n                     help="write report to FILE", metavar="FILE")\n   parser.add_option("-q", "--quiet",\n                     action="store_false", dest="verbose", default=True,\n                     help="don\'t print status messages to stdout")\n\n   (options, args) = parser.parse_args()\n'
        '1.5.3'
        (
            'Option'
            'make_option'
            'SUPPRESS_HELP'
            'SUPPRESS_USAGE'
            'Values'
            'OptionContainer'
            'OptionGroup'
            'OptionParser'
            'HelpFormatter'
            'IndentedHelpFormatter'
            'TitledHelpFormatter'
            'OptParseError'
            'OptionError'
            'OptionConflictError'
            'OptionValueError'
            'BadOptionError'
            'check_choice'
        )
        '\nCopyright (c) 2001-2006 Gregory P. Ward.  All rights reserved.\nCopyright (c) 2002-2006 Python Software Foundation.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n  * Neither the name of the author nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS\nIS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n'
        0
        None
        [Code]
            File Name: optparse.py
            Object Name: _repr
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '__class__'
                '__name__'
                'id'
            [Var Names]
                'self'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '<%s at 0x%x: %s>'
            [Disassembly]
                0       LOAD_CONST                      1: '<%s at 0x%x: %s>'
                2       LOAD_FAST                       0: self
                4       LOAD_ATTR                       0: __class__
                6       LOAD_ATTR                       1: __name__
                8       LOAD_GLOBAL                     2: id
                10      LOAD_FAST                       0: self
                12      CALL_FUNCTION                   1
                14      LOAD_FAST                       0: self
                16      BUILD_TUPLE                     3
                18      BINARY_MODULO                   
                20      RETURN_VALUE                    
        '_repr'
        (
            'gettext'
            'ngettext'
        )
        [Code]
            File Name: optparse.py
            Object Name: gettext
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'message'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_FAST                       0: message
                2       RETURN_VALUE                    
        'gettext'
        [Code]
            File Name: optparse.py
            Object Name: ngettext
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'singular'
                'plural'
                'n'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                1
            [Disassembly]
                0       LOAD_FAST                       2: n
                2       LOAD_CONST                      1: 1
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_FAST                       0: singular
                10      RETURN_VALUE                    
                12      LOAD_FAST                       1: plural
                14      RETURN_VALUE                    
        'ngettext'
        [Code]
            File Name: optparse.py
            Object Name: OptParseError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__str__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptParseError'
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'msg'
                    [Var Names]
                        'self'
                        'msg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: msg
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: msg
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'OptParseError.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'msg'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: msg
                        4       RETURN_VALUE                    
                'OptParseError.__str__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptParseError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: 'OptParseError.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> __str__
                18      LOAD_CONST                      4: 'OptParseError.__str__'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: __str__
                24      LOAD_CONST                      5: None
                26      RETURN_VALUE                    
        'OptParseError'
        [Code]
            File Name: optparse.py
            Object Name: OptionError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__str__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionError'
                '\n    Raised if an Option instance is created with invalid or\n    inconsistent arguments.\n    '
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'msg'
                        'str'
                        'option_id'
                    [Var Names]
                        'self'
                        'msg'
                        'option'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: msg
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: msg
                        6       LOAD_GLOBAL                     1: str
                        8       LOAD_FAST                       2: option
                        10      CALL_FUNCTION                   1
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      2: option_id
                        16      LOAD_CONST                      0: None
                        18      RETURN_VALUE                    
                'OptionError.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'option_id'
                        'msg'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'option %s: %s'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: option_id
                        4       POP_JUMP_IF_FALSE               11 (to 22)
                        6       LOAD_CONST                      1: 'option %s: %s'
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: option_id
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: msg
                        16      BUILD_TUPLE                     2
                        18      BINARY_MODULO                   
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       1: msg
                        26      RETURN_VALUE                    
                'OptionError.__str__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised if an Option instance is created with invalid or\n    inconsistent arguments.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: 'OptionError.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> __str__
                22      LOAD_CONST                      5: 'OptionError.__str__'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: __str__
                28      LOAD_CONST                      6: None
                30      RETURN_VALUE                    
        'OptionError'
        [Code]
            File Name: optparse.py
            Object Name: OptionConflictError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionConflictError'
                '\n    Raised if conflicting options are added to an OptionParser.\n    '
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionConflictError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised if conflicting options are added to an OptionParser.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'OptionConflictError'
        [Code]
            File Name: optparse.py
            Object Name: OptionValueError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionValueError'
                '\n    Raised if an invalid option value is encountered on the command\n    line.\n    '
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionValueError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised if an invalid option value is encountered on the command\n    line.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'OptionValueError'
        [Code]
            File Name: optparse.py
            Object Name: BadOptionError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__str__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'BadOptionError'
                '\n    Raised if an invalid option is seen on the command line.\n    '
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'opt_str'
                    [Var Names]
                        'self'
                        'opt_str'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: opt_str
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: opt_str
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'BadOptionError.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_'
                        'opt_str'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'no such option: %s'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _
                        2       LOAD_CONST                      1: 'no such option: %s'
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: opt_str
                        10      BINARY_MODULO                   
                        12      RETURN_VALUE                    
                'BadOptionError.__str__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'BadOptionError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised if an invalid option is seen on the command line.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: 'BadOptionError.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> __str__
                22      LOAD_CONST                      5: 'BadOptionError.__str__'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: __str__
                28      LOAD_CONST                      6: None
                30      RETURN_VALUE                    
        'BadOptionError'
        [Code]
            File Name: optparse.py
            Object Name: AmbiguousOptionError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__str__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'AmbiguousOptionError'
                '\n    Raised if an ambiguous option is seen on the command line.\n    '
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'BadOptionError'
                        '__init__'
                        'possibilities'
                    [Var Names]
                        'self'
                        'opt_str'
                        'possibilities'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: BadOptionError
                        2       LOAD_METHOD                     1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       1: opt_str
                        8       CALL_METHOD                     2
                        10      POP_TOP                         
                        12      LOAD_FAST                       2: possibilities
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: possibilities
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'AmbiguousOptionError.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_'
                        'opt_str'
                        'join'
                        'possibilities'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'ambiguous option: %s (%s?)'
                        ', '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _
                        2       LOAD_CONST                      1: 'ambiguous option: %s (%s?)'
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: opt_str
                        10      LOAD_CONST                      2: ', '
                        12      LOAD_METHOD                     2: join
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       3: possibilities
                        18      CALL_METHOD                     1
                        20      BUILD_TUPLE                     2
                        22      BINARY_MODULO                   
                        24      RETURN_VALUE                    
                'AmbiguousOptionError.__str__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'AmbiguousOptionError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised if an ambiguous option is seen on the command line.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: 'AmbiguousOptionError.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> __str__
                22      LOAD_CONST                      5: 'AmbiguousOptionError.__str__'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: __str__
                28      LOAD_CONST                      6: None
                30      RETURN_VALUE                    
        'AmbiguousOptionError'
        [Code]
            File Name: optparse.py
            Object Name: HelpFormatter
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'NO_DEFAULT_VALUE'
                '__init__'
                'set_parser'
                'set_short_opt_delimiter'
                'set_long_opt_delimiter'
                'indent'
                'dedent'
                'format_usage'
                'format_heading'
                '_format_text'
                'format_description'
                'format_epilog'
                'expand_default'
                'format_option'
                'store_option_strings'
                'format_option_strings'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'HelpFormatter'
                '\n    Abstract base class for formatting option help.  OptionParser\n    instances should use one of the HelpFormatter subclasses for\n    formatting help; by default IndentedHelpFormatter is used.\n\n    Instance attributes:\n      parser : OptionParser\n        the controlling OptionParser instance\n      indent_increment : int\n        the number of columns to indent per nesting level\n      max_help_position : int\n        the maximum starting column for option help text\n      help_position : int\n        the calculated starting column for option help text;\n        initially the same as the maximum\n      width : int\n        total number of columns for output (pass None to constructor for\n        this value to be taken from the $COLUMNS environment variable)\n      level : int\n        current indentation level\n      current_indent : int\n        current indentation level (in columns)\n      help_width : int\n        number of columns available for option help text (calculated)\n      default_tag : str\n        text to replace with each option\'s default value, "%default"\n        by default.  Set to false value to disable default value expansion.\n      option_strings : { Option : str }\n        maps Option instances to the snippet of help text explaining\n        the syntax of that option, e.g. "-h, --help" or\n        "-fFILE, --file=FILE"\n      _short_opt_fmt : str\n        format string controlling how short options with values are\n        printed in help text.  Must be either "%s%s" ("-fFILE") or\n        "%s %s" ("-f FILE"), because those are the two syntaxes that\n        Optik supports.\n      _long_opt_fmt : str\n        similar but for long options; must be either "%s %s" ("--file FILE")\n        or "%s=%s" ("--file=FILE").\n    '
                'none'
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'parser'
                        'indent_increment'
                        'int'
                        'os'
                        'environ'
                        'KeyError'
                        'ValueError'
                        'width'
                        'min'
                        'max'
                        'help_position'
                        'max_help_position'
                        'current_indent'
                        'level'
                        'help_width'
                        'short_first'
                        'default_tag'
                        'option_strings'
                        '_short_opt_fmt'
                        '_long_opt_fmt'
                    [Var Names]
                        'self'
                        'indent_increment'
                        'max_help_position'
                        'width'
                        'short_first'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'COLUMNS'
                        80
                        2
                        20
                        0
                        '%default'
                        '%s %s'
                        '%s=%s'
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: parser
                        6       LOAD_FAST                       1: indent_increment
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: indent_increment
                        12      LOAD_FAST                       3: width
                        14      LOAD_CONST                      0: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               37 (to 74)
                        20      SETUP_FINALLY                   9 (to 40)
                        22      LOAD_GLOBAL                     2: int
                        24      LOAD_GLOBAL                     3: os
                        26      LOAD_ATTR                       4: environ
                        28      LOAD_CONST                      1: 'COLUMNS'
                        30      BINARY_SUBSCR                   
                        32      CALL_FUNCTION                   1
                        34      STORE_FAST                      3: width
                        36      POP_BLOCK                       
                        38      JUMP_FORWARD                    13 (to 66)
                        40      DUP_TOP                         
                        42      LOAD_GLOBAL                     5: KeyError
                        44      LOAD_GLOBAL                     6: ValueError
                        46      BUILD_TUPLE                     2
                        48      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        50      POP_TOP                         
                        52      POP_TOP                         
                        54      POP_TOP                         
                        56      LOAD_CONST                      2: 80
                        58      STORE_FAST                      3: width
                        60      POP_EXCEPT                      
                        62      JUMP_FORWARD                    1 (to 66)
                        64      RERAISE                         0
                        66      LOAD_FAST                       3: width
                        68      LOAD_CONST                      3: 2
                        70      INPLACE_SUBTRACT                
                        72      STORE_FAST                      3: width
                        74      LOAD_FAST                       3: width
                        76      LOAD_FAST                       0: self
                        78      STORE_ATTR                      7: width
                        80      LOAD_GLOBAL                     8: min
                        82      LOAD_FAST                       2: max_help_position
                        84      LOAD_GLOBAL                     9: max
                        86      LOAD_FAST                       3: width
                        88      LOAD_CONST                      4: 20
                        90      BINARY_SUBTRACT                 
                        92      LOAD_FAST                       1: indent_increment
                        94      LOAD_CONST                      3: 2
                        96      BINARY_MULTIPLY                 
                        98      CALL_FUNCTION                   2
                        100     CALL_FUNCTION                   2
                        102     DUP_TOP                         
                        104     LOAD_FAST                       0: self
                        106     STORE_ATTR                      10: help_position
                        108     LOAD_FAST                       0: self
                        110     STORE_ATTR                      11: max_help_position
                        112     LOAD_CONST                      5: 0
                        114     LOAD_FAST                       0: self
                        116     STORE_ATTR                      12: current_indent
                        118     LOAD_CONST                      5: 0
                        120     LOAD_FAST                       0: self
                        122     STORE_ATTR                      13: level
                        124     LOAD_CONST                      0: None
                        126     LOAD_FAST                       0: self
                        128     STORE_ATTR                      14: help_width
                        130     LOAD_FAST                       4: short_first
                        132     LOAD_FAST                       0: self
                        134     STORE_ATTR                      15: short_first
                        136     LOAD_CONST                      6: '%default'
                        138     LOAD_FAST                       0: self
                        140     STORE_ATTR                      16: default_tag
                        142     BUILD_MAP                       0
                        144     LOAD_FAST                       0: self
                        146     STORE_ATTR                      17: option_strings
                        148     LOAD_CONST                      7: '%s %s'
                        150     LOAD_FAST                       0: self
                        152     STORE_ATTR                      18: _short_opt_fmt
                        154     LOAD_CONST                      8: '%s=%s'
                        156     LOAD_FAST                       0: self
                        158     STORE_ATTR                      19: _long_opt_fmt
                        160     LOAD_CONST                      0: None
                        162     RETURN_VALUE                    
                'HelpFormatter.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: set_parser
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'parser'
                    [Var Names]
                        'self'
                        'parser'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: parser
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: parser
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'HelpFormatter.set_parser'
                [Code]
                    File Name: optparse.py
                    Object Name: set_short_opt_delimiter
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        '_short_opt_fmt'
                    [Var Names]
                        'self'
                        'delim'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            ''
                            ' '
                        )
                        'invalid metavar delimiter for short options: %r'
                        '%s'
                    [Disassembly]
                        0       LOAD_FAST                       1: delim
                        2       LOAD_CONST                      1: ('', ' ')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: 'invalid metavar delimiter for short options: %r'
                        12      LOAD_FAST                       1: delim
                        14      BINARY_MODULO                   
                        16      CALL_FUNCTION                   1
                        18      RAISE_VARARGS                   1
                        20      LOAD_CONST                      3: '%s'
                        22      LOAD_FAST                       1: delim
                        24      BINARY_ADD                      
                        26      LOAD_CONST                      3: '%s'
                        28      BINARY_ADD                      
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      1: _short_opt_fmt
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'HelpFormatter.set_short_opt_delimiter'
                [Code]
                    File Name: optparse.py
                    Object Name: set_long_opt_delimiter
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        '_long_opt_fmt'
                    [Var Names]
                        'self'
                        'delim'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            '='
                            ' '
                        )
                        'invalid metavar delimiter for long options: %r'
                        '%s'
                    [Disassembly]
                        0       LOAD_FAST                       1: delim
                        2       LOAD_CONST                      1: ('=', ' ')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: 'invalid metavar delimiter for long options: %r'
                        12      LOAD_FAST                       1: delim
                        14      BINARY_MODULO                   
                        16      CALL_FUNCTION                   1
                        18      RAISE_VARARGS                   1
                        20      LOAD_CONST                      3: '%s'
                        22      LOAD_FAST                       1: delim
                        24      BINARY_ADD                      
                        26      LOAD_CONST                      3: '%s'
                        28      BINARY_ADD                      
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      1: _long_opt_fmt
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'HelpFormatter.set_long_opt_delimiter'
                [Code]
                    File Name: optparse.py
                    Object Name: indent
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'current_indent'
                        'indent_increment'
                        'level'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       DUP_TOP                         
                        4       LOAD_ATTR                       0: current_indent
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: indent_increment
                        10      INPLACE_ADD                     
                        12      ROT_TWO                         
                        14      STORE_ATTR                      0: current_indent
                        16      LOAD_FAST                       0: self
                        18      DUP_TOP                         
                        20      LOAD_ATTR                       2: level
                        22      LOAD_CONST                      1: 1
                        24      INPLACE_ADD                     
                        26      ROT_TWO                         
                        28      STORE_ATTR                      2: level
                        30      LOAD_CONST                      0: None
                        32      RETURN_VALUE                    
                'HelpFormatter.indent'
                [Code]
                    File Name: optparse.py
                    Object Name: dedent
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'current_indent'
                        'indent_increment'
                        'level'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        'Indent decreased below 0.'
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       DUP_TOP                         
                        4       LOAD_ATTR                       0: current_indent
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: indent_increment
                        10      INPLACE_SUBTRACT                
                        12      ROT_TWO                         
                        14      STORE_ATTR                      0: current_indent
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: current_indent
                        20      LOAD_CONST                      1: 0
                        22      COMPARE_OP                      5 (>=)
                        24      POP_JUMP_IF_TRUE                17 (to 34)
                        26      LOAD_ASSERTION_ERROR            
                        28      LOAD_CONST                      2: 'Indent decreased below 0.'
                        30      CALL_FUNCTION                   1
                        32      RAISE_VARARGS                   1
                        34      LOAD_FAST                       0: self
                        36      DUP_TOP                         
                        38      LOAD_ATTR                       2: level
                        40      LOAD_CONST                      3: 1
                        42      INPLACE_SUBTRACT                
                        44      ROT_TWO                         
                        46      STORE_ATTR                      2: level
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'HelpFormatter.dedent'
                [Code]
                    File Name: optparse.py
                    Object Name: format_usage
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'usage'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'subclasses must implement'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'subclasses must implement'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'HelpFormatter.format_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: format_heading
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'heading'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'subclasses must implement'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'subclasses must implement'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'HelpFormatter.format_heading'
                [Code]
                    File Name: optparse.py
                    Object Name: _format_text
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'max'
                        'width'
                        'current_indent'
                        'textwrap'
                        'fill'
                    [Var Names]
                        'self'
                        'text'
                        'text_width'
                        'indent'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Format a paragraph of free-form text for inclusion in the\n        help output at the current indentation level.\n        '
                        11
                        ' '
                        (
                            'initial_indent'
                            'subsequent_indent'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: max
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: width
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: current_indent
                        10      BINARY_SUBTRACT                 
                        12      LOAD_CONST                      1: 11
                        14      CALL_FUNCTION                   2
                        16      STORE_FAST                      2: text_width
                        18      LOAD_CONST                      2: ' '
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: current_indent
                        24      BINARY_MULTIPLY                 
                        26      STORE_FAST                      3: indent
                        28      LOAD_GLOBAL                     3: textwrap
                        30      LOAD_ATTR                       4: fill
                        32      LOAD_FAST                       1: text
                        34      LOAD_FAST                       2: text_width
                        36      LOAD_FAST                       3: indent
                        38      LOAD_FAST                       3: indent
                        40      LOAD_CONST                      3: ('initial_indent', 'subsequent_indent')
                        42      CALL_FUNCTION_KW                4
                        44      RETURN_VALUE                    
                'HelpFormatter._format_text'
                [Code]
                    File Name: optparse.py
                    Object Name: format_description
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_format_text'
                    [Var Names]
                        'self'
                        'description'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '\n'
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       1: description
                        2       POP_JUMP_IF_FALSE               9 (to 18)
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     0: _format_text
                        8       LOAD_FAST                       1: description
                        10      CALL_METHOD                     1
                        12      LOAD_CONST                      1: '\n'
                        14      BINARY_ADD                      
                        16      RETURN_VALUE                    
                        18      LOAD_CONST                      2: ''
                        20      RETURN_VALUE                    
                'HelpFormatter.format_description'
                [Code]
                    File Name: optparse.py
                    Object Name: format_epilog
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_format_text'
                    [Var Names]
                        'self'
                        'epilog'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '\n'
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       1: epilog
                        2       POP_JUMP_IF_FALSE               11 (to 22)
                        4       LOAD_CONST                      1: '\n'
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     0: _format_text
                        10      LOAD_FAST                       1: epilog
                        12      CALL_METHOD                     1
                        14      BINARY_ADD                      
                        16      LOAD_CONST                      1: '\n'
                        18      BINARY_ADD                      
                        20      RETURN_VALUE                    
                        22      LOAD_CONST                      2: ''
                        24      RETURN_VALUE                    
                'HelpFormatter.format_epilog'
                [Code]
                    File Name: optparse.py
                    Object Name: expand_default
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'parser'
                        'default_tag'
                        'help'
                        'defaults'
                        'get'
                        'dest'
                        'NO_DEFAULT'
                        'NO_DEFAULT_VALUE'
                        'replace'
                        'str'
                    [Var Names]
                        'self'
                        'option'
                        'default_value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: parser
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_TRUE                8 (to 16)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: default_tag
                        14      POP_JUMP_IF_TRUE                11 (to 22)
                        16      LOAD_FAST                       1: option
                        18      LOAD_ATTR                       2: help
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       0: parser
                        26      LOAD_ATTR                       3: defaults
                        28      LOAD_METHOD                     4: get
                        30      LOAD_FAST                       1: option
                        32      LOAD_ATTR                       5: dest
                        34      CALL_METHOD                     1
                        36      STORE_FAST                      2: default_value
                        38      LOAD_FAST                       2: default_value
                        40      LOAD_GLOBAL                     6: NO_DEFAULT
                        42      IS_OP                           0 (is)
                        44      POP_JUMP_IF_TRUE                27 (to 54)
                        46      LOAD_FAST                       2: default_value
                        48      LOAD_CONST                      0: None
                        50      IS_OP                           0 (is)
                        52      POP_JUMP_IF_FALSE               30 (to 60)
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       7: NO_DEFAULT_VALUE
                        58      STORE_FAST                      2: default_value
                        60      LOAD_FAST                       1: option
                        62      LOAD_ATTR                       2: help
                        64      LOAD_METHOD                     8: replace
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       1: default_tag
                        70      LOAD_GLOBAL                     9: str
                        72      LOAD_FAST                       2: default_value
                        74      CALL_FUNCTION                   1
                        76      CALL_METHOD                     2
                        78      RETURN_VALUE                    
                'HelpFormatter.expand_default'
                [Code]
                    File Name: optparse.py
                    Object Name: format_option
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 7
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'option_strings'
                        'help_position'
                        'current_indent'
                        'len'
                        'append'
                        'help'
                        'expand_default'
                        'textwrap'
                        'wrap'
                        'help_width'
                        'extend'
                        'join'
                    [Var Names]
                        'self'
                        'option'
                        'result'
                        'opts'
                        'opt_width'
                        'indent_first'
                        'help_text'
                        'help_lines'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        None
                        2
                        '%*s%s\n'
                        ''
                        '%*s%-*s  '
                        0
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 6
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'help_position'
                            [Var Names]
                                '.0'
                                'line'
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                                '%*s%s\n'
                                ''
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        10 (to 26)
                                6       STORE_FAST                      1: line
                                8       LOAD_CONST                      0: '%*s%s\n'
                                10      LOAD_DEREF                      0: self
                                12      LOAD_ATTR                       0: help_position
                                14      LOAD_CONST                      1: ''
                                16      LOAD_FAST                       1: line
                                18      BUILD_TUPLE                     3
                                20      BINARY_MODULO                   
                                22      LIST_APPEND                     2
                                24      JUMP_ABSOLUTE                   2 (to 4)
                                26      RETURN_VALUE                    
                        'HelpFormatter.format_option.<locals>.<listcomp>'
                        1
                        -1
                        '\n'
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: result
                        4       LOAD_DEREF                      0: self
                        6       LOAD_ATTR                       0: option_strings
                        8       LOAD_FAST                       1: option
                        10      BINARY_SUBSCR                   
                        12      STORE_FAST                      3: opts
                        14      LOAD_DEREF                      0: self
                        16      LOAD_ATTR                       1: help_position
                        18      LOAD_DEREF                      0: self
                        20      LOAD_ATTR                       2: current_indent
                        22      BINARY_SUBTRACT                 
                        24      LOAD_CONST                      1: 2
                        26      BINARY_SUBTRACT                 
                        28      STORE_FAST                      4: opt_width
                        30      LOAD_GLOBAL                     3: len
                        32      LOAD_FAST                       3: opts
                        34      CALL_FUNCTION                   1
                        36      LOAD_FAST                       4: opt_width
                        38      COMPARE_OP                      4 (>)
                        40      POP_JUMP_IF_FALSE               33 (to 66)
                        42      LOAD_CONST                      2: '%*s%s\n'
                        44      LOAD_DEREF                      0: self
                        46      LOAD_ATTR                       2: current_indent
                        48      LOAD_CONST                      3: ''
                        50      LOAD_FAST                       3: opts
                        52      BUILD_TUPLE                     3
                        54      BINARY_MODULO                   
                        56      STORE_FAST                      3: opts
                        58      LOAD_DEREF                      0: self
                        60      LOAD_ATTR                       1: help_position
                        62      STORE_FAST                      5: indent_first
                        64      JUMP_FORWARD                    11 (to 88)
                        66      LOAD_CONST                      4: '%*s%-*s  '
                        68      LOAD_DEREF                      0: self
                        70      LOAD_ATTR                       2: current_indent
                        72      LOAD_CONST                      3: ''
                        74      LOAD_FAST                       4: opt_width
                        76      LOAD_FAST                       3: opts
                        78      BUILD_TUPLE                     4
                        80      BINARY_MODULO                   
                        82      STORE_FAST                      3: opts
                        84      LOAD_CONST                      5: 0
                        86      STORE_FAST                      5: indent_first
                        88      LOAD_FAST                       2: result
                        90      LOAD_METHOD                     4: append
                        92      LOAD_FAST                       3: opts
                        94      CALL_METHOD                     1
                        96      POP_TOP                         
                        98      LOAD_FAST                       1: option
                        100     LOAD_ATTR                       5: help
                        102     POP_JUMP_IF_FALSE               93 (to 186)
                        104     LOAD_DEREF                      0: self
                        106     LOAD_METHOD                     6: expand_default
                        108     LOAD_FAST                       1: option
                        110     CALL_METHOD                     1
                        112     STORE_FAST                      6: help_text
                        114     LOAD_GLOBAL                     7: textwrap
                        116     LOAD_METHOD                     8: wrap
                        118     LOAD_FAST                       6: help_text
                        120     LOAD_DEREF                      0: self
                        122     LOAD_ATTR                       9: help_width
                        124     CALL_METHOD                     2
                        126     STORE_FAST                      7: help_lines
                        128     LOAD_FAST                       2: result
                        130     LOAD_METHOD                     4: append
                        132     LOAD_CONST                      2: '%*s%s\n'
                        134     LOAD_FAST                       5: indent_first
                        136     LOAD_CONST                      3: ''
                        138     LOAD_FAST                       7: help_lines
                        140     LOAD_CONST                      5: 0
                        142     BINARY_SUBSCR                   
                        144     BUILD_TUPLE                     3
                        146     BINARY_MODULO                   
                        148     CALL_METHOD                     1
                        150     POP_TOP                         
                        152     LOAD_FAST                       2: result
                        154     LOAD_METHOD                     10: extend
                        156     LOAD_CLOSURE                    0: self
                        158     BUILD_TUPLE                     1
                        160     LOAD_CONST                      6: <CODE> <listcomp>
                        162     LOAD_CONST                      7: 'HelpFormatter.format_option.<locals>.<listcomp>'
                        164     MAKE_FUNCTION                   8
                        166     LOAD_FAST                       7: help_lines
                        168     LOAD_CONST                      8: 1
                        170     LOAD_CONST                      0: None
                        172     BUILD_SLICE                     2
                        174     BINARY_SUBSCR                   
                        176     GET_ITER                        
                        178     CALL_FUNCTION                   1
                        180     CALL_METHOD                     1
                        182     POP_TOP                         
                        184     JUMP_FORWARD                    11 (to 208)
                        186     LOAD_FAST                       3: opts
                        188     LOAD_CONST                      9: -1
                        190     BINARY_SUBSCR                   
                        192     LOAD_CONST                      10: '\n'
                        194     COMPARE_OP                      3 (!=)
                        196     POP_JUMP_IF_FALSE               104 (to 208)
                        198     LOAD_FAST                       2: result
                        200     LOAD_METHOD                     4: append
                        202     LOAD_CONST                      10: '\n'
                        204     CALL_METHOD                     1
                        206     POP_TOP                         
                        208     LOAD_CONST                      3: ''
                        210     LOAD_METHOD                     11: join
                        212     LOAD_FAST                       2: result
                        214     CALL_METHOD                     1
                        216     RETURN_VALUE                    
                'HelpFormatter.format_option'
                [Code]
                    File Name: optparse.py
                    Object Name: store_option_strings
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'indent'
                        'option_list'
                        'format_option_strings'
                        'option_strings'
                        'max'
                        'len'
                        'current_indent'
                        'option_groups'
                        'dedent'
                        'min'
                        'max_help_position'
                        'help_position'
                        'width'
                        'help_width'
                    [Var Names]
                        'self'
                        'parser'
                        'max_len'
                        'opt'
                        'strings'
                        'group'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        2
                        11
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: indent
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_CONST                      1: 0
                        10      STORE_FAST                      2: max_len
                        12      LOAD_FAST                       1: parser
                        14      LOAD_ATTR                       1: option_list
                        16      GET_ITER                        
                        18      FOR_ITER                        22 (to 64)
                        20      STORE_FAST                      3: opt
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     2: format_option_strings
                        26      LOAD_FAST                       3: opt
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      4: strings
                        32      LOAD_FAST                       4: strings
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       3: option_strings
                        38      LOAD_FAST                       3: opt
                        40      STORE_SUBSCR                    
                        42      LOAD_GLOBAL                     4: max
                        44      LOAD_FAST                       2: max_len
                        46      LOAD_GLOBAL                     5: len
                        48      LOAD_FAST                       4: strings
                        50      CALL_FUNCTION                   1
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       6: current_indent
                        56      BINARY_ADD                      
                        58      CALL_FUNCTION                   2
                        60      STORE_FAST                      2: max_len
                        62      JUMP_ABSOLUTE                   9 (to 18)
                        64      LOAD_FAST                       0: self
                        66      LOAD_METHOD                     0: indent
                        68      CALL_METHOD                     0
                        70      POP_TOP                         
                        72      LOAD_FAST                       1: parser
                        74      LOAD_ATTR                       7: option_groups
                        76      GET_ITER                        
                        78      FOR_ITER                        28 (to 136)
                        80      STORE_FAST                      5: group
                        82      LOAD_FAST                       5: group
                        84      LOAD_ATTR                       1: option_list
                        86      GET_ITER                        
                        88      FOR_ITER                        22 (to 134)
                        90      STORE_FAST                      3: opt
                        92      LOAD_FAST                       0: self
                        94      LOAD_METHOD                     2: format_option_strings
                        96      LOAD_FAST                       3: opt
                        98      CALL_METHOD                     1
                        100     STORE_FAST                      4: strings
                        102     LOAD_FAST                       4: strings
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       3: option_strings
                        108     LOAD_FAST                       3: opt
                        110     STORE_SUBSCR                    
                        112     LOAD_GLOBAL                     4: max
                        114     LOAD_FAST                       2: max_len
                        116     LOAD_GLOBAL                     5: len
                        118     LOAD_FAST                       4: strings
                        120     CALL_FUNCTION                   1
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       6: current_indent
                        126     BINARY_ADD                      
                        128     CALL_FUNCTION                   2
                        130     STORE_FAST                      2: max_len
                        132     JUMP_ABSOLUTE                   44 (to 88)
                        134     JUMP_ABSOLUTE                   39 (to 78)
                        136     LOAD_FAST                       0: self
                        138     LOAD_METHOD                     8: dedent
                        140     CALL_METHOD                     0
                        142     POP_TOP                         
                        144     LOAD_FAST                       0: self
                        146     LOAD_METHOD                     8: dedent
                        148     CALL_METHOD                     0
                        150     POP_TOP                         
                        152     LOAD_GLOBAL                     9: min
                        154     LOAD_FAST                       2: max_len
                        156     LOAD_CONST                      2: 2
                        158     BINARY_ADD                      
                        160     LOAD_FAST                       0: self
                        162     LOAD_ATTR                       10: max_help_position
                        164     CALL_FUNCTION                   2
                        166     LOAD_FAST                       0: self
                        168     STORE_ATTR                      11: help_position
                        170     LOAD_GLOBAL                     4: max
                        172     LOAD_FAST                       0: self
                        174     LOAD_ATTR                       12: width
                        176     LOAD_FAST                       0: self
                        178     LOAD_ATTR                       11: help_position
                        180     BINARY_SUBTRACT                 
                        182     LOAD_CONST                      3: 11
                        184     CALL_FUNCTION                   2
                        186     LOAD_FAST                       0: self
                        188     STORE_ATTR                      13: help_width
                        190     LOAD_CONST                      0: None
                        192     RETURN_VALUE                    
                'HelpFormatter.store_option_strings'
                [Code]
                    File Name: optparse.py
                    Object Name: format_option_strings
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'takes_value'
                        'metavar'
                        'dest'
                        'upper'
                        '_short_opts'
                        '_long_opts'
                        'short_first'
                        'join'
                    [Var Names]
                        'self'
                        'option'
                        'short_opts'
                        'long_opts'
                        'opts'
                    [Free Vars]
                    [Cell Vars]
                        'metavar'
                        'self'
                    [Constants]
                        'Return a comma-separated list of option strings & metavariables.'
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 5
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                '_short_opt_fmt'
                            [Var Names]
                                '.0'
                                'sopt'
                            [Free Vars]
                                'metavar'
                                'self'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        9 (to 24)
                                6       STORE_FAST                      1: sopt
                                8       LOAD_DEREF                      1: self
                                10      LOAD_ATTR                       0: _short_opt_fmt
                                12      LOAD_FAST                       1: sopt
                                14      LOAD_DEREF                      0: metavar
                                16      BUILD_TUPLE                     2
                                18      BINARY_MODULO                   
                                20      LIST_APPEND                     2
                                22      JUMP_ABSOLUTE                   2 (to 4)
                                24      RETURN_VALUE                    
                        'HelpFormatter.format_option_strings.<locals>.<listcomp>'
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 5
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                '_long_opt_fmt'
                            [Var Names]
                                '.0'
                                'lopt'
                            [Free Vars]
                                'metavar'
                                'self'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        9 (to 24)
                                6       STORE_FAST                      1: lopt
                                8       LOAD_DEREF                      1: self
                                10      LOAD_ATTR                       0: _long_opt_fmt
                                12      LOAD_FAST                       1: lopt
                                14      LOAD_DEREF                      0: metavar
                                16      BUILD_TUPLE                     2
                                18      BINARY_MODULO                   
                                20      LIST_APPEND                     2
                                22      JUMP_ABSOLUTE                   2 (to 4)
                                24      RETURN_VALUE                    
                        ', '
                    [Disassembly]
                        0       LOAD_FAST                       1: option
                        2       LOAD_METHOD                     0: takes_value
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               35 (to 70)
                        8       LOAD_FAST                       1: option
                        10      LOAD_ATTR                       1: metavar
                        12      JUMP_IF_TRUE_OR_POP             11 (to 22)
                        14      LOAD_FAST                       1: option
                        16      LOAD_ATTR                       2: dest
                        18      LOAD_METHOD                     3: upper
                        20      CALL_METHOD                     0
                        22      STORE_DEREF                     0: metavar
                        24      LOAD_CLOSURE                    0: metavar
                        26      LOAD_CLOSURE                    1: self
                        28      BUILD_TUPLE                     2
                        30      LOAD_CONST                      1: <CODE> <listcomp>
                        32      LOAD_CONST                      2: 'HelpFormatter.format_option_strings.<locals>.<listcomp>'
                        34      MAKE_FUNCTION                   8
                        36      LOAD_FAST                       1: option
                        38      LOAD_ATTR                       4: _short_opts
                        40      GET_ITER                        
                        42      CALL_FUNCTION                   1
                        44      STORE_FAST                      2: short_opts
                        46      LOAD_CLOSURE                    0: metavar
                        48      LOAD_CLOSURE                    1: self
                        50      BUILD_TUPLE                     2
                        52      LOAD_CONST                      3: <CODE> <listcomp>
                        54      LOAD_CONST                      2: 'HelpFormatter.format_option_strings.<locals>.<listcomp>'
                        56      MAKE_FUNCTION                   8
                        58      LOAD_FAST                       1: option
                        60      LOAD_ATTR                       5: _long_opts
                        62      GET_ITER                        
                        64      CALL_FUNCTION                   1
                        66      STORE_FAST                      3: long_opts
                        68      JUMP_FORWARD                    6 (to 82)
                        70      LOAD_FAST                       1: option
                        72      LOAD_ATTR                       4: _short_opts
                        74      STORE_FAST                      2: short_opts
                        76      LOAD_FAST                       1: option
                        78      LOAD_ATTR                       5: _long_opts
                        80      STORE_FAST                      3: long_opts
                        82      LOAD_DEREF                      1: self
                        84      LOAD_ATTR                       6: short_first
                        86      POP_JUMP_IF_FALSE               49 (to 98)
                        88      LOAD_FAST                       2: short_opts
                        90      LOAD_FAST                       3: long_opts
                        92      BINARY_ADD                      
                        94      STORE_FAST                      4: opts
                        96      JUMP_FORWARD                    4 (to 106)
                        98      LOAD_FAST                       3: long_opts
                        100     LOAD_FAST                       2: short_opts
                        102     BINARY_ADD                      
                        104     STORE_FAST                      4: opts
                        106     LOAD_CONST                      4: ', '
                        108     LOAD_METHOD                     7: join
                        110     LOAD_FAST                       4: opts
                        112     CALL_METHOD                     1
                        114     RETURN_VALUE                    
                'HelpFormatter.format_option_strings'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'HelpFormatter'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Abstract base class for formatting option help.  OptionParser\n    instances should use one of the HelpFormatter subclasses for\n    formatting help; by default IndentedHelpFormatter is used.\n\n    Instance attributes:\n      parser : OptionParser\n        the controlling OptionParser instance\n      indent_increment : int\n        the number of columns to indent per nesting level\n      max_help_position : int\n        the maximum starting column for option help text\n      help_position : int\n        the calculated starting column for option help text;\n        initially the same as the maximum\n      width : int\n        total number of columns for output (pass None to constructor for\n        this value to be taken from the $COLUMNS environment variable)\n      level : int\n        current indentation level\n      current_indent : int\n        current indentation level (in columns)\n      help_width : int\n        number of columns available for option help text (calculated)\n      default_tag : str\n        text to replace with each option\'s default value, "%default"\n        by default.  Set to false value to disable default value expansion.\n      option_strings : { Option : str }\n        maps Option instances to the snippet of help text explaining\n        the syntax of that option, e.g. "-h, --help" or\n        "-fFILE, --file=FILE"\n      _short_opt_fmt : str\n        format string controlling how short options with values are\n        printed in help text.  Must be either "%s%s" ("-fFILE") or\n        "%s %s" ("-f FILE"), because those are the two syntaxes that\n        Optik supports.\n      _long_opt_fmt : str\n        similar but for long options; must be either "%s %s" ("--file FILE")\n        or "%s=%s" ("--file=FILE").\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: 'none'
                14      STORE_NAME                      4: NO_DEFAULT_VALUE
                16      LOAD_CONST                      3: <CODE> __init__
                18      LOAD_CONST                      4: 'HelpFormatter.__init__'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      5: __init__
                24      LOAD_CONST                      5: <CODE> set_parser
                26      LOAD_CONST                      6: 'HelpFormatter.set_parser'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      6: set_parser
                32      LOAD_CONST                      7: <CODE> set_short_opt_delimiter
                34      LOAD_CONST                      8: 'HelpFormatter.set_short_opt_delimiter'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      7: set_short_opt_delimiter
                40      LOAD_CONST                      9: <CODE> set_long_opt_delimiter
                42      LOAD_CONST                      10: 'HelpFormatter.set_long_opt_delimiter'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      8: set_long_opt_delimiter
                48      LOAD_CONST                      11: <CODE> indent
                50      LOAD_CONST                      12: 'HelpFormatter.indent'
                52      MAKE_FUNCTION                   0
                54      STORE_NAME                      9: indent
                56      LOAD_CONST                      13: <CODE> dedent
                58      LOAD_CONST                      14: 'HelpFormatter.dedent'
                60      MAKE_FUNCTION                   0
                62      STORE_NAME                      10: dedent
                64      LOAD_CONST                      15: <CODE> format_usage
                66      LOAD_CONST                      16: 'HelpFormatter.format_usage'
                68      MAKE_FUNCTION                   0
                70      STORE_NAME                      11: format_usage
                72      LOAD_CONST                      17: <CODE> format_heading
                74      LOAD_CONST                      18: 'HelpFormatter.format_heading'
                76      MAKE_FUNCTION                   0
                78      STORE_NAME                      12: format_heading
                80      LOAD_CONST                      19: <CODE> _format_text
                82      LOAD_CONST                      20: 'HelpFormatter._format_text'
                84      MAKE_FUNCTION                   0
                86      STORE_NAME                      13: _format_text
                88      LOAD_CONST                      21: <CODE> format_description
                90      LOAD_CONST                      22: 'HelpFormatter.format_description'
                92      MAKE_FUNCTION                   0
                94      STORE_NAME                      14: format_description
                96      LOAD_CONST                      23: <CODE> format_epilog
                98      LOAD_CONST                      24: 'HelpFormatter.format_epilog'
                100     MAKE_FUNCTION                   0
                102     STORE_NAME                      15: format_epilog
                104     LOAD_CONST                      25: <CODE> expand_default
                106     LOAD_CONST                      26: 'HelpFormatter.expand_default'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      16: expand_default
                112     LOAD_CONST                      27: <CODE> format_option
                114     LOAD_CONST                      28: 'HelpFormatter.format_option'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      17: format_option
                120     LOAD_CONST                      29: <CODE> store_option_strings
                122     LOAD_CONST                      30: 'HelpFormatter.store_option_strings'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      18: store_option_strings
                128     LOAD_CONST                      31: <CODE> format_option_strings
                130     LOAD_CONST                      32: 'HelpFormatter.format_option_strings'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      19: format_option_strings
                136     LOAD_CONST                      33: None
                138     RETURN_VALUE                    
        'HelpFormatter'
        [Code]
            File Name: optparse.py
            Object Name: IndentedHelpFormatter
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'format_usage'
                'format_heading'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'IndentedHelpFormatter'
                'Format help with indented section bodies.\n    '
                2
                24
                None
                1
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'HelpFormatter'
                        '__init__'
                    [Var Names]
                        'self'
                        'indent_increment'
                        'max_help_position'
                        'width'
                        'short_first'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: HelpFormatter
                        2       LOAD_METHOD                     1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       1: indent_increment
                        8       LOAD_FAST                       2: max_help_position
                        10      LOAD_FAST                       3: width
                        12      LOAD_FAST                       4: short_first
                        14      CALL_METHOD                     5
                        16      POP_TOP                         
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'IndentedHelpFormatter.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: format_usage
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_'
                    [Var Names]
                        'self'
                        'usage'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Usage: %s\n'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _
                        2       LOAD_CONST                      1: 'Usage: %s\n'
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       1: usage
                        8       BINARY_MODULO                   
                        10      RETURN_VALUE                    
                'IndentedHelpFormatter.format_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: format_heading
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'current_indent'
                    [Var Names]
                        'self'
                        'heading'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%*s%s:\n'
                        ''
                    [Disassembly]
                        0       LOAD_CONST                      1: '%*s%s:\n'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: current_indent
                        6       LOAD_CONST                      2: ''
                        8       LOAD_FAST                       1: heading
                        10      BUILD_TUPLE                     3
                        12      BINARY_MODULO                   
                        14      RETURN_VALUE                    
                'IndentedHelpFormatter.format_heading'
                (
                    2
                    24
                    None
                    1
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'IndentedHelpFormatter'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Format help with indented section bodies.\n    '
                10      STORE_NAME                      3: __doc__
                12      NOP                             
                14      NOP                             
                16      NOP                             
                18      NOP                             
                20      LOAD_CONST                      12: (2, 24, None, 1)
                22      LOAD_CONST                      6: <CODE> __init__
                24      LOAD_CONST                      7: 'IndentedHelpFormatter.__init__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      4: __init__
                30      LOAD_CONST                      8: <CODE> format_usage
                32      LOAD_CONST                      9: 'IndentedHelpFormatter.format_usage'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      5: format_usage
                38      LOAD_CONST                      10: <CODE> format_heading
                40      LOAD_CONST                      11: 'IndentedHelpFormatter.format_heading'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      6: format_heading
                46      LOAD_CONST                      4: None
                48      RETURN_VALUE                    
        'IndentedHelpFormatter'
        [Code]
            File Name: optparse.py
            Object Name: TitledHelpFormatter
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'format_usage'
                'format_heading'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TitledHelpFormatter'
                'Format help with underlined section headers.\n    '
                0
                24
                None
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'HelpFormatter'
                        '__init__'
                    [Var Names]
                        'self'
                        'indent_increment'
                        'max_help_position'
                        'width'
                        'short_first'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: HelpFormatter
                        2       LOAD_METHOD                     1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       1: indent_increment
                        8       LOAD_FAST                       2: max_help_position
                        10      LOAD_FAST                       3: width
                        12      LOAD_FAST                       4: short_first
                        14      CALL_METHOD                     5
                        16      POP_TOP                         
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'TitledHelpFormatter.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: format_usage
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format_heading'
                        '_'
                    [Var Names]
                        'self'
                        'usage'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%s  %s\n'
                        'Usage'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%s  %s\n'
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: format_heading
                        6       LOAD_GLOBAL                     1: _
                        8       LOAD_CONST                      2: 'Usage'
                        10      CALL_FUNCTION                   1
                        12      CALL_METHOD                     1
                        14      LOAD_FAST                       1: usage
                        16      BUILD_TUPLE                     2
                        18      BINARY_MODULO                   
                        20      RETURN_VALUE                    
                'TitledHelpFormatter.format_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: format_heading
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'level'
                        'len'
                    [Var Names]
                        'self'
                        'heading'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%s\n%s\n'
                        '=-'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%s\n%s\n'
                        2       LOAD_FAST                       1: heading
                        4       LOAD_CONST                      2: '=-'
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: level
                        10      BINARY_SUBSCR                   
                        12      LOAD_GLOBAL                     1: len
                        14      LOAD_FAST                       1: heading
                        16      CALL_FUNCTION                   1
                        18      BINARY_MULTIPLY                 
                        20      BUILD_TUPLE                     2
                        22      BINARY_MODULO                   
                        24      RETURN_VALUE                    
                'TitledHelpFormatter.format_heading'
                (
                    0
                    24
                    None
                    0
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TitledHelpFormatter'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Format help with underlined section headers.\n    '
                10      STORE_NAME                      3: __doc__
                12      NOP                             
                14      NOP                             
                16      NOP                             
                18      NOP                             
                20      LOAD_CONST                      11: (0, 24, None, 0)
                22      LOAD_CONST                      5: <CODE> __init__
                24      LOAD_CONST                      6: 'TitledHelpFormatter.__init__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      4: __init__
                30      LOAD_CONST                      7: <CODE> format_usage
                32      LOAD_CONST                      8: 'TitledHelpFormatter.format_usage'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      5: format_usage
                38      LOAD_CONST                      9: <CODE> format_heading
                40      LOAD_CONST                      10: 'TitledHelpFormatter.format_heading'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      6: format_heading
                46      LOAD_CONST                      4: None
                48      RETURN_VALUE                    
        'TitledHelpFormatter'
        [Code]
            File Name: optparse.py
            Object Name: _parse_num
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'lower'
            [Var Names]
                'val'
                'type'
                'radix'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                2
                '0x'
                16
                '0b'
                '0'
                1
                8
                10
            [Disassembly]
                0       LOAD_FAST                       0: val
                2       LOAD_CONST                      0: None
                4       LOAD_CONST                      1: 2
                6       BUILD_SLICE                     2
                8       BINARY_SUBSCR                   
                10      LOAD_METHOD                     0: lower
                12      CALL_METHOD                     0
                14      LOAD_CONST                      2: '0x'
                16      COMPARE_OP                      2 (==)
                18      POP_JUMP_IF_FALSE               13 (to 26)
                20      LOAD_CONST                      3: 16
                22      STORE_FAST                      2: radix
                24      JUMP_FORWARD                    34 (to 94)
                26      LOAD_FAST                       0: val
                28      LOAD_CONST                      0: None
                30      LOAD_CONST                      1: 2
                32      BUILD_SLICE                     2
                34      BINARY_SUBSCR                   
                36      LOAD_METHOD                     0: lower
                38      CALL_METHOD                     0
                40      LOAD_CONST                      4: '0b'
                42      COMPARE_OP                      2 (==)
                44      POP_JUMP_IF_FALSE               34 (to 68)
                46      LOAD_CONST                      1: 2
                48      STORE_FAST                      2: radix
                50      LOAD_FAST                       0: val
                52      LOAD_CONST                      1: 2
                54      LOAD_CONST                      0: None
                56      BUILD_SLICE                     2
                58      BINARY_SUBSCR                   
                60      JUMP_IF_TRUE_OR_POP             32 (to 64)
                62      LOAD_CONST                      5: '0'
                64      STORE_FAST                      0: val
                66      JUMP_FORWARD                    13 (to 94)
                68      LOAD_FAST                       0: val
                70      LOAD_CONST                      0: None
                72      LOAD_CONST                      6: 1
                74      BUILD_SLICE                     2
                76      BINARY_SUBSCR                   
                78      LOAD_CONST                      5: '0'
                80      COMPARE_OP                      2 (==)
                82      POP_JUMP_IF_FALSE               45 (to 90)
                84      LOAD_CONST                      7: 8
                86      STORE_FAST                      2: radix
                88      JUMP_FORWARD                    2 (to 94)
                90      LOAD_CONST                      8: 10
                92      STORE_FAST                      2: radix
                94      LOAD_FAST                       1: type
                96      LOAD_FAST                       0: val
                98      LOAD_FAST                       2: radix
                100     CALL_FUNCTION                   2
                102     RETURN_VALUE                    
        '_parse_num'
        [Code]
            File Name: optparse.py
            Object Name: _parse_int
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_parse_num'
                'int'
            [Var Names]
                'val'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _parse_num
                2       LOAD_FAST                       0: val
                4       LOAD_GLOBAL                     1: int
                6       CALL_FUNCTION                   2
                8       RETURN_VALUE                    
        '_parse_int'
        'integer'
        'floating-point'
        'complex'
        (
            'int'
            'long'
            'float'
            'complex'
        )
        [Code]
            File Name: optparse.py
            Object Name: check_builtin
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_builtin_cvt'
                'type'
                'ValueError'
                'OptionValueError'
                '_'
            [Var Names]
                'option'
                'opt'
                'value'
                'cvt'
                'what'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'option %s: invalid %s value: %r'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _builtin_cvt
                2       LOAD_FAST                       0: option
                4       LOAD_ATTR                       1: type
                6       BINARY_SUBSCR                   
                8       UNPACK_SEQUENCE                 2
                10      STORE_FAST                      3: cvt
                12      STORE_FAST                      4: what
                14      SETUP_FINALLY                   5 (to 26)
                16      LOAD_FAST                       3: cvt
                18      LOAD_FAST                       2: value
                20      CALL_FUNCTION                   1
                22      POP_BLOCK                       
                24      RETURN_VALUE                    
                26      DUP_TOP                         
                28      LOAD_GLOBAL                     2: ValueError
                30      JUMP_IF_NOT_EXC_MATCH           30 (to 60)
                32      POP_TOP                         
                34      POP_TOP                         
                36      POP_TOP                         
                38      LOAD_GLOBAL                     3: OptionValueError
                40      LOAD_GLOBAL                     4: _
                42      LOAD_CONST                      1: 'option %s: invalid %s value: %r'
                44      CALL_FUNCTION                   1
                46      LOAD_FAST                       1: opt
                48      LOAD_FAST                       4: what
                50      LOAD_FAST                       2: value
                52      BUILD_TUPLE                     3
                54      BINARY_MODULO                   
                56      CALL_FUNCTION                   1
                58      RAISE_VARARGS                   1
                60      RERAISE                         0
        'check_builtin'
        [Code]
            File Name: optparse.py
            Object Name: check_choice
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'choices'
                'join'
                'map'
                'repr'
                'OptionValueError'
                '_'
            [Var Names]
                'option'
                'opt'
                'value'
                'choices'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                ', '
                'option %s: invalid choice: %r (choose from %s)'
            [Disassembly]
                0       LOAD_FAST                       2: value
                2       LOAD_FAST                       0: option
                4       LOAD_ATTR                       0: choices
                6       CONTAINS_OP                     0 (in)
                8       POP_JUMP_IF_FALSE               7 (to 14)
                10      LOAD_FAST                       2: value
                12      RETURN_VALUE                    
                14      LOAD_CONST                      1: ', '
                16      LOAD_METHOD                     1: join
                18      LOAD_GLOBAL                     2: map
                20      LOAD_GLOBAL                     3: repr
                22      LOAD_FAST                       0: option
                24      LOAD_ATTR                       0: choices
                26      CALL_FUNCTION                   2
                28      CALL_METHOD                     1
                30      STORE_FAST                      3: choices
                32      LOAD_GLOBAL                     4: OptionValueError
                34      LOAD_GLOBAL                     5: _
                36      LOAD_CONST                      2: 'option %s: invalid choice: %r (choose from %s)'
                38      CALL_FUNCTION                   1
                40      LOAD_FAST                       1: opt
                42      LOAD_FAST                       2: value
                44      LOAD_FAST                       3: choices
                46      BUILD_TUPLE                     3
                48      BINARY_MODULO                   
                50      CALL_FUNCTION                   1
                52      RAISE_VARARGS                   1
        'check_choice'
        (
            'NO'
            'DEFAULT'
        )
        [Code]
            File Name: optparse.py
            Object Name: Option
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 7
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'ATTRS'
                'ACTIONS'
                'STORE_ACTIONS'
                'TYPED_ACTIONS'
                'ALWAYS_TYPED_ACTIONS'
                'CONST_ACTIONS'
                'TYPES'
                'check_builtin'
                'check_choice'
                'TYPE_CHECKER'
                'CHECK_METHODS'
                '__init__'
                '_check_opt_strings'
                '_set_opt_strings'
                '_set_attrs'
                '_check_action'
                '_check_type'
                '_check_choice'
                '_check_dest'
                '_check_const'
                '_check_nargs'
                '_check_callback'
                '__str__'
                '_repr'
                '__repr__'
                'takes_value'
                'get_opt_string'
                'check_value'
                'convert_value'
                'process'
                'take_action'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Option'
                '\n    Instance attributes:\n      _short_opts : [string]\n      _long_opts : [string]\n\n      action : string\n      type : string\n      dest : string\n      default : any\n      nargs : int\n      const : any\n      choices : [string]\n      callback : function\n      callback_args : (any*)\n      callback_kwargs : { string : any }\n      help : string\n      metavar : string\n    '
                (
                    'action'
                    'type'
                    'dest'
                    'default'
                    'nargs'
                    'const'
                    'choices'
                    'callback'
                    'callback_args'
                    'callback_kwargs'
                    'help'
                    'metavar'
                )
                (
                    'store'
                    'store_const'
                    'store_true'
                    'store_false'
                    'append'
                    'append_const'
                    'count'
                    'callback'
                    'help'
                    'version'
                )
                (
                    'store'
                    'store_const'
                    'store_true'
                    'store_false'
                    'append'
                    'append_const'
                    'count'
                )
                (
                    'store'
                    'append'
                    'callback'
                )
                (
                    'store'
                    'append'
                )
                (
                    'store_const'
                    'append_const'
                )
                (
                    'string'
                    'int'
                    'long'
                    'float'
                    'complex'
                    'choice'
                )
                (
                    'int'
                    'long'
                    'float'
                    'complex'
                    'choice'
                )
                None
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        '_short_opts'
                        '_long_opts'
                        '_check_opt_strings'
                        '_set_opt_strings'
                        '_set_attrs'
                        'CHECK_METHODS'
                    [Var Names]
                        'self'
                        'opts'
                        'attrs'
                        'checker'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _short_opts
                        6       BUILD_LIST                      0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _long_opts
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     2: _check_opt_strings
                        16      LOAD_FAST                       1: opts
                        18      CALL_METHOD                     1
                        20      STORE_FAST                      1: opts
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     3: _set_opt_strings
                        26      LOAD_FAST                       1: opts
                        28      CALL_METHOD                     1
                        30      POP_TOP                         
                        32      LOAD_FAST                       0: self
                        34      LOAD_METHOD                     4: _set_attrs
                        36      LOAD_FAST                       2: attrs
                        38      CALL_METHOD                     1
                        40      POP_TOP                         
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       5: CHECK_METHODS
                        46      GET_ITER                        
                        48      FOR_ITER                        6 (to 62)
                        50      STORE_FAST                      3: checker
                        52      LOAD_FAST                       3: checker
                        54      LOAD_FAST                       0: self
                        56      CALL_FUNCTION                   1
                        58      POP_TOP                         
                        60      JUMP_ABSOLUTE                   24 (to 48)
                        62      LOAD_CONST                      0: None
                        64      RETURN_VALUE                    
                'Option.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_opt_strings
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'TypeError'
                    [Var Names]
                        'self'
                        'opts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                            [Var Names]
                                '.0'
                                'opt'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       STORE_FAST                      1: opt
                                8       LOAD_FAST                       1: opt
                                10      POP_JUMP_IF_FALSE               2 (to 4)
                                12      LOAD_FAST                       1: opt
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        'Option._check_opt_strings.<locals>.<listcomp>'
                        'at least one option string must be supplied'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'Option._check_opt_strings.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       1: opts
                        8       GET_ITER                        
                        10      CALL_FUNCTION                   1
                        12      STORE_FAST                      1: opts
                        14      LOAD_FAST                       1: opts
                        16      POP_JUMP_IF_TRUE                13 (to 26)
                        18      LOAD_GLOBAL                     0: TypeError
                        20      LOAD_CONST                      3: 'at least one option string must be supplied'
                        22      CALL_FUNCTION                   1
                        24      RAISE_VARARGS                   1
                        26      LOAD_FAST                       1: opts
                        28      RETURN_VALUE                    
                'Option._check_opt_strings'
                [Code]
                    File Name: optparse.py
                    Object Name: _set_opt_strings
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        'OptionError'
                        '_short_opts'
                        'append'
                        '_long_opts'
                    [Var Names]
                        'self'
                        'opts'
                        'opt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        2
                        'invalid option string %r: must be at least two characters long'
                        0
                        '-'
                        1
                        'invalid short option string %r: must be of the form -x, (x any non-dash char)'
                        '--'
                        'invalid long option string %r: must start with --, followed by non-dash'
                    [Disassembly]
                        0       LOAD_FAST                       1: opts
                        2       GET_ITER                        
                        4       FOR_ITER                        74 (to 154)
                        6       STORE_FAST                      2: opt
                        8       LOAD_GLOBAL                     0: len
                        10      LOAD_FAST                       2: opt
                        12      CALL_FUNCTION                   1
                        14      LOAD_CONST                      1: 2
                        16      COMPARE_OP                      0 (<)
                        18      POP_JUMP_IF_FALSE               17 (to 34)
                        20      LOAD_GLOBAL                     1: OptionError
                        22      LOAD_CONST                      2: 'invalid option string %r: must be at least two characters long'
                        24      LOAD_FAST                       2: opt
                        26      BINARY_MODULO                   
                        28      LOAD_FAST                       0: self
                        30      CALL_FUNCTION                   2
                        32      RAISE_VARARGS                   1
                        34      LOAD_GLOBAL                     0: len
                        36      LOAD_FAST                       2: opt
                        38      CALL_FUNCTION                   1
                        40      LOAD_CONST                      1: 2
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               49 (to 98)
                        46      LOAD_FAST                       2: opt
                        48      LOAD_CONST                      3: 0
                        50      BINARY_SUBSCR                   
                        52      LOAD_CONST                      4: '-'
                        54      COMPARE_OP                      2 (==)
                        56      POP_JUMP_IF_FALSE               35 (to 70)
                        58      LOAD_FAST                       2: opt
                        60      LOAD_CONST                      5: 1
                        62      BINARY_SUBSCR                   
                        64      LOAD_CONST                      4: '-'
                        66      COMPARE_OP                      3 (!=)
                        68      POP_JUMP_IF_TRUE                42 (to 84)
                        70      LOAD_GLOBAL                     1: OptionError
                        72      LOAD_CONST                      6: 'invalid short option string %r: must be of the form -x, (x any non-dash char)'
                        74      LOAD_FAST                       2: opt
                        76      BINARY_MODULO                   
                        78      LOAD_FAST                       0: self
                        80      CALL_FUNCTION                   2
                        82      RAISE_VARARGS                   1
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       2: _short_opts
                        88      LOAD_METHOD                     3: append
                        90      LOAD_FAST                       2: opt
                        92      CALL_METHOD                     1
                        94      POP_TOP                         
                        96      JUMP_ABSOLUTE                   2 (to 4)
                        98      LOAD_FAST                       2: opt
                        100     LOAD_CONST                      3: 0
                        102     LOAD_CONST                      1: 2
                        104     BUILD_SLICE                     2
                        106     BINARY_SUBSCR                   
                        108     LOAD_CONST                      7: '--'
                        110     COMPARE_OP                      2 (==)
                        112     POP_JUMP_IF_FALSE               63 (to 126)
                        114     LOAD_FAST                       2: opt
                        116     LOAD_CONST                      1: 2
                        118     BINARY_SUBSCR                   
                        120     LOAD_CONST                      4: '-'
                        122     COMPARE_OP                      3 (!=)
                        124     POP_JUMP_IF_TRUE                70 (to 140)
                        126     LOAD_GLOBAL                     1: OptionError
                        128     LOAD_CONST                      8: 'invalid long option string %r: must start with --, followed by non-dash'
                        130     LOAD_FAST                       2: opt
                        132     BINARY_MODULO                   
                        134     LOAD_FAST                       0: self
                        136     CALL_FUNCTION                   2
                        138     RAISE_VARARGS                   1
                        140     LOAD_FAST                       0: self
                        142     LOAD_ATTR                       4: _long_opts
                        144     LOAD_METHOD                     3: append
                        146     LOAD_FAST                       2: opt
                        148     CALL_METHOD                     1
                        150     POP_TOP                         
                        152     JUMP_ABSOLUTE                   2 (to 4)
                        154     LOAD_CONST                      0: None
                        156     RETURN_VALUE                    
                'Option._set_opt_strings'
                [Code]
                    File Name: optparse.py
                    Object Name: _set_attrs
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ATTRS'
                        'setattr'
                        'NO_DEFAULT'
                        'sorted'
                        'keys'
                        'OptionError'
                        'join'
                    [Var Names]
                        'self'
                        'attrs'
                        'attr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'default'
                        'invalid keyword arguments: %s'
                        ', '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: ATTRS
                        4       GET_ITER                        
                        6       FOR_ITER                        35 (to 78)
                        8       STORE_FAST                      2: attr
                        10      LOAD_FAST                       2: attr
                        12      LOAD_FAST                       1: attrs
                        14      CONTAINS_OP                     0 (in)
                        16      POP_JUMP_IF_FALSE               21 (to 42)
                        18      LOAD_GLOBAL                     1: setattr
                        20      LOAD_FAST                       0: self
                        22      LOAD_FAST                       2: attr
                        24      LOAD_FAST                       1: attrs
                        26      LOAD_FAST                       2: attr
                        28      BINARY_SUBSCR                   
                        30      CALL_FUNCTION                   3
                        32      POP_TOP                         
                        34      LOAD_FAST                       1: attrs
                        36      LOAD_FAST                       2: attr
                        38      DELETE_SUBSCR                   
                        40      JUMP_ABSOLUTE                   3 (to 6)
                        42      LOAD_FAST                       2: attr
                        44      LOAD_CONST                      1: 'default'
                        46      COMPARE_OP                      2 (==)
                        48      POP_JUMP_IF_FALSE               32 (to 64)
                        50      LOAD_GLOBAL                     1: setattr
                        52      LOAD_FAST                       0: self
                        54      LOAD_FAST                       2: attr
                        56      LOAD_GLOBAL                     2: NO_DEFAULT
                        58      CALL_FUNCTION                   3
                        60      POP_TOP                         
                        62      JUMP_ABSOLUTE                   3 (to 6)
                        64      LOAD_GLOBAL                     1: setattr
                        66      LOAD_FAST                       0: self
                        68      LOAD_FAST                       2: attr
                        70      LOAD_CONST                      0: None
                        72      CALL_FUNCTION                   3
                        74      POP_TOP                         
                        76      JUMP_ABSOLUTE                   3 (to 6)
                        78      LOAD_FAST                       1: attrs
                        80      POP_JUMP_IF_FALSE               57 (to 114)
                        82      LOAD_GLOBAL                     3: sorted
                        84      LOAD_FAST                       1: attrs
                        86      LOAD_METHOD                     4: keys
                        88      CALL_METHOD                     0
                        90      CALL_FUNCTION                   1
                        92      STORE_FAST                      1: attrs
                        94      LOAD_GLOBAL                     5: OptionError
                        96      LOAD_CONST                      2: 'invalid keyword arguments: %s'
                        98      LOAD_CONST                      3: ', '
                        100     LOAD_METHOD                     6: join
                        102     LOAD_FAST                       1: attrs
                        104     CALL_METHOD                     1
                        106     BINARY_MODULO                   
                        108     LOAD_FAST                       0: self
                        110     CALL_FUNCTION                   2
                        112     RAISE_VARARGS                   1
                        114     LOAD_CONST                      0: None
                        116     RETURN_VALUE                    
                'Option._set_attrs'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_action
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'action'
                        'ACTIONS'
                        'OptionError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'store'
                        'invalid action: %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: action
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_CONST                      1: 'store'
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      0: action
                        16      LOAD_CONST                      0: None
                        18      RETURN_VALUE                    
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       0: action
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       1: ACTIONS
                        28      CONTAINS_OP                     1 (not in)
                        30      POP_JUMP_IF_FALSE               24 (to 48)
                        32      LOAD_GLOBAL                     2: OptionError
                        34      LOAD_CONST                      2: 'invalid action: %r'
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       0: action
                        40      BINARY_MODULO                   
                        42      LOAD_FAST                       0: self
                        44      CALL_FUNCTION                   2
                        46      RAISE_VARARGS                   1
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'Option._check_action'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_type
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'action'
                        'ALWAYS_TYPED_ACTIONS'
                        'choices'
                        'isinstance'
                        '__name__'
                        'TYPES'
                        'OptionError'
                        'TYPED_ACTIONS'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'choice'
                        'string'
                        'str'
                        'invalid option type: %r'
                        'must not supply a type for action %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               28 (to 56)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: action
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: ALWAYS_TYPED_ACTIONS
                        18      CONTAINS_OP                     0 (in)
                        20      POP_JUMP_IF_FALSE               26 (to 52)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: choices
                        26      LOAD_CONST                      0: None
                        28      IS_OP                           1 (is not)
                        30      POP_JUMP_IF_FALSE               21 (to 42)
                        32      LOAD_CONST                      1: 'choice'
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      0: type
                        38      LOAD_CONST                      0: None
                        40      RETURN_VALUE                    
                        42      LOAD_CONST                      2: 'string'
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      0: type
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                        52      LOAD_CONST                      0: None
                        54      RETURN_VALUE                    
                        56      LOAD_GLOBAL                     4: isinstance
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       0: type
                        62      LOAD_GLOBAL                     0: type
                        64      CALL_FUNCTION                   2
                        66      POP_JUMP_IF_FALSE               39 (to 78)
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       0: type
                        72      LOAD_ATTR                       5: __name__
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      0: type
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       0: type
                        82      LOAD_CONST                      3: 'str'
                        84      COMPARE_OP                      2 (==)
                        86      POP_JUMP_IF_FALSE               47 (to 94)
                        88      LOAD_CONST                      2: 'string'
                        90      LOAD_FAST                       0: self
                        92      STORE_ATTR                      0: type
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       0: type
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       6: TYPES
                        102     CONTAINS_OP                     1 (not in)
                        104     POP_JUMP_IF_FALSE               61 (to 122)
                        106     LOAD_GLOBAL                     7: OptionError
                        108     LOAD_CONST                      4: 'invalid option type: %r'
                        110     LOAD_FAST                       0: self
                        112     LOAD_ATTR                       0: type
                        114     BINARY_MODULO                   
                        116     LOAD_FAST                       0: self
                        118     CALL_FUNCTION                   2
                        120     RAISE_VARARGS                   1
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       1: action
                        126     LOAD_FAST                       0: self
                        128     LOAD_ATTR                       8: TYPED_ACTIONS
                        130     CONTAINS_OP                     1 (not in)
                        132     POP_JUMP_IF_FALSE               75 (to 150)
                        134     LOAD_GLOBAL                     7: OptionError
                        136     LOAD_CONST                      5: 'must not supply a type for action %r'
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       1: action
                        142     BINARY_MODULO                   
                        144     LOAD_FAST                       0: self
                        146     CALL_FUNCTION                   2
                        148     RAISE_VARARGS                   1
                        150     LOAD_CONST                      0: None
                        152     RETURN_VALUE                    
                'Option._check_type'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_choice
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'choices'
                        'OptionError'
                        'isinstance'
                        'tuple'
                        'list'
                        'str'
                        'split'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'choice'
                        "must supply a list of choices for type 'choice'"
                        "choices must be a list of strings ('%s' supplied)"
                        "'"
                        1
                        'must not supply choices for type %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_CONST                      1: 'choice'
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               42 (to 84)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: choices
                        14      LOAD_CONST                      0: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               15 (to 30)
                        20      LOAD_GLOBAL                     2: OptionError
                        22      LOAD_CONST                      2: "must supply a list of choices for type 'choice'"
                        24      LOAD_FAST                       0: self
                        26      CALL_FUNCTION                   2
                        28      RAISE_VARARGS                   1
                        30      LOAD_GLOBAL                     3: isinstance
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       1: choices
                        36      LOAD_GLOBAL                     4: tuple
                        38      LOAD_GLOBAL                     5: list
                        40      BUILD_TUPLE                     2
                        42      CALL_FUNCTION                   2
                        44      POP_JUMP_IF_TRUE                40 (to 80)
                        46      LOAD_GLOBAL                     2: OptionError
                        48      LOAD_CONST                      3: "choices must be a list of strings ('%s' supplied)"
                        50      LOAD_GLOBAL                     6: str
                        52      LOAD_GLOBAL                     0: type
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       1: choices
                        58      CALL_FUNCTION                   1
                        60      CALL_FUNCTION                   1
                        62      LOAD_METHOD                     7: split
                        64      LOAD_CONST                      4: "'"
                        66      CALL_METHOD                     1
                        68      LOAD_CONST                      5: 1
                        70      BINARY_SUBSCR                   
                        72      BINARY_MODULO                   
                        74      LOAD_FAST                       0: self
                        76      CALL_FUNCTION                   2
                        78      RAISE_VARARGS                   1
                        80      LOAD_CONST                      0: None
                        82      RETURN_VALUE                    
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       1: choices
                        88      LOAD_CONST                      0: None
                        90      IS_OP                           1 (is not)
                        92      POP_JUMP_IF_FALSE               55 (to 110)
                        94      LOAD_GLOBAL                     2: OptionError
                        96      LOAD_CONST                      6: 'must not supply choices for type %r'
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       0: type
                        102     BINARY_MODULO                   
                        104     LOAD_FAST                       0: self
                        106     CALL_FUNCTION                   2
                        108     RAISE_VARARGS                   1
                        110     LOAD_CONST                      0: None
                        112     RETURN_VALUE                    
                'Option._check_choice'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_dest
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'action'
                        'STORE_ACTIONS'
                        'type'
                        'dest'
                        '_long_opts'
                        'replace'
                        '_short_opts'
                    [Var Names]
                        'self'
                        'takes_value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        2
                        '-'
                        '_'
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: action
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: STORE_ACTIONS
                        8       CONTAINS_OP                     0 (in)
                        10      JUMP_IF_TRUE_OR_POP             10 (to 20)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: type
                        16      LOAD_CONST                      0: None
                        18      IS_OP                           1 (is not)
                        20      STORE_FAST                      1: takes_value
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: dest
                        26      LOAD_CONST                      0: None
                        28      IS_OP                           0 (is)
                        30      POP_JUMP_IF_FALSE               47 (to 94)
                        32      LOAD_FAST                       1: takes_value
                        34      POP_JUMP_IF_FALSE               49 (to 98)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       4: _long_opts
                        40      POP_JUMP_IF_FALSE               37 (to 74)
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       4: _long_opts
                        46      LOAD_CONST                      1: 0
                        48      BINARY_SUBSCR                   
                        50      LOAD_CONST                      2: 2
                        52      LOAD_CONST                      0: None
                        54      BUILD_SLICE                     2
                        56      BINARY_SUBSCR                   
                        58      LOAD_METHOD                     5: replace
                        60      LOAD_CONST                      3: '-'
                        62      LOAD_CONST                      4: '_'
                        64      CALL_METHOD                     2
                        66      LOAD_FAST                       0: self
                        68      STORE_ATTR                      3: dest
                        70      LOAD_CONST                      0: None
                        72      RETURN_VALUE                    
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       6: _short_opts
                        78      LOAD_CONST                      1: 0
                        80      BINARY_SUBSCR                   
                        82      LOAD_CONST                      5: 1
                        84      BINARY_SUBSCR                   
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      3: dest
                        90      LOAD_CONST                      0: None
                        92      RETURN_VALUE                    
                        94      LOAD_CONST                      0: None
                        96      RETURN_VALUE                    
                        98      LOAD_CONST                      0: None
                        100     RETURN_VALUE                    
                'Option._check_dest'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_const
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'action'
                        'CONST_ACTIONS'
                        'const'
                        'OptionError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        "'const' must not be supplied for action %r"
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: action
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: CONST_ACTIONS
                        8       CONTAINS_OP                     1 (not in)
                        10      POP_JUMP_IF_FALSE               19 (to 38)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: const
                        16      LOAD_CONST                      0: None
                        18      IS_OP                           1 (is not)
                        20      POP_JUMP_IF_FALSE               21 (to 42)
                        22      LOAD_GLOBAL                     3: OptionError
                        24      LOAD_CONST                      1: "'const' must not be supplied for action %r"
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       0: action
                        30      BINARY_MODULO                   
                        32      LOAD_FAST                       0: self
                        34      CALL_FUNCTION                   2
                        36      RAISE_VARARGS                   1
                        38      LOAD_CONST                      0: None
                        40      RETURN_VALUE                    
                        42      LOAD_CONST                      0: None
                        44      RETURN_VALUE                    
                'Option._check_const'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_nargs
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'action'
                        'TYPED_ACTIONS'
                        'nargs'
                        'OptionError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                        "'nargs' must not be supplied for action %r"
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: action
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: TYPED_ACTIONS
                        8       CONTAINS_OP                     0 (in)
                        10      POP_JUMP_IF_FALSE               18 (to 36)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: nargs
                        16      LOAD_CONST                      0: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               16 (to 32)
                        22      LOAD_CONST                      1: 1
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      2: nargs
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                        32      LOAD_CONST                      0: None
                        34      RETURN_VALUE                    
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: nargs
                        40      LOAD_CONST                      0: None
                        42      IS_OP                           1 (is not)
                        44      POP_JUMP_IF_FALSE               31 (to 62)
                        46      LOAD_GLOBAL                     3: OptionError
                        48      LOAD_CONST                      2: "'nargs' must not be supplied for action %r"
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       0: action
                        54      BINARY_MODULO                   
                        56      LOAD_FAST                       0: self
                        58      CALL_FUNCTION                   2
                        60      RAISE_VARARGS                   1
                        62      LOAD_CONST                      0: None
                        64      RETURN_VALUE                    
                'Option._check_nargs'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_callback
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'action'
                        'callable'
                        'callback'
                        'OptionError'
                        'callback_args'
                        'isinstance'
                        'tuple'
                        'callback_kwargs'
                        'dict'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'callback'
                        'callback not callable: %r'
                        'callback_args, if supplied, must be a tuple: not %r'
                        'callback_kwargs, if supplied, must be a dict: not %r'
                        'callback supplied (%r) for non-callback option'
                        'callback_args supplied for non-callback option'
                        'callback_kwargs supplied for non-callback option'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: action
                        4       LOAD_CONST                      1: 'callback'
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               60 (to 120)
                        10      LOAD_GLOBAL                     1: callable
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: callback
                        16      CALL_FUNCTION                   1
                        18      POP_JUMP_IF_TRUE                18 (to 36)
                        20      LOAD_GLOBAL                     3: OptionError
                        22      LOAD_CONST                      2: 'callback not callable: %r'
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       2: callback
                        28      BINARY_MODULO                   
                        30      LOAD_FAST                       0: self
                        32      CALL_FUNCTION                   2
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       4: callback_args
                        40      LOAD_CONST                      0: None
                        42      IS_OP                           1 (is not)
                        44      POP_JUMP_IF_FALSE               37 (to 74)
                        46      LOAD_GLOBAL                     5: isinstance
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       4: callback_args
                        52      LOAD_GLOBAL                     6: tuple
                        54      CALL_FUNCTION                   2
                        56      POP_JUMP_IF_TRUE                37 (to 74)
                        58      LOAD_GLOBAL                     3: OptionError
                        60      LOAD_CONST                      3: 'callback_args, if supplied, must be a tuple: not %r'
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       4: callback_args
                        66      BINARY_MODULO                   
                        68      LOAD_FAST                       0: self
                        70      CALL_FUNCTION                   2
                        72      RAISE_VARARGS                   1
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       7: callback_kwargs
                        78      LOAD_CONST                      0: None
                        80      IS_OP                           1 (is not)
                        82      POP_JUMP_IF_FALSE               56 (to 112)
                        84      LOAD_GLOBAL                     5: isinstance
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       7: callback_kwargs
                        90      LOAD_GLOBAL                     8: dict
                        92      CALL_FUNCTION                   2
                        94      POP_JUMP_IF_TRUE                58 (to 116)
                        96      LOAD_GLOBAL                     3: OptionError
                        98      LOAD_CONST                      4: 'callback_kwargs, if supplied, must be a dict: not %r'
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       7: callback_kwargs
                        104     BINARY_MODULO                   
                        106     LOAD_FAST                       0: self
                        108     CALL_FUNCTION                   2
                        110     RAISE_VARARGS                   1
                        112     LOAD_CONST                      0: None
                        114     RETURN_VALUE                    
                        116     LOAD_CONST                      0: None
                        118     RETURN_VALUE                    
                        120     LOAD_FAST                       0: self
                        122     LOAD_ATTR                       2: callback
                        124     LOAD_CONST                      0: None
                        126     IS_OP                           1 (is not)
                        128     POP_JUMP_IF_FALSE               73 (to 146)
                        130     LOAD_GLOBAL                     3: OptionError
                        132     LOAD_CONST                      5: 'callback supplied (%r) for non-callback option'
                        134     LOAD_FAST                       0: self
                        136     LOAD_ATTR                       2: callback
                        138     BINARY_MODULO                   
                        140     LOAD_FAST                       0: self
                        142     CALL_FUNCTION                   2
                        144     RAISE_VARARGS                   1
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       4: callback_args
                        150     LOAD_CONST                      0: None
                        152     IS_OP                           1 (is not)
                        154     POP_JUMP_IF_FALSE               83 (to 166)
                        156     LOAD_GLOBAL                     3: OptionError
                        158     LOAD_CONST                      6: 'callback_args supplied for non-callback option'
                        160     LOAD_FAST                       0: self
                        162     CALL_FUNCTION                   2
                        164     RAISE_VARARGS                   1
                        166     LOAD_FAST                       0: self
                        168     LOAD_ATTR                       7: callback_kwargs
                        170     LOAD_CONST                      0: None
                        172     IS_OP                           1 (is not)
                        174     POP_JUMP_IF_FALSE               93 (to 186)
                        176     LOAD_GLOBAL                     3: OptionError
                        178     LOAD_CONST                      7: 'callback_kwargs supplied for non-callback option'
                        180     LOAD_FAST                       0: self
                        182     CALL_FUNCTION                   2
                        184     RAISE_VARARGS                   1
                        186     LOAD_CONST                      0: None
                        188     RETURN_VALUE                    
                'Option._check_callback'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'join'
                        '_short_opts'
                        '_long_opts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '/'
                    [Disassembly]
                        0       LOAD_CONST                      1: '/'
                        2       LOAD_METHOD                     0: join
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _short_opts
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: _long_opts
                        12      BINARY_ADD                      
                        14      CALL_METHOD                     1
                        16      RETURN_VALUE                    
                'Option.__str__'
                [Code]
                    File Name: optparse.py
                    Object Name: takes_value
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           1 (is not)
                        8       RETURN_VALUE                    
                'Option.takes_value'
                [Code]
                    File Name: optparse.py
                    Object Name: get_opt_string
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_long_opts'
                        '_short_opts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _long_opts
                        4       POP_JUMP_IF_FALSE               8 (to 16)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: _long_opts
                        10      LOAD_CONST                      1: 0
                        12      BINARY_SUBSCR                   
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       1: _short_opts
                        20      LOAD_CONST                      1: 0
                        22      BINARY_SUBSCR                   
                        24      RETURN_VALUE                    
                'Option.get_opt_string'
                [Code]
                    File Name: optparse.py
                    Object Name: check_value
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'TYPE_CHECKER'
                        'get'
                        'type'
                    [Var Names]
                        'self'
                        'opt'
                        'value'
                        'checker'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: TYPE_CHECKER
                        4       LOAD_METHOD                     1: get
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: type
                        10      CALL_METHOD                     1
                        12      STORE_FAST                      3: checker
                        14      LOAD_FAST                       3: checker
                        16      LOAD_CONST                      0: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_FAST                       2: value
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       3: checker
                        28      LOAD_FAST                       0: self
                        30      LOAD_FAST                       1: opt
                        32      LOAD_FAST                       2: value
                        34      CALL_FUNCTION                   3
                        36      RETURN_VALUE                    
                'Option.check_value'
                [Code]
                    File Name: optparse.py
                    Object Name: convert_value
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'nargs'
                        'check_value'
                        'tuple'
                    [Var Names]
                        'self'
                        'opt'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                        'opt'
                        'self'
                    [Constants]
                        None
                        1
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 6
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'check_value'
                            [Var Names]
                                '.0'
                                'v'
                            [Free Vars]
                                'opt'
                                'self'
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        8 (to 22)
                                6       STORE_FAST                      1: v
                                8       LOAD_DEREF                      1: self
                                10      LOAD_METHOD                     0: check_value
                                12      LOAD_DEREF                      0: opt
                                14      LOAD_FAST                       1: v
                                16      CALL_METHOD                     2
                                18      LIST_APPEND                     2
                                20      JUMP_ABSOLUTE                   2 (to 4)
                                22      RETURN_VALUE                    
                        'Option.convert_value.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_FAST                       2: value
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_FALSE               27 (to 54)
                        8       LOAD_DEREF                      1: self
                        10      LOAD_ATTR                       0: nargs
                        12      LOAD_CONST                      1: 1
                        14      COMPARE_OP                      2 (==)
                        16      POP_JUMP_IF_FALSE               15 (to 30)
                        18      LOAD_DEREF                      1: self
                        20      LOAD_METHOD                     1: check_value
                        22      LOAD_DEREF                      0: opt
                        24      LOAD_FAST                       2: value
                        26      CALL_METHOD                     2
                        28      RETURN_VALUE                    
                        30      LOAD_GLOBAL                     2: tuple
                        32      LOAD_CLOSURE                    0: opt
                        34      LOAD_CLOSURE                    1: self
                        36      BUILD_TUPLE                     2
                        38      LOAD_CONST                      2: <CODE> <listcomp>
                        40      LOAD_CONST                      3: 'Option.convert_value.<locals>.<listcomp>'
                        42      MAKE_FUNCTION                   8
                        44      LOAD_FAST                       2: value
                        46      GET_ITER                        
                        48      CALL_FUNCTION                   1
                        50      CALL_FUNCTION                   1
                        52      RETURN_VALUE                    
                        54      LOAD_CONST                      0: None
                        56      RETURN_VALUE                    
                'Option.convert_value'
                [Code]
                    File Name: optparse.py
                    Object Name: process
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'convert_value'
                        'take_action'
                        'action'
                        'dest'
                    [Var Names]
                        'self'
                        'opt'
                        'value'
                        'values'
                        'parser'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: convert_value
                        4       LOAD_FAST                       1: opt
                        6       LOAD_FAST                       2: value
                        8       CALL_METHOD                     2
                        10      STORE_FAST                      2: value
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: take_action
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: action
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: dest
                        24      LOAD_FAST                       1: opt
                        26      LOAD_FAST                       2: value
                        28      LOAD_FAST                       3: values
                        30      LOAD_FAST                       4: parser
                        32      CALL_METHOD                     6
                        34      RETURN_VALUE                    
                'Option.process'
                [Code]
                    File Name: optparse.py
                    Object Name: take_action
                    Arg Count: 7
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'setattr'
                        'const'
                        'ensure_value'
                        'append'
                        'callback_args'
                        'callback_kwargs'
                        'callback'
                        'print_help'
                        'exit'
                        'print_version'
                        'ValueError'
                        'action'
                    [Var Names]
                        'self'
                        'action'
                        'dest'
                        'opt'
                        'value'
                        'values'
                        'parser'
                        'args'
                        'kwargs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'store'
                        'store_const'
                        'store_true'
                        True
                        'store_false'
                        False
                        'append'
                        'append_const'
                        'count'
                        0
                        1
                        'callback'
                        (
                        )
                        'help'
                        'version'
                        'unknown action %r'
                    [Disassembly]
                        0       LOAD_FAST                       1: action
                        2       LOAD_CONST                      1: 'store'
                        4       COMPARE_OP                      2 (==)
                        6       POP_JUMP_IF_FALSE               12 (to 24)
                        8       LOAD_GLOBAL                     0: setattr
                        10      LOAD_FAST                       5: values
                        12      LOAD_FAST                       2: dest
                        14      LOAD_FAST                       4: value
                        16      CALL_FUNCTION                   3
                        18      POP_TOP                         
                        20      LOAD_CONST                      11: 1
                        22      RETURN_VALUE                    
                        24      LOAD_FAST                       1: action
                        26      LOAD_CONST                      2: 'store_const'
                        28      COMPARE_OP                      2 (==)
                        30      POP_JUMP_IF_FALSE               25 (to 50)
                        32      LOAD_GLOBAL                     0: setattr
                        34      LOAD_FAST                       5: values
                        36      LOAD_FAST                       2: dest
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       1: const
                        42      CALL_FUNCTION                   3
                        44      POP_TOP                         
                        46      LOAD_CONST                      11: 1
                        48      RETURN_VALUE                    
                        50      LOAD_FAST                       1: action
                        52      LOAD_CONST                      3: 'store_true'
                        54      COMPARE_OP                      2 (==)
                        56      POP_JUMP_IF_FALSE               37 (to 74)
                        58      LOAD_GLOBAL                     0: setattr
                        60      LOAD_FAST                       5: values
                        62      LOAD_FAST                       2: dest
                        64      LOAD_CONST                      4: True
                        66      CALL_FUNCTION                   3
                        68      POP_TOP                         
                        70      LOAD_CONST                      11: 1
                        72      RETURN_VALUE                    
                        74      LOAD_FAST                       1: action
                        76      LOAD_CONST                      5: 'store_false'
                        78      COMPARE_OP                      2 (==)
                        80      POP_JUMP_IF_FALSE               49 (to 98)
                        82      LOAD_GLOBAL                     0: setattr
                        84      LOAD_FAST                       5: values
                        86      LOAD_FAST                       2: dest
                        88      LOAD_CONST                      6: False
                        90      CALL_FUNCTION                   3
                        92      POP_TOP                         
                        94      LOAD_CONST                      11: 1
                        96      RETURN_VALUE                    
                        98      LOAD_FAST                       1: action
                        100     LOAD_CONST                      7: 'append'
                        102     COMPARE_OP                      2 (==)
                        104     POP_JUMP_IF_FALSE               64 (to 128)
                        106     LOAD_FAST                       5: values
                        108     LOAD_METHOD                     2: ensure_value
                        110     LOAD_FAST                       2: dest
                        112     BUILD_LIST                      0
                        114     CALL_METHOD                     2
                        116     LOAD_METHOD                     3: append
                        118     LOAD_FAST                       4: value
                        120     CALL_METHOD                     1
                        122     POP_TOP                         
                        124     LOAD_CONST                      11: 1
                        126     RETURN_VALUE                    
                        128     LOAD_FAST                       1: action
                        130     LOAD_CONST                      8: 'append_const'
                        132     COMPARE_OP                      2 (==)
                        134     POP_JUMP_IF_FALSE               80 (to 160)
                        136     LOAD_FAST                       5: values
                        138     LOAD_METHOD                     2: ensure_value
                        140     LOAD_FAST                       2: dest
                        142     BUILD_LIST                      0
                        144     CALL_METHOD                     2
                        146     LOAD_METHOD                     3: append
                        148     LOAD_FAST                       0: self
                        150     LOAD_ATTR                       1: const
                        152     CALL_METHOD                     1
                        154     POP_TOP                         
                        156     LOAD_CONST                      11: 1
                        158     RETURN_VALUE                    
                        160     LOAD_FAST                       1: action
                        162     LOAD_CONST                      9: 'count'
                        164     COMPARE_OP                      2 (==)
                        166     POP_JUMP_IF_FALSE               98 (to 196)
                        168     LOAD_GLOBAL                     0: setattr
                        170     LOAD_FAST                       5: values
                        172     LOAD_FAST                       2: dest
                        174     LOAD_FAST                       5: values
                        176     LOAD_METHOD                     2: ensure_value
                        178     LOAD_FAST                       2: dest
                        180     LOAD_CONST                      10: 0
                        182     CALL_METHOD                     2
                        184     LOAD_CONST                      11: 1
                        186     BINARY_ADD                      
                        188     CALL_FUNCTION                   3
                        190     POP_TOP                         
                        192     LOAD_CONST                      11: 1
                        194     RETURN_VALUE                    
                        196     LOAD_FAST                       1: action
                        198     LOAD_CONST                      12: 'callback'
                        200     COMPARE_OP                      2 (==)
                        202     POP_JUMP_IF_FALSE               129 (to 258)
                        204     LOAD_FAST                       0: self
                        206     LOAD_ATTR                       4: callback_args
                        208     JUMP_IF_TRUE_OR_POP             106 (to 212)
                        210     LOAD_CONST                      13: ()
                        212     STORE_FAST                      7: args
                        214     LOAD_FAST                       0: self
                        216     LOAD_ATTR                       5: callback_kwargs
                        218     JUMP_IF_TRUE_OR_POP             111 (to 222)
                        220     BUILD_MAP                       0
                        222     STORE_FAST                      8: kwargs
                        224     LOAD_FAST                       0: self
                        226     LOAD_ATTR                       6: callback
                        228     LOAD_FAST                       0: self
                        230     LOAD_FAST                       3: opt
                        232     LOAD_FAST                       4: value
                        234     LOAD_FAST                       6: parser
                        236     BUILD_LIST                      4
                        238     LOAD_FAST                       7: args
                        240     LIST_EXTEND                     1
                        242     LIST_TO_TUPLE                   
                        244     BUILD_MAP                       0
                        246     LOAD_FAST                       8: kwargs
                        248     DICT_MERGE                      1
                        250     CALL_FUNCTION_EX                1
                        252     POP_TOP                         
                        254     LOAD_CONST                      11: 1
                        256     RETURN_VALUE                    
                        258     LOAD_FAST                       1: action
                        260     LOAD_CONST                      14: 'help'
                        262     COMPARE_OP                      2 (==)
                        264     POP_JUMP_IF_FALSE               143 (to 286)
                        266     LOAD_FAST                       6: parser
                        268     LOAD_METHOD                     7: print_help
                        270     CALL_METHOD                     0
                        272     POP_TOP                         
                        274     LOAD_FAST                       6: parser
                        276     LOAD_METHOD                     8: exit
                        278     CALL_METHOD                     0
                        280     POP_TOP                         
                        282     LOAD_CONST                      11: 1
                        284     RETURN_VALUE                    
                        286     LOAD_FAST                       1: action
                        288     LOAD_CONST                      15: 'version'
                        290     COMPARE_OP                      2 (==)
                        292     POP_JUMP_IF_FALSE               157 (to 314)
                        294     LOAD_FAST                       6: parser
                        296     LOAD_METHOD                     9: print_version
                        298     CALL_METHOD                     0
                        300     POP_TOP                         
                        302     LOAD_FAST                       6: parser
                        304     LOAD_METHOD                     8: exit
                        306     CALL_METHOD                     0
                        308     POP_TOP                         
                        310     LOAD_CONST                      11: 1
                        312     RETURN_VALUE                    
                        314     LOAD_GLOBAL                     10: ValueError
                        316     LOAD_CONST                      16: 'unknown action %r'
                        318     LOAD_FAST                       0: self
                        320     LOAD_ATTR                       11: action
                        322     BINARY_MODULO                   
                        324     CALL_FUNCTION                   1
                        326     RAISE_VARARGS                   1
                'Option.take_action'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Option'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Instance attributes:\n      _short_opts : [string]\n      _long_opts : [string]\n\n      action : string\n      type : string\n      dest : string\n      default : any\n      nargs : int\n      const : any\n      choices : [string]\n      callback : function\n      callback_args : (any*)\n      callback_kwargs : { string : any }\n      help : string\n      metavar : string\n    '
                10      STORE_NAME                      3: __doc__
                12      BUILD_LIST                      0
                14      LOAD_CONST                      2: ('action', 'type', 'dest', 'default', 'nargs', 'const', 'choices', 'callback', 'callback_args', 'callback_kwargs', 'help', 'metavar')
                16      LIST_EXTEND                     1
                18      STORE_NAME                      4: ATTRS
                20      LOAD_CONST                      3: ('store', 'store_const', 'store_true', 'store_false', 'append', 'append_const', 'count', 'callback', 'help', 'version')
                22      STORE_NAME                      5: ACTIONS
                24      LOAD_CONST                      4: ('store', 'store_const', 'store_true', 'store_false', 'append', 'append_const', 'count')
                26      STORE_NAME                      6: STORE_ACTIONS
                28      LOAD_CONST                      5: ('store', 'append', 'callback')
                30      STORE_NAME                      7: TYPED_ACTIONS
                32      LOAD_CONST                      6: ('store', 'append')
                34      STORE_NAME                      8: ALWAYS_TYPED_ACTIONS
                36      LOAD_CONST                      7: ('store_const', 'append_const')
                38      STORE_NAME                      9: CONST_ACTIONS
                40      LOAD_CONST                      8: ('string', 'int', 'long', 'float', 'complex', 'choice')
                42      STORE_NAME                      10: TYPES
                44      LOAD_NAME                       11: check_builtin
                46      LOAD_NAME                       11: check_builtin
                48      LOAD_NAME                       11: check_builtin
                50      LOAD_NAME                       11: check_builtin
                52      LOAD_NAME                       12: check_choice
                54      LOAD_CONST                      9: ('int', 'long', 'float', 'complex', 'choice')
                56      BUILD_CONST_KEY_MAP             5
                58      STORE_NAME                      13: TYPE_CHECKER
                60      LOAD_CONST                      10: None
                62      STORE_NAME                      14: CHECK_METHODS
                64      LOAD_CONST                      11: <CODE> __init__
                66      LOAD_CONST                      12: 'Option.__init__'
                68      MAKE_FUNCTION                   0
                70      STORE_NAME                      15: __init__
                72      LOAD_CONST                      13: <CODE> _check_opt_strings
                74      LOAD_CONST                      14: 'Option._check_opt_strings'
                76      MAKE_FUNCTION                   0
                78      STORE_NAME                      16: _check_opt_strings
                80      LOAD_CONST                      15: <CODE> _set_opt_strings
                82      LOAD_CONST                      16: 'Option._set_opt_strings'
                84      MAKE_FUNCTION                   0
                86      STORE_NAME                      17: _set_opt_strings
                88      LOAD_CONST                      17: <CODE> _set_attrs
                90      LOAD_CONST                      18: 'Option._set_attrs'
                92      MAKE_FUNCTION                   0
                94      STORE_NAME                      18: _set_attrs
                96      LOAD_CONST                      19: <CODE> _check_action
                98      LOAD_CONST                      20: 'Option._check_action'
                100     MAKE_FUNCTION                   0
                102     STORE_NAME                      19: _check_action
                104     LOAD_CONST                      21: <CODE> _check_type
                106     LOAD_CONST                      22: 'Option._check_type'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      20: _check_type
                112     LOAD_CONST                      23: <CODE> _check_choice
                114     LOAD_CONST                      24: 'Option._check_choice'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      21: _check_choice
                120     LOAD_CONST                      25: <CODE> _check_dest
                122     LOAD_CONST                      26: 'Option._check_dest'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      22: _check_dest
                128     LOAD_CONST                      27: <CODE> _check_const
                130     LOAD_CONST                      28: 'Option._check_const'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      23: _check_const
                136     LOAD_CONST                      29: <CODE> _check_nargs
                138     LOAD_CONST                      30: 'Option._check_nargs'
                140     MAKE_FUNCTION                   0
                142     STORE_NAME                      24: _check_nargs
                144     LOAD_CONST                      31: <CODE> _check_callback
                146     LOAD_CONST                      32: 'Option._check_callback'
                148     MAKE_FUNCTION                   0
                150     STORE_NAME                      25: _check_callback
                152     LOAD_NAME                       19: _check_action
                154     LOAD_NAME                       20: _check_type
                156     LOAD_NAME                       21: _check_choice
                158     LOAD_NAME                       22: _check_dest
                160     LOAD_NAME                       23: _check_const
                162     LOAD_NAME                       24: _check_nargs
                164     LOAD_NAME                       25: _check_callback
                166     BUILD_LIST                      7
                168     STORE_NAME                      14: CHECK_METHODS
                170     LOAD_CONST                      33: <CODE> __str__
                172     LOAD_CONST                      34: 'Option.__str__'
                174     MAKE_FUNCTION                   0
                176     STORE_NAME                      26: __str__
                178     LOAD_NAME                       27: _repr
                180     STORE_NAME                      28: __repr__
                182     LOAD_CONST                      35: <CODE> takes_value
                184     LOAD_CONST                      36: 'Option.takes_value'
                186     MAKE_FUNCTION                   0
                188     STORE_NAME                      29: takes_value
                190     LOAD_CONST                      37: <CODE> get_opt_string
                192     LOAD_CONST                      38: 'Option.get_opt_string'
                194     MAKE_FUNCTION                   0
                196     STORE_NAME                      30: get_opt_string
                198     LOAD_CONST                      39: <CODE> check_value
                200     LOAD_CONST                      40: 'Option.check_value'
                202     MAKE_FUNCTION                   0
                204     STORE_NAME                      31: check_value
                206     LOAD_CONST                      41: <CODE> convert_value
                208     LOAD_CONST                      42: 'Option.convert_value'
                210     MAKE_FUNCTION                   0
                212     STORE_NAME                      32: convert_value
                214     LOAD_CONST                      43: <CODE> process
                216     LOAD_CONST                      44: 'Option.process'
                218     MAKE_FUNCTION                   0
                220     STORE_NAME                      33: process
                222     LOAD_CONST                      45: <CODE> take_action
                224     LOAD_CONST                      46: 'Option.take_action'
                226     MAKE_FUNCTION                   0
                228     STORE_NAME                      34: take_action
                230     LOAD_CONST                      10: None
                232     RETURN_VALUE                    
        'Option'
        'SUPPRESSHELP'
        'SUPPRESSUSAGE'
        [Code]
            File Name: optparse.py
            Object Name: Values
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__str__'
                '_repr'
                '__repr__'
                '__eq__'
                '_update_careful'
                '_update_loose'
                '_update'
                'read_module'
                'read_file'
                'ensure_value'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Values'
                None
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'items'
                        'setattr'
                    [Var Names]
                        'self'
                        'defaults'
                        'attr'
                        'val'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: defaults
                        2       POP_JUMP_IF_FALSE               17 (to 34)
                        4       LOAD_FAST                       1: defaults
                        6       LOAD_METHOD                     0: items
                        8       CALL_METHOD                     0
                        10      GET_ITER                        
                        12      FOR_ITER                        12 (to 38)
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      2: attr
                        18      STORE_FAST                      3: val
                        20      LOAD_GLOBAL                     1: setattr
                        22      LOAD_FAST                       0: self
                        24      LOAD_FAST                       2: attr
                        26      LOAD_FAST                       3: val
                        28      CALL_FUNCTION                   3
                        30      POP_TOP                         
                        32      JUMP_ABSOLUTE                   6 (to 12)
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                        38      LOAD_CONST                      0: None
                        40      RETURN_VALUE                    
                'Values.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'str'
                        '__dict__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: str
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: __dict__
                        6       CALL_FUNCTION                   1
                        8       RETURN_VALUE                    
                'Values.__str__'
                [Code]
                    File Name: optparse.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'Values'
                        '__dict__'
                        'dict'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: Values
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: __dict__
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: __dict__
                        18      COMPARE_OP                      2 (==)
                        20      RETURN_VALUE                    
                        22      LOAD_GLOBAL                     0: isinstance
                        24      LOAD_FAST                       1: other
                        26      LOAD_GLOBAL                     3: dict
                        28      CALL_FUNCTION                   2
                        30      POP_JUMP_IF_FALSE               21 (to 42)
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       2: __dict__
                        36      LOAD_FAST                       1: other
                        38      COMPARE_OP                      2 (==)
                        40      RETURN_VALUE                    
                        42      LOAD_GLOBAL                     4: NotImplemented
                        44      RETURN_VALUE                    
                'Values.__eq__'
                [Code]
                    File Name: optparse.py
                    Object Name: _update_careful
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'dir'
                        'setattr'
                    [Var Names]
                        'self'
                        'dict'
                        'attr'
                        'dval'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Update the option values from an arbitrary dictionary, but only\n        use keys from dict that already have a corresponding attribute\n        in self.  Any keys in dict without a corresponding attribute\n        are silently ignored.\n        '
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: dir
                        2       LOAD_FAST                       0: self
                        4       CALL_FUNCTION                   1
                        6       GET_ITER                        
                        8       FOR_ITER                        20 (to 50)
                        10      STORE_FAST                      2: attr
                        12      LOAD_FAST                       2: attr
                        14      LOAD_FAST                       1: dict
                        16      CONTAINS_OP                     0 (in)
                        18      POP_JUMP_IF_FALSE               24 (to 48)
                        20      LOAD_FAST                       1: dict
                        22      LOAD_FAST                       2: attr
                        24      BINARY_SUBSCR                   
                        26      STORE_FAST                      3: dval
                        28      LOAD_FAST                       3: dval
                        30      LOAD_CONST                      1: None
                        32      IS_OP                           1 (is not)
                        34      POP_JUMP_IF_FALSE               24 (to 48)
                        36      LOAD_GLOBAL                     1: setattr
                        38      LOAD_FAST                       0: self
                        40      LOAD_FAST                       2: attr
                        42      LOAD_FAST                       3: dval
                        44      CALL_FUNCTION                   3
                        46      POP_TOP                         
                        48      JUMP_ABSOLUTE                   4 (to 8)
                        50      LOAD_CONST                      1: None
                        52      RETURN_VALUE                    
                'Values._update_careful'
                [Code]
                    File Name: optparse.py
                    Object Name: _update_loose
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__dict__'
                        'update'
                    [Var Names]
                        'self'
                        'dict'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Update the option values from an arbitrary dictionary,\n        using all keys from the dictionary regardless of whether\n        they have a corresponding attribute in self or not.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __dict__
                        4       LOAD_METHOD                     1: update
                        6       LOAD_FAST                       1: dict
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                'Values._update_loose'
                [Code]
                    File Name: optparse.py
                    Object Name: _update
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_update_careful'
                        '_update_loose'
                        'ValueError'
                    [Var Names]
                        'self'
                        'dict'
                        'mode'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'careful'
                        'loose'
                        'invalid update mode: %r'
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: 'careful'
                        4       COMPARE_OP                      2 (==)
                        6       POP_JUMP_IF_FALSE               11 (to 22)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: _update_careful
                        12      LOAD_FAST                       1: dict
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       2: mode
                        24      LOAD_CONST                      2: 'loose'
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               22 (to 44)
                        30      LOAD_FAST                       0: self
                        32      LOAD_METHOD                     1: _update_loose
                        34      LOAD_FAST                       1: dict
                        36      CALL_METHOD                     1
                        38      POP_TOP                         
                        40      LOAD_CONST                      0: None
                        42      RETURN_VALUE                    
                        44      LOAD_GLOBAL                     2: ValueError
                        46      LOAD_CONST                      3: 'invalid update mode: %r'
                        48      LOAD_FAST                       2: mode
                        50      BINARY_MODULO                   
                        52      CALL_FUNCTION                   1
                        54      RAISE_VARARGS                   1
                'Values._update'
                'careful'
                [Code]
                    File Name: optparse.py
                    Object Name: read_module
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__import__'
                        'sys'
                        'modules'
                        '_update'
                        'vars'
                    [Var Names]
                        'self'
                        'modname'
                        'mode'
                        'mod'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: __import__
                        2       LOAD_FAST                       1: modname
                        4       CALL_FUNCTION                   1
                        6       POP_TOP                         
                        8       LOAD_GLOBAL                     1: sys
                        10      LOAD_ATTR                       2: modules
                        12      LOAD_FAST                       1: modname
                        14      BINARY_SUBSCR                   
                        16      STORE_FAST                      3: mod
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     3: _update
                        22      LOAD_GLOBAL                     4: vars
                        24      LOAD_FAST                       3: mod
                        26      CALL_FUNCTION                   1
                        28      LOAD_FAST                       2: mode
                        30      CALL_METHOD                     2
                        32      POP_TOP                         
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'Values.read_module'
                [Code]
                    File Name: optparse.py
                    Object Name: read_file
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'exec'
                        'open'
                        'read'
                        '_update'
                    [Var Names]
                        'self'
                        'filename'
                        'mode'
                        'vars'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_MAP                       0
                        2       STORE_FAST                      3: vars
                        4       LOAD_GLOBAL                     0: exec
                        6       LOAD_GLOBAL                     1: open
                        8       LOAD_FAST                       1: filename
                        10      CALL_FUNCTION                   1
                        12      LOAD_METHOD                     2: read
                        14      CALL_METHOD                     0
                        16      LOAD_FAST                       3: vars
                        18      CALL_FUNCTION                   2
                        20      POP_TOP                         
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     3: _update
                        26      LOAD_FAST                       3: vars
                        28      LOAD_FAST                       2: mode
                        30      CALL_METHOD                     2
                        32      POP_TOP                         
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'Values.read_file'
                [Code]
                    File Name: optparse.py
                    Object Name: ensure_value
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'getattr'
                        'setattr'
                    [Var Names]
                        'self'
                        'attr'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_FAST                       0: self
                        4       LOAD_FAST                       1: attr
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_GLOBAL                     1: getattr
                        12      LOAD_FAST                       0: self
                        14      LOAD_FAST                       1: attr
                        16      CALL_FUNCTION                   2
                        18      LOAD_CONST                      0: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               18 (to 36)
                        24      LOAD_GLOBAL                     2: setattr
                        26      LOAD_FAST                       0: self
                        28      LOAD_FAST                       1: attr
                        30      LOAD_FAST                       2: value
                        32      CALL_FUNCTION                   3
                        34      POP_TOP                         
                        36      LOAD_GLOBAL                     1: getattr
                        38      LOAD_FAST                       0: self
                        40      LOAD_FAST                       1: attr
                        42      CALL_FUNCTION                   2
                        44      RETURN_VALUE                    
                'Values.ensure_value'
                (
                    None
                )
                (
                    'careful'
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Values'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      21: (None,)
                10      LOAD_CONST                      2: <CODE> __init__
                12      LOAD_CONST                      3: 'Values.__init__'
                14      MAKE_FUNCTION                   1
                16      STORE_NAME                      3: __init__
                18      LOAD_CONST                      4: <CODE> __str__
                20      LOAD_CONST                      5: 'Values.__str__'
                22      MAKE_FUNCTION                   0
                24      STORE_NAME                      4: __str__
                26      LOAD_NAME                       5: _repr
                28      STORE_NAME                      6: __repr__
                30      LOAD_CONST                      6: <CODE> __eq__
                32      LOAD_CONST                      7: 'Values.__eq__'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      7: __eq__
                38      LOAD_CONST                      8: <CODE> _update_careful
                40      LOAD_CONST                      9: 'Values._update_careful'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      8: _update_careful
                46      LOAD_CONST                      10: <CODE> _update_loose
                48      LOAD_CONST                      11: 'Values._update_loose'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      9: _update_loose
                54      LOAD_CONST                      12: <CODE> _update
                56      LOAD_CONST                      13: 'Values._update'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      10: _update
                62      LOAD_CONST                      22: ('careful',)
                64      LOAD_CONST                      15: <CODE> read_module
                66      LOAD_CONST                      16: 'Values.read_module'
                68      MAKE_FUNCTION                   1
                70      STORE_NAME                      11: read_module
                72      LOAD_CONST                      22: ('careful',)
                74      LOAD_CONST                      17: <CODE> read_file
                76      LOAD_CONST                      18: 'Values.read_file'
                78      MAKE_FUNCTION                   1
                80      STORE_NAME                      12: read_file
                82      LOAD_CONST                      19: <CODE> ensure_value
                84      LOAD_CONST                      20: 'Values.ensure_value'
                86      MAKE_FUNCTION                   0
                88      STORE_NAME                      13: ensure_value
                90      LOAD_CONST                      1: None
                92      RETURN_VALUE                    
        'Values'
        [Code]
            File Name: optparse.py
            Object Name: OptionContainer
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '_create_option_mappings'
                '_share_option_mappings'
                'set_conflict_handler'
                'set_description'
                'get_description'
                'destroy'
                '_check_conflict'
                'add_option'
                'add_options'
                'get_option'
                'has_option'
                'remove_option'
                'format_option_help'
                'format_description'
                'format_help'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionContainer'
                '\n    Abstract base class.\n\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      option_list : [Option]\n        the list of Option objects contained by this OptionContainer\n      _short_opt : { string : Option }\n        dictionary mapping short option strings, eg. "-f" or "-X",\n        to the Option instances that implement them.  If an Option\n        has multiple short option strings, it will appear in this\n        dictionary multiple times. [1]\n      _long_opt : { string : Option }\n        dictionary mapping long option strings, eg. "--file" or\n        "--exclude", to the Option instances that implement them.\n        Again, a given Option can occur multiple times in this\n        dictionary. [1]\n      defaults : { string : any }\n        dictionary mapping option destination names to default\n        values for each destination [1]\n\n    [1] These mappings are common to (shared by) all components of the\n        controlling OptionParser, where they are initially created.\n\n    '
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_create_option_list'
                        'option_class'
                        'set_conflict_handler'
                        'set_description'
                    [Var Names]
                        'self'
                        'option_class'
                        'conflict_handler'
                        'description'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _create_option_list
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       1: option_class
                        10      LOAD_FAST                       0: self
                        12      STORE_ATTR                      1: option_class
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: set_conflict_handler
                        18      LOAD_FAST                       2: conflict_handler
                        20      CALL_METHOD                     1
                        22      POP_TOP                         
                        24      LOAD_FAST                       0: self
                        26      LOAD_METHOD                     3: set_description
                        28      LOAD_FAST                       3: description
                        30      CALL_METHOD                     1
                        32      POP_TOP                         
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'OptionContainer.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: _create_option_mappings
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        '_long_opt'
                        'defaults'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_MAP                       0
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _short_opt
                        6       BUILD_MAP                       0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _long_opt
                        12      BUILD_MAP                       0
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: defaults
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'OptionContainer._create_option_mappings'
                [Code]
                    File Name: optparse.py
                    Object Name: _share_option_mappings
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        '_long_opt'
                        'defaults'
                    [Var Names]
                        'self'
                        'parser'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: parser
                        2       LOAD_ATTR                       0: _short_opt
                        4       LOAD_FAST                       0: self
                        6       STORE_ATTR                      0: _short_opt
                        8       LOAD_FAST                       1: parser
                        10      LOAD_ATTR                       1: _long_opt
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      1: _long_opt
                        16      LOAD_FAST                       1: parser
                        18      LOAD_ATTR                       2: defaults
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      2: defaults
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'OptionContainer._share_option_mappings'
                [Code]
                    File Name: optparse.py
                    Object Name: set_conflict_handler
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        'conflict_handler'
                    [Var Names]
                        'self'
                        'handler'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'error'
                            'resolve'
                        )
                        'invalid conflict_resolution value %r'
                    [Disassembly]
                        0       LOAD_FAST                       1: handler
                        2       LOAD_CONST                      1: ('error', 'resolve')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: 'invalid conflict_resolution value %r'
                        12      LOAD_FAST                       1: handler
                        14      BINARY_MODULO                   
                        16      CALL_FUNCTION                   1
                        18      RAISE_VARARGS                   1
                        20      LOAD_FAST                       1: handler
                        22      LOAD_FAST                       0: self
                        24      STORE_ATTR                      1: conflict_handler
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'OptionContainer.set_conflict_handler'
                [Code]
                    File Name: optparse.py
                    Object Name: set_description
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'description'
                    [Var Names]
                        'self'
                        'description'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: description
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: description
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'OptionContainer.set_description'
                [Code]
                    File Name: optparse.py
                    Object Name: get_description
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'description'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: description
                        4       RETURN_VALUE                    
                'OptionContainer.get_description'
                [Code]
                    File Name: optparse.py
                    Object Name: destroy
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        '_long_opt'
                        'defaults'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'see OptionParser.destroy().'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       DELETE_ATTR                     0: _short_opt
                        4       LOAD_FAST                       0: self
                        6       DELETE_ATTR                     1: _long_opt
                        8       LOAD_FAST                       0: self
                        10      DELETE_ATTR                     2: defaults
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                'OptionContainer.destroy'
                [Code]
                    File Name: optparse.py
                    Object Name: _check_conflict
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opts'
                        '_short_opt'
                        'append'
                        '_long_opts'
                        '_long_opt'
                        'conflict_handler'
                        'OptionConflictError'
                        'join'
                        'startswith'
                        'remove'
                        'container'
                        'option_list'
                    [Var Names]
                        'self'
                        'option'
                        'conflict_opts'
                        'opt'
                        'handler'
                        'c_option'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'error'
                        'conflicting option string(s): %s'
                        ', '
                        [Code]
                            File Name: optparse.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                            [Var Names]
                                '.0'
                                'co'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                0
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       STORE_FAST                      1: co
                                8       LOAD_FAST                       1: co
                                10      LOAD_CONST                      0: 0
                                12      BINARY_SUBSCR                   
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        'OptionContainer._check_conflict.<locals>.<listcomp>'
                        'resolve'
                        '--'
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: conflict_opts
                        4       LOAD_FAST                       1: option
                        6       LOAD_ATTR                       0: _short_opts
                        8       GET_ITER                        
                        10      FOR_ITER                        17 (to 46)
                        12      STORE_FAST                      3: opt
                        14      LOAD_FAST                       3: opt
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       1: _short_opt
                        20      CONTAINS_OP                     0 (in)
                        22      POP_JUMP_IF_FALSE               22 (to 44)
                        24      LOAD_FAST                       2: conflict_opts
                        26      LOAD_METHOD                     2: append
                        28      LOAD_FAST                       3: opt
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       1: _short_opt
                        34      LOAD_FAST                       3: opt
                        36      BINARY_SUBSCR                   
                        38      BUILD_TUPLE                     2
                        40      CALL_METHOD                     1
                        42      POP_TOP                         
                        44      JUMP_ABSOLUTE                   5 (to 10)
                        46      LOAD_FAST                       1: option
                        48      LOAD_ATTR                       3: _long_opts
                        50      GET_ITER                        
                        52      FOR_ITER                        17 (to 88)
                        54      STORE_FAST                      3: opt
                        56      LOAD_FAST                       3: opt
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       4: _long_opt
                        62      CONTAINS_OP                     0 (in)
                        64      POP_JUMP_IF_FALSE               43 (to 86)
                        66      LOAD_FAST                       2: conflict_opts
                        68      LOAD_METHOD                     2: append
                        70      LOAD_FAST                       3: opt
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       4: _long_opt
                        76      LOAD_FAST                       3: opt
                        78      BINARY_SUBSCR                   
                        80      BUILD_TUPLE                     2
                        82      CALL_METHOD                     1
                        84      POP_TOP                         
                        86      JUMP_ABSOLUTE                   26 (to 52)
                        88      LOAD_FAST                       2: conflict_opts
                        90      POP_JUMP_IF_FALSE               118 (to 236)
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       5: conflict_handler
                        96      STORE_FAST                      4: handler
                        98      LOAD_FAST                       4: handler
                        100     LOAD_CONST                      1: 'error'
                        102     COMPARE_OP                      2 (==)
                        104     POP_JUMP_IF_FALSE               68 (to 136)
                        106     LOAD_GLOBAL                     6: OptionConflictError
                        108     LOAD_CONST                      2: 'conflicting option string(s): %s'
                        110     LOAD_CONST                      3: ', '
                        112     LOAD_METHOD                     7: join
                        114     LOAD_CONST                      4: <CODE> <listcomp>
                        116     LOAD_CONST                      5: 'OptionContainer._check_conflict.<locals>.<listcomp>'
                        118     MAKE_FUNCTION                   0
                        120     LOAD_FAST                       2: conflict_opts
                        122     GET_ITER                        
                        124     CALL_FUNCTION                   1
                        126     CALL_METHOD                     1
                        128     BINARY_MODULO                   
                        130     LOAD_FAST                       1: option
                        132     CALL_FUNCTION                   2
                        134     RAISE_VARARGS                   1
                        136     LOAD_FAST                       4: handler
                        138     LOAD_CONST                      6: 'resolve'
                        140     COMPARE_OP                      2 (==)
                        142     POP_JUMP_IF_FALSE               120 (to 240)
                        144     LOAD_FAST                       2: conflict_opts
                        146     GET_ITER                        
                        148     FOR_ITER                        47 (to 244)
                        150     UNPACK_SEQUENCE                 2
                        152     STORE_FAST                      3: opt
                        154     STORE_FAST                      5: c_option
                        156     LOAD_FAST                       3: opt
                        158     LOAD_METHOD                     8: startswith
                        160     LOAD_CONST                      7: '--'
                        162     CALL_METHOD                     1
                        164     POP_JUMP_IF_FALSE               94 (to 188)
                        166     LOAD_FAST                       5: c_option
                        168     LOAD_ATTR                       3: _long_opts
                        170     LOAD_METHOD                     9: remove
                        172     LOAD_FAST                       3: opt
                        174     CALL_METHOD                     1
                        176     POP_TOP                         
                        178     LOAD_FAST                       0: self
                        180     LOAD_ATTR                       4: _long_opt
                        182     LOAD_FAST                       3: opt
                        184     DELETE_SUBSCR                   
                        186     JUMP_FORWARD                    10 (to 208)
                        188     LOAD_FAST                       5: c_option
                        190     LOAD_ATTR                       0: _short_opts
                        192     LOAD_METHOD                     9: remove
                        194     LOAD_FAST                       3: opt
                        196     CALL_METHOD                     1
                        198     POP_TOP                         
                        200     LOAD_FAST                       0: self
                        202     LOAD_ATTR                       1: _short_opt
                        204     LOAD_FAST                       3: opt
                        206     DELETE_SUBSCR                   
                        208     LOAD_FAST                       5: c_option
                        210     LOAD_ATTR                       0: _short_opts
                        212     POP_JUMP_IF_TRUE                117 (to 234)
                        214     LOAD_FAST                       5: c_option
                        216     LOAD_ATTR                       3: _long_opts
                        218     POP_JUMP_IF_TRUE                117 (to 234)
                        220     LOAD_FAST                       5: c_option
                        222     LOAD_ATTR                       10: container
                        224     LOAD_ATTR                       11: option_list
                        226     LOAD_METHOD                     9: remove
                        228     LOAD_FAST                       5: c_option
                        230     CALL_METHOD                     1
                        232     POP_TOP                         
                        234     JUMP_ABSOLUTE                   74 (to 148)
                        236     LOAD_CONST                      0: None
                        238     RETURN_VALUE                    
                        240     LOAD_CONST                      0: None
                        242     RETURN_VALUE                    
                        244     LOAD_CONST                      0: None
                        246     RETURN_VALUE                    
                'OptionContainer._check_conflict'
                [Code]
                    File Name: optparse.py
                    Object Name: add_option
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'option_class'
                        'len'
                        'Option'
                        'TypeError'
                        '_check_conflict'
                        'option_list'
                        'append'
                        'container'
                        '_short_opts'
                        '_short_opt'
                        '_long_opts'
                        '_long_opt'
                        'dest'
                        'default'
                        'NO_DEFAULT'
                        'defaults'
                    [Var Names]
                        'self'
                        'args'
                        'kwargs'
                        'option'
                        'opt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'add_option(Option)\n           add_option(opt_str, ..., kwarg=val, ...)\n        '
                        0
                        1
                        'not an Option instance: %r'
                        'invalid arguments'
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: args
                        4       LOAD_CONST                      1: 0
                        6       BINARY_SUBSCR                   
                        8       LOAD_GLOBAL                     1: str
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_FALSE               16 (to 32)
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: option_class
                        18      LOAD_FAST                       1: args
                        20      BUILD_MAP                       0
                        22      LOAD_FAST                       2: kwargs
                        24      DICT_MERGE                      1
                        26      CALL_FUNCTION_EX                1
                        28      STORE_FAST                      3: option
                        30      JUMP_FORWARD                    28 (to 88)
                        32      LOAD_GLOBAL                     3: len
                        34      LOAD_FAST                       1: args
                        36      CALL_FUNCTION                   1
                        38      LOAD_CONST                      2: 1
                        40      COMPARE_OP                      2 (==)
                        42      POP_JUMP_IF_FALSE               40 (to 80)
                        44      LOAD_FAST                       2: kwargs
                        46      POP_JUMP_IF_TRUE                40 (to 80)
                        48      LOAD_FAST                       1: args
                        50      LOAD_CONST                      1: 0
                        52      BINARY_SUBSCR                   
                        54      STORE_FAST                      3: option
                        56      LOAD_GLOBAL                     0: isinstance
                        58      LOAD_FAST                       3: option
                        60      LOAD_GLOBAL                     4: Option
                        62      CALL_FUNCTION                   2
                        64      POP_JUMP_IF_TRUE                39 (to 78)
                        66      LOAD_GLOBAL                     5: TypeError
                        68      LOAD_CONST                      3: 'not an Option instance: %r'
                        70      LOAD_FAST                       3: option
                        72      BINARY_MODULO                   
                        74      CALL_FUNCTION                   1
                        76      RAISE_VARARGS                   1
                        78      JUMP_FORWARD                    4 (to 88)
                        80      LOAD_GLOBAL                     5: TypeError
                        82      LOAD_CONST                      4: 'invalid arguments'
                        84      CALL_FUNCTION                   1
                        86      RAISE_VARARGS                   1
                        88      LOAD_FAST                       0: self
                        90      LOAD_METHOD                     6: _check_conflict
                        92      LOAD_FAST                       3: option
                        94      CALL_METHOD                     1
                        96      POP_TOP                         
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       7: option_list
                        102     LOAD_METHOD                     8: append
                        104     LOAD_FAST                       3: option
                        106     CALL_METHOD                     1
                        108     POP_TOP                         
                        110     LOAD_FAST                       0: self
                        112     LOAD_FAST                       3: option
                        114     STORE_ATTR                      9: container
                        116     LOAD_FAST                       3: option
                        118     LOAD_ATTR                       10: _short_opts
                        120     GET_ITER                        
                        122     FOR_ITER                        7 (to 138)
                        124     STORE_FAST                      4: opt
                        126     LOAD_FAST                       3: option
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       11: _short_opt
                        132     LOAD_FAST                       4: opt
                        134     STORE_SUBSCR                    
                        136     JUMP_ABSOLUTE                   61 (to 122)
                        138     LOAD_FAST                       3: option
                        140     LOAD_ATTR                       12: _long_opts
                        142     GET_ITER                        
                        144     FOR_ITER                        7 (to 160)
                        146     STORE_FAST                      4: opt
                        148     LOAD_FAST                       3: option
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       13: _long_opt
                        154     LOAD_FAST                       4: opt
                        156     STORE_SUBSCR                    
                        158     JUMP_ABSOLUTE                   72 (to 144)
                        160     LOAD_FAST                       3: option
                        162     LOAD_ATTR                       14: dest
                        164     LOAD_CONST                      5: None
                        166     IS_OP                           1 (is not)
                        168     POP_JUMP_IF_FALSE               111 (to 222)
                        170     LOAD_FAST                       3: option
                        172     LOAD_ATTR                       15: default
                        174     LOAD_GLOBAL                     16: NO_DEFAULT
                        176     IS_OP                           1 (is not)
                        178     POP_JUMP_IF_FALSE               99 (to 198)
                        180     LOAD_FAST                       3: option
                        182     LOAD_ATTR                       15: default
                        184     LOAD_FAST                       0: self
                        186     LOAD_ATTR                       17: defaults
                        188     LOAD_FAST                       3: option
                        190     LOAD_ATTR                       14: dest
                        192     STORE_SUBSCR                    
                        194     LOAD_FAST                       3: option
                        196     RETURN_VALUE                    
                        198     LOAD_FAST                       3: option
                        200     LOAD_ATTR                       14: dest
                        202     LOAD_FAST                       0: self
                        204     LOAD_ATTR                       17: defaults
                        206     CONTAINS_OP                     1 (not in)
                        208     POP_JUMP_IF_FALSE               111 (to 222)
                        210     LOAD_CONST                      5: None
                        212     LOAD_FAST                       0: self
                        214     LOAD_ATTR                       17: defaults
                        216     LOAD_FAST                       3: option
                        218     LOAD_ATTR                       14: dest
                        220     STORE_SUBSCR                    
                        222     LOAD_FAST                       3: option
                        224     RETURN_VALUE                    
                'OptionContainer.add_option'
                [Code]
                    File Name: optparse.py
                    Object Name: add_options
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'add_option'
                    [Var Names]
                        'self'
                        'option_list'
                        'option'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: option_list
                        2       GET_ITER                        
                        4       FOR_ITER                        7 (to 20)
                        6       STORE_FAST                      2: option
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: add_option
                        12      LOAD_FAST                       2: option
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      JUMP_ABSOLUTE                   2 (to 4)
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                'OptionContainer.add_options'
                [Code]
                    File Name: optparse.py
                    Object Name: get_option
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        'get'
                        '_long_opt'
                    [Var Names]
                        'self'
                        'opt_str'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _short_opt
                        4       LOAD_METHOD                     1: get
                        6       LOAD_FAST                       1: opt_str
                        8       CALL_METHOD                     1
                        10      JUMP_IF_TRUE_OR_POP             11 (to 22)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _long_opt
                        16      LOAD_METHOD                     1: get
                        18      LOAD_FAST                       1: opt_str
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                'OptionContainer.get_option'
                [Code]
                    File Name: optparse.py
                    Object Name: has_option
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        '_long_opt'
                    [Var Names]
                        'self'
                        'opt_str'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: opt_str
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _short_opt
                        6       CONTAINS_OP                     0 (in)
                        8       JUMP_IF_TRUE_OR_POP             9 (to 18)
                        10      LOAD_FAST                       1: opt_str
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _long_opt
                        16      CONTAINS_OP                     0 (in)
                        18      RETURN_VALUE                    
                'OptionContainer.has_option'
                [Code]
                    File Name: optparse.py
                    Object Name: remove_option
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        'get'
                        '_long_opt'
                        'ValueError'
                        '_short_opts'
                        '_long_opts'
                        'container'
                        'option_list'
                        'remove'
                    [Var Names]
                        'self'
                        'opt_str'
                        'option'
                        'opt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'no such option %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _short_opt
                        4       LOAD_METHOD                     1: get
                        6       LOAD_FAST                       1: opt_str
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      2: option
                        12      LOAD_FAST                       2: option
                        14      LOAD_CONST                      0: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               16 (to 32)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: _long_opt
                        24      LOAD_METHOD                     1: get
                        26      LOAD_FAST                       1: opt_str
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      2: option
                        32      LOAD_FAST                       2: option
                        34      LOAD_CONST                      0: None
                        36      IS_OP                           0 (is)
                        38      POP_JUMP_IF_FALSE               26 (to 52)
                        40      LOAD_GLOBAL                     3: ValueError
                        42      LOAD_CONST                      1: 'no such option %r'
                        44      LOAD_FAST                       1: opt_str
                        46      BINARY_MODULO                   
                        48      CALL_FUNCTION                   1
                        50      RAISE_VARARGS                   1
                        52      LOAD_FAST                       2: option
                        54      LOAD_ATTR                       4: _short_opts
                        56      GET_ITER                        
                        58      FOR_ITER                        6 (to 72)
                        60      STORE_FAST                      3: opt
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       0: _short_opt
                        66      LOAD_FAST                       3: opt
                        68      DELETE_SUBSCR                   
                        70      JUMP_ABSOLUTE                   29 (to 58)
                        72      LOAD_FAST                       2: option
                        74      LOAD_ATTR                       5: _long_opts
                        76      GET_ITER                        
                        78      FOR_ITER                        6 (to 92)
                        80      STORE_FAST                      3: opt
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       2: _long_opt
                        86      LOAD_FAST                       3: opt
                        88      DELETE_SUBSCR                   
                        90      JUMP_ABSOLUTE                   39 (to 78)
                        92      LOAD_FAST                       2: option
                        94      LOAD_ATTR                       6: container
                        96      LOAD_ATTR                       7: option_list
                        98      LOAD_METHOD                     8: remove
                        100     LOAD_FAST                       2: option
                        102     CALL_METHOD                     1
                        104     POP_TOP                         
                        106     LOAD_CONST                      0: None
                        108     RETURN_VALUE                    
                'OptionContainer.remove_option'
                [Code]
                    File Name: optparse.py
                    Object Name: format_option_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'option_list'
                        'help'
                        'SUPPRESS_HELP'
                        'append'
                        'format_option'
                        'join'
                    [Var Names]
                        'self'
                        'formatter'
                        'result'
                        'option'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: option_list
                        4       POP_JUMP_IF_TRUE                5 (to 10)
                        6       LOAD_CONST                      1: ''
                        8       RETURN_VALUE                    
                        10      BUILD_LIST                      0
                        12      STORE_FAST                      2: result
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: option_list
                        18      GET_ITER                        
                        20      FOR_ITER                        15 (to 52)
                        22      STORE_FAST                      3: option
                        24      LOAD_FAST                       3: option
                        26      LOAD_ATTR                       1: help
                        28      LOAD_GLOBAL                     2: SUPPRESS_HELP
                        30      IS_OP                           1 (is not)
                        32      POP_JUMP_IF_FALSE               25 (to 50)
                        34      LOAD_FAST                       2: result
                        36      LOAD_METHOD                     3: append
                        38      LOAD_FAST                       1: formatter
                        40      LOAD_METHOD                     4: format_option
                        42      LOAD_FAST                       3: option
                        44      CALL_METHOD                     1
                        46      CALL_METHOD                     1
                        48      POP_TOP                         
                        50      JUMP_ABSOLUTE                   10 (to 20)
                        52      LOAD_CONST                      1: ''
                        54      LOAD_METHOD                     5: join
                        56      LOAD_FAST                       2: result
                        58      CALL_METHOD                     1
                        60      RETURN_VALUE                    
                'OptionContainer.format_option_help'
                [Code]
                    File Name: optparse.py
                    Object Name: format_description
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format_description'
                        'get_description'
                    [Var Names]
                        'self'
                        'formatter'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: formatter
                        2       LOAD_METHOD                     0: format_description
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: get_description
                        8       CALL_METHOD                     0
                        10      CALL_METHOD                     1
                        12      RETURN_VALUE                    
                'OptionContainer.format_description'
                [Code]
                    File Name: optparse.py
                    Object Name: format_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'description'
                        'append'
                        'format_description'
                        'option_list'
                        'format_option_help'
                        'join'
                    [Var Names]
                        'self'
                        'formatter'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '\n'
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: result
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       0: description
                        8       POP_JUMP_IF_FALSE               13 (to 26)
                        10      LOAD_FAST                       2: result
                        12      LOAD_METHOD                     1: append
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: format_description
                        18      LOAD_FAST                       1: formatter
                        20      CALL_METHOD                     1
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       3: option_list
                        30      POP_JUMP_IF_FALSE               24 (to 48)
                        32      LOAD_FAST                       2: result
                        34      LOAD_METHOD                     1: append
                        36      LOAD_FAST                       0: self
                        38      LOAD_METHOD                     4: format_option_help
                        40      LOAD_FAST                       1: formatter
                        42      CALL_METHOD                     1
                        44      CALL_METHOD                     1
                        46      POP_TOP                         
                        48      LOAD_CONST                      1: '\n'
                        50      LOAD_METHOD                     5: join
                        52      LOAD_FAST                       2: result
                        54      CALL_METHOD                     1
                        56      RETURN_VALUE                    
                'OptionContainer.format_help'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionContainer'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Abstract base class.\n\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      option_list : [Option]\n        the list of Option objects contained by this OptionContainer\n      _short_opt : { string : Option }\n        dictionary mapping short option strings, eg. "-f" or "-X",\n        to the Option instances that implement them.  If an Option\n        has multiple short option strings, it will appear in this\n        dictionary multiple times. [1]\n      _long_opt : { string : Option }\n        dictionary mapping long option strings, eg. "--file" or\n        "--exclude", to the Option instances that implement them.\n        Again, a given Option can occur multiple times in this\n        dictionary. [1]\n      defaults : { string : any }\n        dictionary mapping option destination names to default\n        values for each destination [1]\n\n    [1] These mappings are common to (shared by) all components of the\n        controlling OptionParser, where they are initially created.\n\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: 'OptionContainer.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> _create_option_mappings
                22      LOAD_CONST                      5: 'OptionContainer._create_option_mappings'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: _create_option_mappings
                28      LOAD_CONST                      6: <CODE> _share_option_mappings
                30      LOAD_CONST                      7: 'OptionContainer._share_option_mappings'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: _share_option_mappings
                36      LOAD_CONST                      8: <CODE> set_conflict_handler
                38      LOAD_CONST                      9: 'OptionContainer.set_conflict_handler'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: set_conflict_handler
                44      LOAD_CONST                      10: <CODE> set_description
                46      LOAD_CONST                      11: 'OptionContainer.set_description'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      8: set_description
                52      LOAD_CONST                      12: <CODE> get_description
                54      LOAD_CONST                      13: 'OptionContainer.get_description'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      9: get_description
                60      LOAD_CONST                      14: <CODE> destroy
                62      LOAD_CONST                      15: 'OptionContainer.destroy'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      10: destroy
                68      LOAD_CONST                      16: <CODE> _check_conflict
                70      LOAD_CONST                      17: 'OptionContainer._check_conflict'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      11: _check_conflict
                76      LOAD_CONST                      18: <CODE> add_option
                78      LOAD_CONST                      19: 'OptionContainer.add_option'
                80      MAKE_FUNCTION                   0
                82      STORE_NAME                      12: add_option
                84      LOAD_CONST                      20: <CODE> add_options
                86      LOAD_CONST                      21: 'OptionContainer.add_options'
                88      MAKE_FUNCTION                   0
                90      STORE_NAME                      13: add_options
                92      LOAD_CONST                      22: <CODE> get_option
                94      LOAD_CONST                      23: 'OptionContainer.get_option'
                96      MAKE_FUNCTION                   0
                98      STORE_NAME                      14: get_option
                100     LOAD_CONST                      24: <CODE> has_option
                102     LOAD_CONST                      25: 'OptionContainer.has_option'
                104     MAKE_FUNCTION                   0
                106     STORE_NAME                      15: has_option
                108     LOAD_CONST                      26: <CODE> remove_option
                110     LOAD_CONST                      27: 'OptionContainer.remove_option'
                112     MAKE_FUNCTION                   0
                114     STORE_NAME                      16: remove_option
                116     LOAD_CONST                      28: <CODE> format_option_help
                118     LOAD_CONST                      29: 'OptionContainer.format_option_help'
                120     MAKE_FUNCTION                   0
                122     STORE_NAME                      17: format_option_help
                124     LOAD_CONST                      30: <CODE> format_description
                126     LOAD_CONST                      31: 'OptionContainer.format_description'
                128     MAKE_FUNCTION                   0
                130     STORE_NAME                      18: format_description
                132     LOAD_CONST                      32: <CODE> format_help
                134     LOAD_CONST                      33: 'OptionContainer.format_help'
                136     MAKE_FUNCTION                   0
                138     STORE_NAME                      19: format_help
                140     LOAD_CONST                      34: None
                142     RETURN_VALUE                    
        'OptionContainer'
        [Code]
            File Name: optparse.py
            Object Name: OptionGroup
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '_create_option_list'
                'set_title'
                'destroy'
                'format_help'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionGroup'
                None
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'parser'
                        'OptionContainer'
                        '__init__'
                        'option_class'
                        'conflict_handler'
                        'title'
                    [Var Names]
                        'self'
                        'parser'
                        'title'
                        'description'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: parser
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: parser
                        6       LOAD_GLOBAL                     1: OptionContainer
                        8       LOAD_METHOD                     2: __init__
                        10      LOAD_FAST                       0: self
                        12      LOAD_FAST                       1: parser
                        14      LOAD_ATTR                       3: option_class
                        16      LOAD_FAST                       1: parser
                        18      LOAD_ATTR                       4: conflict_handler
                        20      LOAD_FAST                       3: description
                        22      CALL_METHOD                     4
                        24      POP_TOP                         
                        26      LOAD_FAST                       2: title
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      5: title
                        32      LOAD_CONST                      0: None
                        34      RETURN_VALUE                    
                'OptionGroup.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: _create_option_list
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'option_list'
                        '_share_option_mappings'
                        'parser'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: option_list
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: _share_option_mappings
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: parser
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'OptionGroup._create_option_list'
                [Code]
                    File Name: optparse.py
                    Object Name: set_title
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'title'
                    [Var Names]
                        'self'
                        'title'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: title
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: title
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'OptionGroup.set_title'
                [Code]
                    File Name: optparse.py
                    Object Name: destroy
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'OptionContainer'
                        'destroy'
                        'option_list'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'see OptionParser.destroy().'
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: OptionContainer
                        2       LOAD_METHOD                     1: destroy
                        4       LOAD_FAST                       0: self
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_FAST                       0: self
                        12      DELETE_ATTR                     2: option_list
                        14      LOAD_CONST                      1: None
                        16      RETURN_VALUE                    
                'OptionGroup.destroy'
                [Code]
                    File Name: optparse.py
                    Object Name: format_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format_heading'
                        'title'
                        'indent'
                        'OptionContainer'
                        'format_help'
                        'dedent'
                    [Var Names]
                        'self'
                        'formatter'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: formatter
                        2       LOAD_METHOD                     0: format_heading
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: title
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      2: result
                        12      LOAD_FAST                       1: formatter
                        14      LOAD_METHOD                     2: indent
                        16      CALL_METHOD                     0
                        18      POP_TOP                         
                        20      LOAD_FAST                       2: result
                        22      LOAD_GLOBAL                     3: OptionContainer
                        24      LOAD_METHOD                     4: format_help
                        26      LOAD_FAST                       0: self
                        28      LOAD_FAST                       1: formatter
                        30      CALL_METHOD                     2
                        32      INPLACE_ADD                     
                        34      STORE_FAST                      2: result
                        36      LOAD_FAST                       1: formatter
                        38      LOAD_METHOD                     5: dedent
                        40      CALL_METHOD                     0
                        42      POP_TOP                         
                        44      LOAD_FAST                       2: result
                        46      RETURN_VALUE                    
                'OptionGroup.format_help'
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionGroup'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      12: (None,)
                10      LOAD_CONST                      2: <CODE> __init__
                12      LOAD_CONST                      3: 'OptionGroup.__init__'
                14      MAKE_FUNCTION                   1
                16      STORE_NAME                      3: __init__
                18      LOAD_CONST                      4: <CODE> _create_option_list
                20      LOAD_CONST                      5: 'OptionGroup._create_option_list'
                22      MAKE_FUNCTION                   0
                24      STORE_NAME                      4: _create_option_list
                26      LOAD_CONST                      6: <CODE> set_title
                28      LOAD_CONST                      7: 'OptionGroup.set_title'
                30      MAKE_FUNCTION                   0
                32      STORE_NAME                      5: set_title
                34      LOAD_CONST                      8: <CODE> destroy
                36      LOAD_CONST                      9: 'OptionGroup.destroy'
                38      MAKE_FUNCTION                   0
                40      STORE_NAME                      6: destroy
                42      LOAD_CONST                      10: <CODE> format_help
                44      LOAD_CONST                      11: 'OptionGroup.format_help'
                46      MAKE_FUNCTION                   0
                48      STORE_NAME                      7: format_help
                50      LOAD_CONST                      1: None
                52      RETURN_VALUE                    
        'OptionGroup'
        [Code]
            File Name: optparse.py
            Object Name: OptionParser
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 10
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'standard_option_list'
                'Option'
                '__init__'
                'destroy'
                '_create_option_list'
                '_add_help_option'
                '_add_version_option'
                '_populate_option_list'
                '_init_parsing_state'
                'set_usage'
                'enable_interspersed_args'
                'disable_interspersed_args'
                'set_process_default_values'
                'set_default'
                'set_defaults'
                '_get_all_options'
                'get_default_values'
                'add_option_group'
                'get_option_group'
                '_get_args'
                'parse_args'
                'check_values'
                '_process_args'
                '_match_long_opt'
                '_process_long_opt'
                '_process_short_opts'
                'get_prog_name'
                'expand_prog_name'
                'get_description'
                'exit'
                'error'
                'get_usage'
                'print_usage'
                'get_version'
                'print_version'
                'format_option_help'
                'format_epilog'
                'format_help'
                'print_help'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'OptionParser'
                '\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      usage : string\n        a usage string for your program.  Before it is displayed\n        to the user, "%prog" will be expanded to the name of\n        your program (self.prog or os.path.basename(sys.argv[0])).\n      prog : string\n        the name of the current program (to override\n        os.path.basename(sys.argv[0])).\n      description : string\n        A paragraph of text giving a brief overview of your program.\n        optparse reformats this paragraph to fit the current terminal\n        width and prints it when the user requests help (after usage,\n        but before the list of options).\n      epilog : string\n        paragraph of help text to print after option help\n\n      option_groups : [OptionGroup]\n        list of option groups in this parser (option groups are\n        irrelevant for parsing the command-line, but very useful\n        for generating help)\n\n      allow_interspersed_args : bool = true\n        if true, positional arguments may be interspersed with options.\n        Assuming -a and -b each take a single argument, the command-line\n          -ablah foo bar -bboo baz\n        will be interpreted the same as\n          -ablah -bboo -- foo bar baz\n        If this flag were false, that command line would be interpreted as\n          -ablah -- foo bar -bboo baz\n        -- ie. we stop processing options as soon as we see the first\n        non-option argument.  (This is the tradition followed by\n        Python\'s getopt module, Perl\'s Getopt::Std, and other argument-\n        parsing libraries, but it is generally annoying to users.)\n\n      process_default_values : bool = true\n        if true, option default values are processed similarly to option\n        values from the command line: that is, they are passed to the\n        type-checking function for the option\'s type (as long as the\n        default value is a string).  (This really only matters if you\n        have defined custom types; see SF bug #955889.)  Set it to false\n        to restore the behaviour of Optik 1.4.1 and earlier.\n\n      rargs : [string]\n        the argument list currently being parsed.  Only set when\n        parse_args() is active, and continually trimmed down as\n        we consume arguments.  Mainly there for the benefit of\n        callback options.\n      largs : [string]\n        the list of leftover arguments that we have skipped while\n        parsing options.  If allow_interspersed_args is false, this\n        list is always empty.\n      values : Values\n        the set of option values currently being accumulated.  Only\n        set when parse_args() is active.  Also mainly for callbacks.\n\n    Because of the \'rargs\', \'largs\', and \'values\' attributes,\n    OptionParser is not thread-safe.  If, for some perverse reason, you\n    need to parse command-line arguments simultaneously in different\n    threads, use different OptionParser instances.\n\n    '
                None
                'error'
                True
                [Code]
                    File Name: optparse.py
                    Object Name: __init__
                    Arg Count: 11
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'OptionContainer'
                        '__init__'
                        'set_usage'
                        'prog'
                        'version'
                        'allow_interspersed_args'
                        'process_default_values'
                        'IndentedHelpFormatter'
                        'formatter'
                        'set_parser'
                        'epilog'
                        '_populate_option_list'
                        '_init_parsing_state'
                    [Var Names]
                        'self'
                        'usage'
                        'option_list'
                        'option_class'
                        'version'
                        'conflict_handler'
                        'description'
                        'formatter'
                        'add_help_option'
                        'prog'
                        'epilog'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        (
                            'add_help'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: OptionContainer
                        2       LOAD_METHOD                     1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       3: option_class
                        8       LOAD_FAST                       5: conflict_handler
                        10      LOAD_FAST                       6: description
                        12      CALL_METHOD                     4
                        14      POP_TOP                         
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     2: set_usage
                        20      LOAD_FAST                       1: usage
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_FAST                       9: prog
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      3: prog
                        32      LOAD_FAST                       4: version
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      4: version
                        38      LOAD_CONST                      1: True
                        40      LOAD_FAST                       0: self
                        42      STORE_ATTR                      5: allow_interspersed_args
                        44      LOAD_CONST                      1: True
                        46      LOAD_FAST                       0: self
                        48      STORE_ATTR                      6: process_default_values
                        50      LOAD_FAST                       7: formatter
                        52      LOAD_CONST                      0: None
                        54      IS_OP                           0 (is)
                        56      POP_JUMP_IF_FALSE               32 (to 64)
                        58      LOAD_GLOBAL                     7: IndentedHelpFormatter
                        60      CALL_FUNCTION                   0
                        62      STORE_FAST                      7: formatter
                        64      LOAD_FAST                       7: formatter
                        66      LOAD_FAST                       0: self
                        68      STORE_ATTR                      8: formatter
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       8: formatter
                        74      LOAD_METHOD                     9: set_parser
                        76      LOAD_FAST                       0: self
                        78      CALL_METHOD                     1
                        80      POP_TOP                         
                        82      LOAD_FAST                       10: epilog
                        84      LOAD_FAST                       0: self
                        86      STORE_ATTR                      10: epilog
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       11: _populate_option_list
                        92      LOAD_FAST                       2: option_list
                        94      LOAD_FAST                       8: add_help_option
                        96      LOAD_CONST                      2: ('add_help',)
                        98      CALL_FUNCTION_KW                2
                        100     POP_TOP                         
                        102     LOAD_FAST                       0: self
                        104     LOAD_METHOD                     12: _init_parsing_state
                        106     CALL_METHOD                     0
                        108     POP_TOP                         
                        110     LOAD_CONST                      0: None
                        112     RETURN_VALUE                    
                'OptionParser.__init__'
                [Code]
                    File Name: optparse.py
                    Object Name: destroy
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'OptionContainer'
                        'destroy'
                        'option_groups'
                        'option_list'
                        'formatter'
                    [Var Names]
                        'self'
                        'group'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Declare that you are done with this OptionParser.  This cleans up\n        reference cycles so the OptionParser (and all objects referenced by\n        it) can be garbage-collected promptly.  After calling destroy(), the\n        OptionParser is unusable.\n        '
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: OptionContainer
                        2       LOAD_METHOD                     1: destroy
                        4       LOAD_FAST                       0: self
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: option_groups
                        14      GET_ITER                        
                        16      FOR_ITER                        6 (to 30)
                        18      STORE_FAST                      1: group
                        20      LOAD_FAST                       1: group
                        22      LOAD_METHOD                     1: destroy
                        24      CALL_METHOD                     0
                        26      POP_TOP                         
                        28      JUMP_ABSOLUTE                   8 (to 16)
                        30      LOAD_FAST                       0: self
                        32      DELETE_ATTR                     3: option_list
                        34      LOAD_FAST                       0: self
                        36      DELETE_ATTR                     2: option_groups
                        38      LOAD_FAST                       0: self
                        40      DELETE_ATTR                     4: formatter
                        42      LOAD_CONST                      1: None
                        44      RETURN_VALUE                    
                'OptionParser.destroy'
                [Code]
                    File Name: optparse.py
                    Object Name: _create_option_list
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'option_list'
                        'option_groups'
                        '_create_option_mappings'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: option_list
                        6       BUILD_LIST                      0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: option_groups
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     2: _create_option_mappings
                        16      CALL_METHOD                     0
                        18      POP_TOP                         
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                'OptionParser._create_option_list'
                [Code]
                    File Name: optparse.py
                    Object Name: _add_help_option
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'add_option'
                        '_'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '-h'
                        '--help'
                        'help'
                        'show this help message and exit'
                        (
                            'action'
                            'help'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: add_option
                        4       LOAD_CONST                      1: '-h'
                        6       LOAD_CONST                      2: '--help'
                        8       LOAD_CONST                      3: 'help'
                        10      LOAD_GLOBAL                     1: _
                        12      LOAD_CONST                      4: 'show this help message and exit'
                        14      CALL_FUNCTION                   1
                        16      LOAD_CONST                      5: ('action', 'help')
                        18      CALL_FUNCTION_KW                4
                        20      POP_TOP                         
                        22      LOAD_CONST                      0: None
                        24      RETURN_VALUE                    
                'OptionParser._add_help_option'
                [Code]
                    File Name: optparse.py
                    Object Name: _add_version_option
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'add_option'
                        '_'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '--version'
                        'version'
                        "show program's version number and exit"
                        (
                            'action'
                            'help'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: add_option
                        4       LOAD_CONST                      1: '--version'
                        6       LOAD_CONST                      2: 'version'
                        8       LOAD_GLOBAL                     1: _
                        10      LOAD_CONST                      3: "show program's version number and exit"
                        12      CALL_FUNCTION                   1
                        14      LOAD_CONST                      4: ('action', 'help')
                        16      CALL_FUNCTION_KW                3
                        18      POP_TOP                         
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                'OptionParser._add_version_option'
                [Code]
                    File Name: optparse.py
                    Object Name: _populate_option_list
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'standard_option_list'
                        'add_options'
                        'version'
                        '_add_version_option'
                        '_add_help_option'
                    [Var Names]
                        'self'
                        'option_list'
                        'add_help'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: standard_option_list
                        4       POP_JUMP_IF_FALSE               9 (to 18)
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: add_options
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       0: standard_option_list
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      LOAD_FAST                       1: option_list
                        20      POP_JUMP_IF_FALSE               16 (to 32)
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     1: add_options
                        26      LOAD_FAST                       1: option_list
                        28      CALL_METHOD                     1
                        30      POP_TOP                         
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       2: version
                        36      POP_JUMP_IF_FALSE               23 (to 46)
                        38      LOAD_FAST                       0: self
                        40      LOAD_METHOD                     3: _add_version_option
                        42      CALL_METHOD                     0
                        44      POP_TOP                         
                        46      LOAD_FAST                       2: add_help
                        48      POP_JUMP_IF_FALSE               31 (to 62)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     4: _add_help_option
                        54      CALL_METHOD                     0
                        56      POP_TOP                         
                        58      LOAD_CONST                      0: None
                        60      RETURN_VALUE                    
                        62      LOAD_CONST                      0: None
                        64      RETURN_VALUE                    
                'OptionParser._populate_option_list'
                [Code]
                    File Name: optparse.py
                    Object Name: _init_parsing_state
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'rargs'
                        'largs'
                        'values'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: rargs
                        6       LOAD_CONST                      0: None
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: largs
                        12      LOAD_CONST                      0: None
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: values
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'OptionParser._init_parsing_state'
                [Code]
                    File Name: optparse.py
                    Object Name: set_usage
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_'
                        'usage'
                        'SUPPRESS_USAGE'
                        'lower'
                        'startswith'
                    [Var Names]
                        'self'
                        'usage'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%prog [options]'
                        'usage: '
                        7
                    [Disassembly]
                        0       LOAD_FAST                       1: usage
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               11 (to 22)
                        8       LOAD_GLOBAL                     0: _
                        10      LOAD_CONST                      1: '%prog [options]'
                        12      CALL_FUNCTION                   1
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      1: usage
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       1: usage
                        24      LOAD_GLOBAL                     2: SUPPRESS_USAGE
                        26      IS_OP                           0 (is)
                        28      POP_JUMP_IF_FALSE               20 (to 40)
                        30      LOAD_CONST                      0: None
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      1: usage
                        36      LOAD_CONST                      0: None
                        38      RETURN_VALUE                    
                        40      LOAD_FAST                       1: usage
                        42      LOAD_METHOD                     3: lower
                        44      CALL_METHOD                     0
                        46      LOAD_METHOD                     4: startswith
                        48      LOAD_CONST                      2: 'usage: '
                        50      CALL_METHOD                     1
                        52      POP_JUMP_IF_FALSE               36 (to 72)
                        54      LOAD_FAST                       1: usage
                        56      LOAD_CONST                      3: 7
                        58      LOAD_CONST                      0: None
                        60      BUILD_SLICE                     2
                        62      BINARY_SUBSCR                   
                        64      LOAD_FAST                       0: self
                        66      STORE_ATTR                      1: usage
                        68      LOAD_CONST                      0: None
                        70      RETURN_VALUE                    
                        72      LOAD_FAST                       1: usage
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      1: usage
                        78      LOAD_CONST                      0: None
                        80      RETURN_VALUE                    
                'OptionParser.set_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: enable_interspersed_args
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'allow_interspersed_args'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set parsing to not stop on the first non-option, allowing\n        interspersing switches with command arguments. This is the\n        default behavior. See also disable_interspersed_args() and the\n        class documentation description of the attribute\n        allow_interspersed_args.'
                        True
                        None
                    [Disassembly]
                        0       LOAD_CONST                      1: True
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: allow_interspersed_args
                        6       LOAD_CONST                      2: None
                        8       RETURN_VALUE                    
                'OptionParser.enable_interspersed_args'
                [Code]
                    File Name: optparse.py
                    Object Name: disable_interspersed_args
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'allow_interspersed_args'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Set parsing to stop on the first non-option. Use this if\n        you have a command processor which runs another command that\n        has options of its own and you want to make sure these options\n        don't get confused.\n        "
                        False
                        None
                    [Disassembly]
                        0       LOAD_CONST                      1: False
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: allow_interspersed_args
                        6       LOAD_CONST                      2: None
                        8       RETURN_VALUE                    
                'OptionParser.disable_interspersed_args'
                [Code]
                    File Name: optparse.py
                    Object Name: set_process_default_values
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'process_default_values'
                    [Var Names]
                        'self'
                        'process'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: process
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: process_default_values
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'OptionParser.set_process_default_values'
                [Code]
                    File Name: optparse.py
                    Object Name: set_default
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'defaults'
                    [Var Names]
                        'self'
                        'dest'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: value
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: defaults
                        6       LOAD_FAST                       1: dest
                        8       STORE_SUBSCR                    
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                'OptionParser.set_default'
                [Code]
                    File Name: optparse.py
                    Object Name: set_defaults
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'defaults'
                        'update'
                    [Var Names]
                        'self'
                        'kwargs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: defaults
                        4       LOAD_METHOD                     1: update
                        6       LOAD_FAST                       1: kwargs
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      0: None
                        14      RETURN_VALUE                    
                'OptionParser.set_defaults'
                [Code]
                    File Name: optparse.py
                    Object Name: _get_all_options
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'option_list'
                        'option_groups'
                        'extend'
                    [Var Names]
                        'self'
                        'options'
                        'group'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: option_list
                        4       LOAD_CONST                      0: None
                        6       LOAD_CONST                      0: None
                        8       BUILD_SLICE                     2
                        10      BINARY_SUBSCR                   
                        12      STORE_FAST                      1: options
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       1: option_groups
                        18      GET_ITER                        
                        20      FOR_ITER                        8 (to 38)
                        22      STORE_FAST                      2: group
                        24      LOAD_FAST                       1: options
                        26      LOAD_METHOD                     2: extend
                        28      LOAD_FAST                       2: group
                        30      LOAD_ATTR                       0: option_list
                        32      CALL_METHOD                     1
                        34      POP_TOP                         
                        36      JUMP_ABSOLUTE                   10 (to 20)
                        38      LOAD_FAST                       1: options
                        40      RETURN_VALUE                    
                'OptionParser._get_all_options'
                [Code]
                    File Name: optparse.py
                    Object Name: get_default_values
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'process_default_values'
                        'Values'
                        'defaults'
                        'copy'
                        '_get_all_options'
                        'get'
                        'dest'
                        'isinstance'
                        'str'
                        'get_opt_string'
                        'check_value'
                    [Var Names]
                        'self'
                        'defaults'
                        'option'
                        'default'
                        'opt_str'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: process_default_values
                        4       POP_JUMP_IF_TRUE                8 (to 16)
                        6       LOAD_GLOBAL                     1: Values
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: defaults
                        12      CALL_FUNCTION                   1
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: defaults
                        20      LOAD_METHOD                     3: copy
                        22      CALL_METHOD                     0
                        24      STORE_FAST                      1: defaults
                        26      LOAD_FAST                       0: self
                        28      LOAD_METHOD                     4: _get_all_options
                        30      CALL_METHOD                     0
                        32      GET_ITER                        
                        34      FOR_ITER                        26 (to 88)
                        36      STORE_FAST                      2: option
                        38      LOAD_FAST                       1: defaults
                        40      LOAD_METHOD                     5: get
                        42      LOAD_FAST                       2: option
                        44      LOAD_ATTR                       6: dest
                        46      CALL_METHOD                     1
                        48      STORE_FAST                      3: default
                        50      LOAD_GLOBAL                     7: isinstance
                        52      LOAD_FAST                       3: default
                        54      LOAD_GLOBAL                     8: str
                        56      CALL_FUNCTION                   2
                        58      POP_JUMP_IF_FALSE               43 (to 86)
                        60      LOAD_FAST                       2: option
                        62      LOAD_METHOD                     9: get_opt_string
                        64      CALL_METHOD                     0
                        66      STORE_FAST                      4: opt_str
                        68      LOAD_FAST                       2: option
                        70      LOAD_METHOD                     10: check_value
                        72      LOAD_FAST                       4: opt_str
                        74      LOAD_FAST                       3: default
                        76      CALL_METHOD                     2
                        78      LOAD_FAST                       1: defaults
                        80      LOAD_FAST                       2: option
                        82      LOAD_ATTR                       6: dest
                        84      STORE_SUBSCR                    
                        86      JUMP_ABSOLUTE                   17 (to 34)
                        88      LOAD_GLOBAL                     1: Values
                        90      LOAD_FAST                       1: defaults
                        92      CALL_FUNCTION                   1
                        94      RETURN_VALUE                    
                'OptionParser.get_default_values'
                [Code]
                    File Name: optparse.py
                    Object Name: add_option_group
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'OptionGroup'
                        'len'
                        'TypeError'
                        'parser'
                        'ValueError'
                        'option_groups'
                        'append'
                    [Var Names]
                        'self'
                        'args'
                        'kwargs'
                        'group'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        1
                        'not an OptionGroup instance: %r'
                        'invalid OptionGroup (wrong parser)'
                        'invalid arguments'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: args
                        4       LOAD_CONST                      1: 0
                        6       BINARY_SUBSCR                   
                        8       LOAD_GLOBAL                     1: str
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_FALSE               19 (to 38)
                        14      LOAD_GLOBAL                     2: OptionGroup
                        16      LOAD_FAST                       0: self
                        18      BUILD_LIST                      1
                        20      LOAD_FAST                       1: args
                        22      LIST_EXTEND                     1
                        24      LIST_TO_TUPLE                   
                        26      BUILD_MAP                       0
                        28      LOAD_FAST                       2: kwargs
                        30      DICT_MERGE                      1
                        32      CALL_FUNCTION_EX                1
                        34      STORE_FAST                      3: group
                        36      JUMP_FORWARD                    37 (to 112)
                        38      LOAD_GLOBAL                     3: len
                        40      LOAD_FAST                       1: args
                        42      CALL_FUNCTION                   1
                        44      LOAD_CONST                      2: 1
                        46      COMPARE_OP                      2 (==)
                        48      POP_JUMP_IF_FALSE               52 (to 104)
                        50      LOAD_FAST                       2: kwargs
                        52      POP_JUMP_IF_TRUE                52 (to 104)
                        54      LOAD_FAST                       1: args
                        56      LOAD_CONST                      1: 0
                        58      BINARY_SUBSCR                   
                        60      STORE_FAST                      3: group
                        62      LOAD_GLOBAL                     0: isinstance
                        64      LOAD_FAST                       3: group
                        66      LOAD_GLOBAL                     2: OptionGroup
                        68      CALL_FUNCTION                   2
                        70      POP_JUMP_IF_TRUE                42 (to 84)
                        72      LOAD_GLOBAL                     4: TypeError
                        74      LOAD_CONST                      3: 'not an OptionGroup instance: %r'
                        76      LOAD_FAST                       3: group
                        78      BINARY_MODULO                   
                        80      CALL_FUNCTION                   1
                        82      RAISE_VARARGS                   1
                        84      LOAD_FAST                       3: group
                        86      LOAD_ATTR                       5: parser
                        88      LOAD_FAST                       0: self
                        90      IS_OP                           1 (is not)
                        92      POP_JUMP_IF_FALSE               51 (to 102)
                        94      LOAD_GLOBAL                     6: ValueError
                        96      LOAD_CONST                      4: 'invalid OptionGroup (wrong parser)'
                        98      CALL_FUNCTION                   1
                        100     RAISE_VARARGS                   1
                        102     JUMP_FORWARD                    4 (to 112)
                        104     LOAD_GLOBAL                     4: TypeError
                        106     LOAD_CONST                      5: 'invalid arguments'
                        108     CALL_FUNCTION                   1
                        110     RAISE_VARARGS                   1
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       7: option_groups
                        116     LOAD_METHOD                     8: append
                        118     LOAD_FAST                       3: group
                        120     CALL_METHOD                     1
                        122     POP_TOP                         
                        124     LOAD_FAST                       3: group
                        126     RETURN_VALUE                    
                'OptionParser.add_option_group'
                [Code]
                    File Name: optparse.py
                    Object Name: get_option_group
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_short_opt'
                        'get'
                        '_long_opt'
                        'container'
                    [Var Names]
                        'self'
                        'opt_str'
                        'option'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _short_opt
                        4       LOAD_METHOD                     1: get
                        6       LOAD_FAST                       1: opt_str
                        8       CALL_METHOD                     1
                        10      JUMP_IF_TRUE_OR_POP             11 (to 22)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _long_opt
                        16      LOAD_METHOD                     1: get
                        18      LOAD_FAST                       1: opt_str
                        20      CALL_METHOD                     1
                        22      STORE_FAST                      2: option
                        24      LOAD_FAST                       2: option
                        26      POP_JUMP_IF_FALSE               22 (to 44)
                        28      LOAD_FAST                       2: option
                        30      LOAD_ATTR                       3: container
                        32      LOAD_FAST                       0: self
                        34      IS_OP                           1 (is not)
                        36      POP_JUMP_IF_FALSE               22 (to 44)
                        38      LOAD_FAST                       2: option
                        40      LOAD_ATTR                       3: container
                        42      RETURN_VALUE                    
                        44      LOAD_CONST                      0: None
                        46      RETURN_VALUE                    
                'OptionParser.get_option_group'
                [Code]
                    File Name: optparse.py
                    Object Name: _get_args
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sys'
                        'argv'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       1: args
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               11 (to 22)
                        8       LOAD_GLOBAL                     0: sys
                        10      LOAD_ATTR                       1: argv
                        12      LOAD_CONST                      1: 1
                        14      LOAD_CONST                      0: None
                        16      BUILD_SLICE                     2
                        18      BINARY_SUBSCR                   
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       1: args
                        24      LOAD_CONST                      0: None
                        26      LOAD_CONST                      0: None
                        28      BUILD_SLICE                     2
                        30      BINARY_SUBSCR                   
                        32      RETURN_VALUE                    
                'OptionParser._get_args'
                [Code]
                    File Name: optparse.py
                    Object Name: parse_args
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_get_args'
                        'get_default_values'
                        'rargs'
                        'largs'
                        'values'
                        '_process_args'
                        'BadOptionError'
                        'OptionValueError'
                        'error'
                        'str'
                        'check_values'
                    [Var Names]
                        'self'
                        'args'
                        'values'
                        'rargs'
                        'largs'
                        'stop'
                        'err'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        parse_args(args : [string] = sys.argv[1:],\n                   values : Values = None)\n        -> (values : Values, args : [string])\n\n        Parse the command-line options found in 'args' (default:\n        sys.argv[1:]).  Any errors result in a call to 'error()', which\n        by default prints the usage message to stderr and calls\n        sys.exit() with an error message.  On success returns a pair\n        (values, args) where 'values' is a Values instance (with all\n        your option values) and 'args' is the list of arguments left\n        over after parsing options.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _get_args
                        4       LOAD_FAST                       1: args
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      3: rargs
                        10      LOAD_FAST                       2: values
                        12      LOAD_CONST                      1: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               13 (to 26)
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     1: get_default_values
                        22      CALL_METHOD                     0
                        24      STORE_FAST                      2: values
                        26      LOAD_FAST                       3: rargs
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      2: rargs
                        32      BUILD_LIST                      0
                        34      DUP_TOP                         
                        36      LOAD_FAST                       0: self
                        38      STORE_ATTR                      3: largs
                        40      STORE_FAST                      4: largs
                        42      LOAD_FAST                       2: values
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      4: values
                        48      SETUP_FINALLY                   9 (to 68)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     5: _process_args
                        54      LOAD_FAST                       4: largs
                        56      LOAD_FAST                       3: rargs
                        58      LOAD_FAST                       2: values
                        60      CALL_METHOD                     3
                        62      STORE_FAST                      5: stop
                        64      POP_BLOCK                       
                        66      JUMP_FORWARD                    27 (to 122)
                        68      DUP_TOP                         
                        70      LOAD_GLOBAL                     6: BadOptionError
                        72      LOAD_GLOBAL                     7: OptionValueError
                        74      BUILD_TUPLE                     2
                        76      JUMP_IF_NOT_EXC_MATCH           60 (to 120)
                        78      POP_TOP                         
                        80      STORE_FAST                      6: err
                        82      POP_TOP                         
                        84      SETUP_FINALLY                   13 (to 112)
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     8: error
                        90      LOAD_GLOBAL                     9: str
                        92      LOAD_FAST                       6: err
                        94      CALL_FUNCTION                   1
                        96      CALL_METHOD                     1
                        98      POP_TOP                         
                        100     POP_BLOCK                       
                        102     POP_EXCEPT                      
                        104     LOAD_CONST                      1: None
                        106     STORE_FAST                      6: err
                        108     DELETE_FAST                     6: err
                        110     JUMP_FORWARD                    5 (to 122)
                        112     LOAD_CONST                      1: None
                        114     STORE_FAST                      6: err
                        116     DELETE_FAST                     6: err
                        118     RERAISE                         1
                        120     RERAISE                         0
                        122     LOAD_FAST                       4: largs
                        124     LOAD_FAST                       3: rargs
                        126     BINARY_ADD                      
                        128     STORE_FAST                      1: args
                        130     LOAD_FAST                       0: self
                        132     LOAD_METHOD                     10: check_values
                        134     LOAD_FAST                       2: values
                        136     LOAD_FAST                       1: args
                        138     CALL_METHOD                     2
                        140     RETURN_VALUE                    
                'OptionParser.parse_args'
                [Code]
                    File Name: optparse.py
                    Object Name: check_values
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        'values'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        check_values(values : Values, args : [string])\n        -> (values : Values, args : [string])\n\n        Check that the supplied option values and leftover arguments are\n        valid.  Returns the option values and leftover arguments\n        (possibly adjusted, possibly completely new -- whatever you\n        like).  Default implementation just returns the passed-in\n        values; subclasses may override as desired.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       1: values
                        2       LOAD_FAST                       2: args
                        4       BUILD_TUPLE                     2
                        6       RETURN_VALUE                    
                'OptionParser.check_values'
                [Code]
                    File Name: optparse.py
                    Object Name: _process_args
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_process_long_opt'
                        'len'
                        '_process_short_opts'
                        'allow_interspersed_args'
                        'append'
                    [Var Names]
                        'self'
                        'largs'
                        'rargs'
                        'values'
                        'arg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "_process_args(largs : [string],\n                         rargs : [string],\n                         values : Values)\n\n        Process command-line arguments and populate 'values', consuming\n        options and arguments from 'rargs'.  If 'allow_interspersed_args' is\n        false, stop at the first non-option argument.  If true, accumulate any\n        interspersed non-option arguments in 'largs'.\n        "
                        0
                        '--'
                        None
                        2
                        1
                        '-'
                    [Disassembly]
                        0       LOAD_FAST                       2: rargs
                        2       POP_JUMP_IF_FALSE               69 (to 138)
                        4       LOAD_FAST                       2: rargs
                        6       LOAD_CONST                      1: 0
                        8       BINARY_SUBSCR                   
                        10      STORE_FAST                      4: arg
                        12      LOAD_FAST                       4: arg
                        14      LOAD_CONST                      2: '--'
                        16      COMPARE_OP                      2 (==)
                        18      POP_JUMP_IF_FALSE               15 (to 30)
                        20      LOAD_FAST                       2: rargs
                        22      LOAD_CONST                      1: 0
                        24      DELETE_SUBSCR                   
                        26      LOAD_CONST                      3: None
                        28      RETURN_VALUE                    
                        30      LOAD_FAST                       4: arg
                        32      LOAD_CONST                      1: 0
                        34      LOAD_CONST                      4: 2
                        36      BUILD_SLICE                     2
                        38      BINARY_SUBSCR                   
                        40      LOAD_CONST                      2: '--'
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               30 (to 60)
                        46      LOAD_FAST                       0: self
                        48      LOAD_METHOD                     0: _process_long_opt
                        50      LOAD_FAST                       2: rargs
                        52      LOAD_FAST                       3: values
                        54      CALL_METHOD                     2
                        56      POP_TOP                         
                        58      JUMP_FORWARD                    35 (to 130)
                        60      LOAD_FAST                       4: arg
                        62      LOAD_CONST                      3: None
                        64      LOAD_CONST                      5: 1
                        66      BUILD_SLICE                     2
                        68      BINARY_SUBSCR                   
                        70      LOAD_CONST                      6: '-'
                        72      COMPARE_OP                      2 (==)
                        74      POP_JUMP_IF_FALSE               51 (to 102)
                        76      LOAD_GLOBAL                     1: len
                        78      LOAD_FAST                       4: arg
                        80      CALL_FUNCTION                   1
                        82      LOAD_CONST                      5: 1
                        84      COMPARE_OP                      4 (>)
                        86      POP_JUMP_IF_FALSE               51 (to 102)
                        88      LOAD_FAST                       0: self
                        90      LOAD_METHOD                     2: _process_short_opts
                        92      LOAD_FAST                       2: rargs
                        94      LOAD_FAST                       3: values
                        96      CALL_METHOD                     2
                        98      POP_TOP                         
                        100     JUMP_FORWARD                    14 (to 130)
                        102     LOAD_FAST                       0: self
                        104     LOAD_ATTR                       3: allow_interspersed_args
                        106     POP_JUMP_IF_FALSE               63 (to 126)
                        108     LOAD_FAST                       1: largs
                        110     LOAD_METHOD                     4: append
                        112     LOAD_FAST                       4: arg
                        114     CALL_METHOD                     1
                        116     POP_TOP                         
                        118     LOAD_FAST                       2: rargs
                        120     LOAD_CONST                      1: 0
                        122     DELETE_SUBSCR                   
                        124     JUMP_FORWARD                    2 (to 130)
                        126     LOAD_CONST                      3: None
                        128     RETURN_VALUE                    
                        130     LOAD_FAST                       2: rargs
                        132     POP_JUMP_IF_TRUE                2 (to 4)
                        134     LOAD_CONST                      3: None
                        136     RETURN_VALUE                    
                        138     LOAD_CONST                      3: None
                        140     RETURN_VALUE                    
                'OptionParser._process_args'
                [Code]
                    File Name: optparse.py
                    Object Name: _match_long_opt
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_match_abbrev'
                        '_long_opt'
                    [Var Names]
                        'self'
                        'opt'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "_match_long_opt(opt : string) -> string\n\n        Determine which long option string 'opt' matches, ie. which one\n        it is an unambiguous abbreviation for.  Raises BadOptionError if\n        'opt' doesn't unambiguously match any long option string.\n        "
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _match_abbrev
                        2       LOAD_FAST                       1: opt
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _long_opt
                        8       CALL_FUNCTION                   2
                        10      RETURN_VALUE                    
                'OptionParser._match_long_opt'
                [Code]
                    File Name: optparse.py
                    Object Name: _process_long_opt
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pop'
                        'split'
                        'insert'
                        '_match_long_opt'
                        '_long_opt'
                        'takes_value'
                        'nargs'
                        'len'
                        'error'
                        'ngettext'
                        'tuple'
                        '_'
                        'process'
                    [Var Names]
                        'self'
                        'rargs'
                        'values'
                        'arg'
                        'opt'
                        'next_arg'
                        'had_explicit_value'
                        'option'
                        'nargs'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        '='
                        1
                        True
                        False
                        '%(option)s option requires %(number)d argument'
                        '%(option)s option requires %(number)d arguments'
                        (
                            'option'
                            'number'
                        )
                        '%s option does not take a value'
                    [Disassembly]
                        0       LOAD_FAST                       1: rargs
                        2       LOAD_METHOD                     0: pop
                        4       LOAD_CONST                      1: 0
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      3: arg
                        10      LOAD_CONST                      2: '='
                        12      LOAD_FAST                       3: arg
                        14      CONTAINS_OP                     0 (in)
                        16      POP_JUMP_IF_FALSE               26 (to 52)
                        18      LOAD_FAST                       3: arg
                        20      LOAD_METHOD                     1: split
                        22      LOAD_CONST                      2: '='
                        24      LOAD_CONST                      3: 1
                        26      CALL_METHOD                     2
                        28      UNPACK_SEQUENCE                 2
                        30      STORE_FAST                      4: opt
                        32      STORE_FAST                      5: next_arg
                        34      LOAD_FAST                       1: rargs
                        36      LOAD_METHOD                     2: insert
                        38      LOAD_CONST                      1: 0
                        40      LOAD_FAST                       5: next_arg
                        42      CALL_METHOD                     2
                        44      POP_TOP                         
                        46      LOAD_CONST                      4: True
                        48      STORE_FAST                      6: had_explicit_value
                        50      JUMP_FORWARD                    4 (to 60)
                        52      LOAD_FAST                       3: arg
                        54      STORE_FAST                      4: opt
                        56      LOAD_CONST                      5: False
                        58      STORE_FAST                      6: had_explicit_value
                        60      LOAD_FAST                       0: self
                        62      LOAD_METHOD                     3: _match_long_opt
                        64      LOAD_FAST                       4: opt
                        66      CALL_METHOD                     1
                        68      STORE_FAST                      4: opt
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       4: _long_opt
                        74      LOAD_FAST                       4: opt
                        76      BINARY_SUBSCR                   
                        78      STORE_FAST                      7: option
                        80      LOAD_FAST                       7: option
                        82      LOAD_METHOD                     5: takes_value
                        84      CALL_METHOD                     0
                        86      POP_JUMP_IF_FALSE               92 (to 184)
                        88      LOAD_FAST                       7: option
                        90      LOAD_ATTR                       6: nargs
                        92      STORE_FAST                      8: nargs
                        94      LOAD_GLOBAL                     7: len
                        96      LOAD_FAST                       1: rargs
                        98      CALL_FUNCTION                   1
                        100     LOAD_FAST                       8: nargs
                        102     COMPARE_OP                      0 (<)
                        104     POP_JUMP_IF_FALSE               68 (to 136)
                        106     LOAD_FAST                       0: self
                        108     LOAD_METHOD                     8: error
                        110     LOAD_GLOBAL                     9: ngettext
                        112     LOAD_CONST                      6: '%(option)s option requires %(number)d argument'
                        114     LOAD_CONST                      7: '%(option)s option requires %(number)d arguments'
                        116     LOAD_FAST                       8: nargs
                        118     CALL_FUNCTION                   3
                        120     LOAD_FAST                       4: opt
                        122     LOAD_FAST                       8: nargs
                        124     LOAD_CONST                      8: ('option', 'number')
                        126     BUILD_CONST_KEY_MAP             2
                        128     BINARY_MODULO                   
                        130     CALL_METHOD                     1
                        132     POP_TOP                         
                        134     JUMP_FORWARD                    38 (to 212)
                        136     LOAD_FAST                       8: nargs
                        138     LOAD_CONST                      3: 1
                        140     COMPARE_OP                      2 (==)
                        142     POP_JUMP_IF_FALSE               78 (to 156)
                        144     LOAD_FAST                       1: rargs
                        146     LOAD_METHOD                     0: pop
                        148     LOAD_CONST                      1: 0
                        150     CALL_METHOD                     1
                        152     STORE_FAST                      9: value
                        154     JUMP_FORWARD                    28 (to 212)
                        156     LOAD_GLOBAL                     10: tuple
                        158     LOAD_FAST                       1: rargs
                        160     LOAD_CONST                      1: 0
                        162     LOAD_FAST                       8: nargs
                        164     BUILD_SLICE                     2
                        166     BINARY_SUBSCR                   
                        168     CALL_FUNCTION                   1
                        170     STORE_FAST                      9: value
                        172     LOAD_FAST                       1: rargs
                        174     LOAD_CONST                      1: 0
                        176     LOAD_FAST                       8: nargs
                        178     BUILD_SLICE                     2
                        180     DELETE_SUBSCR                   
                        182     JUMP_FORWARD                    14 (to 212)
                        184     LOAD_FAST                       6: had_explicit_value
                        186     POP_JUMP_IF_FALSE               104 (to 208)
                        188     LOAD_FAST                       0: self
                        190     LOAD_METHOD                     8: error
                        192     LOAD_GLOBAL                     11: _
                        194     LOAD_CONST                      9: '%s option does not take a value'
                        196     CALL_FUNCTION                   1
                        198     LOAD_FAST                       4: opt
                        200     BINARY_MODULO                   
                        202     CALL_METHOD                     1
                        204     POP_TOP                         
                        206     JUMP_FORWARD                    2 (to 212)
                        208     LOAD_CONST                      0: None
                        210     STORE_FAST                      9: value
                        212     LOAD_FAST                       7: option
                        214     LOAD_METHOD                     12: process
                        216     LOAD_FAST                       4: opt
                        218     LOAD_FAST                       9: value
                        220     LOAD_FAST                       2: values
                        222     LOAD_FAST                       0: self
                        224     CALL_METHOD                     4
                        226     POP_TOP                         
                        228     LOAD_CONST                      0: None
                        230     RETURN_VALUE                    
                'OptionParser._process_long_opt'
                [Code]
                    File Name: optparse.py
                    Object Name: _process_short_opts
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pop'
                        '_short_opt'
                        'get'
                        'BadOptionError'
                        'takes_value'
                        'len'
                        'insert'
                        'nargs'
                        'error'
                        'ngettext'
                        'tuple'
                        'process'
                    [Var Names]
                        'self'
                        'rargs'
                        'values'
                        'arg'
                        'stop'
                        'i'
                        'ch'
                        'opt'
                        'option'
                        'nargs'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        False
                        1
                        '-'
                        True
                        '%(option)s option requires %(number)d argument'
                        '%(option)s option requires %(number)d arguments'
                        (
                            'option'
                            'number'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: rargs
                        2       LOAD_METHOD                     0: pop
                        4       LOAD_CONST                      1: 0
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      3: arg
                        10      LOAD_CONST                      2: False
                        12      STORE_FAST                      4: stop
                        14      LOAD_CONST                      3: 1
                        16      STORE_FAST                      5: i
                        18      LOAD_FAST                       3: arg
                        20      LOAD_CONST                      3: 1
                        22      LOAD_CONST                      0: None
                        24      BUILD_SLICE                     2
                        26      BINARY_SUBSCR                   
                        28      GET_ITER                        
                        30      FOR_ITER                        107 (to 246)
                        32      STORE_FAST                      6: ch
                        34      LOAD_CONST                      4: '-'
                        36      LOAD_FAST                       6: ch
                        38      BINARY_ADD                      
                        40      STORE_FAST                      7: opt
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       1: _short_opt
                        46      LOAD_METHOD                     2: get
                        48      LOAD_FAST                       7: opt
                        50      CALL_METHOD                     1
                        52      STORE_FAST                      8: option
                        54      LOAD_FAST                       5: i
                        56      LOAD_CONST                      3: 1
                        58      INPLACE_ADD                     
                        60      STORE_FAST                      5: i
                        62      LOAD_FAST                       8: option
                        64      POP_JUMP_IF_TRUE                37 (to 74)
                        66      LOAD_GLOBAL                     3: BadOptionError
                        68      LOAD_FAST                       7: opt
                        70      CALL_FUNCTION                   1
                        72      RAISE_VARARGS                   1
                        74      LOAD_FAST                       8: option
                        76      LOAD_METHOD                     4: takes_value
                        78      CALL_METHOD                     0
                        80      POP_JUMP_IF_FALSE               107 (to 214)
                        82      LOAD_FAST                       5: i
                        84      LOAD_GLOBAL                     5: len
                        86      LOAD_FAST                       3: arg
                        88      CALL_FUNCTION                   1
                        90      COMPARE_OP                      0 (<)
                        92      POP_JUMP_IF_FALSE               59 (to 118)
                        94      LOAD_FAST                       1: rargs
                        96      LOAD_METHOD                     6: insert
                        98      LOAD_CONST                      1: 0
                        100     LOAD_FAST                       3: arg
                        102     LOAD_FAST                       5: i
                        104     LOAD_CONST                      0: None
                        106     BUILD_SLICE                     2
                        108     BINARY_SUBSCR                   
                        110     CALL_METHOD                     2
                        112     POP_TOP                         
                        114     LOAD_CONST                      5: True
                        116     STORE_FAST                      4: stop
                        118     LOAD_FAST                       8: option
                        120     LOAD_ATTR                       7: nargs
                        122     STORE_FAST                      9: nargs
                        124     LOAD_GLOBAL                     5: len
                        126     LOAD_FAST                       1: rargs
                        128     CALL_FUNCTION                   1
                        130     LOAD_FAST                       9: nargs
                        132     COMPARE_OP                      0 (<)
                        134     POP_JUMP_IF_FALSE               83 (to 166)
                        136     LOAD_FAST                       0: self
                        138     LOAD_METHOD                     8: error
                        140     LOAD_GLOBAL                     9: ngettext
                        142     LOAD_CONST                      6: '%(option)s option requires %(number)d argument'
                        144     LOAD_CONST                      7: '%(option)s option requires %(number)d arguments'
                        146     LOAD_FAST                       9: nargs
                        148     CALL_FUNCTION                   3
                        150     LOAD_FAST                       7: opt
                        152     LOAD_FAST                       9: nargs
                        154     LOAD_CONST                      8: ('option', 'number')
                        156     BUILD_CONST_KEY_MAP             2
                        158     BINARY_MODULO                   
                        160     CALL_METHOD                     1
                        162     POP_TOP                         
                        164     JUMP_FORWARD                    26 (to 218)
                        166     LOAD_FAST                       9: nargs
                        168     LOAD_CONST                      3: 1
                        170     COMPARE_OP                      2 (==)
                        172     POP_JUMP_IF_FALSE               93 (to 186)
                        174     LOAD_FAST                       1: rargs
                        176     LOAD_METHOD                     0: pop
                        178     LOAD_CONST                      1: 0
                        180     CALL_METHOD                     1
                        182     STORE_FAST                      10: value
                        184     JUMP_FORWARD                    16 (to 218)
                        186     LOAD_GLOBAL                     10: tuple
                        188     LOAD_FAST                       1: rargs
                        190     LOAD_CONST                      1: 0
                        192     LOAD_FAST                       9: nargs
                        194     BUILD_SLICE                     2
                        196     BINARY_SUBSCR                   
                        198     CALL_FUNCTION                   1
                        200     STORE_FAST                      10: value
                        202     LOAD_FAST                       1: rargs
                        204     LOAD_CONST                      1: 0
                        206     LOAD_FAST                       9: nargs
                        208     BUILD_SLICE                     2
                        210     DELETE_SUBSCR                   
                        212     JUMP_FORWARD                    2 (to 218)
                        214     LOAD_CONST                      0: None
                        216     STORE_FAST                      10: value
                        218     LOAD_FAST                       8: option
                        220     LOAD_METHOD                     11: process
                        222     LOAD_FAST                       7: opt
                        224     LOAD_FAST                       10: value
                        226     LOAD_FAST                       2: values
                        228     LOAD_FAST                       0: self
                        230     CALL_METHOD                     4
                        232     POP_TOP                         
                        234     LOAD_FAST                       4: stop
                        236     POP_JUMP_IF_FALSE               122 (to 244)
                        238     POP_TOP                         
                        240     LOAD_CONST                      0: None
                        242     RETURN_VALUE                    
                        244     JUMP_ABSOLUTE                   15 (to 30)
                        246     LOAD_CONST                      0: None
                        248     RETURN_VALUE                    
                'OptionParser._process_short_opts'
                [Code]
                    File Name: optparse.py
                    Object Name: get_prog_name
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'prog'
                        'os'
                        'path'
                        'basename'
                        'sys'
                        'argv'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: prog
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_GLOBAL                     1: os
                        12      LOAD_ATTR                       2: path
                        14      LOAD_METHOD                     3: basename
                        16      LOAD_GLOBAL                     4: sys
                        18      LOAD_ATTR                       5: argv
                        20      LOAD_CONST                      1: 0
                        22      BINARY_SUBSCR                   
                        24      CALL_METHOD                     1
                        26      RETURN_VALUE                    
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       0: prog
                        32      RETURN_VALUE                    
                'OptionParser.get_prog_name'
                [Code]
                    File Name: optparse.py
                    Object Name: expand_prog_name
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'replace'
                        'get_prog_name'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%prog'
                    [Disassembly]
                        0       LOAD_FAST                       1: s
                        2       LOAD_METHOD                     0: replace
                        4       LOAD_CONST                      1: '%prog'
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: get_prog_name
                        10      CALL_METHOD                     0
                        12      CALL_METHOD                     2
                        14      RETURN_VALUE                    
                'OptionParser.expand_prog_name'
                [Code]
                    File Name: optparse.py
                    Object Name: get_description
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'expand_prog_name'
                        'description'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: expand_prog_name
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: description
                        8       CALL_METHOD                     1
                        10      RETURN_VALUE                    
                'OptionParser.get_description'
                0
                [Code]
                    File Name: optparse.py
                    Object Name: exit
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sys'
                        'stderr'
                        'write'
                        'exit'
                    [Var Names]
                        'self'
                        'status'
                        'msg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: msg
                        2       POP_JUMP_IF_FALSE               8 (to 16)
                        4       LOAD_GLOBAL                     0: sys
                        6       LOAD_ATTR                       1: stderr
                        8       LOAD_METHOD                     2: write
                        10      LOAD_FAST                       2: msg
                        12      CALL_METHOD                     1
                        14      POP_TOP                         
                        16      LOAD_GLOBAL                     0: sys
                        18      LOAD_METHOD                     3: exit
                        20      LOAD_FAST                       1: status
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'OptionParser.exit'
                [Code]
                    File Name: optparse.py
                    Object Name: error
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'print_usage'
                        'sys'
                        'stderr'
                        'exit'
                        'get_prog_name'
                    [Var Names]
                        'self'
                        'msg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "error(msg : string)\n\n        Print a usage message incorporating 'msg' to stderr and exit.\n        If you override this in a subclass, it should not return -- it\n        should either exit or raise an exception.\n        "
                        2
                        '%s: error: %s\n'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: print_usage
                        4       LOAD_GLOBAL                     1: sys
                        6       LOAD_ATTR                       2: stderr
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     3: exit
                        16      LOAD_CONST                      1: 2
                        18      LOAD_CONST                      2: '%s: error: %s\n'
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     4: get_prog_name
                        24      CALL_METHOD                     0
                        26      LOAD_FAST                       1: msg
                        28      BUILD_TUPLE                     2
                        30      BINARY_MODULO                   
                        32      CALL_METHOD                     2
                        34      POP_TOP                         
                        36      LOAD_CONST                      3: None
                        38      RETURN_VALUE                    
                'OptionParser.error'
                [Code]
                    File Name: optparse.py
                    Object Name: get_usage
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'usage'
                        'formatter'
                        'format_usage'
                        'expand_prog_name'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: usage
                        4       POP_JUMP_IF_FALSE               13 (to 26)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: formatter
                        10      LOAD_METHOD                     2: format_usage
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     3: expand_prog_name
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: usage
                        20      CALL_METHOD                     1
                        22      CALL_METHOD                     1
                        24      RETURN_VALUE                    
                        26      LOAD_CONST                      1: ''
                        28      RETURN_VALUE                    
                'OptionParser.get_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: print_usage
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'usage'
                        'print'
                        'get_usage'
                    [Var Names]
                        'self'
                        'file'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'print_usage(file : file = stdout)\n\n        Print the usage message for the current program (self.usage) to\n        \'file\' (default stdout).  Any occurrence of the string "%prog" in\n        self.usage is replaced with the name of the current program\n        (basename of sys.argv[0]).  Does nothing if self.usage is empty\n        or not defined.\n        '
                        (
                            'file'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: usage
                        4       POP_JUMP_IF_FALSE               13 (to 26)
                        6       LOAD_GLOBAL                     1: print
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     2: get_usage
                        12      CALL_METHOD                     0
                        14      LOAD_FAST                       1: file
                        16      LOAD_CONST                      1: ('file',)
                        18      CALL_FUNCTION_KW                2
                        20      POP_TOP                         
                        22      LOAD_CONST                      2: None
                        24      RETURN_VALUE                    
                        26      LOAD_CONST                      2: None
                        28      RETURN_VALUE                    
                'OptionParser.print_usage'
                [Code]
                    File Name: optparse.py
                    Object Name: get_version
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'version'
                        'expand_prog_name'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: version
                        4       POP_JUMP_IF_FALSE               9 (to 18)
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     1: expand_prog_name
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       0: version
                        14      CALL_METHOD                     1
                        16      RETURN_VALUE                    
                        18      LOAD_CONST                      1: ''
                        20      RETURN_VALUE                    
                'OptionParser.get_version'
                [Code]
                    File Name: optparse.py
                    Object Name: print_version
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'version'
                        'print'
                        'get_version'
                    [Var Names]
                        'self'
                        'file'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'print_version(file : file = stdout)\n\n        Print the version message for this program (self.version) to\n        \'file\' (default stdout).  As with print_usage(), any occurrence\n        of "%prog" in self.version is replaced by the current program\'s\n        name.  Does nothing if self.version is empty or undefined.\n        '
                        (
                            'file'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: version
                        4       POP_JUMP_IF_FALSE               13 (to 26)
                        6       LOAD_GLOBAL                     1: print
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     2: get_version
                        12      CALL_METHOD                     0
                        14      LOAD_FAST                       1: file
                        16      LOAD_CONST                      1: ('file',)
                        18      CALL_FUNCTION_KW                2
                        20      POP_TOP                         
                        22      LOAD_CONST                      2: None
                        24      RETURN_VALUE                    
                        26      LOAD_CONST                      2: None
                        28      RETURN_VALUE                    
                'OptionParser.print_version'
                [Code]
                    File Name: optparse.py
                    Object Name: format_option_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'formatter'
                        'store_option_strings'
                        'append'
                        'format_heading'
                        '_'
                        'indent'
                        'option_list'
                        'OptionContainer'
                        'format_option_help'
                        'option_groups'
                        'format_help'
                        'dedent'
                        'join'
                    [Var Names]
                        'self'
                        'formatter'
                        'result'
                        'group'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Options'
                        '\n'
                        ''
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       1: formatter
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: formatter
                        12      STORE_FAST                      1: formatter
                        14      LOAD_FAST                       1: formatter
                        16      LOAD_METHOD                     1: store_option_strings
                        18      LOAD_FAST                       0: self
                        20      CALL_METHOD                     1
                        22      POP_TOP                         
                        24      BUILD_LIST                      0
                        26      STORE_FAST                      2: result
                        28      LOAD_FAST                       2: result
                        30      LOAD_METHOD                     2: append
                        32      LOAD_FAST                       1: formatter
                        34      LOAD_METHOD                     3: format_heading
                        36      LOAD_GLOBAL                     4: _
                        38      LOAD_CONST                      1: 'Options'
                        40      CALL_FUNCTION                   1
                        42      CALL_METHOD                     1
                        44      CALL_METHOD                     1
                        46      POP_TOP                         
                        48      LOAD_FAST                       1: formatter
                        50      LOAD_METHOD                     5: indent
                        52      CALL_METHOD                     0
                        54      POP_TOP                         
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       6: option_list
                        60      POP_JUMP_IF_FALSE               45 (to 90)
                        62      LOAD_FAST                       2: result
                        64      LOAD_METHOD                     2: append
                        66      LOAD_GLOBAL                     7: OptionContainer
                        68      LOAD_METHOD                     8: format_option_help
                        70      LOAD_FAST                       0: self
                        72      LOAD_FAST                       1: formatter
                        74      CALL_METHOD                     2
                        76      CALL_METHOD                     1
                        78      POP_TOP                         
                        80      LOAD_FAST                       2: result
                        82      LOAD_METHOD                     2: append
                        84      LOAD_CONST                      2: '\n'
                        86      CALL_METHOD                     1
                        88      POP_TOP                         
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       9: option_groups
                        94      GET_ITER                        
                        96      FOR_ITER                        15 (to 128)
                        98      STORE_FAST                      3: group
                        100     LOAD_FAST                       2: result
                        102     LOAD_METHOD                     2: append
                        104     LOAD_FAST                       3: group
                        106     LOAD_METHOD                     10: format_help
                        108     LOAD_FAST                       1: formatter
                        110     CALL_METHOD                     1
                        112     CALL_METHOD                     1
                        114     POP_TOP                         
                        116     LOAD_FAST                       2: result
                        118     LOAD_METHOD                     2: append
                        120     LOAD_CONST                      2: '\n'
                        122     CALL_METHOD                     1
                        124     POP_TOP                         
                        126     JUMP_ABSOLUTE                   48 (to 96)
                        128     LOAD_FAST                       1: formatter
                        130     LOAD_METHOD                     11: dedent
                        132     CALL_METHOD                     0
                        134     POP_TOP                         
                        136     LOAD_CONST                      3: ''
                        138     LOAD_METHOD                     12: join
                        140     LOAD_FAST                       2: result
                        142     LOAD_CONST                      0: None
                        144     LOAD_CONST                      4: -1
                        146     BUILD_SLICE                     2
                        148     BINARY_SUBSCR                   
                        150     CALL_METHOD                     1
                        152     RETURN_VALUE                    
                'OptionParser.format_option_help'
                [Code]
                    File Name: optparse.py
                    Object Name: format_epilog
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format_epilog'
                        'epilog'
                    [Var Names]
                        'self'
                        'formatter'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: formatter
                        2       LOAD_METHOD                     0: format_epilog
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: epilog
                        8       CALL_METHOD                     1
                        10      RETURN_VALUE                    
                'OptionParser.format_epilog'
                [Code]
                    File Name: optparse.py
                    Object Name: format_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'formatter'
                        'usage'
                        'append'
                        'get_usage'
                        'description'
                        'format_description'
                        'format_option_help'
                        'format_epilog'
                        'join'
                    [Var Names]
                        'self'
                        'formatter'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '\n'
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       1: formatter
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: formatter
                        12      STORE_FAST                      1: formatter
                        14      BUILD_LIST                      0
                        16      STORE_FAST                      2: result
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       1: usage
                        22      POP_JUMP_IF_FALSE               21 (to 42)
                        24      LOAD_FAST                       2: result
                        26      LOAD_METHOD                     2: append
                        28      LOAD_FAST                       0: self
                        30      LOAD_METHOD                     3: get_usage
                        32      CALL_METHOD                     0
                        34      LOAD_CONST                      1: '\n'
                        36      BINARY_ADD                      
                        38      CALL_METHOD                     1
                        40      POP_TOP                         
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       4: description
                        46      POP_JUMP_IF_FALSE               34 (to 68)
                        48      LOAD_FAST                       2: result
                        50      LOAD_METHOD                     2: append
                        52      LOAD_FAST                       0: self
                        54      LOAD_METHOD                     5: format_description
                        56      LOAD_FAST                       1: formatter
                        58      CALL_METHOD                     1
                        60      LOAD_CONST                      1: '\n'
                        62      BINARY_ADD                      
                        64      CALL_METHOD                     1
                        66      POP_TOP                         
                        68      LOAD_FAST                       2: result
                        70      LOAD_METHOD                     2: append
                        72      LOAD_FAST                       0: self
                        74      LOAD_METHOD                     6: format_option_help
                        76      LOAD_FAST                       1: formatter
                        78      CALL_METHOD                     1
                        80      CALL_METHOD                     1
                        82      POP_TOP                         
                        84      LOAD_FAST                       2: result
                        86      LOAD_METHOD                     2: append
                        88      LOAD_FAST                       0: self
                        90      LOAD_METHOD                     7: format_epilog
                        92      LOAD_FAST                       1: formatter
                        94      CALL_METHOD                     1
                        96      CALL_METHOD                     1
                        98      POP_TOP                         
                        100     LOAD_CONST                      2: ''
                        102     LOAD_METHOD                     8: join
                        104     LOAD_FAST                       2: result
                        106     CALL_METHOD                     1
                        108     RETURN_VALUE                    
                'OptionParser.format_help'
                [Code]
                    File Name: optparse.py
                    Object Name: print_help
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sys'
                        'stdout'
                        'write'
                        'format_help'
                    [Var Names]
                        'self'
                        'file'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "print_help(file : file = stdout)\n\n        Print an extended help message, listing all options and any\n        help text provided with them, to 'file' (default stdout).\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: file
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_GLOBAL                     0: sys
                        10      LOAD_ATTR                       1: stdout
                        12      STORE_FAST                      1: file
                        14      LOAD_FAST                       1: file
                        16      LOAD_METHOD                     2: write
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     3: format_help
                        22      CALL_METHOD                     0
                        24      CALL_METHOD                     1
                        26      POP_TOP                         
                        28      LOAD_CONST                      1: None
                        30      RETURN_VALUE                    
                'OptionParser.print_help'
                (
                    True
                )
                (
                    None
                    None
                )
                (
                    0
                    None
                )
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OptionParser'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      usage : string\n        a usage string for your program.  Before it is displayed\n        to the user, "%prog" will be expanded to the name of\n        your program (self.prog or os.path.basename(sys.argv[0])).\n      prog : string\n        the name of the current program (to override\n        os.path.basename(sys.argv[0])).\n      description : string\n        A paragraph of text giving a brief overview of your program.\n        optparse reformats this paragraph to fit the current terminal\n        width and prints it when the user requests help (after usage,\n        but before the list of options).\n      epilog : string\n        paragraph of help text to print after option help\n\n      option_groups : [OptionGroup]\n        list of option groups in this parser (option groups are\n        irrelevant for parsing the command-line, but very useful\n        for generating help)\n\n      allow_interspersed_args : bool = true\n        if true, positional arguments may be interspersed with options.\n        Assuming -a and -b each take a single argument, the command-line\n          -ablah foo bar -bboo baz\n        will be interpreted the same as\n          -ablah -bboo -- foo bar baz\n        If this flag were false, that command line would be interpreted as\n          -ablah -- foo bar -bboo baz\n        -- ie. we stop processing options as soon as we see the first\n        non-option argument.  (This is the tradition followed by\n        Python\'s getopt module, Perl\'s Getopt::Std, and other argument-\n        parsing libraries, but it is generally annoying to users.)\n\n      process_default_values : bool = true\n        if true, option default values are processed similarly to option\n        values from the command line: that is, they are passed to the\n        type-checking function for the option\'s type (as long as the\n        default value is a string).  (This really only matters if you\n        have defined custom types; see SF bug #955889.)  Set it to false\n        to restore the behaviour of Optik 1.4.1 and earlier.\n\n      rargs : [string]\n        the argument list currently being parsed.  Only set when\n        parse_args() is active, and continually trimmed down as\n        we consume arguments.  Mainly there for the benefit of\n        callback options.\n      largs : [string]\n        the list of leftover arguments that we have skipped while\n        parsing options.  If allow_interspersed_args is false, this\n        list is always empty.\n      values : Values\n        the set of option values currently being accumulated.  Only\n        set when parse_args() is active.  Also mainly for callbacks.\n\n    Because of the \'rargs\', \'largs\', and \'values\' attributes,\n    OptionParser is not thread-safe.  If, for some perverse reason, you\n    need to parse command-line arguments simultaneously in different\n    threads, use different OptionParser instances.\n\n    '
                10      STORE_NAME                      3: __doc__
                12      BUILD_LIST                      0
                14      STORE_NAME                      4: standard_option_list
                16      LOAD_CONST                      2: None
                18      LOAD_CONST                      2: None
                20      LOAD_NAME                       5: Option
                22      LOAD_CONST                      2: None
                24      LOAD_CONST                      3: 'error'
                26      LOAD_CONST                      2: None
                28      LOAD_CONST                      2: None
                30      LOAD_CONST                      4: True
                32      LOAD_CONST                      2: None
                34      LOAD_CONST                      2: None
                36      BUILD_TUPLE                     10
                38      LOAD_CONST                      5: <CODE> __init__
                40      LOAD_CONST                      6: 'OptionParser.__init__'
                42      MAKE_FUNCTION                   1
                44      STORE_NAME                      6: __init__
                46      LOAD_CONST                      7: <CODE> destroy
                48      LOAD_CONST                      8: 'OptionParser.destroy'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      7: destroy
                54      LOAD_CONST                      9: <CODE> _create_option_list
                56      LOAD_CONST                      10: 'OptionParser._create_option_list'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      8: _create_option_list
                62      LOAD_CONST                      11: <CODE> _add_help_option
                64      LOAD_CONST                      12: 'OptionParser._add_help_option'
                66      MAKE_FUNCTION                   0
                68      STORE_NAME                      9: _add_help_option
                70      LOAD_CONST                      13: <CODE> _add_version_option
                72      LOAD_CONST                      14: 'OptionParser._add_version_option'
                74      MAKE_FUNCTION                   0
                76      STORE_NAME                      10: _add_version_option
                78      LOAD_CONST                      80: (True,)
                80      LOAD_CONST                      15: <CODE> _populate_option_list
                82      LOAD_CONST                      16: 'OptionParser._populate_option_list'
                84      MAKE_FUNCTION                   1
                86      STORE_NAME                      11: _populate_option_list
                88      LOAD_CONST                      17: <CODE> _init_parsing_state
                90      LOAD_CONST                      18: 'OptionParser._init_parsing_state'
                92      MAKE_FUNCTION                   0
                94      STORE_NAME                      12: _init_parsing_state
                96      LOAD_CONST                      19: <CODE> set_usage
                98      LOAD_CONST                      20: 'OptionParser.set_usage'
                100     MAKE_FUNCTION                   0
                102     STORE_NAME                      13: set_usage
                104     LOAD_CONST                      21: <CODE> enable_interspersed_args
                106     LOAD_CONST                      22: 'OptionParser.enable_interspersed_args'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      14: enable_interspersed_args
                112     LOAD_CONST                      23: <CODE> disable_interspersed_args
                114     LOAD_CONST                      24: 'OptionParser.disable_interspersed_args'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      15: disable_interspersed_args
                120     LOAD_CONST                      25: <CODE> set_process_default_values
                122     LOAD_CONST                      26: 'OptionParser.set_process_default_values'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      16: set_process_default_values
                128     LOAD_CONST                      27: <CODE> set_default
                130     LOAD_CONST                      28: 'OptionParser.set_default'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      17: set_default
                136     LOAD_CONST                      29: <CODE> set_defaults
                138     LOAD_CONST                      30: 'OptionParser.set_defaults'
                140     MAKE_FUNCTION                   0
                142     STORE_NAME                      18: set_defaults
                144     LOAD_CONST                      31: <CODE> _get_all_options
                146     LOAD_CONST                      32: 'OptionParser._get_all_options'
                148     MAKE_FUNCTION                   0
                150     STORE_NAME                      19: _get_all_options
                152     LOAD_CONST                      33: <CODE> get_default_values
                154     LOAD_CONST                      34: 'OptionParser.get_default_values'
                156     MAKE_FUNCTION                   0
                158     STORE_NAME                      20: get_default_values
                160     LOAD_CONST                      35: <CODE> add_option_group
                162     LOAD_CONST                      36: 'OptionParser.add_option_group'
                164     MAKE_FUNCTION                   0
                166     STORE_NAME                      21: add_option_group
                168     LOAD_CONST                      37: <CODE> get_option_group
                170     LOAD_CONST                      38: 'OptionParser.get_option_group'
                172     MAKE_FUNCTION                   0
                174     STORE_NAME                      22: get_option_group
                176     LOAD_CONST                      39: <CODE> _get_args
                178     LOAD_CONST                      40: 'OptionParser._get_args'
                180     MAKE_FUNCTION                   0
                182     STORE_NAME                      23: _get_args
                184     LOAD_CONST                      81: (None, None)
                186     LOAD_CONST                      41: <CODE> parse_args
                188     LOAD_CONST                      42: 'OptionParser.parse_args'
                190     MAKE_FUNCTION                   1
                192     STORE_NAME                      24: parse_args
                194     LOAD_CONST                      43: <CODE> check_values
                196     LOAD_CONST                      44: 'OptionParser.check_values'
                198     MAKE_FUNCTION                   0
                200     STORE_NAME                      25: check_values
                202     LOAD_CONST                      45: <CODE> _process_args
                204     LOAD_CONST                      46: 'OptionParser._process_args'
                206     MAKE_FUNCTION                   0
                208     STORE_NAME                      26: _process_args
                210     LOAD_CONST                      47: <CODE> _match_long_opt
                212     LOAD_CONST                      48: 'OptionParser._match_long_opt'
                214     MAKE_FUNCTION                   0
                216     STORE_NAME                      27: _match_long_opt
                218     LOAD_CONST                      49: <CODE> _process_long_opt
                220     LOAD_CONST                      50: 'OptionParser._process_long_opt'
                222     MAKE_FUNCTION                   0
                224     STORE_NAME                      28: _process_long_opt
                226     LOAD_CONST                      51: <CODE> _process_short_opts
                228     LOAD_CONST                      52: 'OptionParser._process_short_opts'
                230     MAKE_FUNCTION                   0
                232     STORE_NAME                      29: _process_short_opts
                234     LOAD_CONST                      53: <CODE> get_prog_name
                236     LOAD_CONST                      54: 'OptionParser.get_prog_name'
                238     MAKE_FUNCTION                   0
                240     STORE_NAME                      30: get_prog_name
                242     LOAD_CONST                      55: <CODE> expand_prog_name
                244     LOAD_CONST                      56: 'OptionParser.expand_prog_name'
                246     MAKE_FUNCTION                   0
                248     STORE_NAME                      31: expand_prog_name
                250     LOAD_CONST                      57: <CODE> get_description
                252     LOAD_CONST                      58: 'OptionParser.get_description'
                254     MAKE_FUNCTION                   0
                256     STORE_NAME                      32: get_description
                258     LOAD_CONST                      82: (0, None)
                260     LOAD_CONST                      60: <CODE> exit
                262     LOAD_CONST                      61: 'OptionParser.exit'
                264     MAKE_FUNCTION                   1
                266     STORE_NAME                      33: exit
                268     LOAD_CONST                      62: <CODE> error
                270     LOAD_CONST                      63: 'OptionParser.error'
                272     MAKE_FUNCTION                   0
                274     STORE_NAME                      34: error
                276     LOAD_CONST                      64: <CODE> get_usage
                278     LOAD_CONST                      65: 'OptionParser.get_usage'
                280     MAKE_FUNCTION                   0
                282     STORE_NAME                      35: get_usage
                284     LOAD_CONST                      83: (None,)
                286     LOAD_CONST                      66: <CODE> print_usage
                288     LOAD_CONST                      67: 'OptionParser.print_usage'
                290     MAKE_FUNCTION                   1
                292     STORE_NAME                      36: print_usage
                294     LOAD_CONST                      68: <CODE> get_version
                296     LOAD_CONST                      69: 'OptionParser.get_version'
                298     MAKE_FUNCTION                   0
                300     STORE_NAME                      37: get_version
                302     LOAD_CONST                      83: (None,)
                304     LOAD_CONST                      70: <CODE> print_version
                306     LOAD_CONST                      71: 'OptionParser.print_version'
                308     MAKE_FUNCTION                   1
                310     STORE_NAME                      38: print_version
                312     LOAD_CONST                      83: (None,)
                314     LOAD_CONST                      72: <CODE> format_option_help
                316     LOAD_CONST                      73: 'OptionParser.format_option_help'
                318     MAKE_FUNCTION                   1
                320     STORE_NAME                      39: format_option_help
                322     LOAD_CONST                      74: <CODE> format_epilog
                324     LOAD_CONST                      75: 'OptionParser.format_epilog'
                326     MAKE_FUNCTION                   0
                328     STORE_NAME                      40: format_epilog
                330     LOAD_CONST                      83: (None,)
                332     LOAD_CONST                      76: <CODE> format_help
                334     LOAD_CONST                      77: 'OptionParser.format_help'
                336     MAKE_FUNCTION                   1
                338     STORE_NAME                      41: format_help
                340     LOAD_CONST                      83: (None,)
                342     LOAD_CONST                      78: <CODE> print_help
                344     LOAD_CONST                      79: 'OptionParser.print_help'
                346     MAKE_FUNCTION                   1
                348     STORE_NAME                      42: print_help
                350     LOAD_CONST                      2: None
                352     RETURN_VALUE                    
        'OptionParser'
        [Code]
            File Name: optparse.py
            Object Name: _match_abbrev
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 3
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                'keys'
                'len'
                'BadOptionError'
                'sort'
                'AmbiguousOptionError'
            [Var Names]
                's'
                'wordmap'
                'possibilities'
            [Free Vars]
            [Cell Vars]
                's'
            [Constants]
                "_match_abbrev(s : string, wordmap : {string : Option}) -> string\n\n    Return the string key in 'wordmap' for which 's' is an unambiguous\n    abbreviation.  If 's' is found to be ambiguous or doesn't match any of\n    'words', raise BadOptionError.\n    "
                [Code]
                    File Name: optparse.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'startswith'
                    [Var Names]
                        '.0'
                        'word'
                    [Free Vars]
                        's'
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        9 (to 24)
                        6       STORE_FAST                      1: word
                        8       LOAD_FAST                       1: word
                        10      LOAD_METHOD                     0: startswith
                        12      LOAD_DEREF                      0: s
                        14      CALL_METHOD                     1
                        16      POP_JUMP_IF_FALSE               2 (to 4)
                        18      LOAD_FAST                       1: word
                        20      LIST_APPEND                     2
                        22      JUMP_ABSOLUTE                   2 (to 4)
                        24      RETURN_VALUE                    
                '_match_abbrev.<locals>.<listcomp>'
                1
                0
            [Disassembly]
                0       LOAD_DEREF                      0: s
                2       LOAD_FAST                       1: wordmap
                4       CONTAINS_OP                     0 (in)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_DEREF                      0: s
                10      RETURN_VALUE                    
                12      LOAD_CLOSURE                    0: s
                14      BUILD_TUPLE                     1
                16      LOAD_CONST                      1: <CODE> <listcomp>
                18      LOAD_CONST                      2: '_match_abbrev.<locals>.<listcomp>'
                20      MAKE_FUNCTION                   8
                22      LOAD_FAST                       1: wordmap
                24      LOAD_METHOD                     0: keys
                26      CALL_METHOD                     0
                28      GET_ITER                        
                30      CALL_FUNCTION                   1
                32      STORE_FAST                      2: possibilities
                34      LOAD_GLOBAL                     1: len
                36      LOAD_FAST                       2: possibilities
                38      CALL_FUNCTION                   1
                40      LOAD_CONST                      3: 1
                42      COMPARE_OP                      2 (==)
                44      POP_JUMP_IF_FALSE               27 (to 54)
                46      LOAD_FAST                       2: possibilities
                48      LOAD_CONST                      4: 0
                50      BINARY_SUBSCR                   
                52      RETURN_VALUE                    
                54      LOAD_FAST                       2: possibilities
                56      POP_JUMP_IF_TRUE                33 (to 66)
                58      LOAD_GLOBAL                     2: BadOptionError
                60      LOAD_DEREF                      0: s
                62      CALL_FUNCTION                   1
                64      RAISE_VARARGS                   1
                66      LOAD_FAST                       2: possibilities
                68      LOAD_METHOD                     3: sort
                70      CALL_METHOD                     0
                72      POP_TOP                         
                74      LOAD_GLOBAL                     4: AmbiguousOptionError
                76      LOAD_DEREF                      0: s
                78      LOAD_FAST                       2: possibilities
                80      CALL_FUNCTION                   2
                82      RAISE_VARARGS                   1
        '_match_abbrev'
    [Disassembly]
        0       LOAD_CONST                      0: 'A powerful, extensible, and easy-to-use option parser.\n\nBy Greg Ward <gward@python.net>\n\nOriginally distributed as Optik.\n\nFor support, use the optik-users@lists.sourceforge.net mailing list\n(http://lists.sourceforge.net/lists/listinfo/optik-users).\n\nSimple usage example:\n\n   from optparse import OptionParser\n\n   parser = OptionParser()\n   parser.add_option("-f", "--file", dest="filename",\n                     help="write report to FILE", metavar="FILE")\n   parser.add_option("-q", "--quiet",\n                     action="store_false", dest="verbose", default=True,\n                     help="don\'t print status messages to stdout")\n\n   (options, args) = parser.parse_args()\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: '1.5.3'
        6       STORE_NAME                      1: __version__
        8       BUILD_LIST                      0
        10      LOAD_CONST                      2: ('Option', 'make_option', 'SUPPRESS_HELP', 'SUPPRESS_USAGE', 'Values', 'OptionContainer', 'OptionGroup', 'OptionParser', 'HelpFormatter', 'IndentedHelpFormatter', 'TitledHelpFormatter', 'OptParseError', 'OptionError', 'OptionConflictError', 'OptionValueError', 'BadOptionError', 'check_choice')
        12      LIST_EXTEND                     1
        14      STORE_NAME                      2: __all__
        16      LOAD_CONST                      3: '\nCopyright (c) 2001-2006 Gregory P. Ward.  All rights reserved.\nCopyright (c) 2002-2006 Python Software Foundation.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n  * Neither the name of the author nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS\nIS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n'
        18      STORE_NAME                      3: __copyright__
        20      LOAD_CONST                      4: 0
        22      LOAD_CONST                      5: None
        24      IMPORT_NAME                     4: sys
        26      STORE_NAME                      4: sys
        28      LOAD_CONST                      4: 0
        30      LOAD_CONST                      5: None
        32      IMPORT_NAME                     5: os
        34      STORE_NAME                      5: os
        36      LOAD_CONST                      4: 0
        38      LOAD_CONST                      5: None
        40      IMPORT_NAME                     6: textwrap
        42      STORE_NAME                      6: textwrap
        44      LOAD_CONST                      6: <CODE> _repr
        46      LOAD_CONST                      7: '_repr'
        48      MAKE_FUNCTION                   0
        50      STORE_NAME                      7: _repr
        52      SETUP_FINALLY                   10 (to 74)
        54      LOAD_CONST                      4: 0
        56      LOAD_CONST                      8: ('gettext', 'ngettext')
        58      IMPORT_NAME                     8: gettext
        60      IMPORT_FROM                     8: gettext
        62      STORE_NAME                      8: gettext
        64      IMPORT_FROM                     9: ngettext
        66      STORE_NAME                      9: ngettext
        68      POP_TOP                         
        70      POP_BLOCK                       
        72      JUMP_FORWARD                    17 (to 108)
        74      DUP_TOP                         
        76      LOAD_NAME                       10: ImportError
        78      JUMP_IF_NOT_EXC_MATCH           53 (to 106)
        80      POP_TOP                         
        82      POP_TOP                         
        84      POP_TOP                         
        86      LOAD_CONST                      9: <CODE> gettext
        88      LOAD_CONST                      10: 'gettext'
        90      MAKE_FUNCTION                   0
        92      STORE_NAME                      8: gettext
        94      LOAD_CONST                      11: <CODE> ngettext
        96      LOAD_CONST                      12: 'ngettext'
        98      MAKE_FUNCTION                   0
        100     STORE_NAME                      9: ngettext
        102     POP_EXCEPT                      
        104     JUMP_FORWARD                    1 (to 108)
        106     RERAISE                         0
        108     LOAD_NAME                       8: gettext
        110     STORE_NAME                      11: _
        112     LOAD_BUILD_CLASS                
        114     LOAD_CONST                      13: <CODE> OptParseError
        116     LOAD_CONST                      14: 'OptParseError'
        118     MAKE_FUNCTION                   0
        120     LOAD_CONST                      14: 'OptParseError'
        122     LOAD_NAME                       12: Exception
        124     CALL_FUNCTION                   3
        126     STORE_NAME                      13: OptParseError
        128     LOAD_BUILD_CLASS                
        130     LOAD_CONST                      15: <CODE> OptionError
        132     LOAD_CONST                      16: 'OptionError'
        134     MAKE_FUNCTION                   0
        136     LOAD_CONST                      16: 'OptionError'
        138     LOAD_NAME                       13: OptParseError
        140     CALL_FUNCTION                   3
        142     STORE_NAME                      14: OptionError
        144     LOAD_BUILD_CLASS                
        146     LOAD_CONST                      17: <CODE> OptionConflictError
        148     LOAD_CONST                      18: 'OptionConflictError'
        150     MAKE_FUNCTION                   0
        152     LOAD_CONST                      18: 'OptionConflictError'
        154     LOAD_NAME                       14: OptionError
        156     CALL_FUNCTION                   3
        158     STORE_NAME                      15: OptionConflictError
        160     LOAD_BUILD_CLASS                
        162     LOAD_CONST                      19: <CODE> OptionValueError
        164     LOAD_CONST                      20: 'OptionValueError'
        166     MAKE_FUNCTION                   0
        168     LOAD_CONST                      20: 'OptionValueError'
        170     LOAD_NAME                       13: OptParseError
        172     CALL_FUNCTION                   3
        174     STORE_NAME                      16: OptionValueError
        176     LOAD_BUILD_CLASS                
        178     LOAD_CONST                      21: <CODE> BadOptionError
        180     LOAD_CONST                      22: 'BadOptionError'
        182     MAKE_FUNCTION                   0
        184     LOAD_CONST                      22: 'BadOptionError'
        186     LOAD_NAME                       13: OptParseError
        188     CALL_FUNCTION                   3
        190     STORE_NAME                      17: BadOptionError
        192     LOAD_BUILD_CLASS                
        194     LOAD_CONST                      23: <CODE> AmbiguousOptionError
        196     LOAD_CONST                      24: 'AmbiguousOptionError'
        198     MAKE_FUNCTION                   0
        200     LOAD_CONST                      24: 'AmbiguousOptionError'
        202     LOAD_NAME                       17: BadOptionError
        204     CALL_FUNCTION                   3
        206     STORE_NAME                      18: AmbiguousOptionError
        208     LOAD_BUILD_CLASS                
        210     LOAD_CONST                      25: <CODE> HelpFormatter
        212     LOAD_CONST                      26: 'HelpFormatter'
        214     MAKE_FUNCTION                   0
        216     LOAD_CONST                      26: 'HelpFormatter'
        218     CALL_FUNCTION                   2
        220     STORE_NAME                      19: HelpFormatter
        222     LOAD_BUILD_CLASS                
        224     LOAD_CONST                      27: <CODE> IndentedHelpFormatter
        226     LOAD_CONST                      28: 'IndentedHelpFormatter'
        228     MAKE_FUNCTION                   0
        230     LOAD_CONST                      28: 'IndentedHelpFormatter'
        232     LOAD_NAME                       19: HelpFormatter
        234     CALL_FUNCTION                   3
        236     STORE_NAME                      20: IndentedHelpFormatter
        238     LOAD_BUILD_CLASS                
        240     LOAD_CONST                      29: <CODE> TitledHelpFormatter
        242     LOAD_CONST                      30: 'TitledHelpFormatter'
        244     MAKE_FUNCTION                   0
        246     LOAD_CONST                      30: 'TitledHelpFormatter'
        248     LOAD_NAME                       19: HelpFormatter
        250     CALL_FUNCTION                   3
        252     STORE_NAME                      21: TitledHelpFormatter
        254     LOAD_CONST                      31: <CODE> _parse_num
        256     LOAD_CONST                      32: '_parse_num'
        258     MAKE_FUNCTION                   0
        260     STORE_NAME                      22: _parse_num
        262     LOAD_CONST                      33: <CODE> _parse_int
        264     LOAD_CONST                      34: '_parse_int'
        266     MAKE_FUNCTION                   0
        268     STORE_NAME                      23: _parse_int
        270     LOAD_NAME                       23: _parse_int
        272     LOAD_NAME                       11: _
        274     LOAD_CONST                      35: 'integer'
        276     CALL_FUNCTION                   1
        278     BUILD_TUPLE                     2
        280     LOAD_NAME                       23: _parse_int
        282     LOAD_NAME                       11: _
        284     LOAD_CONST                      35: 'integer'
        286     CALL_FUNCTION                   1
        288     BUILD_TUPLE                     2
        290     LOAD_NAME                       24: float
        292     LOAD_NAME                       11: _
        294     LOAD_CONST                      36: 'floating-point'
        296     CALL_FUNCTION                   1
        298     BUILD_TUPLE                     2
        300     LOAD_NAME                       25: complex
        302     LOAD_NAME                       11: _
        304     LOAD_CONST                      37: 'complex'
        306     CALL_FUNCTION                   1
        308     BUILD_TUPLE                     2
        310     LOAD_CONST                      38: ('int', 'long', 'float', 'complex')
        312     BUILD_CONST_KEY_MAP             4
        314     STORE_NAME                      26: _builtin_cvt
        316     LOAD_CONST                      39: <CODE> check_builtin
        318     LOAD_CONST                      40: 'check_builtin'
        320     MAKE_FUNCTION                   0
        322     STORE_NAME                      27: check_builtin
        324     LOAD_CONST                      41: <CODE> check_choice
        326     LOAD_CONST                      42: 'check_choice'
        328     MAKE_FUNCTION                   0
        330     STORE_NAME                      28: check_choice
        332     LOAD_CONST                      43: ('NO', 'DEFAULT')
        334     STORE_NAME                      29: NO_DEFAULT
        336     LOAD_BUILD_CLASS                
        338     LOAD_CONST                      44: <CODE> Option
        340     LOAD_CONST                      45: 'Option'
        342     MAKE_FUNCTION                   0
        344     LOAD_CONST                      45: 'Option'
        346     CALL_FUNCTION                   2
        348     STORE_NAME                      30: Option
        350     LOAD_CONST                      46: 'SUPPRESSHELP'
        352     STORE_NAME                      31: SUPPRESS_HELP
        354     LOAD_CONST                      47: 'SUPPRESSUSAGE'
        356     STORE_NAME                      32: SUPPRESS_USAGE
        358     LOAD_BUILD_CLASS                
        360     LOAD_CONST                      48: <CODE> Values
        362     LOAD_CONST                      49: 'Values'
        364     MAKE_FUNCTION                   0
        366     LOAD_CONST                      49: 'Values'
        368     CALL_FUNCTION                   2
        370     STORE_NAME                      33: Values
        372     LOAD_BUILD_CLASS                
        374     LOAD_CONST                      50: <CODE> OptionContainer
        376     LOAD_CONST                      51: 'OptionContainer'
        378     MAKE_FUNCTION                   0
        380     LOAD_CONST                      51: 'OptionContainer'
        382     CALL_FUNCTION                   2
        384     STORE_NAME                      34: OptionContainer
        386     LOAD_BUILD_CLASS                
        388     LOAD_CONST                      52: <CODE> OptionGroup
        390     LOAD_CONST                      53: 'OptionGroup'
        392     MAKE_FUNCTION                   0
        394     LOAD_CONST                      53: 'OptionGroup'
        396     LOAD_NAME                       34: OptionContainer
        398     CALL_FUNCTION                   3
        400     STORE_NAME                      35: OptionGroup
        402     LOAD_BUILD_CLASS                
        404     LOAD_CONST                      54: <CODE> OptionParser
        406     LOAD_CONST                      55: 'OptionParser'
        408     MAKE_FUNCTION                   0
        410     LOAD_CONST                      55: 'OptionParser'
        412     LOAD_NAME                       34: OptionContainer
        414     CALL_FUNCTION                   3
        416     STORE_NAME                      36: OptionParser
        418     LOAD_CONST                      56: <CODE> _match_abbrev
        420     LOAD_CONST                      57: '_match_abbrev'
        422     MAKE_FUNCTION                   0
        424     STORE_NAME                      37: _match_abbrev
        426     LOAD_NAME                       30: Option
        428     STORE_NAME                      38: make_option
        430     LOAD_CONST                      5: None
        432     RETURN_VALUE                    
