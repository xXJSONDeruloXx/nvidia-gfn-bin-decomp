pathlib.pyc (Python 3.10)
[Code]
    File Name: pathlib.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 5
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        'fnmatch'
        'functools'
        'io'
        'ntpath'
        'os'
        'posixpath'
        're'
        'sys'
        'warnings'
        '_collections_abc'
        'Sequence'
        'errno'
        'EINVAL'
        'ENOENT'
        'ENOTDIR'
        'EBADF'
        'ELOOP'
        'operator'
        'attrgetter'
        'stat'
        'S_ISDIR'
        'S_ISLNK'
        'S_ISREG'
        'S_ISSOCK'
        'S_ISBLK'
        'S_ISCHR'
        'S_ISFIFO'
        'urllib.parse'
        'quote_from_bytes'
        'urlquote_from_bytes'
        '__all__'
        '_WINERROR_NOT_READY'
        '_WINERROR_INVALID_NAME'
        '_WINERROR_CANT_RESOLVE_FILENAME'
        '_IGNORED_ERROS'
        '_IGNORED_WINERRORS'
        '_ignore_error'
        '_is_wildcard_pattern'
        'object'
        '_Flavour'
        '_WindowsFlavour'
        '_PosixFlavour'
        '_windows_flavour'
        '_posix_flavour'
        '_Accessor'
        '_NormalAccessor'
        '_normal_accessor'
        '_make_selector'
        'hasattr'
        'lru_cache'
        '_Selector'
        '_TerminatingSelector'
        '_PreciseSelector'
        '_WildcardSelector'
        '_RecursiveWildcardSelector'
        '_PathParents'
        'PurePath'
        'PathLike'
        'register'
        'PurePosixPath'
        'PureWindowsPath'
        'Path'
        'PosixPath'
        'WindowsPath'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        0
        None
        (
            'Sequence'
        )
        (
            'EINVAL'
            'ENOENT'
            'ENOTDIR'
            'EBADF'
            'ELOOP'
        )
        (
            'attrgetter'
        )
        (
            'S_ISDIR'
            'S_ISLNK'
            'S_ISREG'
            'S_ISSOCK'
            'S_ISBLK'
            'S_ISCHR'
            'S_ISFIFO'
        )
        (
            'quote_from_bytes'
        )
        (
            'PurePath'
            'PurePosixPath'
            'PureWindowsPath'
            'Path'
            'PosixPath'
            'WindowsPath'
        )
        21
        123
        1921
        [Code]
            File Name: pathlib.py
            Object Name: _ignore_error
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'getattr'
                '_IGNORED_ERROS'
                '_IGNORED_WINERRORS'
            [Var Names]
                'exception'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'errno'
                'winerror'
            [Disassembly]
                0       LOAD_GLOBAL                     0: getattr
                2       LOAD_FAST                       0: exception
                4       LOAD_CONST                      1: 'errno'
                6       LOAD_CONST                      0: None
                8       CALL_FUNCTION                   3
                10      LOAD_GLOBAL                     1: _IGNORED_ERROS
                12      CONTAINS_OP                     0 (in)
                14      JUMP_IF_TRUE_OR_POP             15 (to 30)
                16      LOAD_GLOBAL                     0: getattr
                18      LOAD_FAST                       0: exception
                20      LOAD_CONST                      2: 'winerror'
                22      LOAD_CONST                      0: None
                24      CALL_FUNCTION                   3
                26      LOAD_GLOBAL                     2: _IGNORED_WINERRORS
                28      CONTAINS_OP                     0 (in)
                30      RETURN_VALUE                    
        '_ignore_error'
        [Code]
            File Name: pathlib.py
            Object Name: _is_wildcard_pattern
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'pat'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '*'
                '?'
                '['
            [Disassembly]
                0       LOAD_CONST                      1: '*'
                2       LOAD_FAST                       0: pat
                4       CONTAINS_OP                     0 (in)
                6       JUMP_IF_TRUE_OR_POP             11 (to 22)
                8       LOAD_CONST                      2: '?'
                10      LOAD_FAST                       0: pat
                12      CONTAINS_OP                     0 (in)
                14      JUMP_IF_TRUE_OR_POP             11 (to 22)
                16      LOAD_CONST                      3: '['
                18      LOAD_FAST                       0: pat
                20      CONTAINS_OP                     0 (in)
                22      RETURN_VALUE                    
        '_is_wildcard_pattern'
        [Code]
            File Name: pathlib.py
            Object Name: _Flavour
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'parse_parts'
                'join_parsed_parts'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Flavour'
                'A flavour implements a particular (platform-specific) set of path\n    semantics.'
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sep'
                        'join'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: sep
                        4       LOAD_ATTR                       1: join
                        6       LOAD_FAST                       0: self
                        8       STORE_ATTR                      1: join
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                '_Flavour.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: parse_parts
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sep'
                        'altsep'
                        'reversed'
                        'replace'
                        'splitroot'
                        'split'
                        'append'
                        'sys'
                        'intern'
                        'reverse'
                    [Var Names]
                        'self'
                        'parts'
                        'parsed'
                        'sep'
                        'altsep'
                        'drv'
                        'root'
                        'it'
                        'part'
                        'rel'
                        'x'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                        '.'
                        0
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: parsed
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       0: sep
                        8       STORE_FAST                      3: sep
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: altsep
                        14      STORE_FAST                      4: altsep
                        16      LOAD_CONST                      1: ''
                        18      DUP_TOP                         
                        20      STORE_FAST                      5: drv
                        22      STORE_FAST                      6: root
                        24      LOAD_GLOBAL                     2: reversed
                        26      LOAD_FAST                       1: parts
                        28      CALL_FUNCTION                   1
                        30      STORE_FAST                      7: it
                        32      LOAD_FAST                       7: it
                        34      GET_ITER                        
                        36      FOR_ITER                        99 (to 236)
                        38      STORE_FAST                      8: part
                        40      LOAD_FAST                       8: part
                        42      POP_JUMP_IF_TRUE                23 (to 46)
                        44      JUMP_ABSOLUTE                   18 (to 36)
                        46      LOAD_FAST                       4: altsep
                        48      POP_JUMP_IF_FALSE               31 (to 62)
                        50      LOAD_FAST                       8: part
                        52      LOAD_METHOD                     3: replace
                        54      LOAD_FAST                       4: altsep
                        56      LOAD_FAST                       3: sep
                        58      CALL_METHOD                     2
                        60      STORE_FAST                      8: part
                        62      LOAD_FAST                       0: self
                        64      LOAD_METHOD                     4: splitroot
                        66      LOAD_FAST                       8: part
                        68      CALL_METHOD                     1
                        70      UNPACK_SEQUENCE                 3
                        72      STORE_FAST                      5: drv
                        74      STORE_FAST                      6: root
                        76      STORE_FAST                      9: rel
                        78      LOAD_FAST                       3: sep
                        80      LOAD_FAST                       9: rel
                        82      CONTAINS_OP                     0 (in)
                        84      POP_JUMP_IF_FALSE               68 (to 136)
                        86      LOAD_GLOBAL                     2: reversed
                        88      LOAD_FAST                       9: rel
                        90      LOAD_METHOD                     5: split
                        92      LOAD_FAST                       3: sep
                        94      CALL_METHOD                     1
                        96      CALL_FUNCTION                   1
                        98      GET_ITER                        
                        100     FOR_ITER                        16 (to 134)
                        102     STORE_FAST                      10: x
                        104     LOAD_FAST                       10: x
                        106     POP_JUMP_IF_FALSE               66 (to 132)
                        108     LOAD_FAST                       10: x
                        110     LOAD_CONST                      2: '.'
                        112     COMPARE_OP                      3 (!=)
                        114     POP_JUMP_IF_FALSE               66 (to 132)
                        116     LOAD_FAST                       2: parsed
                        118     LOAD_METHOD                     6: append
                        120     LOAD_GLOBAL                     7: sys
                        122     LOAD_METHOD                     8: intern
                        124     LOAD_FAST                       10: x
                        126     CALL_METHOD                     1
                        128     CALL_METHOD                     1
                        130     POP_TOP                         
                        132     JUMP_ABSOLUTE                   50 (to 100)
                        134     JUMP_FORWARD                    14 (to 164)
                        136     LOAD_FAST                       9: rel
                        138     POP_JUMP_IF_FALSE               82 (to 164)
                        140     LOAD_FAST                       9: rel
                        142     LOAD_CONST                      2: '.'
                        144     COMPARE_OP                      3 (!=)
                        146     POP_JUMP_IF_FALSE               82 (to 164)
                        148     LOAD_FAST                       2: parsed
                        150     LOAD_METHOD                     6: append
                        152     LOAD_GLOBAL                     7: sys
                        154     LOAD_METHOD                     8: intern
                        156     LOAD_FAST                       9: rel
                        158     CALL_METHOD                     1
                        160     CALL_METHOD                     1
                        162     POP_TOP                         
                        164     LOAD_FAST                       5: drv
                        166     POP_JUMP_IF_TRUE                86 (to 172)
                        168     LOAD_FAST                       6: root
                        170     POP_JUMP_IF_FALSE               117 (to 234)
                        172     LOAD_FAST                       5: drv
                        174     POP_JUMP_IF_TRUE                115 (to 230)
                        176     LOAD_FAST                       7: it
                        178     GET_ITER                        
                        180     FOR_ITER                        24 (to 230)
                        182     STORE_FAST                      8: part
                        184     LOAD_FAST                       8: part
                        186     POP_JUMP_IF_TRUE                95 (to 190)
                        188     JUMP_ABSOLUTE                   90 (to 180)
                        190     LOAD_FAST                       4: altsep
                        192     POP_JUMP_IF_FALSE               103 (to 206)
                        194     LOAD_FAST                       8: part
                        196     LOAD_METHOD                     3: replace
                        198     LOAD_FAST                       4: altsep
                        200     LOAD_FAST                       3: sep
                        202     CALL_METHOD                     2
                        204     STORE_FAST                      8: part
                        206     LOAD_FAST                       0: self
                        208     LOAD_METHOD                     4: splitroot
                        210     LOAD_FAST                       8: part
                        212     CALL_METHOD                     1
                        214     LOAD_CONST                      3: 0
                        216     BINARY_SUBSCR                   
                        218     STORE_FAST                      5: drv
                        220     LOAD_FAST                       5: drv
                        222     POP_JUMP_IF_FALSE               114 (to 228)
                        224     POP_TOP                         
                        226     JUMP_FORWARD                    1 (to 230)
                        228     JUMP_ABSOLUTE                   90 (to 180)
                        230     POP_TOP                         
                        232     JUMP_FORWARD                    1 (to 236)
                        234     JUMP_ABSOLUTE                   18 (to 36)
                        236     LOAD_FAST                       5: drv
                        238     POP_JUMP_IF_TRUE                122 (to 244)
                        240     LOAD_FAST                       6: root
                        242     POP_JUMP_IF_FALSE               129 (to 258)
                        244     LOAD_FAST                       2: parsed
                        246     LOAD_METHOD                     6: append
                        248     LOAD_FAST                       5: drv
                        250     LOAD_FAST                       6: root
                        252     BINARY_ADD                      
                        254     CALL_METHOD                     1
                        256     POP_TOP                         
                        258     LOAD_FAST                       2: parsed
                        260     LOAD_METHOD                     9: reverse
                        262     CALL_METHOD                     0
                        264     POP_TOP                         
                        266     LOAD_FAST                       5: drv
                        268     LOAD_FAST                       6: root
                        270     LOAD_FAST                       2: parsed
                        272     BUILD_TUPLE                     3
                        274     RETURN_VALUE                    
                '_Flavour.parse_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: join_parsed_parts
                    Arg Count: 7
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'casefold'
                    [Var Names]
                        'self'
                        'drv'
                        'root'
                        'parts'
                        'drv2'
                        'root2'
                        'parts2'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Join the two paths represented by the respective\n        (drive, root, parts) tuples.  Return a new (drive, root, parts) tuple.\n        '
                        1
                        None
                    [Disassembly]
                        0       LOAD_FAST                       5: root2
                        2       POP_JUMP_IF_FALSE               21 (to 42)
                        4       LOAD_FAST                       4: drv2
                        6       POP_JUMP_IF_TRUE                20 (to 40)
                        8       LOAD_FAST                       1: drv
                        10      POP_JUMP_IF_FALSE               20 (to 40)
                        12      LOAD_FAST                       1: drv
                        14      LOAD_FAST                       5: root2
                        16      LOAD_FAST                       1: drv
                        18      LOAD_FAST                       5: root2
                        20      BINARY_ADD                      
                        22      BUILD_LIST                      1
                        24      LOAD_FAST                       6: parts2
                        26      LOAD_CONST                      1: 1
                        28      LOAD_CONST                      2: None
                        30      BUILD_SLICE                     2
                        32      BINARY_SUBSCR                   
                        34      BINARY_ADD                      
                        36      BUILD_TUPLE                     3
                        38      RETURN_VALUE                    
                        40      JUMP_FORWARD                    35 (to 112)
                        42      LOAD_FAST                       4: drv2
                        44      POP_JUMP_IF_FALSE               49 (to 98)
                        46      LOAD_FAST                       4: drv2
                        48      LOAD_FAST                       1: drv
                        50      COMPARE_OP                      2 (==)
                        52      POP_JUMP_IF_TRUE                37 (to 74)
                        54      LOAD_FAST                       0: self
                        56      LOAD_METHOD                     0: casefold
                        58      LOAD_FAST                       4: drv2
                        60      CALL_METHOD                     1
                        62      LOAD_FAST                       0: self
                        64      LOAD_METHOD                     0: casefold
                        66      LOAD_FAST                       1: drv
                        68      CALL_METHOD                     1
                        70      COMPARE_OP                      2 (==)
                        72      POP_JUMP_IF_FALSE               48 (to 96)
                        74      LOAD_FAST                       1: drv
                        76      LOAD_FAST                       2: root
                        78      LOAD_FAST                       3: parts
                        80      LOAD_FAST                       6: parts2
                        82      LOAD_CONST                      1: 1
                        84      LOAD_CONST                      2: None
                        86      BUILD_SLICE                     2
                        88      BINARY_SUBSCR                   
                        90      BINARY_ADD                      
                        92      BUILD_TUPLE                     3
                        94      RETURN_VALUE                    
                        96      JUMP_FORWARD                    7 (to 112)
                        98      LOAD_FAST                       1: drv
                        100     LOAD_FAST                       2: root
                        102     LOAD_FAST                       3: parts
                        104     LOAD_FAST                       6: parts2
                        106     BINARY_ADD                      
                        108     BUILD_TUPLE                     3
                        110     RETURN_VALUE                    
                        112     LOAD_FAST                       4: drv2
                        114     LOAD_FAST                       5: root2
                        116     LOAD_FAST                       6: parts2
                        118     BUILD_TUPLE                     3
                        120     RETURN_VALUE                    
                '_Flavour.join_parsed_parts'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Flavour'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'A flavour implements a particular (platform-specific) set of path\n    semantics.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: '_Flavour.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> parse_parts
                22      LOAD_CONST                      5: '_Flavour.parse_parts'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: parse_parts
                28      LOAD_CONST                      6: <CODE> join_parsed_parts
                30      LOAD_CONST                      7: '_Flavour.join_parsed_parts'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: join_parsed_parts
                36      LOAD_CONST                      8: None
                38      RETURN_VALUE                    
        '_Flavour'
        [Code]
            File Name: pathlib.py
            Object Name: _WindowsFlavour
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'sep'
                'altsep'
                'has_drv'
                'ntpath'
                'pathmod'
                'os'
                'name'
                'is_supported'
                'set'
                'drive_letters'
                'ext_namespace_prefix'
                'reserved_names'
                'splitroot'
                'casefold'
                'casefold_parts'
                'compile_pattern'
                '_split_extended_path'
                'is_reserved'
                'make_uri'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_WindowsFlavour'
                '\\'
                '/'
                True
                'nt'
                'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
                '\\\\?\\'
                frozenset({
                    'CONIN$'
                    'CONOUT$'
                    'AUX'
                    'CON'
                    'NUL'
                    'PRN'
                })
                [Code]
                    File Name: pathlib.py
                    Object Name: <setcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'c'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'COM%s'
                    [Disassembly]
                        0       BUILD_SET                       0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        6 (to 18)
                        6       STORE_FAST                      1: c
                        8       LOAD_CONST                      0: 'COM%s'
                        10      LOAD_FAST                       1: c
                        12      BINARY_MODULO                   
                        14      SET_ADD                         2
                        16      JUMP_ABSOLUTE                   2 (to 4)
                        18      RETURN_VALUE                    
                '_WindowsFlavour.<setcomp>'
                '123456789¹²³'
                [Code]
                    File Name: pathlib.py
                    Object Name: <setcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'c'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'LPT%s'
                    [Disassembly]
                        0       BUILD_SET                       0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        6 (to 18)
                        6       STORE_FAST                      1: c
                        8       LOAD_CONST                      0: 'LPT%s'
                        10      LOAD_FAST                       1: c
                        12      BINARY_MODULO                   
                        14      SET_ADD                         2
                        16      JUMP_ABSOLUTE                   2 (to 4)
                        18      RETURN_VALUE                    
                [Code]
                    File Name: pathlib.py
                    Object Name: splitroot
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_split_extended_path'
                        'find'
                        'len'
                        'drive_letters'
                        'lstrip'
                    [Var Names]
                        'self'
                        'part'
                        'sep'
                        'first'
                        'second'
                        'prefix'
                        'third'
                        'index'
                        'index2'
                        'drv'
                        'root'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        1
                        2
                        ''
                        3
                        -1
                        ':'
                    [Disassembly]
                        0       LOAD_FAST                       1: part
                        2       LOAD_CONST                      1: 0
                        4       LOAD_CONST                      2: 1
                        6       BUILD_SLICE                     2
                        8       BINARY_SUBSCR                   
                        10      STORE_FAST                      3: first
                        12      LOAD_FAST                       1: part
                        14      LOAD_CONST                      2: 1
                        16      LOAD_CONST                      3: 2
                        18      BUILD_SLICE                     2
                        20      BINARY_SUBSCR                   
                        22      STORE_FAST                      4: second
                        24      LOAD_FAST                       4: second
                        26      LOAD_FAST                       2: sep
                        28      COMPARE_OP                      2 (==)
                        30      POP_JUMP_IF_FALSE               40 (to 80)
                        32      LOAD_FAST                       3: first
                        34      LOAD_FAST                       2: sep
                        36      COMPARE_OP                      2 (==)
                        38      POP_JUMP_IF_FALSE               40 (to 80)
                        40      LOAD_FAST                       0: self
                        42      LOAD_METHOD                     0: _split_extended_path
                        44      LOAD_FAST                       1: part
                        46      CALL_METHOD                     1
                        48      UNPACK_SEQUENCE                 2
                        50      STORE_FAST                      5: prefix
                        52      STORE_FAST                      1: part
                        54      LOAD_FAST                       1: part
                        56      LOAD_CONST                      1: 0
                        58      LOAD_CONST                      2: 1
                        60      BUILD_SLICE                     2
                        62      BINARY_SUBSCR                   
                        64      STORE_FAST                      3: first
                        66      LOAD_FAST                       1: part
                        68      LOAD_CONST                      2: 1
                        70      LOAD_CONST                      3: 2
                        72      BUILD_SLICE                     2
                        74      BINARY_SUBSCR                   
                        76      STORE_FAST                      4: second
                        78      JUMP_FORWARD                    2 (to 84)
                        80      LOAD_CONST                      4: ''
                        82      STORE_FAST                      5: prefix
                        84      LOAD_FAST                       1: part
                        86      LOAD_CONST                      3: 2
                        88      LOAD_CONST                      5: 3
                        90      BUILD_SLICE                     2
                        92      BINARY_SUBSCR                   
                        94      STORE_FAST                      6: third
                        96      LOAD_FAST                       4: second
                        98      LOAD_FAST                       2: sep
                        100     COMPARE_OP                      2 (==)
                        102     POP_JUMP_IF_FALSE               126 (to 252)
                        104     LOAD_FAST                       3: first
                        106     LOAD_FAST                       2: sep
                        108     COMPARE_OP                      2 (==)
                        110     POP_JUMP_IF_FALSE               126 (to 252)
                        112     LOAD_FAST                       6: third
                        114     LOAD_FAST                       2: sep
                        116     COMPARE_OP                      3 (!=)
                        118     POP_JUMP_IF_FALSE               126 (to 252)
                        120     LOAD_FAST                       1: part
                        122     LOAD_METHOD                     1: find
                        124     LOAD_FAST                       2: sep
                        126     LOAD_CONST                      3: 2
                        128     CALL_METHOD                     2
                        130     STORE_FAST                      7: index
                        132     LOAD_FAST                       7: index
                        134     LOAD_CONST                      6: -1
                        136     COMPARE_OP                      3 (!=)
                        138     POP_JUMP_IF_FALSE               126 (to 252)
                        140     LOAD_FAST                       1: part
                        142     LOAD_METHOD                     1: find
                        144     LOAD_FAST                       2: sep
                        146     LOAD_FAST                       7: index
                        148     LOAD_CONST                      2: 1
                        150     BINARY_ADD                      
                        152     CALL_METHOD                     2
                        154     STORE_FAST                      8: index2
                        156     LOAD_FAST                       8: index2
                        158     LOAD_FAST                       7: index
                        160     LOAD_CONST                      2: 1
                        162     BINARY_ADD                      
                        164     COMPARE_OP                      3 (!=)
                        166     POP_JUMP_IF_FALSE               126 (to 252)
                        168     LOAD_FAST                       8: index2
                        170     LOAD_CONST                      6: -1
                        172     COMPARE_OP                      2 (==)
                        174     POP_JUMP_IF_FALSE               92 (to 184)
                        176     LOAD_GLOBAL                     2: len
                        178     LOAD_FAST                       1: part
                        180     CALL_FUNCTION                   1
                        182     STORE_FAST                      8: index2
                        184     LOAD_FAST                       5: prefix
                        186     POP_JUMP_IF_FALSE               111 (to 222)
                        188     LOAD_FAST                       5: prefix
                        190     LOAD_FAST                       1: part
                        192     LOAD_CONST                      2: 1
                        194     LOAD_FAST                       8: index2
                        196     BUILD_SLICE                     2
                        198     BINARY_SUBSCR                   
                        200     BINARY_ADD                      
                        202     LOAD_FAST                       2: sep
                        204     LOAD_FAST                       1: part
                        206     LOAD_FAST                       8: index2
                        208     LOAD_CONST                      2: 1
                        210     BINARY_ADD                      
                        212     LOAD_CONST                      0: None
                        214     BUILD_SLICE                     2
                        216     BINARY_SUBSCR                   
                        218     BUILD_TUPLE                     3
                        220     RETURN_VALUE                    
                        222     LOAD_FAST                       1: part
                        224     LOAD_CONST                      0: None
                        226     LOAD_FAST                       8: index2
                        228     BUILD_SLICE                     2
                        230     BINARY_SUBSCR                   
                        232     LOAD_FAST                       2: sep
                        234     LOAD_FAST                       1: part
                        236     LOAD_FAST                       8: index2
                        238     LOAD_CONST                      2: 1
                        240     BINARY_ADD                      
                        242     LOAD_CONST                      0: None
                        244     BUILD_SLICE                     2
                        246     BINARY_SUBSCR                   
                        248     BUILD_TUPLE                     3
                        250     RETURN_VALUE                    
                        252     LOAD_CONST                      4: ''
                        254     DUP_TOP                         
                        256     STORE_FAST                      9: drv
                        258     STORE_FAST                      10: root
                        260     LOAD_FAST                       4: second
                        262     LOAD_CONST                      7: ':'
                        264     COMPARE_OP                      2 (==)
                        266     POP_JUMP_IF_FALSE               153 (to 306)
                        268     LOAD_FAST                       3: first
                        270     LOAD_FAST                       0: self
                        272     LOAD_ATTR                       3: drive_letters
                        274     CONTAINS_OP                     0 (in)
                        276     POP_JUMP_IF_FALSE               153 (to 306)
                        278     LOAD_FAST                       1: part
                        280     LOAD_CONST                      0: None
                        282     LOAD_CONST                      3: 2
                        284     BUILD_SLICE                     2
                        286     BINARY_SUBSCR                   
                        288     STORE_FAST                      9: drv
                        290     LOAD_FAST                       1: part
                        292     LOAD_CONST                      3: 2
                        294     LOAD_CONST                      0: None
                        296     BUILD_SLICE                     2
                        298     BINARY_SUBSCR                   
                        300     STORE_FAST                      1: part
                        302     LOAD_FAST                       6: third
                        304     STORE_FAST                      3: first
                        306     LOAD_FAST                       3: first
                        308     LOAD_FAST                       2: sep
                        310     COMPARE_OP                      2 (==)
                        312     POP_JUMP_IF_FALSE               164 (to 328)
                        314     LOAD_FAST                       3: first
                        316     STORE_FAST                      10: root
                        318     LOAD_FAST                       1: part
                        320     LOAD_METHOD                     4: lstrip
                        322     LOAD_FAST                       2: sep
                        324     CALL_METHOD                     1
                        326     STORE_FAST                      1: part
                        328     LOAD_FAST                       5: prefix
                        330     LOAD_FAST                       9: drv
                        332     BINARY_ADD                      
                        334     LOAD_FAST                       10: root
                        336     LOAD_FAST                       1: part
                        338     BUILD_TUPLE                     3
                        340     RETURN_VALUE                    
                '_WindowsFlavour.splitroot'
                [Code]
                    File Name: pathlib.py
                    Object Name: casefold
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lower'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: s
                        2       LOAD_METHOD                     0: lower
                        4       CALL_METHOD                     0
                        6       RETURN_VALUE                    
                '_WindowsFlavour.casefold'
                [Code]
                    File Name: pathlib.py
                    Object Name: casefold_parts
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        [Code]
                            File Name: pathlib.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'lower'
                            [Var Names]
                                '.0'
                                'p'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       STORE_FAST                      1: p
                                8       LOAD_FAST                       1: p
                                10      LOAD_METHOD                     0: lower
                                12      CALL_METHOD                     0
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        '_WindowsFlavour.casefold_parts.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: '_WindowsFlavour.casefold_parts.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       1: parts
                        8       GET_ITER                        
                        10      CALL_FUNCTION                   1
                        12      RETURN_VALUE                    
                '_WindowsFlavour.casefold_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: compile_pattern
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        're'
                        'compile'
                        'fnmatch'
                        'translate'
                        'IGNORECASE'
                        'fullmatch'
                    [Var Names]
                        'self'
                        'pattern'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: re
                        2       LOAD_METHOD                     1: compile
                        4       LOAD_GLOBAL                     2: fnmatch
                        6       LOAD_METHOD                     3: translate
                        8       LOAD_FAST                       1: pattern
                        10      CALL_METHOD                     1
                        12      LOAD_GLOBAL                     0: re
                        14      LOAD_ATTR                       4: IGNORECASE
                        16      CALL_METHOD                     2
                        18      LOAD_ATTR                       5: fullmatch
                        20      RETURN_VALUE                    
                '_WindowsFlavour.compile_pattern'
                [Code]
                    File Name: pathlib.py
                    Object Name: _split_extended_path
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'startswith'
                    [Var Names]
                        'self'
                        's'
                        'ext_prefix'
                        'prefix'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                        4
                        'UNC\\'
                        3
                        '\\'
                    [Disassembly]
                        0       LOAD_CONST                      1: ''
                        2       STORE_FAST                      3: prefix
                        4       LOAD_FAST                       1: s
                        6       LOAD_METHOD                     0: startswith
                        8       LOAD_FAST                       2: ext_prefix
                        10      CALL_METHOD                     1
                        12      POP_JUMP_IF_FALSE               40 (to 80)
                        14      LOAD_FAST                       1: s
                        16      LOAD_CONST                      0: None
                        18      LOAD_CONST                      2: 4
                        20      BUILD_SLICE                     2
                        22      BINARY_SUBSCR                   
                        24      STORE_FAST                      3: prefix
                        26      LOAD_FAST                       1: s
                        28      LOAD_CONST                      2: 4
                        30      LOAD_CONST                      0: None
                        32      BUILD_SLICE                     2
                        34      BINARY_SUBSCR                   
                        36      STORE_FAST                      1: s
                        38      LOAD_FAST                       1: s
                        40      LOAD_METHOD                     0: startswith
                        42      LOAD_CONST                      3: 'UNC\\'
                        44      CALL_METHOD                     1
                        46      POP_JUMP_IF_FALSE               40 (to 80)
                        48      LOAD_FAST                       3: prefix
                        50      LOAD_FAST                       1: s
                        52      LOAD_CONST                      0: None
                        54      LOAD_CONST                      4: 3
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      INPLACE_ADD                     
                        62      STORE_FAST                      3: prefix
                        64      LOAD_CONST                      5: '\\'
                        66      LOAD_FAST                       1: s
                        68      LOAD_CONST                      4: 3
                        70      LOAD_CONST                      0: None
                        72      BUILD_SLICE                     2
                        74      BINARY_SUBSCR                   
                        76      BINARY_ADD                      
                        78      STORE_FAST                      1: s
                        80      LOAD_FAST                       3: prefix
                        82      LOAD_FAST                       1: s
                        84      BUILD_TUPLE                     2
                        86      RETURN_VALUE                    
                '_WindowsFlavour._split_extended_path'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_reserved
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'startswith'
                        'partition'
                        'rstrip'
                        'upper'
                        'reserved_names'
                    [Var Names]
                        'self'
                        'parts'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        False
                        0
                        '\\\\'
                        -1
                        '.'
                        ':'
                        ' '
                    [Disassembly]
                        0       LOAD_FAST                       1: parts
                        2       POP_JUMP_IF_TRUE                4 (to 8)
                        4       LOAD_CONST                      1: False
                        6       RETURN_VALUE                    
                        8       LOAD_FAST                       1: parts
                        10      LOAD_CONST                      2: 0
                        12      BINARY_SUBSCR                   
                        14      LOAD_METHOD                     0: startswith
                        16      LOAD_CONST                      3: '\\\\'
                        18      CALL_METHOD                     1
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_CONST                      1: False
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       1: parts
                        28      LOAD_CONST                      4: -1
                        30      BINARY_SUBSCR                   
                        32      LOAD_METHOD                     1: partition
                        34      LOAD_CONST                      5: '.'
                        36      CALL_METHOD                     1
                        38      LOAD_CONST                      2: 0
                        40      BINARY_SUBSCR                   
                        42      LOAD_METHOD                     1: partition
                        44      LOAD_CONST                      6: ':'
                        46      CALL_METHOD                     1
                        48      LOAD_CONST                      2: 0
                        50      BINARY_SUBSCR                   
                        52      LOAD_METHOD                     2: rstrip
                        54      LOAD_CONST                      7: ' '
                        56      CALL_METHOD                     1
                        58      STORE_FAST                      2: name
                        60      LOAD_FAST                       2: name
                        62      LOAD_METHOD                     3: upper
                        64      CALL_METHOD                     0
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       4: reserved_names
                        70      CONTAINS_OP                     0 (in)
                        72      RETURN_VALUE                    
                '_WindowsFlavour.is_reserved'
                [Code]
                    File Name: pathlib.py
                    Object Name: make_uri
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'drive'
                        'len'
                        'as_posix'
                        'lstrip'
                        'urlquote_from_bytes'
                        'encode'
                    [Var Names]
                        'self'
                        'path'
                        'drive'
                        'rest'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        2
                        1
                        ':'
                        '/'
                        'file:///%s/%s'
                        'utf-8'
                        'file:'
                    [Disassembly]
                        0       LOAD_FAST                       1: path
                        2       LOAD_ATTR                       0: drive
                        4       STORE_FAST                      2: drive
                        6       LOAD_GLOBAL                     1: len
                        8       LOAD_FAST                       2: drive
                        10      CALL_FUNCTION                   1
                        12      LOAD_CONST                      1: 2
                        14      COMPARE_OP                      2 (==)
                        16      POP_JUMP_IF_FALSE               37 (to 74)
                        18      LOAD_FAST                       2: drive
                        20      LOAD_CONST                      2: 1
                        22      BINARY_SUBSCR                   
                        24      LOAD_CONST                      3: ':'
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               37 (to 74)
                        30      LOAD_FAST                       1: path
                        32      LOAD_METHOD                     2: as_posix
                        34      CALL_METHOD                     0
                        36      LOAD_CONST                      1: 2
                        38      LOAD_CONST                      0: None
                        40      BUILD_SLICE                     2
                        42      BINARY_SUBSCR                   
                        44      LOAD_METHOD                     3: lstrip
                        46      LOAD_CONST                      4: '/'
                        48      CALL_METHOD                     1
                        50      STORE_FAST                      3: rest
                        52      LOAD_CONST                      5: 'file:///%s/%s'
                        54      LOAD_FAST                       2: drive
                        56      LOAD_GLOBAL                     4: urlquote_from_bytes
                        58      LOAD_FAST                       3: rest
                        60      LOAD_METHOD                     5: encode
                        62      LOAD_CONST                      6: 'utf-8'
                        64      CALL_METHOD                     1
                        66      CALL_FUNCTION                   1
                        68      BUILD_TUPLE                     2
                        70      BINARY_MODULO                   
                        72      RETURN_VALUE                    
                        74      LOAD_CONST                      7: 'file:'
                        76      LOAD_GLOBAL                     4: urlquote_from_bytes
                        78      LOAD_FAST                       1: path
                        80      LOAD_METHOD                     2: as_posix
                        82      CALL_METHOD                     0
                        84      LOAD_METHOD                     5: encode
                        86      LOAD_CONST                      6: 'utf-8'
                        88      CALL_METHOD                     1
                        90      CALL_FUNCTION                   1
                        92      BINARY_ADD                      
                        94      RETURN_VALUE                    
                '_WindowsFlavour.make_uri'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_WindowsFlavour'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\\'
                10      STORE_NAME                      3: sep
                12      LOAD_CONST                      2: '/'
                14      STORE_NAME                      4: altsep
                16      LOAD_CONST                      3: True
                18      STORE_NAME                      5: has_drv
                20      LOAD_NAME                       6: ntpath
                22      STORE_NAME                      7: pathmod
                24      LOAD_NAME                       8: os
                26      LOAD_ATTR                       9: name
                28      LOAD_CONST                      4: 'nt'
                30      COMPARE_OP                      2 (==)
                32      STORE_NAME                      10: is_supported
                34      LOAD_NAME                       11: set
                36      LOAD_CONST                      5: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
                38      CALL_FUNCTION                   1
                40      STORE_NAME                      12: drive_letters
                42      LOAD_CONST                      6: '\\\\?\\'
                44      STORE_NAME                      13: ext_namespace_prefix
                46      BUILD_SET                       0
                48      LOAD_CONST                      7: frozenset({'CONIN$', 'CONOUT$', 'AUX', 'CON', 'NUL', 'PRN'})
                50      SET_UPDATE                      1
                52      LOAD_CONST                      8: <CODE> <setcomp>
                54      LOAD_CONST                      9: '_WindowsFlavour.<setcomp>'
                56      MAKE_FUNCTION                   0
                58      LOAD_CONST                      10: '123456789¹²³'
                60      GET_ITER                        
                62      CALL_FUNCTION                   1
                64      BINARY_OR                       
                66      LOAD_CONST                      11: <CODE> <setcomp>
                68      LOAD_CONST                      9: '_WindowsFlavour.<setcomp>'
                70      MAKE_FUNCTION                   0
                72      LOAD_CONST                      10: '123456789¹²³'
                74      GET_ITER                        
                76      CALL_FUNCTION                   1
                78      BINARY_OR                       
                80      STORE_NAME                      14: reserved_names
                82      LOAD_NAME                       3: sep
                84      BUILD_TUPLE                     1
                86      LOAD_CONST                      12: <CODE> splitroot
                88      LOAD_CONST                      13: '_WindowsFlavour.splitroot'
                90      MAKE_FUNCTION                   1
                92      STORE_NAME                      15: splitroot
                94      LOAD_CONST                      14: <CODE> casefold
                96      LOAD_CONST                      15: '_WindowsFlavour.casefold'
                98      MAKE_FUNCTION                   0
                100     STORE_NAME                      16: casefold
                102     LOAD_CONST                      16: <CODE> casefold_parts
                104     LOAD_CONST                      17: '_WindowsFlavour.casefold_parts'
                106     MAKE_FUNCTION                   0
                108     STORE_NAME                      17: casefold_parts
                110     LOAD_CONST                      18: <CODE> compile_pattern
                112     LOAD_CONST                      19: '_WindowsFlavour.compile_pattern'
                114     MAKE_FUNCTION                   0
                116     STORE_NAME                      18: compile_pattern
                118     LOAD_NAME                       13: ext_namespace_prefix
                120     BUILD_TUPLE                     1
                122     LOAD_CONST                      20: <CODE> _split_extended_path
                124     LOAD_CONST                      21: '_WindowsFlavour._split_extended_path'
                126     MAKE_FUNCTION                   1
                128     STORE_NAME                      19: _split_extended_path
                130     LOAD_CONST                      22: <CODE> is_reserved
                132     LOAD_CONST                      23: '_WindowsFlavour.is_reserved'
                134     MAKE_FUNCTION                   0
                136     STORE_NAME                      20: is_reserved
                138     LOAD_CONST                      24: <CODE> make_uri
                140     LOAD_CONST                      25: '_WindowsFlavour.make_uri'
                142     MAKE_FUNCTION                   0
                144     STORE_NAME                      21: make_uri
                146     LOAD_CONST                      26: None
                148     RETURN_VALUE                    
        '_WindowsFlavour'
        [Code]
            File Name: pathlib.py
            Object Name: _PosixFlavour
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'sep'
                'altsep'
                'has_drv'
                'posixpath'
                'pathmod'
                'os'
                'name'
                'is_supported'
                'splitroot'
                'casefold'
                'casefold_parts'
                'compile_pattern'
                'is_reserved'
                'make_uri'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_PosixFlavour'
                '/'
                ''
                False
                'nt'
                [Code]
                    File Name: pathlib.py
                    Object Name: splitroot
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lstrip'
                        'len'
                    [Var Names]
                        'self'
                        'part'
                        'sep'
                        'stripped_part'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        2
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       1: part
                        2       POP_JUMP_IF_FALSE               35 (to 70)
                        4       LOAD_FAST                       1: part
                        6       LOAD_CONST                      1: 0
                        8       BINARY_SUBSCR                   
                        10      LOAD_FAST                       2: sep
                        12      COMPARE_OP                      2 (==)
                        14      POP_JUMP_IF_FALSE               35 (to 70)
                        16      LOAD_FAST                       1: part
                        18      LOAD_METHOD                     0: lstrip
                        20      LOAD_FAST                       2: sep
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      3: stripped_part
                        26      LOAD_GLOBAL                     1: len
                        28      LOAD_FAST                       1: part
                        30      CALL_FUNCTION                   1
                        32      LOAD_GLOBAL                     1: len
                        34      LOAD_FAST                       3: stripped_part
                        36      CALL_FUNCTION                   1
                        38      BINARY_SUBTRACT                 
                        40      LOAD_CONST                      2: 2
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               30 (to 60)
                        46      LOAD_CONST                      3: ''
                        48      LOAD_FAST                       2: sep
                        50      LOAD_CONST                      2: 2
                        52      BINARY_MULTIPLY                 
                        54      LOAD_FAST                       3: stripped_part
                        56      BUILD_TUPLE                     3
                        58      RETURN_VALUE                    
                        60      LOAD_CONST                      3: ''
                        62      LOAD_FAST                       2: sep
                        64      LOAD_FAST                       3: stripped_part
                        66      BUILD_TUPLE                     3
                        68      RETURN_VALUE                    
                        70      LOAD_CONST                      3: ''
                        72      LOAD_CONST                      3: ''
                        74      LOAD_FAST                       1: part
                        76      BUILD_TUPLE                     3
                        78      RETURN_VALUE                    
                '_PosixFlavour.splitroot'
                [Code]
                    File Name: pathlib.py
                    Object Name: casefold
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: s
                        2       RETURN_VALUE                    
                '_PosixFlavour.casefold'
                [Code]
                    File Name: pathlib.py
                    Object Name: casefold_parts
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: parts
                        2       RETURN_VALUE                    
                '_PosixFlavour.casefold_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: compile_pattern
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        're'
                        'compile'
                        'fnmatch'
                        'translate'
                        'fullmatch'
                    [Var Names]
                        'self'
                        'pattern'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: re
                        2       LOAD_METHOD                     1: compile
                        4       LOAD_GLOBAL                     2: fnmatch
                        6       LOAD_METHOD                     3: translate
                        8       LOAD_FAST                       1: pattern
                        10      CALL_METHOD                     1
                        12      CALL_METHOD                     1
                        14      LOAD_ATTR                       4: fullmatch
                        16      RETURN_VALUE                    
                '_PosixFlavour.compile_pattern'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_reserved
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        False
                    [Disassembly]
                        0       LOAD_CONST                      1: False
                        2       RETURN_VALUE                    
                '_PosixFlavour.is_reserved'
                [Code]
                    File Name: pathlib.py
                    Object Name: make_uri
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'bytes'
                        'urlquote_from_bytes'
                    [Var Names]
                        'self'
                        'path'
                        'bpath'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'file://'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: bytes
                        2       LOAD_FAST                       1: path
                        4       CALL_FUNCTION                   1
                        6       STORE_FAST                      2: bpath
                        8       LOAD_CONST                      1: 'file://'
                        10      LOAD_GLOBAL                     1: urlquote_from_bytes
                        12      LOAD_FAST                       2: bpath
                        14      CALL_FUNCTION                   1
                        16      BINARY_ADD                      
                        18      RETURN_VALUE                    
                '_PosixFlavour.make_uri'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_PosixFlavour'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '/'
                10      STORE_NAME                      3: sep
                12      LOAD_CONST                      2: ''
                14      STORE_NAME                      4: altsep
                16      LOAD_CONST                      3: False
                18      STORE_NAME                      5: has_drv
                20      LOAD_NAME                       6: posixpath
                22      STORE_NAME                      7: pathmod
                24      LOAD_NAME                       8: os
                26      LOAD_ATTR                       9: name
                28      LOAD_CONST                      4: 'nt'
                30      COMPARE_OP                      3 (!=)
                32      STORE_NAME                      10: is_supported
                34      LOAD_NAME                       3: sep
                36      BUILD_TUPLE                     1
                38      LOAD_CONST                      5: <CODE> splitroot
                40      LOAD_CONST                      6: '_PosixFlavour.splitroot'
                42      MAKE_FUNCTION                   1
                44      STORE_NAME                      11: splitroot
                46      LOAD_CONST                      7: <CODE> casefold
                48      LOAD_CONST                      8: '_PosixFlavour.casefold'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      12: casefold
                54      LOAD_CONST                      9: <CODE> casefold_parts
                56      LOAD_CONST                      10: '_PosixFlavour.casefold_parts'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      13: casefold_parts
                62      LOAD_CONST                      11: <CODE> compile_pattern
                64      LOAD_CONST                      12: '_PosixFlavour.compile_pattern'
                66      MAKE_FUNCTION                   0
                68      STORE_NAME                      14: compile_pattern
                70      LOAD_CONST                      13: <CODE> is_reserved
                72      LOAD_CONST                      14: '_PosixFlavour.is_reserved'
                74      MAKE_FUNCTION                   0
                76      STORE_NAME                      15: is_reserved
                78      LOAD_CONST                      15: <CODE> make_uri
                80      LOAD_CONST                      16: '_PosixFlavour.make_uri'
                82      MAKE_FUNCTION                   0
                84      STORE_NAME                      16: make_uri
                86      LOAD_CONST                      17: None
                88      RETURN_VALUE                    
        '_PosixFlavour'
        [Code]
            File Name: pathlib.py
            Object Name: _Accessor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Accessor'
                'An accessor implements a particular (system-specific or not) way of\n    accessing paths on the filesystem.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Accessor'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'An accessor implements a particular (system-specific or not) way of\n    accessing paths on the filesystem.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        '_Accessor'
        [Code]
            File Name: pathlib.py
            Object Name: _NormalAccessor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'os'
                'stat'
                'io'
                'open'
                'listdir'
                'scandir'
                'chmod'
                'mkdir'
                'unlink'
                'hasattr'
                'link'
                'rmdir'
                'rename'
                'replace'
                'symlink'
                'touch'
                'readlink'
                'owner'
                'group'
                'getcwd'
                'staticmethod'
                'path'
                'expanduser'
                'realpath'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_NormalAccessor'
                'link'
                [Code]
                    File Name: pathlib.py
                    Object Name: link
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'src'
                        'dst'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'os.link() not available on this system'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'os.link() not available on this system'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                '_NormalAccessor.link'
                'symlink'
                False
                [Code]
                    File Name: pathlib.py
                    Object Name: symlink
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'src'
                        'dst'
                        'target_is_directory'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'os.symlink() not available on this system'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'os.symlink() not available on this system'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                '_NormalAccessor.symlink'
                438
                True
                [Code]
                    File Name: pathlib.py
                    Object Name: touch
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'utime'
                        'OSError'
                        'O_CREAT'
                        'O_WRONLY'
                        'O_EXCL'
                        'open'
                        'close'
                    [Var Names]
                        'self'
                        'path'
                        'mode'
                        'exist_ok'
                        'flags'
                        'fd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       3: exist_ok
                        2       POP_JUMP_IF_FALSE               21 (to 42)
                        4       SETUP_FINALLY                   9 (to 24)
                        6       LOAD_GLOBAL                     0: os
                        8       LOAD_METHOD                     1: utime
                        10      LOAD_FAST                       1: path
                        12      LOAD_CONST                      0: None
                        14      CALL_METHOD                     2
                        16      POP_TOP                         
                        18      POP_BLOCK                       
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                        24      DUP_TOP                         
                        26      LOAD_GLOBAL                     2: OSError
                        28      JUMP_IF_NOT_EXC_MATCH           20 (to 40)
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      POP_TOP                         
                        36      POP_EXCEPT                      
                        38      JUMP_FORWARD                    1 (to 42)
                        40      RERAISE                         0
                        42      LOAD_GLOBAL                     0: os
                        44      LOAD_ATTR                       3: O_CREAT
                        46      LOAD_GLOBAL                     0: os
                        48      LOAD_ATTR                       4: O_WRONLY
                        50      BINARY_OR                       
                        52      STORE_FAST                      4: flags
                        54      LOAD_FAST                       3: exist_ok
                        56      POP_JUMP_IF_TRUE                34 (to 68)
                        58      LOAD_FAST                       4: flags
                        60      LOAD_GLOBAL                     0: os
                        62      LOAD_ATTR                       5: O_EXCL
                        64      INPLACE_OR                      
                        66      STORE_FAST                      4: flags
                        68      LOAD_GLOBAL                     0: os
                        70      LOAD_METHOD                     6: open
                        72      LOAD_FAST                       1: path
                        74      LOAD_FAST                       4: flags
                        76      LOAD_FAST                       2: mode
                        78      CALL_METHOD                     3
                        80      STORE_FAST                      5: fd
                        82      LOAD_GLOBAL                     0: os
                        84      LOAD_METHOD                     7: close
                        86      LOAD_FAST                       5: fd
                        88      CALL_METHOD                     1
                        90      POP_TOP                         
                        92      LOAD_CONST                      0: None
                        94      RETURN_VALUE                    
                '_NormalAccessor.touch'
                'readlink'
                [Code]
                    File Name: pathlib.py
                    Object Name: readlink
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'path'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'os.readlink() not available on this system'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'os.readlink() not available on this system'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                '_NormalAccessor.readlink'
                [Code]
                    File Name: pathlib.py
                    Object Name: owner
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pwd'
                        'getpwuid'
                        'stat'
                        'st_uid'
                        'pw_name'
                        'ImportError'
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'path'
                        'pwd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        'Path.owner() is unsupported on this system'
                    [Disassembly]
                        0       SETUP_FINALLY                   15 (to 32)
                        2       LOAD_CONST                      1: 0
                        4       LOAD_CONST                      0: None
                        6       IMPORT_NAME                     0: pwd
                        8       STORE_FAST                      2: pwd
                        10      LOAD_FAST                       2: pwd
                        12      LOAD_METHOD                     1: getpwuid
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: stat
                        18      LOAD_FAST                       1: path
                        20      CALL_METHOD                     1
                        22      LOAD_ATTR                       3: st_uid
                        24      CALL_METHOD                     1
                        26      LOAD_ATTR                       4: pw_name
                        28      POP_BLOCK                       
                        30      RETURN_VALUE                    
                        32      DUP_TOP                         
                        34      LOAD_GLOBAL                     5: ImportError
                        36      JUMP_IF_NOT_EXC_MATCH           26 (to 52)
                        38      POP_TOP                         
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      LOAD_GLOBAL                     6: NotImplementedError
                        46      LOAD_CONST                      2: 'Path.owner() is unsupported on this system'
                        48      CALL_FUNCTION                   1
                        50      RAISE_VARARGS                   1
                        52      RERAISE                         0
                '_NormalAccessor.owner'
                [Code]
                    File Name: pathlib.py
                    Object Name: group
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'grp'
                        'getgrgid'
                        'stat'
                        'st_gid'
                        'gr_name'
                        'ImportError'
                        'NotImplementedError'
                    [Var Names]
                        'self'
                        'path'
                        'grp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        'Path.group() is unsupported on this system'
                    [Disassembly]
                        0       SETUP_FINALLY                   15 (to 32)
                        2       LOAD_CONST                      1: 0
                        4       LOAD_CONST                      0: None
                        6       IMPORT_NAME                     0: grp
                        8       STORE_FAST                      2: grp
                        10      LOAD_FAST                       2: grp
                        12      LOAD_METHOD                     1: getgrgid
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: stat
                        18      LOAD_FAST                       1: path
                        20      CALL_METHOD                     1
                        22      LOAD_ATTR                       3: st_gid
                        24      CALL_METHOD                     1
                        26      LOAD_ATTR                       4: gr_name
                        28      POP_BLOCK                       
                        30      RETURN_VALUE                    
                        32      DUP_TOP                         
                        34      LOAD_GLOBAL                     5: ImportError
                        36      JUMP_IF_NOT_EXC_MATCH           26 (to 52)
                        38      POP_TOP                         
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      LOAD_GLOBAL                     6: NotImplementedError
                        46      LOAD_CONST                      2: 'Path.group() is unsupported on this system'
                        48      CALL_FUNCTION                   1
                        50      RAISE_VARARGS                   1
                        52      RERAISE                         0
                '_NormalAccessor.group'
                None
                (
                    False
                )
                (
                    438
                    True
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_NormalAccessor'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_NAME                       3: os
                10      LOAD_ATTR                       4: stat
                12      STORE_NAME                      4: stat
                14      LOAD_NAME                       5: io
                16      LOAD_ATTR                       6: open
                18      STORE_NAME                      6: open
                20      LOAD_NAME                       3: os
                22      LOAD_ATTR                       7: listdir
                24      STORE_NAME                      7: listdir
                26      LOAD_NAME                       3: os
                28      LOAD_ATTR                       8: scandir
                30      STORE_NAME                      8: scandir
                32      LOAD_NAME                       3: os
                34      LOAD_ATTR                       9: chmod
                36      STORE_NAME                      9: chmod
                38      LOAD_NAME                       3: os
                40      LOAD_ATTR                       10: mkdir
                42      STORE_NAME                      10: mkdir
                44      LOAD_NAME                       3: os
                46      LOAD_ATTR                       11: unlink
                48      STORE_NAME                      11: unlink
                50      LOAD_NAME                       12: hasattr
                52      LOAD_NAME                       3: os
                54      LOAD_CONST                      1: 'link'
                56      CALL_FUNCTION                   2
                58      POP_JUMP_IF_FALSE               34 (to 68)
                60      LOAD_NAME                       3: os
                62      LOAD_ATTR                       13: link
                64      STORE_NAME                      13: link
                66      JUMP_FORWARD                    4 (to 76)
                68      LOAD_CONST                      2: <CODE> link
                70      LOAD_CONST                      3: '_NormalAccessor.link'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      13: link
                76      LOAD_NAME                       3: os
                78      LOAD_ATTR                       14: rmdir
                80      STORE_NAME                      14: rmdir
                82      LOAD_NAME                       3: os
                84      LOAD_ATTR                       15: rename
                86      STORE_NAME                      15: rename
                88      LOAD_NAME                       3: os
                90      LOAD_ATTR                       16: replace
                92      STORE_NAME                      16: replace
                94      LOAD_NAME                       12: hasattr
                96      LOAD_NAME                       3: os
                98      LOAD_CONST                      4: 'symlink'
                100     CALL_FUNCTION                   2
                102     POP_JUMP_IF_FALSE               56 (to 112)
                104     LOAD_NAME                       3: os
                106     LOAD_ATTR                       17: symlink
                108     STORE_NAME                      17: symlink
                110     JUMP_FORWARD                    5 (to 122)
                112     LOAD_CONST                      20: (False,)
                114     LOAD_CONST                      6: <CODE> symlink
                116     LOAD_CONST                      7: '_NormalAccessor.symlink'
                118     MAKE_FUNCTION                   1
                120     STORE_NAME                      17: symlink
                122     LOAD_CONST                      21: (438, True)
                124     LOAD_CONST                      10: <CODE> touch
                126     LOAD_CONST                      11: '_NormalAccessor.touch'
                128     MAKE_FUNCTION                   1
                130     STORE_NAME                      18: touch
                132     LOAD_NAME                       12: hasattr
                134     LOAD_NAME                       3: os
                136     LOAD_CONST                      12: 'readlink'
                138     CALL_FUNCTION                   2
                140     POP_JUMP_IF_FALSE               75 (to 150)
                142     LOAD_NAME                       3: os
                144     LOAD_ATTR                       19: readlink
                146     STORE_NAME                      19: readlink
                148     JUMP_FORWARD                    4 (to 158)
                150     LOAD_CONST                      13: <CODE> readlink
                152     LOAD_CONST                      14: '_NormalAccessor.readlink'
                154     MAKE_FUNCTION                   0
                156     STORE_NAME                      19: readlink
                158     LOAD_CONST                      15: <CODE> owner
                160     LOAD_CONST                      16: '_NormalAccessor.owner'
                162     MAKE_FUNCTION                   0
                164     STORE_NAME                      20: owner
                166     LOAD_CONST                      17: <CODE> group
                168     LOAD_CONST                      18: '_NormalAccessor.group'
                170     MAKE_FUNCTION                   0
                172     STORE_NAME                      21: group
                174     LOAD_NAME                       3: os
                176     LOAD_ATTR                       22: getcwd
                178     STORE_NAME                      22: getcwd
                180     LOAD_NAME                       23: staticmethod
                182     LOAD_NAME                       3: os
                184     LOAD_ATTR                       24: path
                186     LOAD_ATTR                       25: expanduser
                188     CALL_FUNCTION                   1
                190     STORE_NAME                      25: expanduser
                192     LOAD_NAME                       23: staticmethod
                194     LOAD_NAME                       3: os
                196     LOAD_ATTR                       24: path
                198     LOAD_ATTR                       26: realpath
                200     CALL_FUNCTION                   1
                202     STORE_NAME                      26: realpath
                204     LOAD_CONST                      19: None
                206     RETURN_VALUE                    
        '_NormalAccessor'
        [Code]
            File Name: pathlib.py
            Object Name: _make_selector
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_RecursiveWildcardSelector'
                'ValueError'
                '_is_wildcard_pattern'
                '_WildcardSelector'
                '_PreciseSelector'
            [Var Names]
                'pattern_parts'
                'flavour'
                'pat'
                'child_parts'
                'cls'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                1
                '**'
                "Invalid pattern: '**' can only be an entire path component"
            [Disassembly]
                0       LOAD_FAST                       0: pattern_parts
                2       LOAD_CONST                      1: 0
                4       BINARY_SUBSCR                   
                6       STORE_FAST                      2: pat
                8       LOAD_FAST                       0: pattern_parts
                10      LOAD_CONST                      2: 1
                12      LOAD_CONST                      0: None
                14      BUILD_SLICE                     2
                16      BINARY_SUBSCR                   
                18      STORE_FAST                      3: child_parts
                20      LOAD_FAST                       2: pat
                22      LOAD_CONST                      3: '**'
                24      COMPARE_OP                      2 (==)
                26      POP_JUMP_IF_FALSE               17 (to 34)
                28      LOAD_GLOBAL                     0: _RecursiveWildcardSelector
                30      STORE_FAST                      4: cls
                32      JUMP_FORWARD                    17 (to 68)
                34      LOAD_CONST                      3: '**'
                36      LOAD_FAST                       2: pat
                38      CONTAINS_OP                     0 (in)
                40      POP_JUMP_IF_FALSE               25 (to 50)
                42      LOAD_GLOBAL                     1: ValueError
                44      LOAD_CONST                      4: "Invalid pattern: '**' can only be an entire path component"
                46      CALL_FUNCTION                   1
                48      RAISE_VARARGS                   1
                50      LOAD_GLOBAL                     2: _is_wildcard_pattern
                52      LOAD_FAST                       2: pat
                54      CALL_FUNCTION                   1
                56      POP_JUMP_IF_FALSE               32 (to 64)
                58      LOAD_GLOBAL                     3: _WildcardSelector
                60      STORE_FAST                      4: cls
                62      JUMP_FORWARD                    2 (to 68)
                64      LOAD_GLOBAL                     4: _PreciseSelector
                66      STORE_FAST                      4: cls
                68      LOAD_FAST                       4: cls
                70      LOAD_FAST                       2: pat
                72      LOAD_FAST                       3: child_parts
                74      LOAD_FAST                       1: flavour
                76      CALL_FUNCTION                   3
                78      RETURN_VALUE                    
        '_make_selector'
        'lru_cache'
        [Code]
            File Name: pathlib.py
            Object Name: _Selector
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'select_from'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Selector'
                'A selector matches a specific glob pattern part against the children\n    of a given path.'
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'child_parts'
                        '_make_selector'
                        'successor'
                        'dironly'
                        '_TerminatingSelector'
                    [Var Names]
                        'self'
                        'child_parts'
                        'flavour'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        False
                    [Disassembly]
                        0       LOAD_FAST                       1: child_parts
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: child_parts
                        6       LOAD_FAST                       1: child_parts
                        8       POP_JUMP_IF_FALSE               16 (to 32)
                        10      LOAD_GLOBAL                     1: _make_selector
                        12      LOAD_FAST                       1: child_parts
                        14      LOAD_FAST                       2: flavour
                        16      CALL_FUNCTION                   2
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      2: successor
                        22      LOAD_CONST                      1: True
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      3: dironly
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                        32      LOAD_GLOBAL                     4: _TerminatingSelector
                        34      CALL_FUNCTION                   0
                        36      LOAD_FAST                       0: self
                        38      STORE_ATTR                      2: successor
                        40      LOAD_CONST                      2: False
                        42      LOAD_FAST                       0: self
                        44      STORE_ATTR                      3: dironly
                        46      LOAD_CONST                      0: None
                        48      RETURN_VALUE                    
                '_Selector.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: select_from
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'is_dir'
                        'exists'
                        '_accessor'
                        'scandir'
                        'iter'
                        '_select_from'
                    [Var Names]
                        'self'
                        'parent_path'
                        'path_cls'
                        'is_dir'
                        'exists'
                        'scandir'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Iterate over all child paths of `parent_path` matched by this\n        selector.  This can contain parent_path itself.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: type
                        2       LOAD_FAST                       1: parent_path
                        4       CALL_FUNCTION                   1
                        6       STORE_FAST                      2: path_cls
                        8       LOAD_FAST                       2: path_cls
                        10      LOAD_ATTR                       1: is_dir
                        12      STORE_FAST                      3: is_dir
                        14      LOAD_FAST                       2: path_cls
                        16      LOAD_ATTR                       2: exists
                        18      STORE_FAST                      4: exists
                        20      LOAD_FAST                       1: parent_path
                        22      LOAD_ATTR                       3: _accessor
                        24      LOAD_ATTR                       4: scandir
                        26      STORE_FAST                      5: scandir
                        28      LOAD_FAST                       3: is_dir
                        30      LOAD_FAST                       1: parent_path
                        32      CALL_FUNCTION                   1
                        34      POP_JUMP_IF_TRUE                22 (to 44)
                        36      LOAD_GLOBAL                     5: iter
                        38      BUILD_LIST                      0
                        40      CALL_FUNCTION                   1
                        42      RETURN_VALUE                    
                        44      LOAD_FAST                       0: self
                        46      LOAD_METHOD                     6: _select_from
                        48      LOAD_FAST                       1: parent_path
                        50      LOAD_FAST                       3: is_dir
                        52      LOAD_FAST                       4: exists
                        54      LOAD_FAST                       5: scandir
                        56      CALL_METHOD                     4
                        58      RETURN_VALUE                    
                '_Selector.select_from'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Selector'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'A selector matches a specific glob pattern part against the children\n    of a given path.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: '_Selector.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> select_from
                22      LOAD_CONST                      5: '_Selector.select_from'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: select_from
                28      LOAD_CONST                      6: None
                30      RETURN_VALUE                    
        '_Selector'
        [Code]
            File Name: pathlib.py
            Object Name: _TerminatingSelector
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '_select_from'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_TerminatingSelector'
                [Code]
                    File Name: pathlib.py
                    Object Name: _select_from
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 1
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        'parent_path'
                        'is_dir'
                        'exists'
                        'scandir'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       1: parent_path
                        4       YIELD_VALUE                     
                        6       POP_TOP                         
                        8       LOAD_CONST                      0: None
                        10      RETURN_VALUE                    
                '_TerminatingSelector._select_from'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_TerminatingSelector'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> _select_from
                10      LOAD_CONST                      2: '_TerminatingSelector._select_from'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: _select_from
                16      LOAD_CONST                      3: None
                18      RETURN_VALUE                    
        '_TerminatingSelector'
        [Code]
            File Name: pathlib.py
            Object Name: _PreciseSelector
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '_select_from'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_PreciseSelector'
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        '_Selector'
                        '__init__'
                    [Var Names]
                        'self'
                        'name'
                        'child_parts'
                        'flavour'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: name
                        6       LOAD_GLOBAL                     1: _Selector
                        8       LOAD_METHOD                     2: __init__
                        10      LOAD_FAST                       0: self
                        12      LOAD_FAST                       2: child_parts
                        14      LOAD_FAST                       3: flavour
                        16      CALL_METHOD                     3
                        18      POP_TOP                         
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                '_PreciseSelector.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: _select_from
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        '_make_child_relpath'
                        'name'
                        'dironly'
                        'successor'
                        '_select_from'
                        'PermissionError'
                    [Var Names]
                        'self'
                        'parent_path'
                        'is_dir'
                        'exists'
                        'scandir'
                        'path'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       SETUP_FINALLY                   36 (to 76)
                        4       LOAD_FAST                       1: parent_path
                        6       LOAD_METHOD                     0: _make_child_relpath
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: name
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      5: path
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: dironly
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_FAST                       2: is_dir
                        24      JUMP_FORWARD                    1 (to 28)
                        26      LOAD_FAST                       3: exists
                        28      LOAD_FAST                       5: path
                        30      CALL_FUNCTION                   1
                        32      POP_JUMP_IF_FALSE               32 (to 64)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       3: successor
                        38      LOAD_METHOD                     4: _select_from
                        40      LOAD_FAST                       5: path
                        42      LOAD_FAST                       2: is_dir
                        44      LOAD_FAST                       3: exists
                        46      LOAD_FAST                       4: scandir
                        48      CALL_METHOD                     4
                        50      GET_ITER                        
                        52      FOR_ITER                        8 (to 70)
                        54      STORE_FAST                      6: p
                        56      LOAD_FAST                       6: p
                        58      YIELD_VALUE                     
                        60      POP_TOP                         
                        62      JUMP_ABSOLUTE                   26 (to 52)
                        64      POP_BLOCK                       
                        66      LOAD_CONST                      0: None
                        68      RETURN_VALUE                    
                        70      POP_BLOCK                       
                        72      LOAD_CONST                      0: None
                        74      RETURN_VALUE                    
                        76      DUP_TOP                         
                        78      LOAD_GLOBAL                     5: PermissionError
                        80      JUMP_IF_NOT_EXC_MATCH           47 (to 94)
                        82      POP_TOP                         
                        84      POP_TOP                         
                        86      POP_TOP                         
                        88      POP_EXCEPT                      
                        90      LOAD_CONST                      0: None
                        92      RETURN_VALUE                    
                        94      RERAISE                         0
                '_PreciseSelector._select_from'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_PreciseSelector'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_PreciseSelector.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> _select_from
                18      LOAD_CONST                      4: '_PreciseSelector._select_from'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: _select_from
                24      LOAD_CONST                      5: None
                26      RETURN_VALUE                    
        '_PreciseSelector'
        [Code]
            File Name: pathlib.py
            Object Name: _WildcardSelector
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '_select_from'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_WildcardSelector'
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'compile_pattern'
                        'match'
                        '_Selector'
                        '__init__'
                    [Var Names]
                        'self'
                        'pat'
                        'child_parts'
                        'flavour'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       3: flavour
                        2       LOAD_METHOD                     0: compile_pattern
                        4       LOAD_FAST                       1: pat
                        6       CALL_METHOD                     1
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: match
                        12      LOAD_GLOBAL                     2: _Selector
                        14      LOAD_METHOD                     3: __init__
                        16      LOAD_FAST                       0: self
                        18      LOAD_FAST                       2: child_parts
                        20      LOAD_FAST                       3: flavour
                        22      CALL_METHOD                     3
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                '_WildcardSelector.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: _select_from
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 12
                    Stack Size: 11
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'list'
                        'dironly'
                        'is_dir'
                        'OSError'
                        '_ignore_error'
                        'name'
                        'match'
                        '_make_child_relpath'
                        'successor'
                        '_select_from'
                        'PermissionError'
                    [Var Names]
                        'self'
                        'parent_path'
                        'is_dir'
                        'exists'
                        'scandir'
                        'scandir_it'
                        'entries'
                        'entry'
                        'e'
                        'name'
                        'path'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       SETUP_FINALLY                   95 (to 194)
                        4       LOAD_FAST                       4: scandir
                        6       LOAD_FAST                       1: parent_path
                        8       CALL_FUNCTION                   1
                        10      SETUP_WITH                      12 (to 36)
                        12      STORE_FAST                      5: scandir_it
                        14      LOAD_GLOBAL                     0: list
                        16      LOAD_FAST                       5: scandir_it
                        18      CALL_FUNCTION                   1
                        20      STORE_FAST                      6: entries
                        22      POP_BLOCK                       
                        24      LOAD_CONST                      0: None
                        26      DUP_TOP                         
                        28      DUP_TOP                         
                        30      CALL_FUNCTION                   3
                        32      POP_TOP                         
                        34      JUMP_FORWARD                    8 (to 52)
                        36      WITH_EXCEPT_START               
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RERAISE                         1
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_EXCEPT                      
                        50      POP_TOP                         
                        52      LOAD_FAST                       6: entries
                        54      GET_ITER                        
                        56      FOR_ITER                        65 (to 188)
                        58      STORE_FAST                      7: entry
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       1: dironly
                        64      POP_JUMP_IF_FALSE               65 (to 130)
                        66      SETUP_FINALLY                   8 (to 84)
                        68      LOAD_FAST                       7: entry
                        70      LOAD_METHOD                     2: is_dir
                        72      CALL_METHOD                     0
                        74      POP_JUMP_IF_TRUE                40 (to 80)
                        76      POP_BLOCK                       
                        78      JUMP_ABSOLUTE                   28 (to 56)
                        80      POP_BLOCK                       
                        82      JUMP_FORWARD                    23 (to 130)
                        84      DUP_TOP                         
                        86      LOAD_GLOBAL                     3: OSError
                        88      JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                        90      POP_TOP                         
                        92      STORE_FAST                      8: e
                        94      POP_TOP                         
                        96      SETUP_FINALLY                   11 (to 120)
                        98      LOAD_GLOBAL                     4: _ignore_error
                        100     LOAD_FAST                       8: e
                        102     CALL_FUNCTION                   1
                        104     POP_JUMP_IF_TRUE                54 (to 108)
                        106     RAISE_VARARGS                   0
                        108     POP_BLOCK                       
                        110     POP_EXCEPT                      
                        112     LOAD_CONST                      0: None
                        114     STORE_FAST                      8: e
                        116     DELETE_FAST                     8: e
                        118     JUMP_ABSOLUTE                   28 (to 56)
                        120     LOAD_CONST                      0: None
                        122     STORE_FAST                      8: e
                        124     DELETE_FAST                     8: e
                        126     RERAISE                         1
                        128     RERAISE                         0
                        130     LOAD_FAST                       7: entry
                        132     LOAD_ATTR                       5: name
                        134     STORE_FAST                      9: name
                        136     LOAD_FAST                       0: self
                        138     LOAD_METHOD                     6: match
                        140     LOAD_FAST                       9: name
                        142     CALL_METHOD                     1
                        144     POP_JUMP_IF_FALSE               93 (to 186)
                        146     LOAD_FAST                       1: parent_path
                        148     LOAD_METHOD                     7: _make_child_relpath
                        150     LOAD_FAST                       9: name
                        152     CALL_METHOD                     1
                        154     STORE_FAST                      10: path
                        156     LOAD_FAST                       0: self
                        158     LOAD_ATTR                       8: successor
                        160     LOAD_METHOD                     9: _select_from
                        162     LOAD_FAST                       10: path
                        164     LOAD_FAST                       2: is_dir
                        166     LOAD_FAST                       3: exists
                        168     LOAD_FAST                       4: scandir
                        170     CALL_METHOD                     4
                        172     GET_ITER                        
                        174     FOR_ITER                        5 (to 186)
                        176     STORE_FAST                      11: p
                        178     LOAD_FAST                       11: p
                        180     YIELD_VALUE                     
                        182     POP_TOP                         
                        184     JUMP_ABSOLUTE                   87 (to 174)
                        186     JUMP_ABSOLUTE                   28 (to 56)
                        188     POP_BLOCK                       
                        190     LOAD_CONST                      0: None
                        192     RETURN_VALUE                    
                        194     DUP_TOP                         
                        196     LOAD_GLOBAL                     10: PermissionError
                        198     JUMP_IF_NOT_EXC_MATCH           106 (to 212)
                        200     POP_TOP                         
                        202     POP_TOP                         
                        204     POP_TOP                         
                        206     POP_EXCEPT                      
                        208     LOAD_CONST                      0: None
                        210     RETURN_VALUE                    
                        212     RERAISE                         0
                '_WildcardSelector._select_from'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_WildcardSelector'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_WildcardSelector.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> _select_from
                18      LOAD_CONST                      4: '_WildcardSelector._select_from'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: _select_from
                24      LOAD_CONST                      5: None
                26      RETURN_VALUE                    
        '_WildcardSelector'
        [Code]
            File Name: pathlib.py
            Object Name: _RecursiveWildcardSelector
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '_iterate_directories'
                '_select_from'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_RecursiveWildcardSelector'
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_Selector'
                        '__init__'
                    [Var Names]
                        'self'
                        'pat'
                        'child_parts'
                        'flavour'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _Selector
                        2       LOAD_METHOD                     1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       2: child_parts
                        8       LOAD_FAST                       3: flavour
                        10      CALL_METHOD                     3
                        12      POP_TOP                         
                        14      LOAD_CONST                      0: None
                        16      RETURN_VALUE                    
                '_RecursiveWildcardSelector.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: _iterate_directories
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 11
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'list'
                        'is_dir'
                        'OSError'
                        '_ignore_error'
                        'is_symlink'
                        '_make_child_relpath'
                        'name'
                        '_iterate_directories'
                        'PermissionError'
                    [Var Names]
                        'self'
                        'parent_path'
                        'is_dir'
                        'scandir'
                        'scandir_it'
                        'entries'
                        'entry'
                        'entry_is_dir'
                        'e'
                        'path'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        False
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       1: parent_path
                        4       YIELD_VALUE                     
                        6       POP_TOP                         
                        8       SETUP_FINALLY                   89 (to 188)
                        10      LOAD_FAST                       3: scandir
                        12      LOAD_FAST                       1: parent_path
                        14      CALL_FUNCTION                   1
                        16      SETUP_WITH                      12 (to 42)
                        18      STORE_FAST                      4: scandir_it
                        20      LOAD_GLOBAL                     0: list
                        22      LOAD_FAST                       4: scandir_it
                        24      CALL_FUNCTION                   1
                        26      STORE_FAST                      5: entries
                        28      POP_BLOCK                       
                        30      LOAD_CONST                      0: None
                        32      DUP_TOP                         
                        34      DUP_TOP                         
                        36      CALL_FUNCTION                   3
                        38      POP_TOP                         
                        40      JUMP_FORWARD                    8 (to 58)
                        42      WITH_EXCEPT_START               
                        44      POP_JUMP_IF_TRUE                24 (to 48)
                        46      RERAISE                         1
                        48      POP_TOP                         
                        50      POP_TOP                         
                        52      POP_TOP                         
                        54      POP_EXCEPT                      
                        56      POP_TOP                         
                        58      LOAD_FAST                       5: entries
                        60      GET_ITER                        
                        62      FOR_ITER                        59 (to 182)
                        64      STORE_FAST                      6: entry
                        66      LOAD_CONST                      1: False
                        68      STORE_FAST                      7: entry_is_dir
                        70      SETUP_FINALLY                   6 (to 84)
                        72      LOAD_FAST                       6: entry
                        74      LOAD_METHOD                     1: is_dir
                        76      CALL_METHOD                     0
                        78      STORE_FAST                      7: entry_is_dir
                        80      POP_BLOCK                       
                        82      JUMP_FORWARD                    23 (to 130)
                        84      DUP_TOP                         
                        86      LOAD_GLOBAL                     2: OSError
                        88      JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                        90      POP_TOP                         
                        92      STORE_FAST                      8: e
                        94      POP_TOP                         
                        96      SETUP_FINALLY                   11 (to 120)
                        98      LOAD_GLOBAL                     3: _ignore_error
                        100     LOAD_FAST                       8: e
                        102     CALL_FUNCTION                   1
                        104     POP_JUMP_IF_TRUE                54 (to 108)
                        106     RAISE_VARARGS                   0
                        108     POP_BLOCK                       
                        110     POP_EXCEPT                      
                        112     LOAD_CONST                      0: None
                        114     STORE_FAST                      8: e
                        116     DELETE_FAST                     8: e
                        118     JUMP_FORWARD                    5 (to 130)
                        120     LOAD_CONST                      0: None
                        122     STORE_FAST                      8: e
                        124     DELETE_FAST                     8: e
                        126     RERAISE                         1
                        128     RERAISE                         0
                        130     LOAD_FAST                       7: entry_is_dir
                        132     POP_JUMP_IF_FALSE               90 (to 180)
                        134     LOAD_FAST                       6: entry
                        136     LOAD_METHOD                     4: is_symlink
                        138     CALL_METHOD                     0
                        140     POP_JUMP_IF_TRUE                90 (to 180)
                        142     LOAD_FAST                       1: parent_path
                        144     LOAD_METHOD                     5: _make_child_relpath
                        146     LOAD_FAST                       6: entry
                        148     LOAD_ATTR                       6: name
                        150     CALL_METHOD                     1
                        152     STORE_FAST                      9: path
                        154     LOAD_FAST                       0: self
                        156     LOAD_METHOD                     7: _iterate_directories
                        158     LOAD_FAST                       9: path
                        160     LOAD_FAST                       2: is_dir
                        162     LOAD_FAST                       3: scandir
                        164     CALL_METHOD                     3
                        166     GET_ITER                        
                        168     FOR_ITER                        5 (to 180)
                        170     STORE_FAST                      10: p
                        172     LOAD_FAST                       10: p
                        174     YIELD_VALUE                     
                        176     POP_TOP                         
                        178     JUMP_ABSOLUTE                   84 (to 168)
                        180     JUMP_ABSOLUTE                   31 (to 62)
                        182     POP_BLOCK                       
                        184     LOAD_CONST                      0: None
                        186     RETURN_VALUE                    
                        188     DUP_TOP                         
                        190     LOAD_GLOBAL                     8: PermissionError
                        192     JUMP_IF_NOT_EXC_MATCH           103 (to 206)
                        194     POP_TOP                         
                        196     POP_TOP                         
                        198     POP_TOP                         
                        200     POP_EXCEPT                      
                        202     LOAD_CONST                      0: None
                        204     RETURN_VALUE                    
                        206     RERAISE                         0
                '_RecursiveWildcardSelector._iterate_directories'
                [Code]
                    File Name: pathlib.py
                    Object Name: _select_from
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 8
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'set'
                        'successor'
                        '_select_from'
                        '_iterate_directories'
                        'add'
                        'clear'
                        'PermissionError'
                    [Var Names]
                        'self'
                        'parent_path'
                        'is_dir'
                        'exists'
                        'scandir'
                        'yielded'
                        'successor_select'
                        'starting_point'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       SETUP_FINALLY                   53 (to 110)
                        4       LOAD_GLOBAL                     0: set
                        6       CALL_FUNCTION                   0
                        8       STORE_FAST                      5: yielded
                        10      SETUP_FINALLY                   44 (to 100)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: successor
                        16      LOAD_ATTR                       2: _select_from
                        18      STORE_FAST                      6: successor_select
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     3: _iterate_directories
                        24      LOAD_FAST                       1: parent_path
                        26      LOAD_FAST                       2: is_dir
                        28      LOAD_FAST                       4: scandir
                        30      CALL_METHOD                     3
                        32      GET_ITER                        
                        34      FOR_ITER                        24 (to 84)
                        36      STORE_FAST                      7: starting_point
                        38      LOAD_FAST                       6: successor_select
                        40      LOAD_FAST                       7: starting_point
                        42      LOAD_FAST                       2: is_dir
                        44      LOAD_FAST                       3: exists
                        46      LOAD_FAST                       4: scandir
                        48      CALL_FUNCTION                   4
                        50      GET_ITER                        
                        52      FOR_ITER                        14 (to 82)
                        54      STORE_FAST                      8: p
                        56      LOAD_FAST                       8: p
                        58      LOAD_FAST                       5: yielded
                        60      CONTAINS_OP                     1 (not in)
                        62      POP_JUMP_IF_FALSE               40 (to 80)
                        64      LOAD_FAST                       8: p
                        66      YIELD_VALUE                     
                        68      POP_TOP                         
                        70      LOAD_FAST                       5: yielded
                        72      LOAD_METHOD                     4: add
                        74      LOAD_FAST                       8: p
                        76      CALL_METHOD                     1
                        78      POP_TOP                         
                        80      JUMP_ABSOLUTE                   26 (to 52)
                        82      JUMP_ABSOLUTE                   17 (to 34)
                        84      POP_BLOCK                       
                        86      LOAD_FAST                       5: yielded
                        88      LOAD_METHOD                     5: clear
                        90      CALL_METHOD                     0
                        92      POP_TOP                         
                        94      POP_BLOCK                       
                        96      LOAD_CONST                      0: None
                        98      RETURN_VALUE                    
                        100     LOAD_FAST                       5: yielded
                        102     LOAD_METHOD                     5: clear
                        104     CALL_METHOD                     0
                        106     POP_TOP                         
                        108     RERAISE                         0
                        110     DUP_TOP                         
                        112     LOAD_GLOBAL                     6: PermissionError
                        114     JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                        116     POP_TOP                         
                        118     POP_TOP                         
                        120     POP_TOP                         
                        122     POP_EXCEPT                      
                        124     LOAD_CONST                      0: None
                        126     RETURN_VALUE                    
                        128     RERAISE                         0
                '_RecursiveWildcardSelector._select_from'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_RecursiveWildcardSelector'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_RecursiveWildcardSelector.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> _iterate_directories
                18      LOAD_CONST                      4: '_RecursiveWildcardSelector._iterate_directories'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: _iterate_directories
                24      LOAD_CONST                      5: <CODE> _select_from
                26      LOAD_CONST                      6: '_RecursiveWildcardSelector._select_from'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      5: _select_from
                32      LOAD_CONST                      7: None
                34      RETURN_VALUE                    
        '_RecursiveWildcardSelector'
        [Code]
            File Name: pathlib.py
            Object Name: _PathParents
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__init__'
                '__len__'
                '__getitem__'
                '__repr__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_PathParents'
                "This object provides sequence-like access to the logical ancestors\n    of a path.  Don't try to construct it yourself."
                (
                    '_pathcls'
                    '_drv'
                    '_root'
                    '_parts'
                )
                [Code]
                    File Name: pathlib.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        '_pathcls'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'self'
                        'path'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: type
                        2       LOAD_FAST                       1: path
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       0: self
                        8       STORE_ATTR                      1: _pathcls
                        10      LOAD_FAST                       1: path
                        12      LOAD_ATTR                       2: _drv
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _drv
                        18      LOAD_FAST                       1: path
                        20      LOAD_ATTR                       3: _root
                        22      LOAD_FAST                       0: self
                        24      STORE_ATTR                      3: _root
                        26      LOAD_FAST                       1: path
                        28      LOAD_ATTR                       4: _parts
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      4: _parts
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                '_PathParents.__init__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __len__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_drv'
                        '_root'
                        'len'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _drv
                        4       POP_JUMP_IF_TRUE                6 (to 12)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _root
                        10      POP_JUMP_IF_FALSE               13 (to 26)
                        12      LOAD_GLOBAL                     2: len
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       3: _parts
                        18      CALL_FUNCTION                   1
                        20      LOAD_CONST                      1: 1
                        22      BINARY_SUBTRACT                 
                        24      RETURN_VALUE                    
                        26      LOAD_GLOBAL                     2: len
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: _parts
                        32      CALL_FUNCTION                   1
                        34      RETURN_VALUE                    
                '_PathParents.__len__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __getitem__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'isinstance'
                        'slice'
                        'tuple'
                        'range'
                        'indices'
                        'len'
                        'IndexError'
                        '_pathcls'
                        '_from_parsed_parts'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'self'
                        'idx'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        None
                        [Code]
                            File Name: pathlib.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000033 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR)
                            [Names]
                            [Var Names]
                                '.0'
                                'i'
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        7 (to 20)
                                6       STORE_FAST                      1: i
                                8       LOAD_DEREF                      0: self
                                10      LOAD_FAST                       1: i
                                12      BINARY_SUBSCR                   
                                14      YIELD_VALUE                     
                                16      POP_TOP                         
                                18      JUMP_ABSOLUTE                   2 (to 4)
                                20      LOAD_CONST                      0: None
                                22      RETURN_VALUE                    
                        '_PathParents.__getitem__.<locals>.<genexpr>'
                        0
                        1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: idx
                        4       LOAD_GLOBAL                     1: slice
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               23 (to 46)
                        10      LOAD_GLOBAL                     2: tuple
                        12      LOAD_CLOSURE                    0: self
                        14      BUILD_TUPLE                     1
                        16      LOAD_CONST                      1: <CODE> <genexpr>
                        18      LOAD_CONST                      2: '_PathParents.__getitem__.<locals>.<genexpr>'
                        20      MAKE_FUNCTION                   8
                        22      LOAD_GLOBAL                     3: range
                        24      LOAD_FAST                       1: idx
                        26      LOAD_METHOD                     4: indices
                        28      LOAD_GLOBAL                     5: len
                        30      LOAD_DEREF                      0: self
                        32      CALL_FUNCTION                   1
                        34      CALL_METHOD                     1
                        36      CALL_FUNCTION_EX                0
                        38      GET_ITER                        
                        40      CALL_FUNCTION                   1
                        42      CALL_FUNCTION                   1
                        44      RETURN_VALUE                    
                        46      LOAD_FAST                       1: idx
                        48      LOAD_GLOBAL                     5: len
                        50      LOAD_DEREF                      0: self
                        52      CALL_FUNCTION                   1
                        54      COMPARE_OP                      5 (>=)
                        56      POP_JUMP_IF_TRUE                36 (to 72)
                        58      LOAD_FAST                       1: idx
                        60      LOAD_GLOBAL                     5: len
                        62      LOAD_DEREF                      0: self
                        64      CALL_FUNCTION                   1
                        66      UNARY_NEGATIVE                  
                        68      COMPARE_OP                      0 (<)
                        70      POP_JUMP_IF_FALSE               40 (to 80)
                        72      LOAD_GLOBAL                     6: IndexError
                        74      LOAD_FAST                       1: idx
                        76      CALL_FUNCTION                   1
                        78      RAISE_VARARGS                   1
                        80      LOAD_FAST                       1: idx
                        82      LOAD_CONST                      3: 0
                        84      COMPARE_OP                      0 (<)
                        86      POP_JUMP_IF_FALSE               50 (to 100)
                        88      LOAD_FAST                       1: idx
                        90      LOAD_GLOBAL                     5: len
                        92      LOAD_DEREF                      0: self
                        94      CALL_FUNCTION                   1
                        96      INPLACE_ADD                     
                        98      STORE_FAST                      1: idx
                        100     LOAD_DEREF                      0: self
                        102     LOAD_ATTR                       7: _pathcls
                        104     LOAD_METHOD                     8: _from_parsed_parts
                        106     LOAD_DEREF                      0: self
                        108     LOAD_ATTR                       9: _drv
                        110     LOAD_DEREF                      0: self
                        112     LOAD_ATTR                       10: _root
                        114     LOAD_DEREF                      0: self
                        116     LOAD_ATTR                       11: _parts
                        118     LOAD_CONST                      0: None
                        120     LOAD_FAST                       1: idx
                        122     UNARY_NEGATIVE                  
                        124     LOAD_CONST                      4: 1
                        126     BINARY_SUBTRACT                 
                        128     BUILD_SLICE                     2
                        130     BINARY_SUBSCR                   
                        132     CALL_METHOD                     3
                        134     RETURN_VALUE                    
                '_PathParents.__getitem__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format'
                        '_pathcls'
                        '__name__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<{}.parents>'
                    [Disassembly]
                        0       LOAD_CONST                      1: '<{}.parents>'
                        2       LOAD_METHOD                     0: format
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _pathcls
                        8       LOAD_ATTR                       2: __name__
                        10      CALL_METHOD                     1
                        12      RETURN_VALUE                    
                '_PathParents.__repr__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_PathParents'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "This object provides sequence-like access to the logical ancestors\n    of a path.  Don't try to construct it yourself."
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('_pathcls', '_drv', '_root', '_parts')
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      3: <CODE> __init__
                18      LOAD_CONST                      4: '_PathParents.__init__'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      5: __init__
                24      LOAD_CONST                      5: <CODE> __len__
                26      LOAD_CONST                      6: '_PathParents.__len__'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      6: __len__
                32      LOAD_CONST                      7: <CODE> __getitem__
                34      LOAD_CONST                      8: '_PathParents.__getitem__'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      7: __getitem__
                40      LOAD_CONST                      9: <CODE> __repr__
                42      LOAD_CONST                      10: '_PathParents.__repr__'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      8: __repr__
                48      LOAD_CONST                      11: None
                50      RETURN_VALUE                    
        '_PathParents'
        [Code]
            File Name: pathlib.py
            Object Name: PurePath
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__new__'
                '__reduce__'
                'classmethod'
                '_parse_args'
                '_from_parts'
                '_from_parsed_parts'
                '_format_parsed_parts'
                '_make_child'
                '__str__'
                '__fspath__'
                'as_posix'
                '__bytes__'
                '__repr__'
                'as_uri'
                'property'
                '_cparts'
                '__eq__'
                '__hash__'
                '__lt__'
                '__le__'
                '__gt__'
                '__ge__'
                '__class_getitem__'
                'attrgetter'
                'drive'
                'root'
                'anchor'
                'name'
                'suffix'
                'suffixes'
                'stem'
                'with_name'
                'with_stem'
                'with_suffix'
                'relative_to'
                'is_relative_to'
                'parts'
                'joinpath'
                '__truediv__'
                '__rtruediv__'
                'parent'
                'parents'
                'is_absolute'
                'is_reserved'
                'match'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'PurePath'
                "Base class for manipulating paths without I/O.\n\n    PurePath represents a filesystem path and offers operations which\n    don't imply any actual filesystem I/O.  Depending on your system,\n    instantiating a PurePath will return either a PurePosixPath or a\n    PureWindowsPath object.  You can also instantiate either of these classes\n    directly, regardless of your system.\n    "
                (
                    '_drv'
                    '_root'
                    '_parts'
                    '_str'
                    '_hash'
                    '_pparts'
                    '_cached_cparts'
                )
                [Code]
                    File Name: pathlib.py
                    Object Name: __new__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        'PurePath'
                        'os'
                        'name'
                        'PureWindowsPath'
                        'PurePosixPath'
                        '_from_parts'
                    [Var Names]
                        'cls'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a PurePath from one or several strings and or existing\n        PurePath objects.  The strings and path objects are combined so as\n        to yield a canonicalized path, which is incorporated into the\n        new PurePath object.\n        '
                        'nt'
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_GLOBAL                     0: PurePath
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               13 (to 26)
                        8       LOAD_GLOBAL                     1: os
                        10      LOAD_ATTR                       2: name
                        12      LOAD_CONST                      1: 'nt'
                        14      COMPARE_OP                      2 (==)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_GLOBAL                     3: PureWindowsPath
                        20      JUMP_FORWARD                    1 (to 24)
                        22      LOAD_GLOBAL                     4: PurePosixPath
                        24      STORE_FAST                      0: cls
                        26      LOAD_FAST                       0: cls
                        28      LOAD_METHOD                     5: _from_parts
                        30      LOAD_FAST                       1: args
                        32      CALL_METHOD                     1
                        34      RETURN_VALUE                    
                'PurePath.__new__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        'tuple'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __class__
                        4       LOAD_GLOBAL                     1: tuple
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _parts
                        10      CALL_FUNCTION                   1
                        12      BUILD_TUPLE                     2
                        14      RETURN_VALUE                    
                'PurePath.__reduce__'
                [Code]
                    File Name: pathlib.py
                    Object Name: _parse_args
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        '_parts'
                        'os'
                        'fspath'
                        'str'
                        'append'
                        'TypeError'
                        'type'
                        '_flavour'
                        'parse_parts'
                    [Var Names]
                        'cls'
                        'args'
                        'parts'
                        'a'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'argument should be a str object or an os.PathLike object returning str, not %r'
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: parts
                        4       LOAD_FAST                       1: args
                        6       GET_ITER                        
                        8       FOR_ITER                        38 (to 86)
                        10      STORE_FAST                      3: a
                        12      LOAD_GLOBAL                     0: isinstance
                        14      LOAD_FAST                       3: a
                        16      LOAD_GLOBAL                     1: PurePath
                        18      CALL_FUNCTION                   2
                        20      POP_JUMP_IF_FALSE               17 (to 34)
                        22      LOAD_FAST                       2: parts
                        24      LOAD_FAST                       3: a
                        26      LOAD_ATTR                       2: _parts
                        28      INPLACE_ADD                     
                        30      STORE_FAST                      2: parts
                        32      JUMP_ABSOLUTE                   4 (to 8)
                        34      LOAD_GLOBAL                     3: os
                        36      LOAD_METHOD                     4: fspath
                        38      LOAD_FAST                       3: a
                        40      CALL_METHOD                     1
                        42      STORE_FAST                      3: a
                        44      LOAD_GLOBAL                     0: isinstance
                        46      LOAD_FAST                       3: a
                        48      LOAD_GLOBAL                     5: str
                        50      CALL_FUNCTION                   2
                        52      POP_JUMP_IF_FALSE               35 (to 70)
                        54      LOAD_FAST                       2: parts
                        56      LOAD_METHOD                     6: append
                        58      LOAD_GLOBAL                     5: str
                        60      LOAD_FAST                       3: a
                        62      CALL_FUNCTION                   1
                        64      CALL_METHOD                     1
                        66      POP_TOP                         
                        68      JUMP_ABSOLUTE                   4 (to 8)
                        70      LOAD_GLOBAL                     7: TypeError
                        72      LOAD_CONST                      1: 'argument should be a str object or an os.PathLike object returning str, not %r'
                        74      LOAD_GLOBAL                     8: type
                        76      LOAD_FAST                       3: a
                        78      CALL_FUNCTION                   1
                        80      BINARY_MODULO                   
                        82      CALL_FUNCTION                   1
                        84      RAISE_VARARGS                   1
                        86      LOAD_FAST                       0: cls
                        88      LOAD_ATTR                       9: _flavour
                        90      LOAD_METHOD                     10: parse_parts
                        92      LOAD_FAST                       2: parts
                        94      CALL_METHOD                     1
                        96      RETURN_VALUE                    
                'PurePath._parse_args'
                [Code]
                    File Name: pathlib.py
                    Object Name: _from_parts
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        '__new__'
                        '_parse_args'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'cls'
                        'args'
                        'self'
                        'drv'
                        'root'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       LOAD_METHOD                     1: __new__
                        4       LOAD_FAST                       0: cls
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      2: self
                        10      LOAD_FAST                       2: self
                        12      LOAD_METHOD                     2: _parse_args
                        14      LOAD_FAST                       1: args
                        16      CALL_METHOD                     1
                        18      UNPACK_SEQUENCE                 3
                        20      STORE_FAST                      3: drv
                        22      STORE_FAST                      4: root
                        24      STORE_FAST                      5: parts
                        26      LOAD_FAST                       3: drv
                        28      LOAD_FAST                       2: self
                        30      STORE_ATTR                      3: _drv
                        32      LOAD_FAST                       4: root
                        34      LOAD_FAST                       2: self
                        36      STORE_ATTR                      4: _root
                        38      LOAD_FAST                       5: parts
                        40      LOAD_FAST                       2: self
                        42      STORE_ATTR                      5: _parts
                        44      LOAD_FAST                       2: self
                        46      RETURN_VALUE                    
                'PurePath._from_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: _from_parsed_parts
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'object'
                        '__new__'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'cls'
                        'drv'
                        'root'
                        'parts'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: object
                        2       LOAD_METHOD                     1: __new__
                        4       LOAD_FAST                       0: cls
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      4: self
                        10      LOAD_FAST                       1: drv
                        12      LOAD_FAST                       4: self
                        14      STORE_ATTR                      2: _drv
                        16      LOAD_FAST                       2: root
                        18      LOAD_FAST                       4: self
                        20      STORE_ATTR                      3: _root
                        22      LOAD_FAST                       3: parts
                        24      LOAD_FAST                       4: self
                        26      STORE_ATTR                      4: _parts
                        28      LOAD_FAST                       4: self
                        30      RETURN_VALUE                    
                'PurePath._from_parsed_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: _format_parsed_parts
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_flavour'
                        'join'
                    [Var Names]
                        'cls'
                        'drv'
                        'root'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       1: drv
                        2       POP_JUMP_IF_TRUE                4 (to 8)
                        4       LOAD_FAST                       2: root
                        6       POP_JUMP_IF_FALSE               18 (to 36)
                        8       LOAD_FAST                       1: drv
                        10      LOAD_FAST                       2: root
                        12      BINARY_ADD                      
                        14      LOAD_FAST                       0: cls
                        16      LOAD_ATTR                       0: _flavour
                        18      LOAD_METHOD                     1: join
                        20      LOAD_FAST                       3: parts
                        22      LOAD_CONST                      1: 1
                        24      LOAD_CONST                      0: None
                        26      BUILD_SLICE                     2
                        28      BINARY_SUBSCR                   
                        30      CALL_METHOD                     1
                        32      BINARY_ADD                      
                        34      RETURN_VALUE                    
                        36      LOAD_FAST                       0: cls
                        38      LOAD_ATTR                       0: _flavour
                        40      LOAD_METHOD                     1: join
                        42      LOAD_FAST                       3: parts
                        44      CALL_METHOD                     1
                        46      RETURN_VALUE                    
                'PurePath._format_parsed_parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: _make_child
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_parse_args'
                        '_flavour'
                        'join_parsed_parts'
                        '_drv'
                        '_root'
                        '_parts'
                        '_from_parsed_parts'
                    [Var Names]
                        'self'
                        'args'
                        'drv'
                        'root'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _parse_args
                        4       LOAD_FAST                       1: args
                        6       CALL_METHOD                     1
                        8       UNPACK_SEQUENCE                 3
                        10      STORE_FAST                      2: drv
                        12      STORE_FAST                      3: root
                        14      STORE_FAST                      4: parts
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       1: _flavour
                        20      LOAD_METHOD                     2: join_parsed_parts
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _drv
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _root
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       5: _parts
                        34      LOAD_FAST                       2: drv
                        36      LOAD_FAST                       3: root
                        38      LOAD_FAST                       4: parts
                        40      CALL_METHOD                     6
                        42      UNPACK_SEQUENCE                 3
                        44      STORE_FAST                      2: drv
                        46      STORE_FAST                      3: root
                        48      STORE_FAST                      4: parts
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     6: _from_parsed_parts
                        54      LOAD_FAST                       2: drv
                        56      LOAD_FAST                       3: root
                        58      LOAD_FAST                       4: parts
                        60      CALL_METHOD                     3
                        62      RETURN_VALUE                    
                'PurePath._make_child'
                [Code]
                    File Name: pathlib.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_str'
                        'AttributeError'
                        '_format_parsed_parts'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the string representation of the path, suitable for\n        passing to system calls.'
                        '.'
                    [Disassembly]
                        0       SETUP_FINALLY                   4 (to 10)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _str
                        6       POP_BLOCK                       
                        8       RETURN_VALUE                    
                        10      DUP_TOP                         
                        12      LOAD_GLOBAL                     1: AttributeError
                        14      JUMP_IF_NOT_EXC_MATCH           29 (to 58)
                        16      POP_TOP                         
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     2: _format_parsed_parts
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       3: _drv
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       4: _root
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       5: _parts
                        38      CALL_METHOD                     3
                        40      JUMP_IF_TRUE_OR_POP             22 (to 44)
                        42      LOAD_CONST                      1: '.'
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      0: _str
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       0: _str
                        52      ROT_FOUR                        
                        54      POP_EXCEPT                      
                        56      RETURN_VALUE                    
                        58      RERAISE                         0
                'PurePath.__str__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __fspath__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'str'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: str
                        2       LOAD_FAST                       0: self
                        4       CALL_FUNCTION                   1
                        6       RETURN_VALUE                    
                'PurePath.__fspath__'
                [Code]
                    File Name: pathlib.py
                    Object Name: as_posix
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_flavour'
                        'str'
                        'replace'
                        'sep'
                    [Var Names]
                        'self'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the string representation of the path with forward (/)\n        slashes.'
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _flavour
                        4       STORE_FAST                      1: f
                        6       LOAD_GLOBAL                     1: str
                        8       LOAD_FAST                       0: self
                        10      CALL_FUNCTION                   1
                        12      LOAD_METHOD                     2: replace
                        14      LOAD_FAST                       1: f
                        16      LOAD_ATTR                       3: sep
                        18      LOAD_CONST                      1: '/'
                        20      CALL_METHOD                     2
                        22      RETURN_VALUE                    
                'PurePath.as_posix'
                [Code]
                    File Name: pathlib.py
                    Object Name: __bytes__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'fsencode'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the bytes representation of the path.  This is only\n        recommended to use under Unix.'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_METHOD                     1: fsencode
                        4       LOAD_FAST                       0: self
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'PurePath.__bytes__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format'
                        '__class__'
                        '__name__'
                        'as_posix'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '{}({!r})'
                    [Disassembly]
                        0       LOAD_CONST                      1: '{}({!r})'
                        2       LOAD_METHOD                     0: format
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: __class__
                        8       LOAD_ATTR                       2: __name__
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     3: as_posix
                        14      CALL_METHOD                     0
                        16      CALL_METHOD                     2
                        18      RETURN_VALUE                    
                'PurePath.__repr__'
                [Code]
                    File Name: pathlib.py
                    Object Name: as_uri
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'is_absolute'
                        'ValueError'
                        '_flavour'
                        'make_uri'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the path as a 'file' URI."
                        "relative path can't be expressed as a file URI"
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: is_absolute
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_TRUE                8 (to 16)
                        8       LOAD_GLOBAL                     1: ValueError
                        10      LOAD_CONST                      1: "relative path can't be expressed as a file URI"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: _flavour
                        20      LOAD_METHOD                     3: make_uri
                        22      LOAD_FAST                       0: self
                        24      CALL_METHOD                     1
                        26      RETURN_VALUE                    
                'PurePath.as_uri'
                [Code]
                    File Name: pathlib.py
                    Object Name: _cparts
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_cached_cparts'
                        'AttributeError'
                        '_flavour'
                        'casefold_parts'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   4 (to 10)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _cached_cparts
                        6       POP_BLOCK                       
                        8       RETURN_VALUE                    
                        10      DUP_TOP                         
                        12      LOAD_GLOBAL                     1: AttributeError
                        14      JUMP_IF_NOT_EXC_MATCH           24 (to 48)
                        16      POP_TOP                         
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       2: _flavour
                        26      LOAD_METHOD                     3: casefold_parts
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       4: _parts
                        32      CALL_METHOD                     1
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      0: _cached_cparts
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       0: _cached_cparts
                        42      ROT_FOUR                        
                        44      POP_EXCEPT                      
                        46      RETURN_VALUE                    
                        48      RERAISE                         0
                'PurePath._cparts'
                [Code]
                    File Name: pathlib.py
                    Object Name: __eq__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        'NotImplemented'
                        '_cparts'
                        '_flavour'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: PurePath
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_GLOBAL                     2: NotImplemented
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       3: _cparts
                        18      LOAD_FAST                       1: other
                        20      LOAD_ATTR                       3: _cparts
                        22      COMPARE_OP                      2 (==)
                        24      JUMP_IF_FALSE_OR_POP            18 (to 36)
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _flavour
                        30      LOAD_FAST                       1: other
                        32      LOAD_ATTR                       4: _flavour
                        34      IS_OP                           0 (is)
                        36      RETURN_VALUE                    
                'PurePath.__eq__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __hash__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_hash'
                        'AttributeError'
                        'hash'
                        'tuple'
                        '_cparts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   4 (to 10)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _hash
                        6       POP_BLOCK                       
                        8       RETURN_VALUE                    
                        10      DUP_TOP                         
                        12      LOAD_GLOBAL                     1: AttributeError
                        14      JUMP_IF_NOT_EXC_MATCH           24 (to 48)
                        16      POP_TOP                         
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      LOAD_GLOBAL                     2: hash
                        24      LOAD_GLOBAL                     3: tuple
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _cparts
                        30      CALL_FUNCTION                   1
                        32      CALL_FUNCTION                   1
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      0: _hash
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       0: _hash
                        42      ROT_FOUR                        
                        44      POP_EXCEPT                      
                        46      RETURN_VALUE                    
                        48      RERAISE                         0
                'PurePath.__hash__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __lt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        '_flavour'
                        'NotImplemented'
                        '_cparts'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: PurePath
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _flavour
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: _flavour
                        18      IS_OP                           1 (is not)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_GLOBAL                     3: NotImplemented
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _cparts
                        30      LOAD_FAST                       1: other
                        32      LOAD_ATTR                       4: _cparts
                        34      COMPARE_OP                      0 (<)
                        36      RETURN_VALUE                    
                'PurePath.__lt__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __le__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        '_flavour'
                        'NotImplemented'
                        '_cparts'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: PurePath
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _flavour
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: _flavour
                        18      IS_OP                           1 (is not)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_GLOBAL                     3: NotImplemented
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _cparts
                        30      LOAD_FAST                       1: other
                        32      LOAD_ATTR                       4: _cparts
                        34      COMPARE_OP                      1 (<=)
                        36      RETURN_VALUE                    
                'PurePath.__le__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __gt__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        '_flavour'
                        'NotImplemented'
                        '_cparts'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: PurePath
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _flavour
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: _flavour
                        18      IS_OP                           1 (is not)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_GLOBAL                     3: NotImplemented
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _cparts
                        30      LOAD_FAST                       1: other
                        32      LOAD_ATTR                       4: _cparts
                        34      COMPARE_OP                      4 (>)
                        36      RETURN_VALUE                    
                'PurePath.__gt__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __ge__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'PurePath'
                        '_flavour'
                        'NotImplemented'
                        '_cparts'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: other
                        4       LOAD_GLOBAL                     1: PurePath
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _flavour
                        14      LOAD_FAST                       1: other
                        16      LOAD_ATTR                       2: _flavour
                        18      IS_OP                           1 (is not)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_GLOBAL                     3: NotImplemented
                        24      RETURN_VALUE                    
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _cparts
                        30      LOAD_FAST                       1: other
                        32      LOAD_ATTR                       4: _cparts
                        34      COMPARE_OP                      5 (>=)
                        36      RETURN_VALUE                    
                'PurePath.__ge__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __class_getitem__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'cls'
                        'type'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       RETURN_VALUE                    
                'PurePath.__class_getitem__'
                '_drv'
                'The drive prefix (letter or UNC path), if any.'
                (
                    'doc'
                )
                '_root'
                'The root of the path, if any.'
                [Code]
                    File Name: pathlib.py
                    Object Name: anchor
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_drv'
                        '_root'
                    [Var Names]
                        'self'
                        'anchor'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "The concatenation of the drive and root, or ''."
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _drv
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _root
                        8       BINARY_ADD                      
                        10      STORE_FAST                      1: anchor
                        12      LOAD_FAST                       1: anchor
                        14      RETURN_VALUE                    
                'PurePath.anchor'
                [Code]
                    File Name: pathlib.py
                    Object Name: name
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_parts'
                        'len'
                        '_drv'
                        '_root'
                    [Var Names]
                        'self'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'The final path component, if any.'
                        1
                        0
                        ''
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _parts
                        4       STORE_FAST                      1: parts
                        6       LOAD_GLOBAL                     1: len
                        8       LOAD_FAST                       1: parts
                        10      CALL_FUNCTION                   1
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _drv
                        16      POP_JUMP_IF_TRUE                12 (to 24)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       3: _root
                        22      POP_JUMP_IF_FALSE               14 (to 28)
                        24      LOAD_CONST                      1: 1
                        26      JUMP_FORWARD                    1 (to 30)
                        28      LOAD_CONST                      2: 0
                        30      COMPARE_OP                      2 (==)
                        32      POP_JUMP_IF_FALSE               19 (to 38)
                        34      LOAD_CONST                      3: ''
                        36      RETURN_VALUE                    
                        38      LOAD_FAST                       1: parts
                        40      LOAD_CONST                      4: -1
                        42      BINARY_SUBSCR                   
                        44      RETURN_VALUE                    
                'PurePath.name'
                [Code]
                    File Name: pathlib.py
                    Object Name: suffix
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        'rfind'
                        'len'
                    [Var Names]
                        'self'
                        'name'
                        'i'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        The final component's last suffix, if any.\n\n        This includes the leading period. For example: '.txt'\n        "
                        '.'
                        0
                        1
                        None
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       STORE_FAST                      1: name
                        6       LOAD_FAST                       1: name
                        8       LOAD_METHOD                     1: rfind
                        10      LOAD_CONST                      1: '.'
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      2: i
                        16      LOAD_CONST                      2: 0
                        18      LOAD_FAST                       2: i
                        20      DUP_TOP                         
                        22      ROT_THREE                       
                        24      COMPARE_OP                      0 (<)
                        26      POP_JUMP_IF_FALSE               22 (to 44)
                        28      LOAD_GLOBAL                     2: len
                        30      LOAD_FAST                       1: name
                        32      CALL_FUNCTION                   1
                        34      LOAD_CONST                      3: 1
                        36      BINARY_SUBTRACT                 
                        38      COMPARE_OP                      0 (<)
                        40      POP_JUMP_IF_FALSE               31 (to 62)
                        42      JUMP_FORWARD                    3 (to 50)
                        44      POP_TOP                         
                        46      LOAD_CONST                      5: ''
                        48      RETURN_VALUE                    
                        50      LOAD_FAST                       1: name
                        52      LOAD_FAST                       2: i
                        54      LOAD_CONST                      4: None
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      RETURN_VALUE                    
                        62      LOAD_CONST                      5: ''
                        64      RETURN_VALUE                    
                'PurePath.suffix'
                [Code]
                    File Name: pathlib.py
                    Object Name: suffixes
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        'endswith'
                        'lstrip'
                        'split'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        A list of the final component's suffixes, if any.\n\n        These include the leading periods. For example: ['.tar', '.gz']\n        "
                        '.'
                        [Code]
                            File Name: pathlib.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                            [Var Names]
                                '.0'
                                'suffix'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                '.'
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       STORE_FAST                      1: suffix
                                8       LOAD_CONST                      0: '.'
                                10      LOAD_FAST                       1: suffix
                                12      BINARY_ADD                      
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        'PurePath.suffixes.<locals>.<listcomp>'
                        1
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       STORE_FAST                      1: name
                        6       LOAD_FAST                       1: name
                        8       LOAD_METHOD                     1: endswith
                        10      LOAD_CONST                      1: '.'
                        12      CALL_METHOD                     1
                        14      POP_JUMP_IF_FALSE               10 (to 20)
                        16      BUILD_LIST                      0
                        18      RETURN_VALUE                    
                        20      LOAD_FAST                       1: name
                        22      LOAD_METHOD                     2: lstrip
                        24      LOAD_CONST                      1: '.'
                        26      CALL_METHOD                     1
                        28      STORE_FAST                      1: name
                        30      LOAD_CONST                      2: <CODE> <listcomp>
                        32      LOAD_CONST                      3: 'PurePath.suffixes.<locals>.<listcomp>'
                        34      MAKE_FUNCTION                   0
                        36      LOAD_FAST                       1: name
                        38      LOAD_METHOD                     3: split
                        40      LOAD_CONST                      1: '.'
                        42      CALL_METHOD                     1
                        44      LOAD_CONST                      4: 1
                        46      LOAD_CONST                      5: None
                        48      BUILD_SLICE                     2
                        50      BINARY_SUBSCR                   
                        52      GET_ITER                        
                        54      CALL_FUNCTION                   1
                        56      RETURN_VALUE                    
                'PurePath.suffixes'
                [Code]
                    File Name: pathlib.py
                    Object Name: stem
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        'rfind'
                        'len'
                    [Var Names]
                        'self'
                        'name'
                        'i'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'The final path component, minus its last suffix.'
                        '.'
                        0
                        1
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       STORE_FAST                      1: name
                        6       LOAD_FAST                       1: name
                        8       LOAD_METHOD                     1: rfind
                        10      LOAD_CONST                      1: '.'
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      2: i
                        16      LOAD_CONST                      2: 0
                        18      LOAD_FAST                       2: i
                        20      DUP_TOP                         
                        22      ROT_THREE                       
                        24      COMPARE_OP                      0 (<)
                        26      POP_JUMP_IF_FALSE               22 (to 44)
                        28      LOAD_GLOBAL                     2: len
                        30      LOAD_FAST                       1: name
                        32      CALL_FUNCTION                   1
                        34      LOAD_CONST                      3: 1
                        36      BINARY_SUBTRACT                 
                        38      COMPARE_OP                      0 (<)
                        40      POP_JUMP_IF_FALSE               31 (to 62)
                        42      JUMP_FORWARD                    3 (to 50)
                        44      POP_TOP                         
                        46      LOAD_FAST                       1: name
                        48      RETURN_VALUE                    
                        50      LOAD_FAST                       1: name
                        52      LOAD_CONST                      4: None
                        54      LOAD_FAST                       2: i
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      RETURN_VALUE                    
                        62      LOAD_FAST                       1: name
                        64      RETURN_VALUE                    
                'PurePath.stem'
                [Code]
                    File Name: pathlib.py
                    Object Name: with_name
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        'ValueError'
                        '_flavour'
                        'parse_parts'
                        'sep'
                        'altsep'
                        'len'
                        '_from_parsed_parts'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'self'
                        'name'
                        'drv'
                        'root'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new path with the file name changed.'
                        '%r has an empty name'
                        -1
                        1
                        'Invalid name %r'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       POP_JUMP_IF_TRUE                10 (to 20)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: '%r has an empty name'
                        10      LOAD_FAST                       0: self
                        12      BUILD_TUPLE                     1
                        14      BINARY_MODULO                   
                        16      CALL_FUNCTION                   1
                        18      RAISE_VARARGS                   1
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       2: _flavour
                        24      LOAD_METHOD                     3: parse_parts
                        26      LOAD_FAST                       1: name
                        28      BUILD_TUPLE                     1
                        30      CALL_METHOD                     1
                        32      UNPACK_SEQUENCE                 3
                        34      STORE_FAST                      2: drv
                        36      STORE_FAST                      3: root
                        38      STORE_FAST                      4: parts
                        40      LOAD_FAST                       1: name
                        42      POP_JUMP_IF_FALSE               44 (to 88)
                        44      LOAD_FAST                       1: name
                        46      LOAD_CONST                      2: -1
                        48      BINARY_SUBSCR                   
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       2: _flavour
                        54      LOAD_ATTR                       4: sep
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       2: _flavour
                        60      LOAD_ATTR                       5: altsep
                        62      BUILD_TUPLE                     2
                        64      CONTAINS_OP                     0 (in)
                        66      POP_JUMP_IF_TRUE                44 (to 88)
                        68      LOAD_FAST                       2: drv
                        70      POP_JUMP_IF_TRUE                44 (to 88)
                        72      LOAD_FAST                       3: root
                        74      POP_JUMP_IF_TRUE                44 (to 88)
                        76      LOAD_GLOBAL                     6: len
                        78      LOAD_FAST                       4: parts
                        80      CALL_FUNCTION                   1
                        82      LOAD_CONST                      3: 1
                        84      COMPARE_OP                      3 (!=)
                        86      POP_JUMP_IF_FALSE               50 (to 100)
                        88      LOAD_GLOBAL                     1: ValueError
                        90      LOAD_CONST                      4: 'Invalid name %r'
                        92      LOAD_FAST                       1: name
                        94      BINARY_MODULO                   
                        96      CALL_FUNCTION                   1
                        98      RAISE_VARARGS                   1
                        100     LOAD_FAST                       0: self
                        102     LOAD_METHOD                     7: _from_parsed_parts
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       8: _drv
                        108     LOAD_FAST                       0: self
                        110     LOAD_ATTR                       9: _root
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       10: _parts
                        116     LOAD_CONST                      5: None
                        118     LOAD_CONST                      2: -1
                        120     BUILD_SLICE                     2
                        122     BINARY_SUBSCR                   
                        124     LOAD_FAST                       1: name
                        126     BUILD_LIST                      1
                        128     BINARY_ADD                      
                        130     CALL_METHOD                     3
                        132     RETURN_VALUE                    
                'PurePath.with_name'
                [Code]
                    File Name: pathlib.py
                    Object Name: with_stem
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'with_name'
                        'suffix'
                    [Var Names]
                        'self'
                        'stem'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new path with the stem changed.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: with_name
                        4       LOAD_FAST                       1: stem
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: suffix
                        10      BINARY_ADD                      
                        12      CALL_METHOD                     1
                        14      RETURN_VALUE                    
                'PurePath.with_stem'
                [Code]
                    File Name: pathlib.py
                    Object Name: with_suffix
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_flavour'
                        'sep'
                        'altsep'
                        'ValueError'
                        'startswith'
                        'name'
                        'suffix'
                        'len'
                        '_from_parsed_parts'
                        '_drv'
                        '_root'
                        '_parts'
                    [Var Names]
                        'self'
                        'suffix'
                        'f'
                        'name'
                        'old_suffix'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new path with the file suffix changed.  If the path\n        has no suffix, add given suffix.  If the given suffix is an empty\n        string, remove the suffix from the path.\n        '
                        'Invalid suffix %r'
                        '.'
                        '%r has an empty name'
                        None
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _flavour
                        4       STORE_FAST                      2: f
                        6       LOAD_FAST                       2: f
                        8       LOAD_ATTR                       1: sep
                        10      LOAD_FAST                       1: suffix
                        12      CONTAINS_OP                     0 (in)
                        14      POP_JUMP_IF_TRUE                16 (to 32)
                        16      LOAD_FAST                       2: f
                        18      LOAD_ATTR                       2: altsep
                        20      POP_JUMP_IF_FALSE               23 (to 46)
                        22      LOAD_FAST                       2: f
                        24      LOAD_ATTR                       2: altsep
                        26      LOAD_FAST                       1: suffix
                        28      CONTAINS_OP                     0 (in)
                        30      POP_JUMP_IF_FALSE               23 (to 46)
                        32      LOAD_GLOBAL                     3: ValueError
                        34      LOAD_CONST                      1: 'Invalid suffix %r'
                        36      LOAD_FAST                       1: suffix
                        38      BUILD_TUPLE                     1
                        40      BINARY_MODULO                   
                        42      CALL_FUNCTION                   1
                        44      RAISE_VARARGS                   1
                        46      LOAD_FAST                       1: suffix
                        48      POP_JUMP_IF_FALSE               30 (to 60)
                        50      LOAD_FAST                       1: suffix
                        52      LOAD_METHOD                     4: startswith
                        54      LOAD_CONST                      2: '.'
                        56      CALL_METHOD                     1
                        58      POP_JUMP_IF_FALSE               34 (to 68)
                        60      LOAD_FAST                       1: suffix
                        62      LOAD_CONST                      2: '.'
                        64      COMPARE_OP                      2 (==)
                        66      POP_JUMP_IF_FALSE               40 (to 80)
                        68      LOAD_GLOBAL                     3: ValueError
                        70      LOAD_CONST                      1: 'Invalid suffix %r'
                        72      LOAD_FAST                       1: suffix
                        74      BINARY_MODULO                   
                        76      CALL_FUNCTION                   1
                        78      RAISE_VARARGS                   1
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       5: name
                        84      STORE_FAST                      3: name
                        86      LOAD_FAST                       3: name
                        88      POP_JUMP_IF_TRUE                52 (to 104)
                        90      LOAD_GLOBAL                     3: ValueError
                        92      LOAD_CONST                      3: '%r has an empty name'
                        94      LOAD_FAST                       0: self
                        96      BUILD_TUPLE                     1
                        98      BINARY_MODULO                   
                        100     CALL_FUNCTION                   1
                        102     RAISE_VARARGS                   1
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       6: suffix
                        108     STORE_FAST                      4: old_suffix
                        110     LOAD_FAST                       4: old_suffix
                        112     POP_JUMP_IF_TRUE                62 (to 124)
                        114     LOAD_FAST                       3: name
                        116     LOAD_FAST                       1: suffix
                        118     BINARY_ADD                      
                        120     STORE_FAST                      3: name
                        122     JUMP_FORWARD                    11 (to 146)
                        124     LOAD_FAST                       3: name
                        126     LOAD_CONST                      4: None
                        128     LOAD_GLOBAL                     7: len
                        130     LOAD_FAST                       4: old_suffix
                        132     CALL_FUNCTION                   1
                        134     UNARY_NEGATIVE                  
                        136     BUILD_SLICE                     2
                        138     BINARY_SUBSCR                   
                        140     LOAD_FAST                       1: suffix
                        142     BINARY_ADD                      
                        144     STORE_FAST                      3: name
                        146     LOAD_FAST                       0: self
                        148     LOAD_METHOD                     8: _from_parsed_parts
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       9: _drv
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       10: _root
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       11: _parts
                        162     LOAD_CONST                      4: None
                        164     LOAD_CONST                      5: -1
                        166     BUILD_SLICE                     2
                        168     BINARY_SUBSCR                   
                        170     LOAD_FAST                       3: name
                        172     BUILD_LIST                      1
                        174     BINARY_ADD                      
                        176     CALL_METHOD                     3
                        178     RETURN_VALUE                    
                'PurePath.with_suffix'
                [Code]
                    File Name: pathlib.py
                    Object Name: relative_to
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 13
                    Stack Size: 7
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        'TypeError'
                        '_parts'
                        '_drv'
                        '_root'
                        '_parse_args'
                        'len'
                        '_flavour'
                        'casefold_parts'
                        '_format_parsed_parts'
                        'ValueError'
                        'format'
                        'str'
                        '_from_parsed_parts'
                    [Var Names]
                        'self'
                        'other'
                        'parts'
                        'drv'
                        'root'
                        'abs_parts'
                        'to_drv'
                        'to_root'
                        'to_parts'
                        'to_abs_parts'
                        'n'
                        'cf'
                        'formatted'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the relative path to another path identified by the passed\n        arguments.  If the operation is not possible (because this is not\n        a subpath of the other path), raise ValueError.\n        '
                        'need at least one argument'
                        1
                        None
                        0
                        '{!r} is not in the subpath of {!r} OR one path is relative and the other is absolute.'
                        ''
                    [Disassembly]
                        0       LOAD_FAST                       1: other
                        2       POP_JUMP_IF_TRUE                6 (to 12)
                        4       LOAD_GLOBAL                     0: TypeError
                        6       LOAD_CONST                      1: 'need at least one argument'
                        8       CALL_FUNCTION                   1
                        10      RAISE_VARARGS                   1
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _parts
                        16      STORE_FAST                      2: parts
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _drv
                        22      STORE_FAST                      3: drv
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: _root
                        28      STORE_FAST                      4: root
                        30      LOAD_FAST                       4: root
                        32      POP_JUMP_IF_FALSE               28 (to 56)
                        34      LOAD_FAST                       3: drv
                        36      LOAD_FAST                       4: root
                        38      BUILD_LIST                      2
                        40      LOAD_FAST                       2: parts
                        42      LOAD_CONST                      2: 1
                        44      LOAD_CONST                      3: None
                        46      BUILD_SLICE                     2
                        48      BINARY_SUBSCR                   
                        50      BINARY_ADD                      
                        52      STORE_FAST                      5: abs_parts
                        54      JUMP_FORWARD                    2 (to 60)
                        56      LOAD_FAST                       2: parts
                        58      STORE_FAST                      5: abs_parts
                        60      LOAD_FAST                       0: self
                        62      LOAD_METHOD                     4: _parse_args
                        64      LOAD_FAST                       1: other
                        66      CALL_METHOD                     1
                        68      UNPACK_SEQUENCE                 3
                        70      STORE_FAST                      6: to_drv
                        72      STORE_FAST                      7: to_root
                        74      STORE_FAST                      8: to_parts
                        76      LOAD_FAST                       7: to_root
                        78      POP_JUMP_IF_FALSE               51 (to 102)
                        80      LOAD_FAST                       6: to_drv
                        82      LOAD_FAST                       7: to_root
                        84      BUILD_LIST                      2
                        86      LOAD_FAST                       8: to_parts
                        88      LOAD_CONST                      2: 1
                        90      LOAD_CONST                      3: None
                        92      BUILD_SLICE                     2
                        94      BINARY_SUBSCR                   
                        96      BINARY_ADD                      
                        98      STORE_FAST                      9: to_abs_parts
                        100     JUMP_FORWARD                    2 (to 106)
                        102     LOAD_FAST                       8: to_parts
                        104     STORE_FAST                      9: to_abs_parts
                        106     LOAD_GLOBAL                     5: len
                        108     LOAD_FAST                       9: to_abs_parts
                        110     CALL_FUNCTION                   1
                        112     STORE_FAST                      10: n
                        114     LOAD_FAST                       0: self
                        116     LOAD_ATTR                       6: _flavour
                        118     LOAD_ATTR                       7: casefold_parts
                        120     STORE_FAST                      11: cf
                        122     LOAD_FAST                       10: n
                        124     LOAD_CONST                      4: 0
                        126     COMPARE_OP                      2 (==)
                        128     POP_JUMP_IF_FALSE               70 (to 140)
                        130     LOAD_FAST                       4: root
                        132     POP_JUMP_IF_TRUE                69 (to 138)
                        134     LOAD_FAST                       3: drv
                        136     POP_JUMP_IF_FALSE               101 (to 202)
                        138     JUMP_FORWARD                    12 (to 164)
                        140     LOAD_FAST                       11: cf
                        142     LOAD_FAST                       5: abs_parts
                        144     LOAD_CONST                      3: None
                        146     LOAD_FAST                       10: n
                        148     BUILD_SLICE                     2
                        150     BINARY_SUBSCR                   
                        152     CALL_FUNCTION                   1
                        154     LOAD_FAST                       11: cf
                        156     LOAD_FAST                       9: to_abs_parts
                        158     CALL_FUNCTION                   1
                        160     COMPARE_OP                      3 (!=)
                        162     POP_JUMP_IF_FALSE               101 (to 202)
                        164     LOAD_FAST                       0: self
                        166     LOAD_METHOD                     8: _format_parsed_parts
                        168     LOAD_FAST                       6: to_drv
                        170     LOAD_FAST                       7: to_root
                        172     LOAD_FAST                       8: to_parts
                        174     CALL_METHOD                     3
                        176     STORE_FAST                      12: formatted
                        178     LOAD_GLOBAL                     9: ValueError
                        180     LOAD_CONST                      5: '{!r} is not in the subpath of {!r} OR one path is relative and the other is absolute.'
                        182     LOAD_METHOD                     10: format
                        184     LOAD_GLOBAL                     11: str
                        186     LOAD_FAST                       0: self
                        188     CALL_FUNCTION                   1
                        190     LOAD_GLOBAL                     11: str
                        192     LOAD_FAST                       12: formatted
                        194     CALL_FUNCTION                   1
                        196     CALL_METHOD                     2
                        198     CALL_FUNCTION                   1
                        200     RAISE_VARARGS                   1
                        202     LOAD_FAST                       0: self
                        204     LOAD_METHOD                     12: _from_parsed_parts
                        206     LOAD_CONST                      6: ''
                        208     LOAD_FAST                       10: n
                        210     LOAD_CONST                      2: 1
                        212     COMPARE_OP                      2 (==)
                        214     POP_JUMP_IF_FALSE               110 (to 220)
                        216     LOAD_FAST                       4: root
                        218     JUMP_FORWARD                    1 (to 222)
                        220     LOAD_CONST                      6: ''
                        222     LOAD_FAST                       5: abs_parts
                        224     LOAD_FAST                       10: n
                        226     LOAD_CONST                      3: None
                        228     BUILD_SLICE                     2
                        230     BINARY_SUBSCR                   
                        232     CALL_METHOD                     3
                        234     RETURN_VALUE                    
                'PurePath.relative_to'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_relative_to
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        'relative_to'
                        'ValueError'
                    [Var Names]
                        'self'
                        'other'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if the path is relative to another path or False.\n        '
                        True
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: relative_to
                        6       LOAD_FAST                       1: other
                        8       CALL_FUNCTION_EX                0
                        10      POP_TOP                         
                        12      POP_BLOCK                       
                        14      LOAD_CONST                      1: True
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     1: ValueError
                        22      JUMP_IF_NOT_EXC_MATCH           18 (to 36)
                        24      POP_TOP                         
                        26      POP_TOP                         
                        28      POP_TOP                         
                        30      POP_EXCEPT                      
                        32      LOAD_CONST                      2: False
                        34      RETURN_VALUE                    
                        36      RERAISE                         0
                'PurePath.is_relative_to'
                [Code]
                    File Name: pathlib.py
                    Object Name: parts
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_pparts'
                        'AttributeError'
                        'tuple'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'An object providing sequence-like access to the\n        components in the filesystem path.'
                    [Disassembly]
                        0       SETUP_FINALLY                   4 (to 10)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _pparts
                        6       POP_BLOCK                       
                        8       RETURN_VALUE                    
                        10      DUP_TOP                         
                        12      LOAD_GLOBAL                     1: AttributeError
                        14      JUMP_IF_NOT_EXC_MATCH           22 (to 44)
                        16      POP_TOP                         
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      LOAD_GLOBAL                     2: tuple
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: _parts
                        28      CALL_FUNCTION                   1
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      0: _pparts
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       0: _pparts
                        38      ROT_FOUR                        
                        40      POP_EXCEPT                      
                        42      RETURN_VALUE                    
                        44      RERAISE                         0
                'PurePath.parts'
                [Code]
                    File Name: pathlib.py
                    Object Name: joinpath
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        '_make_child'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Combine this path with one or several arguments, and return a\n        new path representing either a subpath (if all arguments are relative\n        paths) or a totally different path (if one of the arguments is\n        anchored).\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _make_child
                        4       LOAD_FAST                       1: args
                        6       CALL_METHOD                     1
                        8       RETURN_VALUE                    
                'PurePath.joinpath'
                [Code]
                    File Name: pathlib.py
                    Object Name: __truediv__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_make_child'
                        'TypeError'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'key'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   7 (to 16)
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: _make_child
                        6       LOAD_FAST                       1: key
                        8       BUILD_TUPLE                     1
                        10      CALL_METHOD                     1
                        12      POP_BLOCK                       
                        14      RETURN_VALUE                    
                        16      DUP_TOP                         
                        18      LOAD_GLOBAL                     1: TypeError
                        20      JUMP_IF_NOT_EXC_MATCH           18 (to 36)
                        22      POP_TOP                         
                        24      POP_TOP                         
                        26      POP_TOP                         
                        28      LOAD_GLOBAL                     2: NotImplemented
                        30      ROT_FOUR                        
                        32      POP_EXCEPT                      
                        34      RETURN_VALUE                    
                        36      RERAISE                         0
                'PurePath.__truediv__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __rtruediv__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_from_parts'
                        '_parts'
                        'TypeError'
                        'NotImplemented'
                    [Var Names]
                        'self'
                        'key'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   10 (to 22)
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: _from_parts
                        6       LOAD_FAST                       1: key
                        8       BUILD_LIST                      1
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _parts
                        14      BINARY_ADD                      
                        16      CALL_METHOD                     1
                        18      POP_BLOCK                       
                        20      RETURN_VALUE                    
                        22      DUP_TOP                         
                        24      LOAD_GLOBAL                     2: TypeError
                        26      JUMP_IF_NOT_EXC_MATCH           21 (to 42)
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      LOAD_GLOBAL                     3: NotImplemented
                        36      ROT_FOUR                        
                        38      POP_EXCEPT                      
                        40      RETURN_VALUE                    
                        42      RERAISE                         0
                'PurePath.__rtruediv__'
                [Code]
                    File Name: pathlib.py
                    Object Name: parent
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_drv'
                        '_root'
                        '_parts'
                        'len'
                        '_from_parsed_parts'
                    [Var Names]
                        'self'
                        'drv'
                        'root'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'The logical parent of the path.'
                        1
                        None
                        -1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _drv
                        4       STORE_FAST                      1: drv
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _root
                        10      STORE_FAST                      2: root
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _parts
                        16      STORE_FAST                      3: parts
                        18      LOAD_GLOBAL                     3: len
                        20      LOAD_FAST                       3: parts
                        22      CALL_FUNCTION                   1
                        24      LOAD_CONST                      1: 1
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               21 (to 42)
                        30      LOAD_FAST                       1: drv
                        32      POP_JUMP_IF_TRUE                19 (to 38)
                        34      LOAD_FAST                       2: root
                        36      POP_JUMP_IF_FALSE               21 (to 42)
                        38      LOAD_FAST                       0: self
                        40      RETURN_VALUE                    
                        42      LOAD_FAST                       0: self
                        44      LOAD_METHOD                     4: _from_parsed_parts
                        46      LOAD_FAST                       1: drv
                        48      LOAD_FAST                       2: root
                        50      LOAD_FAST                       3: parts
                        52      LOAD_CONST                      2: None
                        54      LOAD_CONST                      3: -1
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      CALL_METHOD                     3
                        62      RETURN_VALUE                    
                'PurePath.parent'
                [Code]
                    File Name: pathlib.py
                    Object Name: parents
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_PathParents'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "A sequence of this path's logical parents."
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _PathParents
                        2       LOAD_FAST                       0: self
                        4       CALL_FUNCTION                   1
                        6       RETURN_VALUE                    
                'PurePath.parents'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_absolute
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_root'
                        '_flavour'
                        'has_drv'
                        'bool'
                        '_drv'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'True if the path is absolute (has both a root and, if applicable,\n        a drive).'
                        False
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _root
                        4       POP_JUMP_IF_TRUE                5 (to 10)
                        6       LOAD_CONST                      1: False
                        8       RETURN_VALUE                    
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _flavour
                        14      LOAD_ATTR                       2: has_drv
                        16      UNARY_NOT                       
                        18      JUMP_IF_TRUE_OR_POP             14 (to 28)
                        20      LOAD_GLOBAL                     3: bool
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: _drv
                        26      CALL_FUNCTION                   1
                        28      RETURN_VALUE                    
                'PurePath.is_absolute'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_reserved
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_flavour'
                        'is_reserved'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if the path contains one of the special names reserved\n        by the system, if any.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _flavour
                        4       LOAD_METHOD                     1: is_reserved
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: _parts
                        10      CALL_METHOD                     1
                        12      RETURN_VALUE                    
                'PurePath.is_reserved'
                [Code]
                    File Name: pathlib.py
                    Object Name: match
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_flavour'
                        'casefold'
                        'parse_parts'
                        'ValueError'
                        '_drv'
                        '_root'
                        '_cparts'
                        'len'
                        'zip'
                        'reversed'
                        'fnmatch'
                        'fnmatchcase'
                    [Var Names]
                        'self'
                        'path_pattern'
                        'cf'
                        'drv'
                        'root'
                        'pat_parts'
                        'parts'
                        'part'
                        'pat'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Return True if this path matches the given pattern.\n        '
                        'empty pattern'
                        False
                        1
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _flavour
                        4       LOAD_ATTR                       1: casefold
                        6       STORE_FAST                      2: cf
                        8       LOAD_FAST                       2: cf
                        10      LOAD_FAST                       1: path_pattern
                        12      CALL_FUNCTION                   1
                        14      STORE_FAST                      1: path_pattern
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _flavour
                        20      LOAD_METHOD                     2: parse_parts
                        22      LOAD_FAST                       1: path_pattern
                        24      BUILD_TUPLE                     1
                        26      CALL_METHOD                     1
                        28      UNPACK_SEQUENCE                 3
                        30      STORE_FAST                      3: drv
                        32      STORE_FAST                      4: root
                        34      STORE_FAST                      5: pat_parts
                        36      LOAD_FAST                       5: pat_parts
                        38      POP_JUMP_IF_TRUE                24 (to 48)
                        40      LOAD_GLOBAL                     3: ValueError
                        42      LOAD_CONST                      1: 'empty pattern'
                        44      CALL_FUNCTION                   1
                        46      RAISE_VARARGS                   1
                        48      LOAD_FAST                       3: drv
                        50      POP_JUMP_IF_FALSE               35 (to 70)
                        52      LOAD_FAST                       3: drv
                        54      LOAD_FAST                       2: cf
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       4: _drv
                        60      CALL_FUNCTION                   1
                        62      COMPARE_OP                      3 (!=)
                        64      POP_JUMP_IF_FALSE               35 (to 70)
                        66      LOAD_CONST                      2: False
                        68      RETURN_VALUE                    
                        70      LOAD_FAST                       4: root
                        72      POP_JUMP_IF_FALSE               46 (to 92)
                        74      LOAD_FAST                       4: root
                        76      LOAD_FAST                       2: cf
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       5: _root
                        82      CALL_FUNCTION                   1
                        84      COMPARE_OP                      3 (!=)
                        86      POP_JUMP_IF_FALSE               46 (to 92)
                        88      LOAD_CONST                      2: False
                        90      RETURN_VALUE                    
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       6: _cparts
                        96      STORE_FAST                      6: parts
                        98      LOAD_FAST                       3: drv
                        100     POP_JUMP_IF_TRUE                53 (to 106)
                        102     LOAD_FAST                       4: root
                        104     POP_JUMP_IF_FALSE               70 (to 140)
                        106     LOAD_GLOBAL                     7: len
                        108     LOAD_FAST                       5: pat_parts
                        110     CALL_FUNCTION                   1
                        112     LOAD_GLOBAL                     7: len
                        114     LOAD_FAST                       6: parts
                        116     CALL_FUNCTION                   1
                        118     COMPARE_OP                      3 (!=)
                        120     POP_JUMP_IF_FALSE               63 (to 126)
                        122     LOAD_CONST                      2: False
                        124     RETURN_VALUE                    
                        126     LOAD_FAST                       5: pat_parts
                        128     LOAD_CONST                      3: 1
                        130     LOAD_CONST                      4: None
                        132     BUILD_SLICE                     2
                        134     BINARY_SUBSCR                   
                        136     STORE_FAST                      5: pat_parts
                        138     JUMP_FORWARD                    10 (to 160)
                        140     LOAD_GLOBAL                     7: len
                        142     LOAD_FAST                       5: pat_parts
                        144     CALL_FUNCTION                   1
                        146     LOAD_GLOBAL                     7: len
                        148     LOAD_FAST                       6: parts
                        150     CALL_FUNCTION                   1
                        152     COMPARE_OP                      4 (>)
                        154     POP_JUMP_IF_FALSE               80 (to 160)
                        156     LOAD_CONST                      2: False
                        158     RETURN_VALUE                    
                        160     LOAD_GLOBAL                     8: zip
                        162     LOAD_GLOBAL                     9: reversed
                        164     LOAD_FAST                       6: parts
                        166     CALL_FUNCTION                   1
                        168     LOAD_GLOBAL                     9: reversed
                        170     LOAD_FAST                       5: pat_parts
                        172     CALL_FUNCTION                   1
                        174     CALL_FUNCTION                   2
                        176     GET_ITER                        
                        178     FOR_ITER                        13 (to 206)
                        180     UNPACK_SEQUENCE                 2
                        182     STORE_FAST                      7: part
                        184     STORE_FAST                      8: pat
                        186     LOAD_GLOBAL                     10: fnmatch
                        188     LOAD_METHOD                     11: fnmatchcase
                        190     LOAD_FAST                       7: part
                        192     LOAD_FAST                       8: pat
                        194     CALL_METHOD                     2
                        196     POP_JUMP_IF_TRUE                102 (to 204)
                        198     POP_TOP                         
                        200     LOAD_CONST                      2: False
                        202     RETURN_VALUE                    
                        204     JUMP_ABSOLUTE                   89 (to 178)
                        206     LOAD_CONST                      5: True
                        208     RETURN_VALUE                    
                'PurePath.match'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'PurePath'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "Base class for manipulating paths without I/O.\n\n    PurePath represents a filesystem path and offers operations which\n    don't imply any actual filesystem I/O.  Depending on your system,\n    instantiating a PurePath will return either a PurePosixPath or a\n    PureWindowsPath object.  You can also instantiate either of these classes\n    directly, regardless of your system.\n    "
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('_drv', '_root', '_parts', '_str', '_hash', '_pparts', '_cached_cparts')
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      3: <CODE> __new__
                18      LOAD_CONST                      4: 'PurePath.__new__'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      5: __new__
                24      LOAD_CONST                      5: <CODE> __reduce__
                26      LOAD_CONST                      6: 'PurePath.__reduce__'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      6: __reduce__
                32      LOAD_NAME                       7: classmethod
                34      LOAD_CONST                      7: <CODE> _parse_args
                36      LOAD_CONST                      8: 'PurePath._parse_args'
                38      MAKE_FUNCTION                   0
                40      CALL_FUNCTION                   1
                42      STORE_NAME                      8: _parse_args
                44      LOAD_NAME                       7: classmethod
                46      LOAD_CONST                      9: <CODE> _from_parts
                48      LOAD_CONST                      10: 'PurePath._from_parts'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      9: _from_parts
                56      LOAD_NAME                       7: classmethod
                58      LOAD_CONST                      11: <CODE> _from_parsed_parts
                60      LOAD_CONST                      12: 'PurePath._from_parsed_parts'
                62      MAKE_FUNCTION                   0
                64      CALL_FUNCTION                   1
                66      STORE_NAME                      10: _from_parsed_parts
                68      LOAD_NAME                       7: classmethod
                70      LOAD_CONST                      13: <CODE> _format_parsed_parts
                72      LOAD_CONST                      14: 'PurePath._format_parsed_parts'
                74      MAKE_FUNCTION                   0
                76      CALL_FUNCTION                   1
                78      STORE_NAME                      11: _format_parsed_parts
                80      LOAD_CONST                      15: <CODE> _make_child
                82      LOAD_CONST                      16: 'PurePath._make_child'
                84      MAKE_FUNCTION                   0
                86      STORE_NAME                      12: _make_child
                88      LOAD_CONST                      17: <CODE> __str__
                90      LOAD_CONST                      18: 'PurePath.__str__'
                92      MAKE_FUNCTION                   0
                94      STORE_NAME                      13: __str__
                96      LOAD_CONST                      19: <CODE> __fspath__
                98      LOAD_CONST                      20: 'PurePath.__fspath__'
                100     MAKE_FUNCTION                   0
                102     STORE_NAME                      14: __fspath__
                104     LOAD_CONST                      21: <CODE> as_posix
                106     LOAD_CONST                      22: 'PurePath.as_posix'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      15: as_posix
                112     LOAD_CONST                      23: <CODE> __bytes__
                114     LOAD_CONST                      24: 'PurePath.__bytes__'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      16: __bytes__
                120     LOAD_CONST                      25: <CODE> __repr__
                122     LOAD_CONST                      26: 'PurePath.__repr__'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      17: __repr__
                128     LOAD_CONST                      27: <CODE> as_uri
                130     LOAD_CONST                      28: 'PurePath.as_uri'
                132     MAKE_FUNCTION                   0
                134     STORE_NAME                      18: as_uri
                136     LOAD_NAME                       19: property
                138     LOAD_CONST                      29: <CODE> _cparts
                140     LOAD_CONST                      30: 'PurePath._cparts'
                142     MAKE_FUNCTION                   0
                144     CALL_FUNCTION                   1
                146     STORE_NAME                      20: _cparts
                148     LOAD_CONST                      31: <CODE> __eq__
                150     LOAD_CONST                      32: 'PurePath.__eq__'
                152     MAKE_FUNCTION                   0
                154     STORE_NAME                      21: __eq__
                156     LOAD_CONST                      33: <CODE> __hash__
                158     LOAD_CONST                      34: 'PurePath.__hash__'
                160     MAKE_FUNCTION                   0
                162     STORE_NAME                      22: __hash__
                164     LOAD_CONST                      35: <CODE> __lt__
                166     LOAD_CONST                      36: 'PurePath.__lt__'
                168     MAKE_FUNCTION                   0
                170     STORE_NAME                      23: __lt__
                172     LOAD_CONST                      37: <CODE> __le__
                174     LOAD_CONST                      38: 'PurePath.__le__'
                176     MAKE_FUNCTION                   0
                178     STORE_NAME                      24: __le__
                180     LOAD_CONST                      39: <CODE> __gt__
                182     LOAD_CONST                      40: 'PurePath.__gt__'
                184     MAKE_FUNCTION                   0
                186     STORE_NAME                      25: __gt__
                188     LOAD_CONST                      41: <CODE> __ge__
                190     LOAD_CONST                      42: 'PurePath.__ge__'
                192     MAKE_FUNCTION                   0
                194     STORE_NAME                      26: __ge__
                196     LOAD_CONST                      43: <CODE> __class_getitem__
                198     LOAD_CONST                      44: 'PurePath.__class_getitem__'
                200     MAKE_FUNCTION                   0
                202     STORE_NAME                      27: __class_getitem__
                204     LOAD_NAME                       19: property
                206     LOAD_NAME                       28: attrgetter
                208     LOAD_CONST                      45: '_drv'
                210     CALL_FUNCTION                   1
                212     LOAD_CONST                      46: 'The drive prefix (letter or UNC path), if any.'
                214     LOAD_CONST                      47: ('doc',)
                216     CALL_FUNCTION_KW                2
                218     STORE_NAME                      29: drive
                220     LOAD_NAME                       19: property
                222     LOAD_NAME                       28: attrgetter
                224     LOAD_CONST                      48: '_root'
                226     CALL_FUNCTION                   1
                228     LOAD_CONST                      49: 'The root of the path, if any.'
                230     LOAD_CONST                      47: ('doc',)
                232     CALL_FUNCTION_KW                2
                234     STORE_NAME                      30: root
                236     LOAD_NAME                       19: property
                238     LOAD_CONST                      50: <CODE> anchor
                240     LOAD_CONST                      51: 'PurePath.anchor'
                242     MAKE_FUNCTION                   0
                244     CALL_FUNCTION                   1
                246     STORE_NAME                      31: anchor
                248     LOAD_NAME                       19: property
                250     LOAD_CONST                      52: <CODE> name
                252     LOAD_CONST                      53: 'PurePath.name'
                254     MAKE_FUNCTION                   0
                256     CALL_FUNCTION                   1
                258     STORE_NAME                      32: name
                260     LOAD_NAME                       19: property
                262     LOAD_CONST                      54: <CODE> suffix
                264     LOAD_CONST                      55: 'PurePath.suffix'
                266     MAKE_FUNCTION                   0
                268     CALL_FUNCTION                   1
                270     STORE_NAME                      33: suffix
                272     LOAD_NAME                       19: property
                274     LOAD_CONST                      56: <CODE> suffixes
                276     LOAD_CONST                      57: 'PurePath.suffixes'
                278     MAKE_FUNCTION                   0
                280     CALL_FUNCTION                   1
                282     STORE_NAME                      34: suffixes
                284     LOAD_NAME                       19: property
                286     LOAD_CONST                      58: <CODE> stem
                288     LOAD_CONST                      59: 'PurePath.stem'
                290     MAKE_FUNCTION                   0
                292     CALL_FUNCTION                   1
                294     STORE_NAME                      35: stem
                296     LOAD_CONST                      60: <CODE> with_name
                298     LOAD_CONST                      61: 'PurePath.with_name'
                300     MAKE_FUNCTION                   0
                302     STORE_NAME                      36: with_name
                304     LOAD_CONST                      62: <CODE> with_stem
                306     LOAD_CONST                      63: 'PurePath.with_stem'
                308     MAKE_FUNCTION                   0
                310     STORE_NAME                      37: with_stem
                312     LOAD_CONST                      64: <CODE> with_suffix
                314     LOAD_CONST                      65: 'PurePath.with_suffix'
                316     MAKE_FUNCTION                   0
                318     STORE_NAME                      38: with_suffix
                320     LOAD_CONST                      66: <CODE> relative_to
                322     LOAD_CONST                      67: 'PurePath.relative_to'
                324     MAKE_FUNCTION                   0
                326     STORE_NAME                      39: relative_to
                328     LOAD_CONST                      68: <CODE> is_relative_to
                330     LOAD_CONST                      69: 'PurePath.is_relative_to'
                332     MAKE_FUNCTION                   0
                334     STORE_NAME                      40: is_relative_to
                336     LOAD_NAME                       19: property
                338     LOAD_CONST                      70: <CODE> parts
                340     LOAD_CONST                      71: 'PurePath.parts'
                342     MAKE_FUNCTION                   0
                344     CALL_FUNCTION                   1
                346     STORE_NAME                      41: parts
                348     LOAD_CONST                      72: <CODE> joinpath
                350     LOAD_CONST                      73: 'PurePath.joinpath'
                352     MAKE_FUNCTION                   0
                354     STORE_NAME                      42: joinpath
                356     LOAD_CONST                      74: <CODE> __truediv__
                358     LOAD_CONST                      75: 'PurePath.__truediv__'
                360     MAKE_FUNCTION                   0
                362     STORE_NAME                      43: __truediv__
                364     LOAD_CONST                      76: <CODE> __rtruediv__
                366     LOAD_CONST                      77: 'PurePath.__rtruediv__'
                368     MAKE_FUNCTION                   0
                370     STORE_NAME                      44: __rtruediv__
                372     LOAD_NAME                       19: property
                374     LOAD_CONST                      78: <CODE> parent
                376     LOAD_CONST                      79: 'PurePath.parent'
                378     MAKE_FUNCTION                   0
                380     CALL_FUNCTION                   1
                382     STORE_NAME                      45: parent
                384     LOAD_NAME                       19: property
                386     LOAD_CONST                      80: <CODE> parents
                388     LOAD_CONST                      81: 'PurePath.parents'
                390     MAKE_FUNCTION                   0
                392     CALL_FUNCTION                   1
                394     STORE_NAME                      46: parents
                396     LOAD_CONST                      82: <CODE> is_absolute
                398     LOAD_CONST                      83: 'PurePath.is_absolute'
                400     MAKE_FUNCTION                   0
                402     STORE_NAME                      47: is_absolute
                404     LOAD_CONST                      84: <CODE> is_reserved
                406     LOAD_CONST                      85: 'PurePath.is_reserved'
                408     MAKE_FUNCTION                   0
                410     STORE_NAME                      48: is_reserved
                412     LOAD_CONST                      86: <CODE> match
                414     LOAD_CONST                      87: 'PurePath.match'
                416     MAKE_FUNCTION                   0
                418     STORE_NAME                      49: match
                420     LOAD_CONST                      88: None
                422     RETURN_VALUE                    
        'PurePath'
        [Code]
            File Name: pathlib.py
            Object Name: PurePosixPath
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_posix_flavour'
                '_flavour'
                '__slots__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'PurePosixPath'
                'PurePath subclass for non-Windows systems.\n\n    On a POSIX system, instantiating a PurePath should return this object.\n    However, you can also instantiate it directly on any system.\n    '
                (
                )
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'PurePosixPath'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'PurePath subclass for non-Windows systems.\n\n    On a POSIX system, instantiating a PurePath should return this object.\n    However, you can also instantiate it directly on any system.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: _posix_flavour
                14      STORE_NAME                      5: _flavour
                16      LOAD_CONST                      2: ()
                18      STORE_NAME                      6: __slots__
                20      LOAD_CONST                      3: None
                22      RETURN_VALUE                    
        'PurePosixPath'
        [Code]
            File Name: pathlib.py
            Object Name: PureWindowsPath
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_windows_flavour'
                '_flavour'
                '__slots__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'PureWindowsPath'
                'PurePath subclass for Windows systems.\n\n    On a Windows system, instantiating a PurePath should return this object.\n    However, you can also instantiate it directly on any system.\n    '
                (
                )
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'PureWindowsPath'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'PurePath subclass for Windows systems.\n\n    On a Windows system, instantiating a PurePath should return this object.\n    However, you can also instantiate it directly on any system.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: _windows_flavour
                14      STORE_NAME                      5: _flavour
                16      LOAD_CONST                      2: ()
                18      STORE_NAME                      6: __slots__
                20      LOAD_CONST                      3: None
                22      RETURN_VALUE                    
        'PureWindowsPath'
        [Code]
            File Name: pathlib.py
            Object Name: Path
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_normal_accessor'
                '_accessor'
                '__slots__'
                '__new__'
                '_make_child_relpath'
                '__enter__'
                '__exit__'
                'classmethod'
                'cwd'
                'home'
                'samefile'
                'iterdir'
                'glob'
                'rglob'
                'absolute'
                'resolve'
                'stat'
                'owner'
                'group'
                'open'
                'read_bytes'
                'read_text'
                'write_bytes'
                'write_text'
                'readlink'
                'touch'
                'mkdir'
                'chmod'
                'lchmod'
                'unlink'
                'rmdir'
                'lstat'
                'rename'
                'replace'
                'symlink_to'
                'hardlink_to'
                'link_to'
                'exists'
                'is_dir'
                'is_file'
                'is_mount'
                'is_symlink'
                'is_block_device'
                'is_char_device'
                'is_fifo'
                'is_socket'
                'expanduser'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Path'
                'PurePath subclass that can make system calls.\n\n    Path represents a filesystem path but unlike PurePath, also offers\n    methods to do system calls on path objects. Depending on your system,\n    instantiating a Path will return either a PosixPath or a WindowsPath\n    object. You can also instantiate a PosixPath or WindowsPath directly,\n    but cannot instantiate a WindowsPath on a POSIX system or vice versa.\n    '
                (
                )
                [Code]
                    File Name: pathlib.py
                    Object Name: __new__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'Path'
                        'os'
                        'name'
                        'WindowsPath'
                        'PosixPath'
                        '_from_parts'
                        '_flavour'
                        'is_supported'
                        'NotImplementedError'
                        '__name__'
                    [Var Names]
                        'cls'
                        'args'
                        'kwargs'
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'nt'
                        'cannot instantiate %r on your system'
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_GLOBAL                     0: Path
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               13 (to 26)
                        8       LOAD_GLOBAL                     1: os
                        10      LOAD_ATTR                       2: name
                        12      LOAD_CONST                      1: 'nt'
                        14      COMPARE_OP                      2 (==)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_GLOBAL                     3: WindowsPath
                        20      JUMP_FORWARD                    1 (to 24)
                        22      LOAD_GLOBAL                     4: PosixPath
                        24      STORE_FAST                      0: cls
                        26      LOAD_FAST                       0: cls
                        28      LOAD_METHOD                     5: _from_parts
                        30      LOAD_FAST                       1: args
                        32      CALL_METHOD                     1
                        34      STORE_FAST                      3: self
                        36      LOAD_FAST                       3: self
                        38      LOAD_ATTR                       6: _flavour
                        40      LOAD_ATTR                       7: is_supported
                        42      POP_JUMP_IF_TRUE                30 (to 60)
                        44      LOAD_GLOBAL                     8: NotImplementedError
                        46      LOAD_CONST                      2: 'cannot instantiate %r on your system'
                        48      LOAD_FAST                       0: cls
                        50      LOAD_ATTR                       9: __name__
                        52      BUILD_TUPLE                     1
                        54      BINARY_MODULO                   
                        56      CALL_FUNCTION                   1
                        58      RAISE_VARARGS                   1
                        60      LOAD_FAST                       3: self
                        62      RETURN_VALUE                    
                'Path.__new__'
                [Code]
                    File Name: pathlib.py
                    Object Name: _make_child_relpath
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_parts'
                        '_from_parsed_parts'
                        '_drv'
                        '_root'
                    [Var Names]
                        'self'
                        'part'
                        'parts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _parts
                        4       LOAD_FAST                       1: part
                        6       BUILD_LIST                      1
                        8       BINARY_ADD                      
                        10      STORE_FAST                      2: parts
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: _from_parsed_parts
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: _drv
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: _root
                        24      LOAD_FAST                       2: parts
                        26      CALL_METHOD                     3
                        28      RETURN_VALUE                    
                'Path._make_child_relpath'
                [Code]
                    File Name: pathlib.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       RETURN_VALUE                    
                'Path.__enter__'
                [Code]
                    File Name: pathlib.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                        't'
                        'v'
                        'tb'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       RETURN_VALUE                    
                'Path.__exit__'
                [Code]
                    File Name: pathlib.py
                    Object Name: cwd
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'getcwd'
                    [Var Names]
                        'cls'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a new path pointing to the current working directory\n        (as returned by os.getcwd()).\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_FAST                       0: cls
                        4       LOAD_ATTR                       0: _accessor
                        6       LOAD_METHOD                     1: getcwd
                        8       CALL_METHOD                     0
                        10      CALL_FUNCTION                   1
                        12      RETURN_VALUE                    
                'Path.cwd'
                [Code]
                    File Name: pathlib.py
                    Object Name: home
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'expanduser'
                    [Var Names]
                        'cls'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return a new path pointing to the user's home directory (as\n        returned by os.path.expanduser('~')).\n        "
                        '~'
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_CONST                      1: '~'
                        4       CALL_FUNCTION                   1
                        6       LOAD_METHOD                     0: expanduser
                        8       CALL_METHOD                     0
                        10      RETURN_VALUE                    
                'Path.home'
                [Code]
                    File Name: pathlib.py
                    Object Name: samefile
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stat'
                        'AttributeError'
                        '_accessor'
                        'os'
                        'path'
                        'samestat'
                    [Var Names]
                        'self'
                        'other_path'
                        'st'
                        'other_st'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return whether other_path is the same or not as this file\n        (as returned by os.path.samefile()).\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: stat
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      2: st
                        8       SETUP_FINALLY                   6 (to 22)
                        10      LOAD_FAST                       1: other_path
                        12      LOAD_METHOD                     0: stat
                        14      CALL_METHOD                     0
                        16      STORE_FAST                      3: other_st
                        18      POP_BLOCK                       
                        20      JUMP_FORWARD                    15 (to 52)
                        22      DUP_TOP                         
                        24      LOAD_GLOBAL                     1: AttributeError
                        26      JUMP_IF_NOT_EXC_MATCH           25 (to 50)
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       2: _accessor
                        38      LOAD_METHOD                     0: stat
                        40      LOAD_FAST                       1: other_path
                        42      CALL_METHOD                     1
                        44      STORE_FAST                      3: other_st
                        46      POP_EXCEPT                      
                        48      JUMP_FORWARD                    1 (to 52)
                        50      RERAISE                         0
                        52      LOAD_GLOBAL                     3: os
                        54      LOAD_ATTR                       4: path
                        56      LOAD_METHOD                     5: samestat
                        58      LOAD_FAST                       2: st
                        60      LOAD_FAST                       3: other_st
                        62      CALL_METHOD                     2
                        64      RETURN_VALUE                    
                'Path.samefile'
                [Code]
                    File Name: pathlib.py
                    Object Name: iterdir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'listdir'
                        '_make_child_relpath'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Iterate over the files in this directory.  Does not yield any\n        result for the special paths '.' and '..'.\n        "
                        frozenset({
                            '..'
                            '.'
                        })
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _accessor
                        6       LOAD_METHOD                     1: listdir
                        8       LOAD_FAST                       0: self
                        10      CALL_METHOD                     1
                        12      GET_ITER                        
                        14      FOR_ITER                        13 (to 42)
                        16      STORE_FAST                      1: name
                        18      LOAD_FAST                       1: name
                        20      LOAD_CONST                      1: frozenset({'..', '.'})
                        22      CONTAINS_OP                     0 (in)
                        24      POP_JUMP_IF_FALSE               14 (to 28)
                        26      JUMP_ABSOLUTE                   7 (to 14)
                        28      LOAD_FAST                       0: self
                        30      LOAD_METHOD                     2: _make_child_relpath
                        32      LOAD_FAST                       1: name
                        34      CALL_METHOD                     1
                        36      YIELD_VALUE                     
                        38      POP_TOP                         
                        40      JUMP_ABSOLUTE                   7 (to 14)
                        42      LOAD_CONST                      2: None
                        44      RETURN_VALUE                    
                'Path.iterdir'
                [Code]
                    File Name: pathlib.py
                    Object Name: glob
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 5
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'sys'
                        'audit'
                        'ValueError'
                        'format'
                        '_flavour'
                        'parse_parts'
                        'NotImplementedError'
                        '_make_selector'
                        'tuple'
                        'select_from'
                    [Var Names]
                        'self'
                        'pattern'
                        'drv'
                        'root'
                        'pattern_parts'
                        'selector'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Iterate over this subtree and yield all existing files (of any\n        kind, including directories) matching the given relative pattern.\n        '
                        'pathlib.Path.glob'
                        'Unacceptable pattern: {!r}'
                        'Non-relative patterns are unsupported'
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_GLOBAL                     0: sys
                        4       LOAD_METHOD                     1: audit
                        6       LOAD_CONST                      1: 'pathlib.Path.glob'
                        8       LOAD_FAST                       0: self
                        10      LOAD_FAST                       1: pattern
                        12      CALL_METHOD                     3
                        14      POP_TOP                         
                        16      LOAD_FAST                       1: pattern
                        18      POP_JUMP_IF_TRUE                17 (to 34)
                        20      LOAD_GLOBAL                     2: ValueError
                        22      LOAD_CONST                      2: 'Unacceptable pattern: {!r}'
                        24      LOAD_METHOD                     3: format
                        26      LOAD_FAST                       1: pattern
                        28      CALL_METHOD                     1
                        30      CALL_FUNCTION                   1
                        32      RAISE_VARARGS                   1
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       4: _flavour
                        38      LOAD_METHOD                     5: parse_parts
                        40      LOAD_FAST                       1: pattern
                        42      BUILD_TUPLE                     1
                        44      CALL_METHOD                     1
                        46      UNPACK_SEQUENCE                 3
                        48      STORE_FAST                      2: drv
                        50      STORE_FAST                      3: root
                        52      STORE_FAST                      4: pattern_parts
                        54      LOAD_FAST                       2: drv
                        56      POP_JUMP_IF_TRUE                31 (to 62)
                        58      LOAD_FAST                       3: root
                        60      POP_JUMP_IF_FALSE               35 (to 70)
                        62      LOAD_GLOBAL                     6: NotImplementedError
                        64      LOAD_CONST                      3: 'Non-relative patterns are unsupported'
                        66      CALL_FUNCTION                   1
                        68      RAISE_VARARGS                   1
                        70      LOAD_GLOBAL                     7: _make_selector
                        72      LOAD_GLOBAL                     8: tuple
                        74      LOAD_FAST                       4: pattern_parts
                        76      CALL_FUNCTION                   1
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       4: _flavour
                        82      CALL_FUNCTION                   2
                        84      STORE_FAST                      5: selector
                        86      LOAD_FAST                       5: selector
                        88      LOAD_METHOD                     9: select_from
                        90      LOAD_FAST                       0: self
                        92      CALL_METHOD                     1
                        94      GET_ITER                        
                        96      FOR_ITER                        5 (to 108)
                        98      STORE_FAST                      6: p
                        100     LOAD_FAST                       6: p
                        102     YIELD_VALUE                     
                        104     POP_TOP                         
                        106     JUMP_ABSOLUTE                   48 (to 96)
                        108     LOAD_CONST                      4: None
                        110     RETURN_VALUE                    
                'Path.glob'
                [Code]
                    File Name: pathlib.py
                    Object Name: rglob
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 5
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'sys'
                        'audit'
                        '_flavour'
                        'parse_parts'
                        'NotImplementedError'
                        '_make_selector'
                        'tuple'
                        'select_from'
                    [Var Names]
                        'self'
                        'pattern'
                        'drv'
                        'root'
                        'pattern_parts'
                        'selector'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Recursively yield all existing files (of any kind, including\n        directories) matching the given relative pattern, anywhere in\n        this subtree.\n        '
                        'pathlib.Path.rglob'
                        'Non-relative patterns are unsupported'
                        (
                            '**'
                        )
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_GLOBAL                     0: sys
                        4       LOAD_METHOD                     1: audit
                        6       LOAD_CONST                      1: 'pathlib.Path.rglob'
                        8       LOAD_FAST                       0: self
                        10      LOAD_FAST                       1: pattern
                        12      CALL_METHOD                     3
                        14      POP_TOP                         
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: _flavour
                        20      LOAD_METHOD                     3: parse_parts
                        22      LOAD_FAST                       1: pattern
                        24      BUILD_TUPLE                     1
                        26      CALL_METHOD                     1
                        28      UNPACK_SEQUENCE                 3
                        30      STORE_FAST                      2: drv
                        32      STORE_FAST                      3: root
                        34      STORE_FAST                      4: pattern_parts
                        36      LOAD_FAST                       2: drv
                        38      POP_JUMP_IF_TRUE                22 (to 44)
                        40      LOAD_FAST                       3: root
                        42      POP_JUMP_IF_FALSE               26 (to 52)
                        44      LOAD_GLOBAL                     4: NotImplementedError
                        46      LOAD_CONST                      2: 'Non-relative patterns are unsupported'
                        48      CALL_FUNCTION                   1
                        50      RAISE_VARARGS                   1
                        52      LOAD_GLOBAL                     5: _make_selector
                        54      LOAD_CONST                      3: ('**',)
                        56      LOAD_GLOBAL                     6: tuple
                        58      LOAD_FAST                       4: pattern_parts
                        60      CALL_FUNCTION                   1
                        62      BINARY_ADD                      
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       2: _flavour
                        68      CALL_FUNCTION                   2
                        70      STORE_FAST                      5: selector
                        72      LOAD_FAST                       5: selector
                        74      LOAD_METHOD                     7: select_from
                        76      LOAD_FAST                       0: self
                        78      CALL_METHOD                     1
                        80      GET_ITER                        
                        82      FOR_ITER                        5 (to 94)
                        84      STORE_FAST                      6: p
                        86      LOAD_FAST                       6: p
                        88      YIELD_VALUE                     
                        90      POP_TOP                         
                        92      JUMP_ABSOLUTE                   41 (to 82)
                        94      LOAD_CONST                      4: None
                        96      RETURN_VALUE                    
                'Path.rglob'
                [Code]
                    File Name: pathlib.py
                    Object Name: absolute
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'is_absolute'
                        '_from_parts'
                        '_accessor'
                        'getcwd'
                        '_parts'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return an absolute version of this path.  This function works\n        even if the path doesn't point to anything.\n\n        No normalization is done, i.e. all '.' and '..' will be kept along.\n        Use resolve() to get the canonical path to a file.\n        "
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: is_absolute
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               6 (to 12)
                        8       LOAD_FAST                       0: self
                        10      RETURN_VALUE                    
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: _from_parts
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: _accessor
                        20      LOAD_METHOD                     3: getcwd
                        22      CALL_METHOD                     0
                        24      BUILD_LIST                      1
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: _parts
                        30      BINARY_ADD                      
                        32      CALL_METHOD                     1
                        34      RETURN_VALUE                    
                'Path.absolute'
                False
                [Code]
                    File Name: pathlib.py
                    Object Name: resolve
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'realpath'
                        'OSError'
                        '_from_parts'
                        'stat'
                    [Var Names]
                        'self'
                        'strict'
                        'check_eloop'
                        's'
                        'e'
                        'p'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Make the path absolute, resolving all symlinks on the way and also\n        normalizing it (for example turning slashes into backslashes under\n        Windows).\n        '
                        [Code]
                            File Name: pathlib.py
                            Object Name: check_eloop
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'getattr'
                                'errno'
                                'ELOOP'
                                '_WINERROR_CANT_RESOLVE_FILENAME'
                                'RuntimeError'
                                'filename'
                            [Var Names]
                                'e'
                                'winerror'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                                'winerror'
                                0
                                'Symlink loop from %r'
                            [Disassembly]
                                0       LOAD_GLOBAL                     0: getattr
                                2       LOAD_FAST                       0: e
                                4       LOAD_CONST                      1: 'winerror'
                                6       LOAD_CONST                      2: 0
                                8       CALL_FUNCTION                   3
                                10      STORE_FAST                      1: winerror
                                12      LOAD_FAST                       0: e
                                14      LOAD_ATTR                       1: errno
                                16      LOAD_GLOBAL                     2: ELOOP
                                18      COMPARE_OP                      2 (==)
                                20      POP_JUMP_IF_TRUE                15 (to 30)
                                22      LOAD_FAST                       1: winerror
                                24      LOAD_GLOBAL                     3: _WINERROR_CANT_RESOLVE_FILENAME
                                26      COMPARE_OP                      2 (==)
                                28      POP_JUMP_IF_FALSE               22 (to 44)
                                30      LOAD_GLOBAL                     4: RuntimeError
                                32      LOAD_CONST                      3: 'Symlink loop from %r'
                                34      LOAD_FAST                       0: e
                                36      LOAD_ATTR                       5: filename
                                38      BINARY_MODULO                   
                                40      CALL_FUNCTION                   1
                                42      RAISE_VARARGS                   1
                                44      LOAD_CONST                      0: None
                                46      RETURN_VALUE                    
                        'Path.resolve.<locals>.check_eloop'
                        (
                            'strict'
                        )
                        None
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> check_eloop
                        2       LOAD_CONST                      2: 'Path.resolve.<locals>.check_eloop'
                        4       MAKE_FUNCTION                   0
                        6       STORE_FAST                      2: check_eloop
                        8       SETUP_FINALLY                   10 (to 30)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       0: _accessor
                        14      LOAD_ATTR                       1: realpath
                        16      LOAD_FAST                       0: self
                        18      LOAD_FAST                       1: strict
                        20      LOAD_CONST                      3: ('strict',)
                        22      CALL_FUNCTION_KW                2
                        24      STORE_FAST                      3: s
                        26      POP_BLOCK                       
                        28      JUMP_FORWARD                    17 (to 64)
                        30      DUP_TOP                         
                        32      LOAD_GLOBAL                     2: OSError
                        34      JUMP_IF_NOT_EXC_MATCH           31 (to 62)
                        36      POP_TOP                         
                        38      STORE_FAST                      4: e
                        40      POP_TOP                         
                        42      SETUP_FINALLY                   5 (to 54)
                        44      LOAD_FAST                       2: check_eloop
                        46      LOAD_FAST                       4: e
                        48      CALL_FUNCTION                   1
                        50      POP_TOP                         
                        52      RAISE_VARARGS                   0
                        54      LOAD_CONST                      4: None
                        56      STORE_FAST                      4: e
                        58      DELETE_FAST                     4: e
                        60      RERAISE                         1
                        62      RERAISE                         0
                        64      LOAD_FAST                       0: self
                        66      LOAD_METHOD                     3: _from_parts
                        68      LOAD_FAST                       3: s
                        70      BUILD_TUPLE                     1
                        72      CALL_METHOD                     1
                        74      STORE_FAST                      5: p
                        76      LOAD_FAST                       1: strict
                        78      POP_JUMP_IF_TRUE                71 (to 142)
                        80      SETUP_FINALLY                   7 (to 96)
                        82      LOAD_FAST                       5: p
                        84      LOAD_METHOD                     4: stat
                        86      CALL_METHOD                     0
                        88      POP_TOP                         
                        90      POP_BLOCK                       
                        92      LOAD_FAST                       5: p
                        94      RETURN_VALUE                    
                        96      DUP_TOP                         
                        98      LOAD_GLOBAL                     2: OSError
                        100     JUMP_IF_NOT_EXC_MATCH           70 (to 140)
                        102     POP_TOP                         
                        104     STORE_FAST                      4: e
                        106     POP_TOP                         
                        108     SETUP_FINALLY                   11 (to 132)
                        110     LOAD_FAST                       2: check_eloop
                        112     LOAD_FAST                       4: e
                        114     CALL_FUNCTION                   1
                        116     POP_TOP                         
                        118     POP_BLOCK                       
                        120     POP_EXCEPT                      
                        122     LOAD_CONST                      4: None
                        124     STORE_FAST                      4: e
                        126     DELETE_FAST                     4: e
                        128     LOAD_FAST                       5: p
                        130     RETURN_VALUE                    
                        132     LOAD_CONST                      4: None
                        134     STORE_FAST                      4: e
                        136     DELETE_FAST                     4: e
                        138     RERAISE                         1
                        140     RERAISE                         0
                        142     LOAD_FAST                       5: p
                        144     RETURN_VALUE                    
                'Path.resolve'
                True
                (
                    'follow_symlinks'
                )
                [Code]
                    File Name: pathlib.py
                    Object Name: stat
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'stat'
                    [Var Names]
                        'self'
                        'follow_symlinks'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Return the result of the stat() system call on this path, like\n        os.stat() does.\n        '
                        (
                            'follow_symlinks'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_ATTR                       1: stat
                        6       LOAD_FAST                       0: self
                        8       LOAD_FAST                       1: follow_symlinks
                        10      LOAD_CONST                      1: ('follow_symlinks',)
                        12      CALL_FUNCTION_KW                2
                        14      RETURN_VALUE                    
                'Path.stat'
                [Code]
                    File Name: pathlib.py
                    Object Name: owner
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'owner'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Return the login name of the file owner.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: owner
                        6       LOAD_FAST                       0: self
                        8       CALL_METHOD                     1
                        10      RETURN_VALUE                    
                'Path.owner'
                [Code]
                    File Name: pathlib.py
                    Object Name: group
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'group'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Return the group name of the file gid.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: group
                        6       LOAD_FAST                       0: self
                        8       CALL_METHOD                     1
                        10      RETURN_VALUE                    
                'Path.group'
                'r'
                -1
                None
                [Code]
                    File Name: pathlib.py
                    Object Name: open
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'io'
                        'text_encoding'
                        '_accessor'
                        'open'
                    [Var Names]
                        'self'
                        'mode'
                        'buffering'
                        'encoding'
                        'errors'
                        'newline'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open the file pointed by this path and return a file object, as\n        the built-in open() function does.\n        '
                        'b'
                    [Disassembly]
                        0       LOAD_CONST                      1: 'b'
                        2       LOAD_FAST                       1: mode
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               9 (to 18)
                        8       LOAD_GLOBAL                     0: io
                        10      LOAD_METHOD                     1: text_encoding
                        12      LOAD_FAST                       3: encoding
                        14      CALL_METHOD                     1
                        16      STORE_FAST                      3: encoding
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _accessor
                        22      LOAD_METHOD                     3: open
                        24      LOAD_FAST                       0: self
                        26      LOAD_FAST                       1: mode
                        28      LOAD_FAST                       2: buffering
                        30      LOAD_FAST                       3: encoding
                        32      LOAD_FAST                       4: errors
                        34      LOAD_FAST                       5: newline
                        36      CALL_METHOD                     6
                        38      RETURN_VALUE                    
                'Path.open'
                [Code]
                    File Name: pathlib.py
                    Object Name: read_bytes
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'open'
                        'read'
                    [Var Names]
                        'self'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open the file in bytes mode, read it, and close the file.\n        '
                        'rb'
                        (
                            'mode'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: open
                        4       LOAD_CONST                      1: 'rb'
                        6       LOAD_CONST                      2: ('mode',)
                        8       CALL_FUNCTION_KW                1
                        10      SETUP_WITH                      12 (to 36)
                        12      STORE_FAST                      1: f
                        14      LOAD_FAST                       1: f
                        16      LOAD_METHOD                     1: read
                        18      CALL_METHOD                     0
                        20      POP_BLOCK                       
                        22      ROT_TWO                         
                        24      LOAD_CONST                      3: None
                        26      DUP_TOP                         
                        28      DUP_TOP                         
                        30      CALL_FUNCTION                   3
                        32      POP_TOP                         
                        34      RETURN_VALUE                    
                        36      WITH_EXCEPT_START               
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RERAISE                         1
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_EXCEPT                      
                        50      POP_TOP                         
                        52      LOAD_CONST                      3: None
                        54      RETURN_VALUE                    
                'Path.read_bytes'
                [Code]
                    File Name: pathlib.py
                    Object Name: read_text
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'io'
                        'text_encoding'
                        'open'
                        'read'
                    [Var Names]
                        'self'
                        'encoding'
                        'errors'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open the file in text mode, read it, and close the file.\n        '
                        'r'
                        (
                            'mode'
                            'encoding'
                            'errors'
                        )
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: io
                        2       LOAD_METHOD                     1: text_encoding
                        4       LOAD_FAST                       1: encoding
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      1: encoding
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: open
                        14      LOAD_CONST                      1: 'r'
                        16      LOAD_FAST                       1: encoding
                        18      LOAD_FAST                       2: errors
                        20      LOAD_CONST                      2: ('mode', 'encoding', 'errors')
                        22      CALL_FUNCTION_KW                3
                        24      SETUP_WITH                      12 (to 50)
                        26      STORE_FAST                      3: f
                        28      LOAD_FAST                       3: f
                        30      LOAD_METHOD                     3: read
                        32      CALL_METHOD                     0
                        34      POP_BLOCK                       
                        36      ROT_TWO                         
                        38      LOAD_CONST                      3: None
                        40      DUP_TOP                         
                        42      DUP_TOP                         
                        44      CALL_FUNCTION                   3
                        46      POP_TOP                         
                        48      RETURN_VALUE                    
                        50      WITH_EXCEPT_START               
                        52      POP_JUMP_IF_TRUE                28 (to 56)
                        54      RERAISE                         1
                        56      POP_TOP                         
                        58      POP_TOP                         
                        60      POP_TOP                         
                        62      POP_EXCEPT                      
                        64      POP_TOP                         
                        66      LOAD_CONST                      3: None
                        68      RETURN_VALUE                    
                'Path.read_text'
                [Code]
                    File Name: pathlib.py
                    Object Name: write_bytes
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'memoryview'
                        'open'
                        'write'
                    [Var Names]
                        'self'
                        'data'
                        'view'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open the file in bytes mode, write to it, and close the file.\n        '
                        'wb'
                        (
                            'mode'
                        )
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: memoryview
                        2       LOAD_FAST                       1: data
                        4       CALL_FUNCTION                   1
                        6       STORE_FAST                      2: view
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: open
                        12      LOAD_CONST                      1: 'wb'
                        14      LOAD_CONST                      2: ('mode',)
                        16      CALL_FUNCTION_KW                1
                        18      SETUP_WITH                      13 (to 46)
                        20      STORE_FAST                      3: f
                        22      LOAD_FAST                       3: f
                        24      LOAD_METHOD                     2: write
                        26      LOAD_FAST                       2: view
                        28      CALL_METHOD                     1
                        30      POP_BLOCK                       
                        32      ROT_TWO                         
                        34      LOAD_CONST                      3: None
                        36      DUP_TOP                         
                        38      DUP_TOP                         
                        40      CALL_FUNCTION                   3
                        42      POP_TOP                         
                        44      RETURN_VALUE                    
                        46      WITH_EXCEPT_START               
                        48      POP_JUMP_IF_TRUE                26 (to 52)
                        50      RERAISE                         1
                        52      POP_TOP                         
                        54      POP_TOP                         
                        56      POP_TOP                         
                        58      POP_EXCEPT                      
                        60      POP_TOP                         
                        62      LOAD_CONST                      3: None
                        64      RETURN_VALUE                    
                'Path.write_bytes'
                [Code]
                    File Name: pathlib.py
                    Object Name: write_text
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'TypeError'
                        '__class__'
                        '__name__'
                        'io'
                        'text_encoding'
                        'open'
                        'write'
                    [Var Names]
                        'self'
                        'data'
                        'encoding'
                        'errors'
                        'newline'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open the file in text mode, write to it, and close the file.\n        '
                        'data must be str, not %s'
                        'w'
                        (
                            'mode'
                            'encoding'
                            'errors'
                            'newline'
                        )
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: data
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                13 (to 26)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'data must be str, not %s'
                        14      LOAD_FAST                       1: data
                        16      LOAD_ATTR                       3: __class__
                        18      LOAD_ATTR                       4: __name__
                        20      BINARY_MODULO                   
                        22      CALL_FUNCTION                   1
                        24      RAISE_VARARGS                   1
                        26      LOAD_GLOBAL                     5: io
                        28      LOAD_METHOD                     6: text_encoding
                        30      LOAD_FAST                       2: encoding
                        32      CALL_METHOD                     1
                        34      STORE_FAST                      2: encoding
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       7: open
                        40      LOAD_CONST                      2: 'w'
                        42      LOAD_FAST                       2: encoding
                        44      LOAD_FAST                       3: errors
                        46      LOAD_FAST                       4: newline
                        48      LOAD_CONST                      3: ('mode', 'encoding', 'errors', 'newline')
                        50      CALL_FUNCTION_KW                4
                        52      SETUP_WITH                      13 (to 80)
                        54      STORE_FAST                      5: f
                        56      LOAD_FAST                       5: f
                        58      LOAD_METHOD                     8: write
                        60      LOAD_FAST                       1: data
                        62      CALL_METHOD                     1
                        64      POP_BLOCK                       
                        66      ROT_TWO                         
                        68      LOAD_CONST                      4: None
                        70      DUP_TOP                         
                        72      DUP_TOP                         
                        74      CALL_FUNCTION                   3
                        76      POP_TOP                         
                        78      RETURN_VALUE                    
                        80      WITH_EXCEPT_START               
                        82      POP_JUMP_IF_TRUE                43 (to 86)
                        84      RERAISE                         1
                        86      POP_TOP                         
                        88      POP_TOP                         
                        90      POP_TOP                         
                        92      POP_EXCEPT                      
                        94      POP_TOP                         
                        96      LOAD_CONST                      4: None
                        98      RETURN_VALUE                    
                'Path.write_text'
                [Code]
                    File Name: pathlib.py
                    Object Name: readlink
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'readlink'
                        '_from_parts'
                    [Var Names]
                        'self'
                        'path'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Return the path to which the symbolic link points.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: readlink
                        6       LOAD_FAST                       0: self
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      1: path
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     2: _from_parts
                        16      LOAD_FAST                       1: path
                        18      BUILD_TUPLE                     1
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                'Path.readlink'
                438
                [Code]
                    File Name: pathlib.py
                    Object Name: touch
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'touch'
                    [Var Names]
                        'self'
                        'mode'
                        'exist_ok'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        Create this file with the given access mode, if it doesn't exist.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: touch
                        6       LOAD_FAST                       0: self
                        8       LOAD_FAST                       1: mode
                        10      LOAD_FAST                       2: exist_ok
                        12      CALL_METHOD                     3
                        14      POP_TOP                         
                        16      LOAD_CONST                      1: None
                        18      RETURN_VALUE                    
                'Path.touch'
                511
                [Code]
                    File Name: pathlib.py
                    Object Name: mkdir
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'mkdir'
                        'FileNotFoundError'
                        'parent'
                        'OSError'
                        'is_dir'
                    [Var Names]
                        'self'
                        'mode'
                        'parents'
                        'exist_ok'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Create a new directory at this given path.\n        '
                        True
                        (
                            'parents'
                            'exist_ok'
                        )
                        False
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   10 (to 22)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _accessor
                        6       LOAD_METHOD                     1: mkdir
                        8       LOAD_FAST                       0: self
                        10      LOAD_FAST                       1: mode
                        12      CALL_METHOD                     2
                        14      POP_TOP                         
                        16      POP_BLOCK                       
                        18      LOAD_CONST                      4: None
                        20      RETURN_VALUE                    
                        22      DUP_TOP                         
                        24      LOAD_GLOBAL                     2: FileNotFoundError
                        26      JUMP_IF_NOT_EXC_MATCH           44 (to 88)
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      LOAD_FAST                       2: parents
                        36      POP_JUMP_IF_FALSE               24 (to 48)
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       3: parent
                        42      LOAD_FAST                       0: self
                        44      COMPARE_OP                      2 (==)
                        46      POP_JUMP_IF_FALSE               25 (to 50)
                        48      RAISE_VARARGS                   0
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       3: parent
                        54      LOAD_ATTR                       1: mkdir
                        56      LOAD_CONST                      1: True
                        58      LOAD_CONST                      1: True
                        60      LOAD_CONST                      2: ('parents', 'exist_ok')
                        62      CALL_FUNCTION_KW                2
                        64      POP_TOP                         
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       1: mkdir
                        70      LOAD_FAST                       1: mode
                        72      LOAD_CONST                      3: False
                        74      LOAD_FAST                       3: exist_ok
                        76      LOAD_CONST                      2: ('parents', 'exist_ok')
                        78      CALL_FUNCTION_KW                3
                        80      POP_TOP                         
                        82      POP_EXCEPT                      
                        84      LOAD_CONST                      4: None
                        86      RETURN_VALUE                    
                        88      DUP_TOP                         
                        90      LOAD_GLOBAL                     4: OSError
                        92      JUMP_IF_NOT_EXC_MATCH           60 (to 120)
                        94      POP_TOP                         
                        96      POP_TOP                         
                        98      POP_TOP                         
                        100     LOAD_FAST                       3: exist_ok
                        102     POP_JUMP_IF_FALSE               56 (to 112)
                        104     LOAD_FAST                       0: self
                        106     LOAD_METHOD                     5: is_dir
                        108     CALL_METHOD                     0
                        110     POP_JUMP_IF_TRUE                57 (to 114)
                        112     RAISE_VARARGS                   0
                        114     POP_EXCEPT                      
                        116     LOAD_CONST                      4: None
                        118     RETURN_VALUE                    
                        120     RERAISE                         0
                'Path.mkdir'
                [Code]
                    File Name: pathlib.py
                    Object Name: chmod
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'chmod'
                    [Var Names]
                        'self'
                        'mode'
                        'follow_symlinks'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Change the permissions of the path, like os.chmod().\n        '
                        (
                            'follow_symlinks'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_ATTR                       1: chmod
                        6       LOAD_FAST                       0: self
                        8       LOAD_FAST                       1: mode
                        10      LOAD_FAST                       2: follow_symlinks
                        12      LOAD_CONST                      1: ('follow_symlinks',)
                        14      CALL_FUNCTION_KW                3
                        16      POP_TOP                         
                        18      LOAD_CONST                      2: None
                        20      RETURN_VALUE                    
                'Path.chmod'
                [Code]
                    File Name: pathlib.py
                    Object Name: lchmod
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'chmod'
                    [Var Names]
                        'self'
                        'mode'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        Like chmod(), except if the path points to a symlink, the symlink's\n        permissions are changed, rather than its target's.\n        "
                        False
                        (
                            'follow_symlinks'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: chmod
                        4       LOAD_FAST                       1: mode
                        6       LOAD_CONST                      1: False
                        8       LOAD_CONST                      2: ('follow_symlinks',)
                        10      CALL_FUNCTION_KW                2
                        12      POP_TOP                         
                        14      LOAD_CONST                      3: None
                        16      RETURN_VALUE                    
                'Path.lchmod'
                [Code]
                    File Name: pathlib.py
                    Object Name: unlink
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'unlink'
                        'FileNotFoundError'
                    [Var Names]
                        'self'
                        'missing_ok'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Remove this file or link.\n        If the path is a directory, use rmdir() instead.\n        '
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   9 (to 20)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _accessor
                        6       LOAD_METHOD                     1: unlink
                        8       LOAD_FAST                       0: self
                        10      CALL_METHOD                     1
                        12      POP_TOP                         
                        14      POP_BLOCK                       
                        16      LOAD_CONST                      1: None
                        18      RETURN_VALUE                    
                        20      DUP_TOP                         
                        22      LOAD_GLOBAL                     2: FileNotFoundError
                        24      JUMP_IF_NOT_EXC_MATCH           22 (to 44)
                        26      POP_TOP                         
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      LOAD_FAST                       1: missing_ok
                        34      POP_JUMP_IF_TRUE                19 (to 38)
                        36      RAISE_VARARGS                   0
                        38      POP_EXCEPT                      
                        40      LOAD_CONST                      1: None
                        42      RETURN_VALUE                    
                        44      RERAISE                         0
                'Path.unlink'
                [Code]
                    File Name: pathlib.py
                    Object Name: rmdir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'rmdir'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Remove this directory.  The directory must be empty.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: rmdir
                        6       LOAD_FAST                       0: self
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                'Path.rmdir'
                [Code]
                    File Name: pathlib.py
                    Object Name: lstat
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stat'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        Like stat(), except if the path points to a symlink, the symlink's\n        status information is returned, rather than its target's.\n        "
                        False
                        (
                            'follow_symlinks'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: stat
                        4       LOAD_CONST                      1: False
                        6       LOAD_CONST                      2: ('follow_symlinks',)
                        8       CALL_FUNCTION_KW                1
                        10      RETURN_VALUE                    
                'Path.lstat'
                [Code]
                    File Name: pathlib.py
                    Object Name: rename
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'rename'
                        '__class__'
                    [Var Names]
                        'self'
                        'target'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Rename this path to the target path.\n\n        The target path may be absolute or relative. Relative paths are\n        interpreted relative to the current working directory, *not* the\n        directory of the Path object.\n\n        Returns the new Path instance pointing to the target path.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: rename
                        6       LOAD_FAST                       0: self
                        8       LOAD_FAST                       1: target
                        10      CALL_METHOD                     2
                        12      POP_TOP                         
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: __class__
                        18      LOAD_FAST                       1: target
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                'Path.rename'
                [Code]
                    File Name: pathlib.py
                    Object Name: replace
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'replace'
                        '__class__'
                    [Var Names]
                        'self'
                        'target'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Rename this path to the target path, overwriting if that path exists.\n\n        The target path may be absolute or relative. Relative paths are\n        interpreted relative to the current working directory, *not* the\n        directory of the Path object.\n\n        Returns the new Path instance pointing to the target path.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: replace
                        6       LOAD_FAST                       0: self
                        8       LOAD_FAST                       1: target
                        10      CALL_METHOD                     2
                        12      POP_TOP                         
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: __class__
                        18      LOAD_FAST                       1: target
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                'Path.replace'
                [Code]
                    File Name: pathlib.py
                    Object Name: symlink_to
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'symlink'
                    [Var Names]
                        'self'
                        'target'
                        'target_is_directory'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Make this path a symlink pointing to the target path.\n        Note the order of arguments (link, target) is the reverse of os.symlink.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: symlink
                        6       LOAD_FAST                       1: target
                        8       LOAD_FAST                       0: self
                        10      LOAD_FAST                       2: target_is_directory
                        12      CALL_METHOD                     3
                        14      POP_TOP                         
                        16      LOAD_CONST                      1: None
                        18      RETURN_VALUE                    
                'Path.symlink_to'
                [Code]
                    File Name: pathlib.py
                    Object Name: hardlink_to
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_accessor'
                        'link'
                    [Var Names]
                        'self'
                        'target'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "\n        Make this path a hard link pointing to the same file as *target*.\n\n        Note the order of arguments (self, target) is the reverse of os.link's.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _accessor
                        4       LOAD_METHOD                     1: link
                        6       LOAD_FAST                       1: target
                        8       LOAD_FAST                       0: self
                        10      CALL_METHOD                     2
                        12      POP_TOP                         
                        14      LOAD_CONST                      1: None
                        16      RETURN_VALUE                    
                'Path.hardlink_to'
                [Code]
                    File Name: pathlib.py
                    Object Name: link_to
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'warnings'
                        'warn'
                        'DeprecationWarning'
                        '_accessor'
                        'link'
                    [Var Names]
                        'self'
                        'target'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Make the target path a hard link pointing to this path.\n\n        Note this function does not make this path a hard link to *target*,\n        despite the implication of the function and argument names. The order\n        of arguments (target, link) is the reverse of Path.symlink_to, but\n        matches that of os.link.\n\n        Deprecated since Python 3.10 and scheduled for removal in Python 3.12.\n        Use `hardlink_to()` instead.\n        '
                        'pathlib.Path.link_to() is deprecated and is scheduled for removal in Python 3.12. Use pathlib.Path.hardlink_to() instead.'
                        2
                        (
                            'stacklevel'
                        )
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: warnings
                        2       LOAD_ATTR                       1: warn
                        4       LOAD_CONST                      1: 'pathlib.Path.link_to() is deprecated and is scheduled for removal in Python 3.12. Use pathlib.Path.hardlink_to() instead.'
                        6       LOAD_GLOBAL                     2: DeprecationWarning
                        8       LOAD_CONST                      2: 2
                        10      LOAD_CONST                      3: ('stacklevel',)
                        12      CALL_FUNCTION_KW                3
                        14      POP_TOP                         
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       3: _accessor
                        20      LOAD_METHOD                     4: link
                        22      LOAD_FAST                       0: self
                        24      LOAD_FAST                       1: target
                        26      CALL_METHOD                     2
                        28      POP_TOP                         
                        30      LOAD_CONST                      4: None
                        32      RETURN_VALUE                    
                'Path.link_to'
                [Code]
                    File Name: pathlib.py
                    Object Name: exists
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stat'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path exists.\n        '
                        None
                        False
                        True
                    [Disassembly]
                        0       SETUP_FINALLY                   7 (to 16)
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: stat
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      POP_BLOCK                       
                        12      LOAD_CONST                      3: True
                        14      RETURN_VALUE                    
                        16      DUP_TOP                         
                        18      LOAD_GLOBAL                     1: OSError
                        20      JUMP_IF_NOT_EXC_MATCH           31 (to 62)
                        22      POP_TOP                         
                        24      STORE_FAST                      1: e
                        26      POP_TOP                         
                        28      SETUP_FINALLY                   12 (to 54)
                        30      LOAD_GLOBAL                     2: _ignore_error
                        32      LOAD_FAST                       1: e
                        34      CALL_FUNCTION                   1
                        36      POP_JUMP_IF_TRUE                20 (to 40)
                        38      RAISE_VARARGS                   0
                        40      POP_BLOCK                       
                        42      POP_EXCEPT                      
                        44      LOAD_CONST                      1: None
                        46      STORE_FAST                      1: e
                        48      DELETE_FAST                     1: e
                        50      LOAD_CONST                      2: False
                        52      RETURN_VALUE                    
                        54      LOAD_CONST                      1: None
                        56      STORE_FAST                      1: e
                        58      DELETE_FAST                     1: e
                        60      RERAISE                         1
                        62      DUP_TOP                         
                        64      LOAD_GLOBAL                     3: ValueError
                        66      JUMP_IF_NOT_EXC_MATCH           40 (to 80)
                        68      POP_TOP                         
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_EXCEPT                      
                        76      LOAD_CONST                      2: False
                        78      RETURN_VALUE                    
                        80      RERAISE                         0
                'Path.exists'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_dir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISDIR'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a directory.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISDIR
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_dir'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_file
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISREG'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a regular file (also True for symlinks pointing\n        to regular files).\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISREG
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_file'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_mount
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'exists'
                        'is_dir'
                        'parent'
                        'stat'
                        'st_dev'
                        'OSError'
                        'st_ino'
                    [Var Names]
                        'self'
                        'parent_dev'
                        'dev'
                        'ino'
                        'parent_ino'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Check if this path is a POSIX mount point\n        '
                        False
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: exists
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     1: is_dir
                        12      CALL_METHOD                     0
                        14      POP_JUMP_IF_TRUE                10 (to 20)
                        16      LOAD_CONST                      1: False
                        18      RETURN_VALUE                    
                        20      SETUP_FINALLY                   8 (to 38)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       2: parent
                        26      LOAD_METHOD                     3: stat
                        28      CALL_METHOD                     0
                        30      LOAD_ATTR                       4: st_dev
                        32      STORE_FAST                      1: parent_dev
                        34      POP_BLOCK                       
                        36      JUMP_FORWARD                    10 (to 58)
                        38      DUP_TOP                         
                        40      LOAD_GLOBAL                     5: OSError
                        42      JUMP_IF_NOT_EXC_MATCH           28 (to 56)
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_TOP                         
                        50      POP_EXCEPT                      
                        52      LOAD_CONST                      1: False
                        54      RETURN_VALUE                    
                        56      RERAISE                         0
                        58      LOAD_FAST                       0: self
                        60      LOAD_METHOD                     3: stat
                        62      CALL_METHOD                     0
                        64      LOAD_ATTR                       4: st_dev
                        66      STORE_FAST                      2: dev
                        68      LOAD_FAST                       2: dev
                        70      LOAD_FAST                       1: parent_dev
                        72      COMPARE_OP                      3 (!=)
                        74      POP_JUMP_IF_FALSE               40 (to 80)
                        76      LOAD_CONST                      2: True
                        78      RETURN_VALUE                    
                        80      LOAD_FAST                       0: self
                        82      LOAD_METHOD                     3: stat
                        84      CALL_METHOD                     0
                        86      LOAD_ATTR                       6: st_ino
                        88      STORE_FAST                      3: ino
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       2: parent
                        94      LOAD_METHOD                     3: stat
                        96      CALL_METHOD                     0
                        98      LOAD_ATTR                       6: st_ino
                        100     STORE_FAST                      4: parent_ino
                        102     LOAD_FAST                       3: ino
                        104     LOAD_FAST                       4: parent_ino
                        106     COMPARE_OP                      2 (==)
                        108     RETURN_VALUE                    
                'Path.is_mount'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_symlink
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISLNK'
                        'lstat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a symbolic link.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISLNK
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: lstat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_symlink'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_block_device
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISBLK'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a block device.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISBLK
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_block_device'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_char_device
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISCHR'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a character device.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISCHR
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_char_device'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_fifo
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISFIFO'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a FIFO.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISFIFO
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_fifo'
                [Code]
                    File Name: pathlib.py
                    Object Name: is_socket
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'S_ISSOCK'
                        'stat'
                        'st_mode'
                        'OSError'
                        '_ignore_error'
                        'ValueError'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Whether this path is a socket.\n        '
                        None
                        False
                    [Disassembly]
                        0       SETUP_FINALLY                   8 (to 18)
                        2       LOAD_GLOBAL                     0: S_ISSOCK
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     1: stat
                        8       CALL_METHOD                     0
                        10      LOAD_ATTR                       2: st_mode
                        12      CALL_FUNCTION                   1
                        14      POP_BLOCK                       
                        16      RETURN_VALUE                    
                        18      DUP_TOP                         
                        20      LOAD_GLOBAL                     3: OSError
                        22      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        24      POP_TOP                         
                        26      STORE_FAST                      1: e
                        28      POP_TOP                         
                        30      SETUP_FINALLY                   12 (to 56)
                        32      LOAD_GLOBAL                     4: _ignore_error
                        34      LOAD_FAST                       1: e
                        36      CALL_FUNCTION                   1
                        38      POP_JUMP_IF_TRUE                21 (to 42)
                        40      RAISE_VARARGS                   0
                        42      POP_BLOCK                       
                        44      POP_EXCEPT                      
                        46      LOAD_CONST                      1: None
                        48      STORE_FAST                      1: e
                        50      DELETE_FAST                     1: e
                        52      LOAD_CONST                      2: False
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      1: None
                        58      STORE_FAST                      1: e
                        60      DELETE_FAST                     1: e
                        62      RERAISE                         1
                        64      DUP_TOP                         
                        66      LOAD_GLOBAL                     5: ValueError
                        68      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        70      POP_TOP                         
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      2: False
                        80      RETURN_VALUE                    
                        82      RERAISE                         0
                'Path.is_socket'
                [Code]
                    File Name: pathlib.py
                    Object Name: expanduser
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_drv'
                        '_root'
                        '_parts'
                        '_accessor'
                        'expanduser'
                        'RuntimeError'
                        '_from_parts'
                    [Var Names]
                        'self'
                        'homedir'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        ' Return a new path with expanded ~ and ~user constructs\n        (as returned by os.path.expanduser)\n        '
                        0
                        None
                        1
                        '~'
                        'Could not determine home directory.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _drv
                        4       POP_JUMP_IF_TRUE                54 (to 108)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _root
                        10      POP_JUMP_IF_TRUE                54 (to 108)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: _parts
                        16      POP_JUMP_IF_FALSE               54 (to 108)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _parts
                        22      LOAD_CONST                      1: 0
                        24      BINARY_SUBSCR                   
                        26      LOAD_CONST                      2: None
                        28      LOAD_CONST                      3: 1
                        30      BUILD_SLICE                     2
                        32      BINARY_SUBSCR                   
                        34      LOAD_CONST                      4: '~'
                        36      COMPARE_OP                      2 (==)
                        38      POP_JUMP_IF_FALSE               54 (to 108)
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       3: _accessor
                        44      LOAD_METHOD                     4: expanduser
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       2: _parts
                        50      LOAD_CONST                      1: 0
                        52      BINARY_SUBSCR                   
                        54      CALL_METHOD                     1
                        56      STORE_FAST                      1: homedir
                        58      LOAD_FAST                       1: homedir
                        60      LOAD_CONST                      2: None
                        62      LOAD_CONST                      3: 1
                        64      BUILD_SLICE                     2
                        66      BINARY_SUBSCR                   
                        68      LOAD_CONST                      4: '~'
                        70      COMPARE_OP                      2 (==)
                        72      POP_JUMP_IF_FALSE               41 (to 82)
                        74      LOAD_GLOBAL                     5: RuntimeError
                        76      LOAD_CONST                      5: 'Could not determine home directory.'
                        78      CALL_FUNCTION                   1
                        80      RAISE_VARARGS                   1
                        82      LOAD_FAST                       0: self
                        84      LOAD_METHOD                     6: _from_parts
                        86      LOAD_FAST                       1: homedir
                        88      BUILD_LIST                      1
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       2: _parts
                        94      LOAD_CONST                      3: 1
                        96      LOAD_CONST                      2: None
                        98      BUILD_SLICE                     2
                        100     BINARY_SUBSCR                   
                        102     BINARY_ADD                      
                        104     CALL_METHOD                     1
                        106     RETURN_VALUE                    
                        108     LOAD_FAST                       0: self
                        110     RETURN_VALUE                    
                'Path.expanduser'
                (
                    False
                )
                (
                    'r'
                    -1
                    None
                    None
                    None
                )
                (
                    None
                    None
                )
                (
                    None
                    None
                    None
                )
                (
                    438
                    True
                )
                (
                    511
                    False
                    False
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Path'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'PurePath subclass that can make system calls.\n\n    Path represents a filesystem path but unlike PurePath, also offers\n    methods to do system calls on path objects. Depending on your system,\n    instantiating a Path will return either a PosixPath or a WindowsPath\n    object. You can also instantiate a PosixPath or WindowsPath directly,\n    but cannot instantiate a WindowsPath on a POSIX system or vice versa.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: _normal_accessor
                14      STORE_NAME                      5: _accessor
                16      LOAD_CONST                      2: ()
                18      STORE_NAME                      6: __slots__
                20      LOAD_CONST                      3: <CODE> __new__
                22      LOAD_CONST                      4: 'Path.__new__'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      7: __new__
                28      LOAD_CONST                      5: <CODE> _make_child_relpath
                30      LOAD_CONST                      6: 'Path._make_child_relpath'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      8: _make_child_relpath
                36      LOAD_CONST                      7: <CODE> __enter__
                38      LOAD_CONST                      8: 'Path.__enter__'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      9: __enter__
                44      LOAD_CONST                      9: <CODE> __exit__
                46      LOAD_CONST                      10: 'Path.__exit__'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      10: __exit__
                52      LOAD_NAME                       11: classmethod
                54      LOAD_CONST                      11: <CODE> cwd
                56      LOAD_CONST                      12: 'Path.cwd'
                58      MAKE_FUNCTION                   0
                60      CALL_FUNCTION                   1
                62      STORE_NAME                      12: cwd
                64      LOAD_NAME                       11: classmethod
                66      LOAD_CONST                      13: <CODE> home
                68      LOAD_CONST                      14: 'Path.home'
                70      MAKE_FUNCTION                   0
                72      CALL_FUNCTION                   1
                74      STORE_NAME                      13: home
                76      LOAD_CONST                      15: <CODE> samefile
                78      LOAD_CONST                      16: 'Path.samefile'
                80      MAKE_FUNCTION                   0
                82      STORE_NAME                      14: samefile
                84      LOAD_CONST                      17: <CODE> iterdir
                86      LOAD_CONST                      18: 'Path.iterdir'
                88      MAKE_FUNCTION                   0
                90      STORE_NAME                      15: iterdir
                92      LOAD_CONST                      19: <CODE> glob
                94      LOAD_CONST                      20: 'Path.glob'
                96      MAKE_FUNCTION                   0
                98      STORE_NAME                      16: glob
                100     LOAD_CONST                      21: <CODE> rglob
                102     LOAD_CONST                      22: 'Path.rglob'
                104     MAKE_FUNCTION                   0
                106     STORE_NAME                      17: rglob
                108     LOAD_CONST                      23: <CODE> absolute
                110     LOAD_CONST                      24: 'Path.absolute'
                112     MAKE_FUNCTION                   0
                114     STORE_NAME                      18: absolute
                116     LOAD_CONST                      97: (False,)
                118     LOAD_CONST                      26: <CODE> resolve
                120     LOAD_CONST                      27: 'Path.resolve'
                122     MAKE_FUNCTION                   1
                124     STORE_NAME                      19: resolve
                126     LOAD_CONST                      28: True
                128     LOAD_CONST                      29: ('follow_symlinks',)
                130     BUILD_CONST_KEY_MAP             1
                132     LOAD_CONST                      30: <CODE> stat
                134     LOAD_CONST                      31: 'Path.stat'
                136     MAKE_FUNCTION                   2
                138     STORE_NAME                      20: stat
                140     LOAD_CONST                      32: <CODE> owner
                142     LOAD_CONST                      33: 'Path.owner'
                144     MAKE_FUNCTION                   0
                146     STORE_NAME                      21: owner
                148     LOAD_CONST                      34: <CODE> group
                150     LOAD_CONST                      35: 'Path.group'
                152     MAKE_FUNCTION                   0
                154     STORE_NAME                      22: group
                156     NOP                             
                158     NOP                             
                160     LOAD_CONST                      98: ('r', -1, None, None, None)
                162     LOAD_CONST                      39: <CODE> open
                164     LOAD_CONST                      40: 'Path.open'
                166     MAKE_FUNCTION                   1
                168     STORE_NAME                      23: open
                170     LOAD_CONST                      41: <CODE> read_bytes
                172     LOAD_CONST                      42: 'Path.read_bytes'
                174     MAKE_FUNCTION                   0
                176     STORE_NAME                      24: read_bytes
                178     LOAD_CONST                      99: (None, None)
                180     LOAD_CONST                      43: <CODE> read_text
                182     LOAD_CONST                      44: 'Path.read_text'
                184     MAKE_FUNCTION                   1
                186     STORE_NAME                      25: read_text
                188     LOAD_CONST                      45: <CODE> write_bytes
                190     LOAD_CONST                      46: 'Path.write_bytes'
                192     MAKE_FUNCTION                   0
                194     STORE_NAME                      26: write_bytes
                196     LOAD_CONST                      100: (None, None, None)
                198     LOAD_CONST                      47: <CODE> write_text
                200     LOAD_CONST                      48: 'Path.write_text'
                202     MAKE_FUNCTION                   1
                204     STORE_NAME                      27: write_text
                206     LOAD_CONST                      49: <CODE> readlink
                208     LOAD_CONST                      50: 'Path.readlink'
                210     MAKE_FUNCTION                   0
                212     STORE_NAME                      28: readlink
                214     LOAD_CONST                      101: (438, True)
                216     LOAD_CONST                      52: <CODE> touch
                218     LOAD_CONST                      53: 'Path.touch'
                220     MAKE_FUNCTION                   1
                222     STORE_NAME                      29: touch
                224     LOAD_CONST                      102: (511, False, False)
                226     LOAD_CONST                      55: <CODE> mkdir
                228     LOAD_CONST                      56: 'Path.mkdir'
                230     MAKE_FUNCTION                   1
                232     STORE_NAME                      30: mkdir
                234     LOAD_CONST                      28: True
                236     LOAD_CONST                      29: ('follow_symlinks',)
                238     BUILD_CONST_KEY_MAP             1
                240     LOAD_CONST                      57: <CODE> chmod
                242     LOAD_CONST                      58: 'Path.chmod'
                244     MAKE_FUNCTION                   2
                246     STORE_NAME                      31: chmod
                248     LOAD_CONST                      59: <CODE> lchmod
                250     LOAD_CONST                      60: 'Path.lchmod'
                252     MAKE_FUNCTION                   0
                254     STORE_NAME                      32: lchmod
                256     LOAD_CONST                      97: (False,)
                258     LOAD_CONST                      61: <CODE> unlink
                260     LOAD_CONST                      62: 'Path.unlink'
                262     MAKE_FUNCTION                   1
                264     STORE_NAME                      33: unlink
                266     LOAD_CONST                      63: <CODE> rmdir
                268     LOAD_CONST                      64: 'Path.rmdir'
                270     MAKE_FUNCTION                   0
                272     STORE_NAME                      34: rmdir
                274     LOAD_CONST                      65: <CODE> lstat
                276     LOAD_CONST                      66: 'Path.lstat'
                278     MAKE_FUNCTION                   0
                280     STORE_NAME                      35: lstat
                282     LOAD_CONST                      67: <CODE> rename
                284     LOAD_CONST                      68: 'Path.rename'
                286     MAKE_FUNCTION                   0
                288     STORE_NAME                      36: rename
                290     LOAD_CONST                      69: <CODE> replace
                292     LOAD_CONST                      70: 'Path.replace'
                294     MAKE_FUNCTION                   0
                296     STORE_NAME                      37: replace
                298     LOAD_CONST                      97: (False,)
                300     LOAD_CONST                      71: <CODE> symlink_to
                302     LOAD_CONST                      72: 'Path.symlink_to'
                304     MAKE_FUNCTION                   1
                306     STORE_NAME                      38: symlink_to
                308     LOAD_CONST                      73: <CODE> hardlink_to
                310     LOAD_CONST                      74: 'Path.hardlink_to'
                312     MAKE_FUNCTION                   0
                314     STORE_NAME                      39: hardlink_to
                316     LOAD_CONST                      75: <CODE> link_to
                318     LOAD_CONST                      76: 'Path.link_to'
                320     MAKE_FUNCTION                   0
                322     STORE_NAME                      40: link_to
                324     LOAD_CONST                      77: <CODE> exists
                326     LOAD_CONST                      78: 'Path.exists'
                328     MAKE_FUNCTION                   0
                330     STORE_NAME                      41: exists
                332     LOAD_CONST                      79: <CODE> is_dir
                334     LOAD_CONST                      80: 'Path.is_dir'
                336     MAKE_FUNCTION                   0
                338     STORE_NAME                      42: is_dir
                340     LOAD_CONST                      81: <CODE> is_file
                342     LOAD_CONST                      82: 'Path.is_file'
                344     MAKE_FUNCTION                   0
                346     STORE_NAME                      43: is_file
                348     LOAD_CONST                      83: <CODE> is_mount
                350     LOAD_CONST                      84: 'Path.is_mount'
                352     MAKE_FUNCTION                   0
                354     STORE_NAME                      44: is_mount
                356     LOAD_CONST                      85: <CODE> is_symlink
                358     LOAD_CONST                      86: 'Path.is_symlink'
                360     MAKE_FUNCTION                   0
                362     STORE_NAME                      45: is_symlink
                364     LOAD_CONST                      87: <CODE> is_block_device
                366     LOAD_CONST                      88: 'Path.is_block_device'
                368     MAKE_FUNCTION                   0
                370     STORE_NAME                      46: is_block_device
                372     LOAD_CONST                      89: <CODE> is_char_device
                374     LOAD_CONST                      90: 'Path.is_char_device'
                376     MAKE_FUNCTION                   0
                378     STORE_NAME                      47: is_char_device
                380     LOAD_CONST                      91: <CODE> is_fifo
                382     LOAD_CONST                      92: 'Path.is_fifo'
                384     MAKE_FUNCTION                   0
                386     STORE_NAME                      48: is_fifo
                388     LOAD_CONST                      93: <CODE> is_socket
                390     LOAD_CONST                      94: 'Path.is_socket'
                392     MAKE_FUNCTION                   0
                394     STORE_NAME                      49: is_socket
                396     LOAD_CONST                      95: <CODE> expanduser
                398     LOAD_CONST                      96: 'Path.expanduser'
                400     MAKE_FUNCTION                   0
                402     STORE_NAME                      50: expanduser
                404     LOAD_CONST                      38: None
                406     RETURN_VALUE                    
        'Path'
        [Code]
            File Name: pathlib.py
            Object Name: PosixPath
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'PosixPath'
                'Path subclass for non-Windows systems.\n\n    On a POSIX system, instantiating a Path should return this object.\n    '
                (
                )
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'PosixPath'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Path subclass for non-Windows systems.\n\n    On a POSIX system, instantiating a Path should return this object.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ()
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      3: None
                18      RETURN_VALUE                    
        'PosixPath'
        [Code]
            File Name: pathlib.py
            Object Name: WindowsPath
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                'is_mount'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'WindowsPath'
                'Path subclass for Windows systems.\n\n    On a Windows system, instantiating a Path should return this object.\n    '
                (
                )
                [Code]
                    File Name: pathlib.py
                    Object Name: is_mount
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NotImplementedError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Path.is_mount() is unsupported on this system'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: NotImplementedError
                        2       LOAD_CONST                      1: 'Path.is_mount() is unsupported on this system'
                        4       CALL_FUNCTION                   1
                        6       RAISE_VARARGS                   1
                'WindowsPath.is_mount'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'WindowsPath'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Path subclass for Windows systems.\n\n    On a Windows system, instantiating a Path should return this object.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ()
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      3: <CODE> is_mount
                18      LOAD_CONST                      4: 'WindowsPath.is_mount'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      5: is_mount
                24      LOAD_CONST                      5: None
                26      RETURN_VALUE                    
        'WindowsPath'
    [Disassembly]
        0       LOAD_CONST                      0: 0
        2       LOAD_CONST                      1: None
        4       IMPORT_NAME                     0: fnmatch
        6       STORE_NAME                      0: fnmatch
        8       LOAD_CONST                      0: 0
        10      LOAD_CONST                      1: None
        12      IMPORT_NAME                     1: functools
        14      STORE_NAME                      1: functools
        16      LOAD_CONST                      0: 0
        18      LOAD_CONST                      1: None
        20      IMPORT_NAME                     2: io
        22      STORE_NAME                      2: io
        24      LOAD_CONST                      0: 0
        26      LOAD_CONST                      1: None
        28      IMPORT_NAME                     3: ntpath
        30      STORE_NAME                      3: ntpath
        32      LOAD_CONST                      0: 0
        34      LOAD_CONST                      1: None
        36      IMPORT_NAME                     4: os
        38      STORE_NAME                      4: os
        40      LOAD_CONST                      0: 0
        42      LOAD_CONST                      1: None
        44      IMPORT_NAME                     5: posixpath
        46      STORE_NAME                      5: posixpath
        48      LOAD_CONST                      0: 0
        50      LOAD_CONST                      1: None
        52      IMPORT_NAME                     6: re
        54      STORE_NAME                      6: re
        56      LOAD_CONST                      0: 0
        58      LOAD_CONST                      1: None
        60      IMPORT_NAME                     7: sys
        62      STORE_NAME                      7: sys
        64      LOAD_CONST                      0: 0
        66      LOAD_CONST                      1: None
        68      IMPORT_NAME                     8: warnings
        70      STORE_NAME                      8: warnings
        72      LOAD_CONST                      0: 0
        74      LOAD_CONST                      2: ('Sequence',)
        76      IMPORT_NAME                     9: _collections_abc
        78      IMPORT_FROM                     10: Sequence
        80      STORE_NAME                      10: Sequence
        82      POP_TOP                         
        84      LOAD_CONST                      0: 0
        86      LOAD_CONST                      3: ('EINVAL', 'ENOENT', 'ENOTDIR', 'EBADF', 'ELOOP')
        88      IMPORT_NAME                     11: errno
        90      IMPORT_FROM                     12: EINVAL
        92      STORE_NAME                      12: EINVAL
        94      IMPORT_FROM                     13: ENOENT
        96      STORE_NAME                      13: ENOENT
        98      IMPORT_FROM                     14: ENOTDIR
        100     STORE_NAME                      14: ENOTDIR
        102     IMPORT_FROM                     15: EBADF
        104     STORE_NAME                      15: EBADF
        106     IMPORT_FROM                     16: ELOOP
        108     STORE_NAME                      16: ELOOP
        110     POP_TOP                         
        112     LOAD_CONST                      0: 0
        114     LOAD_CONST                      4: ('attrgetter',)
        116     IMPORT_NAME                     17: operator
        118     IMPORT_FROM                     18: attrgetter
        120     STORE_NAME                      18: attrgetter
        122     POP_TOP                         
        124     LOAD_CONST                      0: 0
        126     LOAD_CONST                      5: ('S_ISDIR', 'S_ISLNK', 'S_ISREG', 'S_ISSOCK', 'S_ISBLK', 'S_ISCHR', 'S_ISFIFO')
        128     IMPORT_NAME                     19: stat
        130     IMPORT_FROM                     20: S_ISDIR
        132     STORE_NAME                      20: S_ISDIR
        134     IMPORT_FROM                     21: S_ISLNK
        136     STORE_NAME                      21: S_ISLNK
        138     IMPORT_FROM                     22: S_ISREG
        140     STORE_NAME                      22: S_ISREG
        142     IMPORT_FROM                     23: S_ISSOCK
        144     STORE_NAME                      23: S_ISSOCK
        146     IMPORT_FROM                     24: S_ISBLK
        148     STORE_NAME                      24: S_ISBLK
        150     IMPORT_FROM                     25: S_ISCHR
        152     STORE_NAME                      25: S_ISCHR
        154     IMPORT_FROM                     26: S_ISFIFO
        156     STORE_NAME                      26: S_ISFIFO
        158     POP_TOP                         
        160     LOAD_CONST                      0: 0
        162     LOAD_CONST                      6: ('quote_from_bytes',)
        164     IMPORT_NAME                     27: urllib.parse
        166     IMPORT_FROM                     28: quote_from_bytes
        168     STORE_NAME                      29: urlquote_from_bytes
        170     POP_TOP                         
        172     BUILD_LIST                      0
        174     LOAD_CONST                      7: ('PurePath', 'PurePosixPath', 'PureWindowsPath', 'Path', 'PosixPath', 'WindowsPath')
        176     LIST_EXTEND                     1
        178     STORE_NAME                      30: __all__
        180     LOAD_CONST                      8: 21
        182     STORE_NAME                      31: _WINERROR_NOT_READY
        184     LOAD_CONST                      9: 123
        186     STORE_NAME                      32: _WINERROR_INVALID_NAME
        188     LOAD_CONST                      10: 1921
        190     STORE_NAME                      33: _WINERROR_CANT_RESOLVE_FILENAME
        192     LOAD_NAME                       13: ENOENT
        194     LOAD_NAME                       14: ENOTDIR
        196     LOAD_NAME                       15: EBADF
        198     LOAD_NAME                       16: ELOOP
        200     BUILD_TUPLE                     4
        202     STORE_NAME                      34: _IGNORED_ERROS
        204     LOAD_NAME                       31: _WINERROR_NOT_READY
        206     LOAD_NAME                       32: _WINERROR_INVALID_NAME
        208     LOAD_NAME                       33: _WINERROR_CANT_RESOLVE_FILENAME
        210     BUILD_TUPLE                     3
        212     STORE_NAME                      35: _IGNORED_WINERRORS
        214     LOAD_CONST                      11: <CODE> _ignore_error
        216     LOAD_CONST                      12: '_ignore_error'
        218     MAKE_FUNCTION                   0
        220     STORE_NAME                      36: _ignore_error
        222     LOAD_CONST                      13: <CODE> _is_wildcard_pattern
        224     LOAD_CONST                      14: '_is_wildcard_pattern'
        226     MAKE_FUNCTION                   0
        228     STORE_NAME                      37: _is_wildcard_pattern
        230     LOAD_BUILD_CLASS                
        232     LOAD_CONST                      15: <CODE> _Flavour
        234     LOAD_CONST                      16: '_Flavour'
        236     MAKE_FUNCTION                   0
        238     LOAD_CONST                      16: '_Flavour'
        240     LOAD_NAME                       38: object
        242     CALL_FUNCTION                   3
        244     STORE_NAME                      39: _Flavour
        246     LOAD_BUILD_CLASS                
        248     LOAD_CONST                      17: <CODE> _WindowsFlavour
        250     LOAD_CONST                      18: '_WindowsFlavour'
        252     MAKE_FUNCTION                   0
        254     LOAD_CONST                      18: '_WindowsFlavour'
        256     LOAD_NAME                       39: _Flavour
        258     CALL_FUNCTION                   3
        260     STORE_NAME                      40: _WindowsFlavour
        262     LOAD_BUILD_CLASS                
        264     LOAD_CONST                      19: <CODE> _PosixFlavour
        266     LOAD_CONST                      20: '_PosixFlavour'
        268     MAKE_FUNCTION                   0
        270     LOAD_CONST                      20: '_PosixFlavour'
        272     LOAD_NAME                       39: _Flavour
        274     CALL_FUNCTION                   3
        276     STORE_NAME                      41: _PosixFlavour
        278     LOAD_NAME                       40: _WindowsFlavour
        280     CALL_FUNCTION                   0
        282     STORE_NAME                      42: _windows_flavour
        284     LOAD_NAME                       41: _PosixFlavour
        286     CALL_FUNCTION                   0
        288     STORE_NAME                      43: _posix_flavour
        290     LOAD_BUILD_CLASS                
        292     LOAD_CONST                      21: <CODE> _Accessor
        294     LOAD_CONST                      22: '_Accessor'
        296     MAKE_FUNCTION                   0
        298     LOAD_CONST                      22: '_Accessor'
        300     CALL_FUNCTION                   2
        302     STORE_NAME                      44: _Accessor
        304     LOAD_BUILD_CLASS                
        306     LOAD_CONST                      23: <CODE> _NormalAccessor
        308     LOAD_CONST                      24: '_NormalAccessor'
        310     MAKE_FUNCTION                   0
        312     LOAD_CONST                      24: '_NormalAccessor'
        314     LOAD_NAME                       44: _Accessor
        316     CALL_FUNCTION                   3
        318     STORE_NAME                      45: _NormalAccessor
        320     LOAD_NAME                       45: _NormalAccessor
        322     CALL_FUNCTION                   0
        324     STORE_NAME                      46: _normal_accessor
        326     LOAD_CONST                      25: <CODE> _make_selector
        328     LOAD_CONST                      26: '_make_selector'
        330     MAKE_FUNCTION                   0
        332     STORE_NAME                      47: _make_selector
        334     LOAD_NAME                       48: hasattr
        336     LOAD_NAME                       1: functools
        338     LOAD_CONST                      27: 'lru_cache'
        340     CALL_FUNCTION                   2
        342     POP_JUMP_IF_FALSE               178 (to 356)
        344     LOAD_NAME                       1: functools
        346     LOAD_METHOD                     49: lru_cache
        348     CALL_METHOD                     0
        350     LOAD_NAME                       47: _make_selector
        352     CALL_FUNCTION                   1
        354     STORE_NAME                      47: _make_selector
        356     LOAD_BUILD_CLASS                
        358     LOAD_CONST                      28: <CODE> _Selector
        360     LOAD_CONST                      29: '_Selector'
        362     MAKE_FUNCTION                   0
        364     LOAD_CONST                      29: '_Selector'
        366     CALL_FUNCTION                   2
        368     STORE_NAME                      50: _Selector
        370     LOAD_BUILD_CLASS                
        372     LOAD_CONST                      30: <CODE> _TerminatingSelector
        374     LOAD_CONST                      31: '_TerminatingSelector'
        376     MAKE_FUNCTION                   0
        378     LOAD_CONST                      31: '_TerminatingSelector'
        380     CALL_FUNCTION                   2
        382     STORE_NAME                      51: _TerminatingSelector
        384     LOAD_BUILD_CLASS                
        386     LOAD_CONST                      32: <CODE> _PreciseSelector
        388     LOAD_CONST                      33: '_PreciseSelector'
        390     MAKE_FUNCTION                   0
        392     LOAD_CONST                      33: '_PreciseSelector'
        394     LOAD_NAME                       50: _Selector
        396     CALL_FUNCTION                   3
        398     STORE_NAME                      52: _PreciseSelector
        400     LOAD_BUILD_CLASS                
        402     LOAD_CONST                      34: <CODE> _WildcardSelector
        404     LOAD_CONST                      35: '_WildcardSelector'
        406     MAKE_FUNCTION                   0
        408     LOAD_CONST                      35: '_WildcardSelector'
        410     LOAD_NAME                       50: _Selector
        412     CALL_FUNCTION                   3
        414     STORE_NAME                      53: _WildcardSelector
        416     LOAD_BUILD_CLASS                
        418     LOAD_CONST                      36: <CODE> _RecursiveWildcardSelector
        420     LOAD_CONST                      37: '_RecursiveWildcardSelector'
        422     MAKE_FUNCTION                   0
        424     LOAD_CONST                      37: '_RecursiveWildcardSelector'
        426     LOAD_NAME                       50: _Selector
        428     CALL_FUNCTION                   3
        430     STORE_NAME                      54: _RecursiveWildcardSelector
        432     LOAD_BUILD_CLASS                
        434     LOAD_CONST                      38: <CODE> _PathParents
        436     LOAD_CONST                      39: '_PathParents'
        438     MAKE_FUNCTION                   0
        440     LOAD_CONST                      39: '_PathParents'
        442     LOAD_NAME                       10: Sequence
        444     CALL_FUNCTION                   3
        446     STORE_NAME                      55: _PathParents
        448     LOAD_BUILD_CLASS                
        450     LOAD_CONST                      40: <CODE> PurePath
        452     LOAD_CONST                      41: 'PurePath'
        454     MAKE_FUNCTION                   0
        456     LOAD_CONST                      41: 'PurePath'
        458     LOAD_NAME                       38: object
        460     CALL_FUNCTION                   3
        462     STORE_NAME                      56: PurePath
        464     LOAD_NAME                       4: os
        466     LOAD_ATTR                       57: PathLike
        468     LOAD_METHOD                     58: register
        470     LOAD_NAME                       56: PurePath
        472     CALL_METHOD                     1
        474     POP_TOP                         
        476     LOAD_BUILD_CLASS                
        478     LOAD_CONST                      42: <CODE> PurePosixPath
        480     LOAD_CONST                      43: 'PurePosixPath'
        482     MAKE_FUNCTION                   0
        484     LOAD_CONST                      43: 'PurePosixPath'
        486     LOAD_NAME                       56: PurePath
        488     CALL_FUNCTION                   3
        490     STORE_NAME                      59: PurePosixPath
        492     LOAD_BUILD_CLASS                
        494     LOAD_CONST                      44: <CODE> PureWindowsPath
        496     LOAD_CONST                      45: 'PureWindowsPath'
        498     MAKE_FUNCTION                   0
        500     LOAD_CONST                      45: 'PureWindowsPath'
        502     LOAD_NAME                       56: PurePath
        504     CALL_FUNCTION                   3
        506     STORE_NAME                      60: PureWindowsPath
        508     LOAD_BUILD_CLASS                
        510     LOAD_CONST                      46: <CODE> Path
        512     LOAD_CONST                      47: 'Path'
        514     MAKE_FUNCTION                   0
        516     LOAD_CONST                      47: 'Path'
        518     LOAD_NAME                       56: PurePath
        520     CALL_FUNCTION                   3
        522     STORE_NAME                      61: Path
        524     LOAD_BUILD_CLASS                
        526     LOAD_CONST                      48: <CODE> PosixPath
        528     LOAD_CONST                      49: 'PosixPath'
        530     MAKE_FUNCTION                   0
        532     LOAD_CONST                      49: 'PosixPath'
        534     LOAD_NAME                       61: Path
        536     LOAD_NAME                       59: PurePosixPath
        538     CALL_FUNCTION                   4
        540     STORE_NAME                      62: PosixPath
        542     LOAD_BUILD_CLASS                
        544     LOAD_CONST                      50: <CODE> WindowsPath
        546     LOAD_CONST                      51: 'WindowsPath'
        548     MAKE_FUNCTION                   0
        550     LOAD_CONST                      51: 'WindowsPath'
        552     LOAD_NAME                       61: Path
        554     LOAD_NAME                       60: PureWindowsPath
        556     CALL_FUNCTION                   4
        558     STORE_NAME                      63: WindowsPath
        560     LOAD_CONST                      1: None
        562     RETURN_VALUE                    
