subprocess.pyc (Python 3.10)
[Code]
    File Name: subprocess.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        'builtins'
        'errno'
        'io'
        'os'
        'time'
        'signal'
        'sys'
        'threading'
        'warnings'
        'contextlib'
        'monotonic'
        '_time'
        'types'
        'fcntl'
        'ImportError'
        '__all__'
        'msvcrt'
        '_winapi'
        '_mswindows'
        'ModuleNotFoundError'
        '_posixsubprocess'
        'select'
        'selectors'
        'CREATE_NEW_CONSOLE'
        'CREATE_NEW_PROCESS_GROUP'
        'STD_INPUT_HANDLE'
        'STD_OUTPUT_HANDLE'
        'STD_ERROR_HANDLE'
        'SW_HIDE'
        'STARTF_USESTDHANDLES'
        'STARTF_USESHOWWINDOW'
        'ABOVE_NORMAL_PRIORITY_CLASS'
        'BELOW_NORMAL_PRIORITY_CLASS'
        'HIGH_PRIORITY_CLASS'
        'IDLE_PRIORITY_CLASS'
        'NORMAL_PRIORITY_CLASS'
        'REALTIME_PRIORITY_CLASS'
        'CREATE_NO_WINDOW'
        'DETACHED_PROCESS'
        'CREATE_DEFAULT_ERROR_MODE'
        'CREATE_BREAKAWAY_FROM_JOB'
        'extend'
        'Exception'
        'SubprocessError'
        'CalledProcessError'
        'TimeoutExpired'
        'STARTUPINFO'
        'int'
        'Handle'
        'getattr'
        '_PIPE_BUF'
        'hasattr'
        'PollSelector'
        '_PopenSelector'
        'SelectSelector'
        '_active'
        '_cleanup'
        'PIPE'
        'STDOUT'
        'DEVNULL'
        '_optim_args_from_interpreter_flags'
        '_args_from_interpreter_flags'
        'call'
        'check_call'
        'check_output'
        'object'
        'CompletedProcess'
        'run'
        'list2cmdline'
        'getstatusoutput'
        'getoutput'
        '_use_posix_spawn'
        '_USE_POSIX_SPAWN'
        '_USE_VFORK'
        'Popen'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        'Subprocesses with accessible I/O streams\n\nThis module allows you to spawn processes, connect to their\ninput/output/error pipes, and obtain their return codes.\n\nFor a complete description of this module see the Python documentation.\n\nMain API\n========\nrun(...): Runs a command, waits for it to complete, then returns a\n          CompletedProcess instance.\nPopen(...): A class for flexibly executing a command in a new process\n\nConstants\n---------\nDEVNULL: Special value that indicates that os.devnull should be used\nPIPE:    Special value that indicates a pipe should be created\nSTDOUT:  Special value that indicates that stderr should go to stdout\n\n\nOlder API\n=========\ncall(...): Runs a command, waits for it to complete, then returns\n    the return code.\ncheck_call(...): Same as call() but raises CalledProcessError()\n    if return code is not 0\ncheck_output(...): Same as check_call() but returns the contents of\n    stdout instead of a return code\ngetoutput(...): Runs a command in the shell, waits for it to complete,\n    then returns the output\ngetstatusoutput(...): Runs a command in the shell, waits for it to complete,\n    then returns a (exitcode, output) tuple\n'
        0
        None
        (
            'monotonic'
        )
        (
            'Popen'
            'PIPE'
            'STDOUT'
            'call'
            'check_call'
            'getstatusoutput'
            'getoutput'
            'check_output'
            'run'
            'CalledProcessError'
            'DEVNULL'
            'SubprocessError'
            'TimeoutExpired'
            'CompletedProcess'
        )
        True
        False
        (
            'CREATE_NEW_CONSOLE'
            'CREATE_NEW_PROCESS_GROUP'
            'STD_INPUT_HANDLE'
            'STD_OUTPUT_HANDLE'
            'STD_ERROR_HANDLE'
            'SW_HIDE'
            'STARTF_USESTDHANDLES'
            'STARTF_USESHOWWINDOW'
            'ABOVE_NORMAL_PRIORITY_CLASS'
            'BELOW_NORMAL_PRIORITY_CLASS'
            'HIGH_PRIORITY_CLASS'
            'IDLE_PRIORITY_CLASS'
            'NORMAL_PRIORITY_CLASS'
            'REALTIME_PRIORITY_CLASS'
            'CREATE_NO_WINDOW'
            'DETACHED_PROCESS'
            'CREATE_DEFAULT_ERROR_MODE'
            'CREATE_BREAKAWAY_FROM_JOB'
        )
        (
            'CREATE_NEW_CONSOLE'
            'CREATE_NEW_PROCESS_GROUP'
            'STD_INPUT_HANDLE'
            'STD_OUTPUT_HANDLE'
            'STD_ERROR_HANDLE'
            'SW_HIDE'
            'STARTF_USESTDHANDLES'
            'STARTF_USESHOWWINDOW'
            'STARTUPINFO'
            'ABOVE_NORMAL_PRIORITY_CLASS'
            'BELOW_NORMAL_PRIORITY_CLASS'
            'HIGH_PRIORITY_CLASS'
            'IDLE_PRIORITY_CLASS'
            'NORMAL_PRIORITY_CLASS'
            'REALTIME_PRIORITY_CLASS'
            'CREATE_NO_WINDOW'
            'DETACHED_PROCESS'
            'CREATE_DEFAULT_ERROR_MODE'
            'CREATE_BREAKAWAY_FROM_JOB'
        )
        [Code]
            File Name: subprocess.py
            Object Name: SubprocessError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'SubprocessError'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SubprocessError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
        'SubprocessError'
        [Code]
            File Name: subprocess.py
            Object Name: CalledProcessError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__str__'
                'property'
                'stdout'
                'setter'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'CalledProcessError'
                'Raised when run() is called with check=True and the process\n    returns a non-zero exit status.\n\n    Attributes:\n      cmd, returncode, stdout, stderr, output\n    '
                None
                [Code]
                    File Name: subprocess.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        'cmd'
                        'output'
                        'stderr'
                    [Var Names]
                        'self'
                        'returncode'
                        'cmd'
                        'output'
                        'stderr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: returncode
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: returncode
                        6       LOAD_FAST                       2: cmd
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: cmd
                        12      LOAD_FAST                       3: output
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: output
                        18      LOAD_FAST                       4: stderr
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: stderr
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'CalledProcessError.__init__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        'cmd'
                        'signal'
                        'Signals'
                        'ValueError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        "Command '%s' died with %r."
                        "Command '%s' died with unknown signal %d."
                        "Command '%s' returned non-zero exit status %d."
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       POP_JUMP_IF_FALSE               40 (to 80)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: returncode
                        10      LOAD_CONST                      1: 0
                        12      COMPARE_OP                      0 (<)
                        14      POP_JUMP_IF_FALSE               40 (to 80)
                        16      SETUP_FINALLY                   13 (to 44)
                        18      LOAD_CONST                      2: "Command '%s' died with %r."
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: cmd
                        24      LOAD_GLOBAL                     2: signal
                        26      LOAD_METHOD                     3: Signals
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       0: returncode
                        32      UNARY_NEGATIVE                  
                        34      CALL_METHOD                     1
                        36      BUILD_TUPLE                     2
                        38      BINARY_MODULO                   
                        40      POP_BLOCK                       
                        42      RETURN_VALUE                    
                        44      DUP_TOP                         
                        46      LOAD_GLOBAL                     4: ValueError
                        48      JUMP_IF_NOT_EXC_MATCH           39 (to 78)
                        50      POP_TOP                         
                        52      POP_TOP                         
                        54      POP_TOP                         
                        56      LOAD_CONST                      3: "Command '%s' died with unknown signal %d."
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       1: cmd
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       0: returncode
                        66      UNARY_NEGATIVE                  
                        68      BUILD_TUPLE                     2
                        70      BINARY_MODULO                   
                        72      ROT_FOUR                        
                        74      POP_EXCEPT                      
                        76      RETURN_VALUE                    
                        78      RERAISE                         0
                        80      LOAD_CONST                      4: "Command '%s' returned non-zero exit status %d."
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       1: cmd
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       0: returncode
                        90      BUILD_TUPLE                     2
                        92      BINARY_MODULO                   
                        94      RETURN_VALUE                    
                'CalledProcessError.__str__'
                [Code]
                    File Name: subprocess.py
                    Object Name: stdout
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'output'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Alias for output attribute, to match stderr'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: output
                        4       RETURN_VALUE                    
                'CalledProcessError.stdout'
                [Code]
                    File Name: subprocess.py
                    Object Name: stdout
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'output'
                    [Var Names]
                        'self'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: value
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: output
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                (
                    None
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'CalledProcessError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when run() is called with check=True and the process\n    returns a non-zero exit status.\n\n    Attributes:\n      cmd, returncode, stdout, stderr, output\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      10: (None, None)
                14      LOAD_CONST                      3: <CODE> __init__
                16      LOAD_CONST                      4: 'CalledProcessError.__init__'
                18      MAKE_FUNCTION                   1
                20      STORE_NAME                      4: __init__
                22      LOAD_CONST                      5: <CODE> __str__
                24      LOAD_CONST                      6: 'CalledProcessError.__str__'
                26      MAKE_FUNCTION                   0
                28      STORE_NAME                      5: __str__
                30      LOAD_NAME                       6: property
                32      LOAD_CONST                      7: <CODE> stdout
                34      LOAD_CONST                      8: 'CalledProcessError.stdout'
                36      MAKE_FUNCTION                   0
                38      CALL_FUNCTION                   1
                40      STORE_NAME                      7: stdout
                42      LOAD_NAME                       7: stdout
                44      LOAD_ATTR                       8: setter
                46      LOAD_CONST                      9: <CODE> stdout
                48      LOAD_CONST                      8: 'CalledProcessError.stdout'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      7: stdout
                56      LOAD_CONST                      2: None
                58      RETURN_VALUE                    
        'CalledProcessError'
        [Code]
            File Name: subprocess.py
            Object Name: TimeoutExpired
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__str__'
                'property'
                'stdout'
                'setter'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TimeoutExpired'
                'This exception is raised when the timeout expires while waiting for a\n    child process.\n\n    Attributes:\n        cmd, output, stdout, stderr, timeout\n    '
                None
                [Code]
                    File Name: subprocess.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'cmd'
                        'timeout'
                        'output'
                        'stderr'
                    [Var Names]
                        'self'
                        'cmd'
                        'timeout'
                        'output'
                        'stderr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: cmd
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: cmd
                        6       LOAD_FAST                       2: timeout
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: timeout
                        12      LOAD_FAST                       3: output
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: output
                        18      LOAD_FAST                       4: stderr
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: stderr
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'TimeoutExpired.__init__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'cmd'
                        'timeout'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        "Command '%s' timed out after %s seconds"
                    [Disassembly]
                        0       LOAD_CONST                      1: "Command '%s' timed out after %s seconds"
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: cmd
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: timeout
                        10      BUILD_TUPLE                     2
                        12      BINARY_MODULO                   
                        14      RETURN_VALUE                    
                'TimeoutExpired.__str__'
                [Code]
                    File Name: subprocess.py
                    Object Name: stdout
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'output'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: output
                        4       RETURN_VALUE                    
                'TimeoutExpired.stdout'
                [Code]
                    File Name: subprocess.py
                    Object Name: stdout
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'output'
                    [Var Names]
                        'self'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: value
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: output
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                (
                    None
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TimeoutExpired'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'This exception is raised when the timeout expires while waiting for a\n    child process.\n\n    Attributes:\n        cmd, output, stdout, stderr, timeout\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      10: (None, None)
                14      LOAD_CONST                      3: <CODE> __init__
                16      LOAD_CONST                      4: 'TimeoutExpired.__init__'
                18      MAKE_FUNCTION                   1
                20      STORE_NAME                      4: __init__
                22      LOAD_CONST                      5: <CODE> __str__
                24      LOAD_CONST                      6: 'TimeoutExpired.__str__'
                26      MAKE_FUNCTION                   0
                28      STORE_NAME                      5: __str__
                30      LOAD_NAME                       6: property
                32      LOAD_CONST                      7: <CODE> stdout
                34      LOAD_CONST                      8: 'TimeoutExpired.stdout'
                36      MAKE_FUNCTION                   0
                38      CALL_FUNCTION                   1
                40      STORE_NAME                      7: stdout
                42      LOAD_NAME                       7: stdout
                44      LOAD_ATTR                       8: setter
                46      LOAD_CONST                      9: <CODE> stdout
                48      LOAD_CONST                      8: 'TimeoutExpired.stdout'
                50      MAKE_FUNCTION                   0
                52      CALL_FUNCTION                   1
                54      STORE_NAME                      7: stdout
                56      LOAD_CONST                      2: None
                58      RETURN_VALUE                    
        'TimeoutExpired'
        [Code]
            File Name: subprocess.py
            Object Name: STARTUPINFO
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 7
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'copy'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'STARTUPINFO'
                0
                None
                (
                    'dwFlags'
                    'hStdInput'
                    'hStdOutput'
                    'hStdError'
                    'wShowWindow'
                    'lpAttributeList'
                )
                [Code]
                    File Name: subprocess.py
                    Object Name: __init__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 6
                    Locals: 7
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'dwFlags'
                        'hStdInput'
                        'hStdOutput'
                        'hStdError'
                        'wShowWindow'
                        'lpAttributeList'
                    [Var Names]
                        'self'
                        'dwFlags'
                        'hStdInput'
                        'hStdOutput'
                        'hStdError'
                        'wShowWindow'
                        'lpAttributeList'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'handle_list'
                    [Disassembly]
                        0       LOAD_FAST                       1: dwFlags
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: dwFlags
                        6       LOAD_FAST                       2: hStdInput
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: hStdInput
                        12      LOAD_FAST                       3: hStdOutput
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: hStdOutput
                        18      LOAD_FAST                       4: hStdError
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: hStdError
                        24      LOAD_FAST                       5: wShowWindow
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      4: wShowWindow
                        30      LOAD_FAST                       6: lpAttributeList
                        32      JUMP_IF_TRUE_OR_POP             20 (to 40)
                        34      LOAD_CONST                      1: 'handle_list'
                        36      BUILD_LIST                      0
                        38      BUILD_MAP                       1
                        40      LOAD_FAST                       0: self
                        42      STORE_ATTR                      5: lpAttributeList
                        44      LOAD_CONST                      0: None
                        46      RETURN_VALUE                    
                'STARTUPINFO.__init__'
                [Code]
                    File Name: subprocess.py
                    Object Name: copy
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lpAttributeList'
                        'copy'
                        'list'
                        'STARTUPINFO'
                        'dwFlags'
                        'hStdInput'
                        'hStdOutput'
                        'hStdError'
                        'wShowWindow'
                    [Var Names]
                        'self'
                        'attr_list'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'handle_list'
                        (
                            'dwFlags'
                            'hStdInput'
                            'hStdOutput'
                            'hStdError'
                            'wShowWindow'
                            'lpAttributeList'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: lpAttributeList
                        4       LOAD_METHOD                     1: copy
                        6       CALL_METHOD                     0
                        8       STORE_FAST                      1: attr_list
                        10      LOAD_CONST                      1: 'handle_list'
                        12      LOAD_FAST                       1: attr_list
                        14      CONTAINS_OP                     0 (in)
                        16      POP_JUMP_IF_FALSE               17 (to 34)
                        18      LOAD_GLOBAL                     2: list
                        20      LOAD_FAST                       1: attr_list
                        22      LOAD_CONST                      1: 'handle_list'
                        24      BINARY_SUBSCR                   
                        26      CALL_FUNCTION                   1
                        28      LOAD_FAST                       1: attr_list
                        30      LOAD_CONST                      1: 'handle_list'
                        32      STORE_SUBSCR                    
                        34      LOAD_GLOBAL                     3: STARTUPINFO
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       4: dwFlags
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       5: hStdInput
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       6: hStdOutput
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       7: hStdError
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       8: wShowWindow
                        56      LOAD_FAST                       1: attr_list
                        58      LOAD_CONST                      2: ('dwFlags', 'hStdInput', 'hStdOutput', 'hStdError', 'wShowWindow', 'lpAttributeList')
                        60      CALL_FUNCTION_KW                6
                        62      RETURN_VALUE                    
                'STARTUPINFO.copy'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'STARTUPINFO'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 0
                10      LOAD_CONST                      2: None
                12      LOAD_CONST                      2: None
                14      LOAD_CONST                      2: None
                16      LOAD_CONST                      1: 0
                18      LOAD_CONST                      2: None
                20      LOAD_CONST                      3: ('dwFlags', 'hStdInput', 'hStdOutput', 'hStdError', 'wShowWindow', 'lpAttributeList')
                22      BUILD_CONST_KEY_MAP             6
                24      LOAD_CONST                      4: <CODE> __init__
                26      LOAD_CONST                      5: 'STARTUPINFO.__init__'
                28      MAKE_FUNCTION                   2
                30      STORE_NAME                      3: __init__
                32      LOAD_CONST                      6: <CODE> copy
                34      LOAD_CONST                      7: 'STARTUPINFO.copy'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      4: copy
                40      LOAD_CONST                      2: None
                42      RETURN_VALUE                    
        'STARTUPINFO'
        [Code]
            File Name: subprocess.py
            Object Name: Handle
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'closed'
                '_winapi'
                'CloseHandle'
                'Close'
                'Detach'
                '__repr__'
                '__del__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Handle'
                False
                [Code]
                    File Name: subprocess.py
                    Object Name: Close
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                    [Var Names]
                        'self'
                        'CloseHandle'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_TRUE                12 (to 24)
                        6       LOAD_CONST                      1: True
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      0: closed
                        12      LOAD_FAST                       1: CloseHandle
                        14      LOAD_FAST                       0: self
                        16      CALL_FUNCTION                   1
                        18      POP_TOP                         
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'Handle.Close'
                [Code]
                    File Name: subprocess.py
                    Object Name: Detach
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'int'
                        'ValueError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                        'already closed'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_TRUE                10 (to 20)
                        6       LOAD_CONST                      1: True
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      0: closed
                        12      LOAD_GLOBAL                     1: int
                        14      LOAD_FAST                       0: self
                        16      CALL_FUNCTION                   1
                        18      RETURN_VALUE                    
                        20      LOAD_GLOBAL                     2: ValueError
                        22      LOAD_CONST                      2: 'already closed'
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                'Handle.Detach'
                [Code]
                    File Name: subprocess.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__name__'
                        'int'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '%s(%d)'
                    [Disassembly]
                        0       LOAD_CONST                      1: '%s(%d)'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __name__
                        8       LOAD_GLOBAL                     2: int
                        10      LOAD_FAST                       0: self
                        12      CALL_FUNCTION                   1
                        14      BUILD_TUPLE                     2
                        16      BINARY_MODULO                   
                        18      RETURN_VALUE                    
                'Handle.__repr__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Handle'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: False
                10      STORE_NAME                      3: closed
                12      LOAD_NAME                       4: _winapi
                14      LOAD_ATTR                       5: CloseHandle
                16      BUILD_TUPLE                     1
                18      LOAD_CONST                      2: <CODE> Close
                20      LOAD_CONST                      3: 'Handle.Close'
                22      MAKE_FUNCTION                   1
                24      STORE_NAME                      6: Close
                26      LOAD_CONST                      4: <CODE> Detach
                28      LOAD_CONST                      5: 'Handle.Detach'
                30      MAKE_FUNCTION                   0
                32      STORE_NAME                      7: Detach
                34      LOAD_CONST                      6: <CODE> __repr__
                36      LOAD_CONST                      7: 'Handle.__repr__'
                38      MAKE_FUNCTION                   0
                40      STORE_NAME                      8: __repr__
                42      LOAD_NAME                       6: Close
                44      STORE_NAME                      9: __del__
                46      LOAD_CONST                      8: None
                48      RETURN_VALUE                    
        'Handle'
        'PIPE_BUF'
        512
        'PollSelector'
        [Code]
            File Name: subprocess.py
            Object Name: _cleanup
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_CONST                      0: None
                2       RETURN_VALUE                    
        '_cleanup'
        [Code]
            File Name: subprocess.py
            Object Name: _cleanup
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_active'
                '_internal_poll'
                'sys'
                'maxsize'
                'remove'
                'ValueError'
            [Var Names]
                'inst'
                'res'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                (
                    '_deadstate'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: _active
                2       LOAD_CONST                      0: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      0: None
                10      RETURN_VALUE                    
                12      LOAD_GLOBAL                     0: _active
                14      LOAD_CONST                      0: None
                16      LOAD_CONST                      0: None
                18      BUILD_SLICE                     2
                20      BINARY_SUBSCR                   
                22      GET_ITER                        
                24      FOR_ITER                        30 (to 86)
                26      STORE_FAST                      0: inst
                28      LOAD_FAST                       0: inst
                30      LOAD_ATTR                       1: _internal_poll
                32      LOAD_GLOBAL                     2: sys
                34      LOAD_ATTR                       3: maxsize
                36      LOAD_CONST                      1: ('_deadstate',)
                38      CALL_FUNCTION_KW                1
                40      STORE_FAST                      1: res
                42      LOAD_FAST                       1: res
                44      LOAD_CONST                      0: None
                46      IS_OP                           1 (is not)
                48      POP_JUMP_IF_FALSE               42 (to 84)
                50      SETUP_FINALLY                   7 (to 66)
                52      LOAD_GLOBAL                     0: _active
                54      LOAD_METHOD                     4: remove
                56      LOAD_FAST                       0: inst
                58      CALL_METHOD                     1
                60      POP_TOP                         
                62      POP_BLOCK                       
                64      JUMP_ABSOLUTE                   12 (to 24)
                66      DUP_TOP                         
                68      LOAD_GLOBAL                     5: ValueError
                70      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                72      POP_TOP                         
                74      POP_TOP                         
                76      POP_TOP                         
                78      POP_EXCEPT                      
                80      JUMP_ABSOLUTE                   12 (to 24)
                82      RERAISE                         0
                84      JUMP_ABSOLUTE                   12 (to 24)
                86      LOAD_CONST                      0: None
                88      RETURN_VALUE                    
        -1
        -2
        -3
        [Code]
            File Name: subprocess.py
            Object Name: _optim_args_from_interpreter_flags
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'flags'
                'optimize'
                'append'
            [Var Names]
                'args'
                'value'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Return a list of command-line arguments reproducing the current\n    optimization settings in sys.flags.'
                0
                '-'
                'O'
            [Disassembly]
                0       BUILD_LIST                      0
                2       STORE_FAST                      0: args
                4       LOAD_GLOBAL                     0: sys
                6       LOAD_ATTR                       1: flags
                8       LOAD_ATTR                       2: optimize
                10      STORE_FAST                      1: value
                12      LOAD_FAST                       1: value
                14      LOAD_CONST                      1: 0
                16      COMPARE_OP                      4 (>)
                18      POP_JUMP_IF_FALSE               19 (to 38)
                20      LOAD_FAST                       0: args
                22      LOAD_METHOD                     3: append
                24      LOAD_CONST                      2: '-'
                26      LOAD_CONST                      3: 'O'
                28      LOAD_FAST                       1: value
                30      BINARY_MULTIPLY                 
                32      BINARY_ADD                      
                34      CALL_METHOD                     1
                36      POP_TOP                         
                38      LOAD_FAST                       0: args
                40      RETURN_VALUE                    
        '_optim_args_from_interpreter_flags'
        [Code]
            File Name: subprocess.py
            Object Name: _args_from_interpreter_flags
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 11
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_optim_args_from_interpreter_flags'
                'items'
                'getattr'
                'sys'
                'flags'
                'append'
                'isolated'
                'ignore_environment'
                'no_user_site'
                'warnoptions'
                'bytes_warning'
                'remove'
                'extend'
            [Var Names]
                'flag_opt_map'
                'args'
                'flag'
                'opt'
                'v'
                'warnopts'
                'bytes_warning'
                'xoptions'
                'dev_mode'
                'value'
                'arg'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Return a list of command-line arguments reproducing the current\n    settings in sys.flags, sys.warnoptions and sys._xoptions.'
                'd'
                'B'
                'S'
                'v'
                'b'
                'q'
                (
                    'debug'
                    'dont_write_bytecode'
                    'no_site'
                    'verbose'
                    'bytes_warning'
                    'quiet'
                )
                0
                '-'
                '-I'
                '-E'
                '-s'
                None
                '_xoptions'
                'dev'
                1
                'error::BytesWarning'
                'default::BytesWarning'
                'default'
                '-W'
                (
                    '-X'
                    'dev'
                )
                (
                    'faulthandler'
                    'tracemalloc'
                    'importtime'
                    'showrefcount'
                    'utf8'
                )
                True
                '%s=%s'
                '-X'
            [Disassembly]
                0       LOAD_CONST                      1: 'd'
                2       LOAD_CONST                      2: 'B'
                4       LOAD_CONST                      3: 'S'
                6       LOAD_CONST                      4: 'v'
                8       LOAD_CONST                      5: 'b'
                10      LOAD_CONST                      6: 'q'
                12      LOAD_CONST                      7: ('debug', 'dont_write_bytecode', 'no_site', 'verbose', 'bytes_warning', 'quiet')
                14      BUILD_CONST_KEY_MAP             6
                16      STORE_FAST                      0: flag_opt_map
                18      LOAD_GLOBAL                     0: _optim_args_from_interpreter_flags
                20      CALL_FUNCTION                   0
                22      STORE_FAST                      1: args
                24      LOAD_FAST                       0: flag_opt_map
                26      LOAD_METHOD                     1: items
                28      CALL_METHOD                     0
                30      GET_ITER                        
                32      FOR_ITER                        23 (to 80)
                34      UNPACK_SEQUENCE                 2
                36      STORE_FAST                      2: flag
                38      STORE_FAST                      3: opt
                40      LOAD_GLOBAL                     2: getattr
                42      LOAD_GLOBAL                     3: sys
                44      LOAD_ATTR                       4: flags
                46      LOAD_FAST                       2: flag
                48      CALL_FUNCTION                   2
                50      STORE_FAST                      4: v
                52      LOAD_FAST                       4: v
                54      LOAD_CONST                      8: 0
                56      COMPARE_OP                      4 (>)
                58      POP_JUMP_IF_FALSE               39 (to 78)
                60      LOAD_FAST                       1: args
                62      LOAD_METHOD                     5: append
                64      LOAD_CONST                      9: '-'
                66      LOAD_FAST                       3: opt
                68      LOAD_FAST                       4: v
                70      BINARY_MULTIPLY                 
                72      BINARY_ADD                      
                74      CALL_METHOD                     1
                76      POP_TOP                         
                78      JUMP_ABSOLUTE                   16 (to 32)
                80      LOAD_GLOBAL                     3: sys
                82      LOAD_ATTR                       4: flags
                84      LOAD_ATTR                       6: isolated
                86      POP_JUMP_IF_FALSE               50 (to 100)
                88      LOAD_FAST                       1: args
                90      LOAD_METHOD                     5: append
                92      LOAD_CONST                      10: '-I'
                94      CALL_METHOD                     1
                96      POP_TOP                         
                98      JUMP_FORWARD                    18 (to 136)
                100     LOAD_GLOBAL                     3: sys
                102     LOAD_ATTR                       4: flags
                104     LOAD_ATTR                       7: ignore_environment
                106     POP_JUMP_IF_FALSE               59 (to 118)
                108     LOAD_FAST                       1: args
                110     LOAD_METHOD                     5: append
                112     LOAD_CONST                      11: '-E'
                114     CALL_METHOD                     1
                116     POP_TOP                         
                118     LOAD_GLOBAL                     3: sys
                120     LOAD_ATTR                       4: flags
                122     LOAD_ATTR                       8: no_user_site
                124     POP_JUMP_IF_FALSE               68 (to 136)
                126     LOAD_FAST                       1: args
                128     LOAD_METHOD                     5: append
                130     LOAD_CONST                      12: '-s'
                132     CALL_METHOD                     1
                134     POP_TOP                         
                136     LOAD_GLOBAL                     3: sys
                138     LOAD_ATTR                       9: warnoptions
                140     LOAD_CONST                      13: None
                142     LOAD_CONST                      13: None
                144     BUILD_SLICE                     2
                146     BINARY_SUBSCR                   
                148     STORE_FAST                      5: warnopts
                150     LOAD_GLOBAL                     3: sys
                152     LOAD_ATTR                       4: flags
                154     LOAD_ATTR                       10: bytes_warning
                156     STORE_FAST                      6: bytes_warning
                158     LOAD_GLOBAL                     2: getattr
                160     LOAD_GLOBAL                     3: sys
                162     LOAD_CONST                      14: '_xoptions'
                164     BUILD_MAP                       0
                166     CALL_FUNCTION                   3
                168     STORE_FAST                      7: xoptions
                170     LOAD_CONST                      15: 'dev'
                172     LOAD_FAST                       7: xoptions
                174     CONTAINS_OP                     0 (in)
                176     STORE_FAST                      8: dev_mode
                178     LOAD_FAST                       6: bytes_warning
                180     LOAD_CONST                      16: 1
                182     COMPARE_OP                      4 (>)
                184     POP_JUMP_IF_FALSE               99 (to 198)
                186     LOAD_FAST                       5: warnopts
                188     LOAD_METHOD                     11: remove
                190     LOAD_CONST                      17: 'error::BytesWarning'
                192     CALL_METHOD                     1
                194     POP_TOP                         
                196     JUMP_FORWARD                    7 (to 212)
                198     LOAD_FAST                       6: bytes_warning
                200     POP_JUMP_IF_FALSE               106 (to 212)
                202     LOAD_FAST                       5: warnopts
                204     LOAD_METHOD                     11: remove
                206     LOAD_CONST                      18: 'default::BytesWarning'
                208     CALL_METHOD                     1
                210     POP_TOP                         
                212     LOAD_FAST                       8: dev_mode
                214     POP_JUMP_IF_FALSE               113 (to 226)
                216     LOAD_FAST                       5: warnopts
                218     LOAD_METHOD                     11: remove
                220     LOAD_CONST                      19: 'default'
                222     CALL_METHOD                     1
                224     POP_TOP                         
                226     LOAD_FAST                       5: warnopts
                228     GET_ITER                        
                230     FOR_ITER                        9 (to 250)
                232     STORE_FAST                      3: opt
                234     LOAD_FAST                       1: args
                236     LOAD_METHOD                     5: append
                238     LOAD_CONST                      20: '-W'
                240     LOAD_FAST                       3: opt
                242     BINARY_ADD                      
                244     CALL_METHOD                     1
                246     POP_TOP                         
                248     JUMP_ABSOLUTE                   115 (to 230)
                250     LOAD_FAST                       8: dev_mode
                252     POP_JUMP_IF_FALSE               132 (to 264)
                254     LOAD_FAST                       1: args
                256     LOAD_METHOD                     12: extend
                258     LOAD_CONST                      21: ('-X', 'dev')
                260     CALL_METHOD                     1
                262     POP_TOP                         
                264     LOAD_CONST                      22: ('faulthandler', 'tracemalloc', 'importtime', 'showrefcount', 'utf8')
                266     GET_ITER                        
                268     FOR_ITER                        30 (to 330)
                270     STORE_FAST                      3: opt
                272     LOAD_FAST                       3: opt
                274     LOAD_FAST                       7: xoptions
                276     CONTAINS_OP                     0 (in)
                278     POP_JUMP_IF_FALSE               164 (to 328)
                280     LOAD_FAST                       7: xoptions
                282     LOAD_FAST                       3: opt
                284     BINARY_SUBSCR                   
                286     STORE_FAST                      9: value
                288     LOAD_FAST                       9: value
                290     LOAD_CONST                      23: True
                292     IS_OP                           0 (is)
                294     POP_JUMP_IF_FALSE               151 (to 302)
                296     LOAD_FAST                       3: opt
                298     STORE_FAST                      10: arg
                300     JUMP_FORWARD                    6 (to 314)
                302     LOAD_CONST                      24: '%s=%s'
                304     LOAD_FAST                       3: opt
                306     LOAD_FAST                       9: value
                308     BUILD_TUPLE                     2
                310     BINARY_MODULO                   
                312     STORE_FAST                      10: arg
                314     LOAD_FAST                       1: args
                316     LOAD_METHOD                     12: extend
                318     LOAD_CONST                      25: '-X'
                320     LOAD_FAST                       10: arg
                322     BUILD_TUPLE                     2
                324     CALL_METHOD                     1
                326     POP_TOP                         
                328     JUMP_ABSOLUTE                   134 (to 268)
                330     LOAD_FAST                       1: args
                332     RETURN_VALUE                    
        '_args_from_interpreter_flags'
        (
            'timeout'
        )
        [Code]
            File Name: subprocess.py
            Object Name: call
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 4
            Stack Size: 8
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
                'Popen'
                'wait'
                'kill'
            [Var Names]
                'timeout'
                'popenargs'
                'kwargs'
                'p'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Run command with arguments.  Wait for command to complete or\n    timeout, then return the returncode attribute.\n\n    The arguments are the same as for the Popen constructor.  Example:\n\n    retcode = call(["ls", "-l"])\n    '
                (
                    'timeout'
                )
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: Popen
                2       LOAD_FAST                       1: popenargs
                4       BUILD_MAP                       0
                6       LOAD_FAST                       2: kwargs
                8       DICT_MERGE                      1
                10      CALL_FUNCTION_EX                1
                12      SETUP_WITH                      24 (to 62)
                14      STORE_FAST                      3: p
                16      SETUP_FINALLY                   14 (to 46)
                18      LOAD_FAST                       3: p
                20      LOAD_ATTR                       1: wait
                22      LOAD_FAST                       0: timeout
                24      LOAD_CONST                      1: ('timeout',)
                26      CALL_FUNCTION_KW                1
                28      POP_BLOCK                       
                30      POP_BLOCK                       
                32      ROT_TWO                         
                34      LOAD_CONST                      2: None
                36      DUP_TOP                         
                38      DUP_TOP                         
                40      CALL_FUNCTION                   3
                42      POP_TOP                         
                44      RETURN_VALUE                    
                46      POP_TOP                         
                48      POP_TOP                         
                50      POP_TOP                         
                52      LOAD_FAST                       3: p
                54      LOAD_METHOD                     2: kill
                56      CALL_METHOD                     0
                58      POP_TOP                         
                60      RAISE_VARARGS                   0
                62      WITH_EXCEPT_START               
                64      POP_JUMP_IF_TRUE                34 (to 68)
                66      RERAISE                         1
                68      POP_TOP                         
                70      POP_TOP                         
                72      POP_TOP                         
                74      POP_EXCEPT                      
                76      POP_TOP                         
                78      LOAD_CONST                      2: None
                80      RETURN_VALUE                    
        'call'
        [Code]
            File Name: subprocess.py
            Object Name: check_call
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
                'call'
                'get'
                'CalledProcessError'
            [Var Names]
                'popenargs'
                'kwargs'
                'retcode'
                'cmd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Run command with arguments.  Wait for command to complete.  If\n    the exit code was zero then return, otherwise raise\n    CalledProcessError.  The CalledProcessError object will have the\n    return code in the returncode attribute.\n\n    The arguments are the same as for the call function.  Example:\n\n    check_call(["ls", "-l"])\n    '
                'args'
                None
                0
            [Disassembly]
                0       LOAD_GLOBAL                     0: call
                2       LOAD_FAST                       0: popenargs
                4       BUILD_MAP                       0
                6       LOAD_FAST                       1: kwargs
                8       DICT_MERGE                      1
                10      CALL_FUNCTION_EX                1
                12      STORE_FAST                      2: retcode
                14      LOAD_FAST                       2: retcode
                16      POP_JUMP_IF_FALSE               27 (to 54)
                18      LOAD_FAST                       1: kwargs
                20      LOAD_METHOD                     1: get
                22      LOAD_CONST                      1: 'args'
                24      CALL_METHOD                     1
                26      STORE_FAST                      3: cmd
                28      LOAD_FAST                       3: cmd
                30      LOAD_CONST                      2: None
                32      IS_OP                           0 (is)
                34      POP_JUMP_IF_FALSE               22 (to 44)
                36      LOAD_FAST                       0: popenargs
                38      LOAD_CONST                      3: 0
                40      BINARY_SUBSCR                   
                42      STORE_FAST                      3: cmd
                44      LOAD_GLOBAL                     2: CalledProcessError
                46      LOAD_FAST                       2: retcode
                48      LOAD_FAST                       3: cmd
                50      CALL_FUNCTION                   2
                52      RAISE_VARARGS                   1
                54      LOAD_CONST                      3: 0
                56      RETURN_VALUE                    
        'check_call'
        [Code]
            File Name: subprocess.py
            Object Name: check_output
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 4
            Stack Size: 6
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
                'ValueError'
                'get'
                'run'
                'PIPE'
                'stdout'
            [Var Names]
                'timeout'
                'popenargs'
                'kwargs'
                'empty'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Run command with arguments and return its output.\n\n    If the exit code was non-zero it raises a CalledProcessError.  The\n    CalledProcessError object will have the return code in the returncode\n    attribute and output in the output attribute.\n\n    The arguments are the same as for the Popen constructor.  Example:\n\n    >>> check_output(["ls", "-l", "/dev/null"])\n    b\'crw-rw-rw- 1 root root 1, 3 Oct 18  2007 /dev/null\\n\'\n\n    The stdout argument is not allowed as it is used internally.\n    To capture standard error in the result, use stderr=STDOUT.\n\n    >>> check_output(["/bin/sh", "-c",\n    ...               "ls -l non_existent_file ; exit 0"],\n    ...              stderr=STDOUT)\n    b\'ls: non_existent_file: No such file or directory\\n\'\n\n    There is an additional optional argument, "input", allowing you to\n    pass a string to the subprocess\'s stdin.  If you use this argument\n    you may not also use the Popen constructor\'s "stdin" argument, as\n    it too will be used internally.  Example:\n\n    >>> check_output(["sed", "-e", "s/foo/bar/"],\n    ...              input=b"when in the course of fooman events\\n")\n    b\'when in the course of barman events\\n\'\n\n    By default, all communication is in bytes, and therefore any "input"\n    should be bytes, and the return value will be bytes.  If in text mode,\n    any "input" should be a string, and the return value will be a string\n    decoded according to locale encoding, or by "encoding" if set. Text mode\n    is triggered by setting any of text, encoding, errors or universal_newlines.\n    '
                'stdout'
                'stdout argument not allowed, it will be overridden.'
                'input'
                None
                'universal_newlines'
                'text'
                'encoding'
                'errors'
                ''
                b''
                True
                (
                    'stdout'
                    'timeout'
                    'check'
                )
            [Disassembly]
                0       LOAD_CONST                      1: 'stdout'
                2       LOAD_FAST                       2: kwargs
                4       CONTAINS_OP                     0 (in)
                6       POP_JUMP_IF_FALSE               8 (to 16)
                8       LOAD_GLOBAL                     0: ValueError
                10      LOAD_CONST                      2: 'stdout argument not allowed, it will be overridden.'
                12      CALL_FUNCTION                   1
                14      RAISE_VARARGS                   1
                16      LOAD_CONST                      3: 'input'
                18      LOAD_FAST                       2: kwargs
                20      CONTAINS_OP                     0 (in)
                22      POP_JUMP_IF_FALSE               47 (to 94)
                24      LOAD_FAST                       2: kwargs
                26      LOAD_CONST                      3: 'input'
                28      BINARY_SUBSCR                   
                30      LOAD_CONST                      4: None
                32      IS_OP                           0 (is)
                34      POP_JUMP_IF_FALSE               47 (to 94)
                36      LOAD_FAST                       2: kwargs
                38      LOAD_METHOD                     1: get
                40      LOAD_CONST                      5: 'universal_newlines'
                42      CALL_METHOD                     1
                44      POP_JUMP_IF_TRUE                38 (to 76)
                46      LOAD_FAST                       2: kwargs
                48      LOAD_METHOD                     1: get
                50      LOAD_CONST                      6: 'text'
                52      CALL_METHOD                     1
                54      POP_JUMP_IF_TRUE                38 (to 76)
                56      LOAD_FAST                       2: kwargs
                58      LOAD_METHOD                     1: get
                60      LOAD_CONST                      7: 'encoding'
                62      CALL_METHOD                     1
                64      POP_JUMP_IF_TRUE                38 (to 76)
                66      LOAD_FAST                       2: kwargs
                68      LOAD_METHOD                     1: get
                70      LOAD_CONST                      8: 'errors'
                72      CALL_METHOD                     1
                74      POP_JUMP_IF_FALSE               41 (to 82)
                76      LOAD_CONST                      9: ''
                78      STORE_FAST                      3: empty
                80      JUMP_FORWARD                    2 (to 86)
                82      LOAD_CONST                      10: b''
                84      STORE_FAST                      3: empty
                86      LOAD_FAST                       3: empty
                88      LOAD_FAST                       2: kwargs
                90      LOAD_CONST                      3: 'input'
                92      STORE_SUBSCR                    
                94      LOAD_GLOBAL                     2: run
                96      LOAD_FAST                       1: popenargs
                98      LOAD_GLOBAL                     3: PIPE
                100     LOAD_FAST                       0: timeout
                102     LOAD_CONST                      11: True
                104     LOAD_CONST                      12: ('stdout', 'timeout', 'check')
                106     BUILD_CONST_KEY_MAP             3
                108     LOAD_FAST                       2: kwargs
                110     DICT_MERGE                      1
                112     CALL_FUNCTION_EX                1
                114     LOAD_ATTR                       4: stdout
                116     RETURN_VALUE                    
        'check_output'
        [Code]
            File Name: subprocess.py
            Object Name: CompletedProcess
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__repr__'
                'classmethod'
                'types'
                'GenericAlias'
                '__class_getitem__'
                'check_returncode'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'CompletedProcess'
                'A process that has finished running.\n\n    This is returned by run().\n\n    Attributes:\n      args: The list or str args passed to run().\n      returncode: The exit code of the process, negative for signals.\n      stdout: The standard output (None if not captured).\n      stderr: The standard error (None if not captured).\n    '
                None
                [Code]
                    File Name: subprocess.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'args'
                        'returncode'
                        'stdout'
                        'stderr'
                    [Var Names]
                        'self'
                        'args'
                        'returncode'
                        'stdout'
                        'stderr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: args
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: args
                        6       LOAD_FAST                       2: returncode
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: returncode
                        12      LOAD_FAST                       3: stdout
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: stdout
                        18      LOAD_FAST                       4: stderr
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: stderr
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                'CompletedProcess.__init__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format'
                        'args'
                        'returncode'
                        'stdout'
                        'append'
                        'stderr'
                        'type'
                        '__name__'
                        'join'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'args={!r}'
                        'returncode={!r}'
                        'stdout={!r}'
                        'stderr={!r}'
                        '{}({})'
                        ', '
                    [Disassembly]
                        0       LOAD_CONST                      1: 'args={!r}'
                        2       LOAD_METHOD                     0: format
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: args
                        8       CALL_METHOD                     1
                        10      LOAD_CONST                      2: 'returncode={!r}'
                        12      LOAD_METHOD                     0: format
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: returncode
                        18      CALL_METHOD                     1
                        20      BUILD_LIST                      2
                        22      STORE_FAST                      1: args
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: stdout
                        28      LOAD_CONST                      0: None
                        30      IS_OP                           1 (is not)
                        32      POP_JUMP_IF_FALSE               26 (to 52)
                        34      LOAD_FAST                       1: args
                        36      LOAD_METHOD                     4: append
                        38      LOAD_CONST                      3: 'stdout={!r}'
                        40      LOAD_METHOD                     0: format
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       3: stdout
                        46      CALL_METHOD                     1
                        48      CALL_METHOD                     1
                        50      POP_TOP                         
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       5: stderr
                        56      LOAD_CONST                      0: None
                        58      IS_OP                           1 (is not)
                        60      POP_JUMP_IF_FALSE               40 (to 80)
                        62      LOAD_FAST                       1: args
                        64      LOAD_METHOD                     4: append
                        66      LOAD_CONST                      4: 'stderr={!r}'
                        68      LOAD_METHOD                     0: format
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       5: stderr
                        74      CALL_METHOD                     1
                        76      CALL_METHOD                     1
                        78      POP_TOP                         
                        80      LOAD_CONST                      5: '{}({})'
                        82      LOAD_METHOD                     0: format
                        84      LOAD_GLOBAL                     6: type
                        86      LOAD_FAST                       0: self
                        88      CALL_FUNCTION                   1
                        90      LOAD_ATTR                       7: __name__
                        92      LOAD_CONST                      6: ', '
                        94      LOAD_METHOD                     8: join
                        96      LOAD_FAST                       1: args
                        98      CALL_METHOD                     1
                        100     CALL_METHOD                     2
                        102     RETURN_VALUE                    
                'CompletedProcess.__repr__'
                [Code]
                    File Name: subprocess.py
                    Object Name: check_returncode
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        'CalledProcessError'
                        'args'
                        'stdout'
                        'stderr'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Raise CalledProcessError if the exit code is non-zero.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       POP_JUMP_IF_FALSE               14 (to 28)
                        6       LOAD_GLOBAL                     1: CalledProcessError
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: returncode
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: args
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       3: stdout
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       4: stderr
                        24      CALL_FUNCTION                   4
                        26      RAISE_VARARGS                   1
                        28      LOAD_CONST                      1: None
                        30      RETURN_VALUE                    
                'CompletedProcess.check_returncode'
                (
                    None
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'CompletedProcess'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'A process that has finished running.\n\n    This is returned by run().\n\n    Attributes:\n      args: The list or str args passed to run().\n      returncode: The exit code of the process, negative for signals.\n      stdout: The standard output (None if not captured).\n      stderr: The standard error (None if not captured).\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      9: (None, None)
                14      LOAD_CONST                      3: <CODE> __init__
                16      LOAD_CONST                      4: 'CompletedProcess.__init__'
                18      MAKE_FUNCTION                   1
                20      STORE_NAME                      4: __init__
                22      LOAD_CONST                      5: <CODE> __repr__
                24      LOAD_CONST                      6: 'CompletedProcess.__repr__'
                26      MAKE_FUNCTION                   0
                28      STORE_NAME                      5: __repr__
                30      LOAD_NAME                       6: classmethod
                32      LOAD_NAME                       7: types
                34      LOAD_ATTR                       8: GenericAlias
                36      CALL_FUNCTION                   1
                38      STORE_NAME                      9: __class_getitem__
                40      LOAD_CONST                      7: <CODE> check_returncode
                42      LOAD_CONST                      8: 'CompletedProcess.check_returncode'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      10: check_returncode
                48      LOAD_CONST                      2: None
                50      RETURN_VALUE                    
        'CompletedProcess'
        (
            'input'
            'capture_output'
            'timeout'
            'check'
        )
        [Code]
            File Name: subprocess.py
            Object Name: run
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 4
            Locals: 11
            Stack Size: 11
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
                'get'
                'ValueError'
                'PIPE'
                'Popen'
                'communicate'
                'TimeoutExpired'
                'kill'
                '_mswindows'
                'stdout'
                'stderr'
                'wait'
                'poll'
                'CalledProcessError'
                'args'
                'CompletedProcess'
            [Var Names]
                'input'
                'capture_output'
                'timeout'
                'check'
                'popenargs'
                'kwargs'
                'process'
                'stdout'
                'stderr'
                'exc'
                'retcode'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Run command with arguments and return a CompletedProcess instance.\n\n    The returned instance will have attributes args, returncode, stdout and\n    stderr. By default, stdout and stderr are not captured, and those attributes\n    will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,\n    or pass capture_output=True to capture both.\n\n    If check is True and the exit code was non-zero, it raises a\n    CalledProcessError. The CalledProcessError object will have the return code\n    in the returncode attribute, and output & stderr attributes if those streams\n    were captured.\n\n    If timeout is given, and the process takes too long, a TimeoutExpired\n    exception will be raised.\n\n    There is an optional argument "input", allowing you to\n    pass bytes or a string to the subprocess\'s stdin.  If you use this argument\n    you may not also use the Popen constructor\'s "stdin" argument, as\n    it will be used internally.\n\n    By default, all communication is in bytes, and therefore any "input" should\n    be bytes, and the stdout and stderr will be bytes. If in text mode, any\n    "input" should be a string, and stdout and stderr will be strings decoded\n    according to locale encoding, or by "encoding" if set. Text mode is\n    triggered by setting any of text, encoding, errors or universal_newlines.\n\n    The other arguments are the same as for the Popen constructor.\n    '
                None
                'stdin'
                'stdin and input arguments may not both be used.'
                'stdout'
                'stderr'
                'stdout and stderr arguments may not be used with capture_output.'
                (
                    'timeout'
                )
                (
                    'output'
                    'stderr'
                )
            [Disassembly]
                0       LOAD_FAST                       0: input
                2       LOAD_CONST                      1: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               19 (to 38)
                8       LOAD_FAST                       5: kwargs
                10      LOAD_METHOD                     0: get
                12      LOAD_CONST                      2: 'stdin'
                14      CALL_METHOD                     1
                16      LOAD_CONST                      1: None
                18      IS_OP                           1 (is not)
                20      POP_JUMP_IF_FALSE               15 (to 30)
                22      LOAD_GLOBAL                     1: ValueError
                24      LOAD_CONST                      3: 'stdin and input arguments may not both be used.'
                26      CALL_FUNCTION                   1
                28      RAISE_VARARGS                   1
                30      LOAD_GLOBAL                     2: PIPE
                32      LOAD_FAST                       5: kwargs
                34      LOAD_CONST                      2: 'stdin'
                36      STORE_SUBSCR                    
                38      LOAD_FAST                       1: capture_output
                40      POP_JUMP_IF_FALSE               47 (to 94)
                42      LOAD_FAST                       5: kwargs
                44      LOAD_METHOD                     0: get
                46      LOAD_CONST                      4: 'stdout'
                48      CALL_METHOD                     1
                50      LOAD_CONST                      1: None
                52      IS_OP                           1 (is not)
                54      POP_JUMP_IF_TRUE                35 (to 70)
                56      LOAD_FAST                       5: kwargs
                58      LOAD_METHOD                     0: get
                60      LOAD_CONST                      5: 'stderr'
                62      CALL_METHOD                     1
                64      LOAD_CONST                      1: None
                66      IS_OP                           1 (is not)
                68      POP_JUMP_IF_FALSE               39 (to 78)
                70      LOAD_GLOBAL                     1: ValueError
                72      LOAD_CONST                      6: 'stdout and stderr arguments may not be used with capture_output.'
                74      CALL_FUNCTION                   1
                76      RAISE_VARARGS                   1
                78      LOAD_GLOBAL                     2: PIPE
                80      LOAD_FAST                       5: kwargs
                82      LOAD_CONST                      4: 'stdout'
                84      STORE_SUBSCR                    
                86      LOAD_GLOBAL                     2: PIPE
                88      LOAD_FAST                       5: kwargs
                90      LOAD_CONST                      5: 'stderr'
                92      STORE_SUBSCR                    
                94      LOAD_GLOBAL                     3: Popen
                96      LOAD_FAST                       4: popenargs
                98      BUILD_MAP                       0
                100     LOAD_FAST                       5: kwargs
                102     DICT_MERGE                      1
                104     CALL_FUNCTION_EX                1
                106     SETUP_WITH                      76 (to 260)
                108     STORE_FAST                      6: process
                110     SETUP_FINALLY                   11 (to 134)
                112     LOAD_FAST                       6: process
                114     LOAD_ATTR                       4: communicate
                116     LOAD_FAST                       0: input
                118     LOAD_FAST                       2: timeout
                120     LOAD_CONST                      7: ('timeout',)
                122     CALL_FUNCTION_KW                2
                124     UNPACK_SEQUENCE                 2
                126     STORE_FAST                      7: stdout
                128     STORE_FAST                      8: stderr
                130     POP_BLOCK                       
                132     JUMP_FORWARD                    39 (to 212)
                134     DUP_TOP                         
                136     LOAD_GLOBAL                     5: TimeoutExpired
                138     JUMP_IF_NOT_EXC_MATCH           98 (to 196)
                140     POP_TOP                         
                142     STORE_FAST                      9: exc
                144     POP_TOP                         
                146     SETUP_FINALLY                   20 (to 188)
                148     LOAD_FAST                       6: process
                150     LOAD_METHOD                     6: kill
                152     CALL_METHOD                     0
                154     POP_TOP                         
                156     LOAD_GLOBAL                     7: _mswindows
                158     POP_JUMP_IF_FALSE               89 (to 178)
                160     LOAD_FAST                       6: process
                162     LOAD_METHOD                     4: communicate
                164     CALL_METHOD                     0
                166     UNPACK_SEQUENCE                 2
                168     LOAD_FAST                       9: exc
                170     STORE_ATTR                      8: stdout
                172     LOAD_FAST                       9: exc
                174     STORE_ATTR                      9: stderr
                176     RAISE_VARARGS                   0
                178     LOAD_FAST                       6: process
                180     LOAD_METHOD                     10: wait
                182     CALL_METHOD                     0
                184     POP_TOP                         
                186     RAISE_VARARGS                   0
                188     LOAD_CONST                      1: None
                190     STORE_FAST                      9: exc
                192     DELETE_FAST                     9: exc
                194     RERAISE                         1
                196     POP_TOP                         
                198     POP_TOP                         
                200     POP_TOP                         
                202     LOAD_FAST                       6: process
                204     LOAD_METHOD                     6: kill
                206     CALL_METHOD                     0
                208     POP_TOP                         
                210     RAISE_VARARGS                   0
                212     LOAD_FAST                       6: process
                214     LOAD_METHOD                     11: poll
                216     CALL_METHOD                     0
                218     STORE_FAST                      10: retcode
                220     LOAD_FAST                       3: check
                222     POP_JUMP_IF_FALSE               123 (to 246)
                224     LOAD_FAST                       10: retcode
                226     POP_JUMP_IF_FALSE               123 (to 246)
                228     LOAD_GLOBAL                     12: CalledProcessError
                230     LOAD_FAST                       10: retcode
                232     LOAD_FAST                       6: process
                234     LOAD_ATTR                       13: args
                236     LOAD_FAST                       7: stdout
                238     LOAD_FAST                       8: stderr
                240     LOAD_CONST                      8: ('output', 'stderr')
                242     CALL_FUNCTION_KW                4
                244     RAISE_VARARGS                   1
                246     POP_BLOCK                       
                248     LOAD_CONST                      1: None
                250     DUP_TOP                         
                252     DUP_TOP                         
                254     CALL_FUNCTION                   3
                256     POP_TOP                         
                258     JUMP_FORWARD                    8 (to 276)
                260     WITH_EXCEPT_START               
                262     POP_JUMP_IF_TRUE                133 (to 266)
                264     RERAISE                         1
                266     POP_TOP                         
                268     POP_TOP                         
                270     POP_TOP                         
                272     POP_EXCEPT                      
                274     POP_TOP                         
                276     LOAD_GLOBAL                     14: CompletedProcess
                278     LOAD_FAST                       6: process
                280     LOAD_ATTR                       13: args
                282     LOAD_FAST                       10: retcode
                284     LOAD_FAST                       7: stdout
                286     LOAD_FAST                       8: stderr
                288     CALL_FUNCTION                   4
                290     RETURN_VALUE                    
        'run'
        [Code]
            File Name: subprocess.py
            Object Name: list2cmdline
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'map'
                'os'
                'fsdecode'
                'append'
                'len'
                'extend'
                'join'
            [Var Names]
                'seq'
                'result'
                'needquote'
                'arg'
                'bs_buf'
                'c'
            [Free Vars]
            [Cell Vars]
            [Constants]
                '\n    Translate a sequence of arguments into a command line\n    string, using the same rules as the MS C runtime:\n\n    1) Arguments are delimited by white space, which is either a\n       space or a tab.\n\n    2) A string surrounded by double quotation marks is\n       interpreted as a single argument, regardless of white space\n       contained within.  A quoted string can be embedded in an\n       argument.\n\n    3) A double quotation mark preceded by a backslash is\n       interpreted as a literal double quotation mark.\n\n    4) Backslashes are interpreted literally, unless they\n       immediately precede a double quotation mark.\n\n    5) If backslashes immediately precede a double quotation mark,\n       every pair of backslashes is interpreted as a literal\n       backslash.  If the number of backslashes is odd, the last\n       backslash escapes the next double quotation mark as\n       described in rule 3.\n    '
                False
                ' '
                '\t'
                '"'
                '\\'
                2
                '\\"'
                ''
            [Disassembly]
                0       BUILD_LIST                      0
                2       STORE_FAST                      1: result
                4       LOAD_CONST                      1: False
                6       STORE_FAST                      2: needquote
                8       LOAD_GLOBAL                     0: map
                10      LOAD_GLOBAL                     1: os
                12      LOAD_ATTR                       2: fsdecode
                14      LOAD_FAST                       0: seq
                16      CALL_FUNCTION                   2
                18      GET_ITER                        
                20      FOR_ITER                        100 (to 222)
                22      STORE_FAST                      3: arg
                24      BUILD_LIST                      0
                26      STORE_FAST                      4: bs_buf
                28      LOAD_FAST                       1: result
                30      POP_JUMP_IF_FALSE               21 (to 42)
                32      LOAD_FAST                       1: result
                34      LOAD_METHOD                     3: append
                36      LOAD_CONST                      2: ' '
                38      CALL_METHOD                     1
                40      POP_TOP                         
                42      LOAD_CONST                      2: ' '
                44      LOAD_FAST                       3: arg
                46      CONTAINS_OP                     0 (in)
                48      JUMP_IF_TRUE_OR_POP             31 (to 62)
                50      LOAD_CONST                      3: '\t'
                52      LOAD_FAST                       3: arg
                54      CONTAINS_OP                     0 (in)
                56      JUMP_IF_TRUE_OR_POP             31 (to 62)
                58      LOAD_FAST                       3: arg
                60      UNARY_NOT                       
                62      STORE_FAST                      2: needquote
                64      LOAD_FAST                       2: needquote
                66      POP_JUMP_IF_FALSE               39 (to 78)
                68      LOAD_FAST                       1: result
                70      LOAD_METHOD                     3: append
                72      LOAD_CONST                      4: '"'
                74      CALL_METHOD                     1
                76      POP_TOP                         
                78      LOAD_FAST                       3: arg
                80      GET_ITER                        
                82      FOR_ITER                        49 (to 182)
                84      STORE_FAST                      5: c
                86      LOAD_FAST                       5: c
                88      LOAD_CONST                      5: '\\'
                90      COMPARE_OP                      2 (==)
                92      POP_JUMP_IF_FALSE               53 (to 106)
                94      LOAD_FAST                       4: bs_buf
                96      LOAD_METHOD                     3: append
                98      LOAD_FAST                       5: c
                100     CALL_METHOD                     1
                102     POP_TOP                         
                104     JUMP_ABSOLUTE                   41 (to 82)
                106     LOAD_FAST                       5: c
                108     LOAD_CONST                      4: '"'
                110     COMPARE_OP                      2 (==)
                112     POP_JUMP_IF_FALSE               76 (to 152)
                114     LOAD_FAST                       1: result
                116     LOAD_METHOD                     3: append
                118     LOAD_CONST                      5: '\\'
                120     LOAD_GLOBAL                     4: len
                122     LOAD_FAST                       4: bs_buf
                124     CALL_FUNCTION                   1
                126     BINARY_MULTIPLY                 
                128     LOAD_CONST                      6: 2
                130     BINARY_MULTIPLY                 
                132     CALL_METHOD                     1
                134     POP_TOP                         
                136     BUILD_LIST                      0
                138     STORE_FAST                      4: bs_buf
                140     LOAD_FAST                       1: result
                142     LOAD_METHOD                     3: append
                144     LOAD_CONST                      7: '\\"'
                146     CALL_METHOD                     1
                148     POP_TOP                         
                150     JUMP_ABSOLUTE                   41 (to 82)
                152     LOAD_FAST                       4: bs_buf
                154     POP_JUMP_IF_FALSE               85 (to 170)
                156     LOAD_FAST                       1: result
                158     LOAD_METHOD                     5: extend
                160     LOAD_FAST                       4: bs_buf
                162     CALL_METHOD                     1
                164     POP_TOP                         
                166     BUILD_LIST                      0
                168     STORE_FAST                      4: bs_buf
                170     LOAD_FAST                       1: result
                172     LOAD_METHOD                     3: append
                174     LOAD_FAST                       5: c
                176     CALL_METHOD                     1
                178     POP_TOP                         
                180     JUMP_ABSOLUTE                   41 (to 82)
                182     LOAD_FAST                       4: bs_buf
                184     POP_JUMP_IF_FALSE               98 (to 196)
                186     LOAD_FAST                       1: result
                188     LOAD_METHOD                     5: extend
                190     LOAD_FAST                       4: bs_buf
                192     CALL_METHOD                     1
                194     POP_TOP                         
                196     LOAD_FAST                       2: needquote
                198     POP_JUMP_IF_FALSE               110 (to 220)
                200     LOAD_FAST                       1: result
                202     LOAD_METHOD                     5: extend
                204     LOAD_FAST                       4: bs_buf
                206     CALL_METHOD                     1
                208     POP_TOP                         
                210     LOAD_FAST                       1: result
                212     LOAD_METHOD                     3: append
                214     LOAD_CONST                      4: '"'
                216     CALL_METHOD                     1
                218     POP_TOP                         
                220     JUMP_ABSOLUTE                   10 (to 20)
                222     LOAD_CONST                      8: ''
                224     LOAD_METHOD                     6: join
                226     LOAD_FAST                       1: result
                228     CALL_METHOD                     1
                230     RETURN_VALUE                    
        'list2cmdline'
        [Code]
            File Name: subprocess.py
            Object Name: getstatusoutput
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'check_output'
                'STDOUT'
                'CalledProcessError'
                'output'
                'returncode'
            [Var Names]
                'cmd'
                'data'
                'exitcode'
                'ex'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Return (exitcode, output) of executing cmd in a shell.\n\n    Execute the string 'cmd' in a shell with 'check_output' and\n    return a 2-tuple (status, output). The locale encoding is used\n    to decode the output and process newlines.\n\n    A trailing newline is stripped from the output.\n    The exit status for the command can be interpreted\n    according to the rules for the function 'wait'. Example:\n\n    >>> import subprocess\n    >>> subprocess.getstatusoutput('ls /bin/ls')\n    (0, '/bin/ls')\n    >>> subprocess.getstatusoutput('cat /bin/junk')\n    (1, 'cat: /bin/junk: No such file or directory')\n    >>> subprocess.getstatusoutput('/bin/junk')\n    (127, 'sh: /bin/junk: not found')\n    >>> subprocess.getstatusoutput('/bin/kill $$')\n    (-15, '')\n    "
                True
                (
                    'shell'
                    'text'
                    'stderr'
                )
                0
                None
                -1
                '\n'
            [Disassembly]
                0       SETUP_FINALLY                   12 (to 26)
                2       LOAD_GLOBAL                     0: check_output
                4       LOAD_FAST                       0: cmd
                6       LOAD_CONST                      1: True
                8       LOAD_CONST                      1: True
                10      LOAD_GLOBAL                     1: STDOUT
                12      LOAD_CONST                      2: ('shell', 'text', 'stderr')
                14      CALL_FUNCTION_KW                4
                16      STORE_FAST                      1: data
                18      LOAD_CONST                      3: 0
                20      STORE_FAST                      2: exitcode
                22      POP_BLOCK                       
                24      JUMP_FORWARD                    24 (to 74)
                26      DUP_TOP                         
                28      LOAD_GLOBAL                     2: CalledProcessError
                30      JUMP_IF_NOT_EXC_MATCH           36 (to 72)
                32      POP_TOP                         
                34      STORE_FAST                      3: ex
                36      POP_TOP                         
                38      SETUP_FINALLY                   12 (to 64)
                40      LOAD_FAST                       3: ex
                42      LOAD_ATTR                       3: output
                44      STORE_FAST                      1: data
                46      LOAD_FAST                       3: ex
                48      LOAD_ATTR                       4: returncode
                50      STORE_FAST                      2: exitcode
                52      POP_BLOCK                       
                54      POP_EXCEPT                      
                56      LOAD_CONST                      4: None
                58      STORE_FAST                      3: ex
                60      DELETE_FAST                     3: ex
                62      JUMP_FORWARD                    5 (to 74)
                64      LOAD_CONST                      4: None
                66      STORE_FAST                      3: ex
                68      DELETE_FAST                     3: ex
                70      RERAISE                         1
                72      RERAISE                         0
                74      LOAD_FAST                       1: data
                76      LOAD_CONST                      5: -1
                78      LOAD_CONST                      4: None
                80      BUILD_SLICE                     2
                82      BINARY_SUBSCR                   
                84      LOAD_CONST                      6: '\n'
                86      COMPARE_OP                      2 (==)
                88      POP_JUMP_IF_FALSE               51 (to 102)
                90      LOAD_FAST                       1: data
                92      LOAD_CONST                      4: None
                94      LOAD_CONST                      5: -1
                96      BUILD_SLICE                     2
                98      BINARY_SUBSCR                   
                100     STORE_FAST                      1: data
                102     LOAD_FAST                       2: exitcode
                104     LOAD_FAST                       1: data
                106     BUILD_TUPLE                     2
                108     RETURN_VALUE                    
        'getstatusoutput'
        [Code]
            File Name: subprocess.py
            Object Name: getoutput
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'getstatusoutput'
            [Var Names]
                'cmd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Return output (stdout or stderr) of executing cmd in a shell.\n\n    Like getstatusoutput(), except the exit status is ignored and the return\n    value is a string containing the command's output.  Example:\n\n    >>> import subprocess\n    >>> subprocess.getoutput('ls /bin/ls')\n    '/bin/ls'\n    "
                1
            [Disassembly]
                0       LOAD_GLOBAL                     0: getstatusoutput
                2       LOAD_FAST                       0: cmd
                4       CALL_FUNCTION                   1
                6       LOAD_CONST                      1: 1
                8       BINARY_SUBSCR                   
                10      RETURN_VALUE                    
        'getoutput'
        [Code]
            File Name: subprocess.py
            Object Name: _use_posix_spawn
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_mswindows'
                'hasattr'
                'os'
                'sys'
                'platform'
                'confstr'
                'split'
                'len'
                'ValueError'
                'tuple'
                'map'
                'int'
                'AttributeError'
                'OSError'
            [Var Names]
                'ver'
                'parts'
                'libc'
                'version'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Check if posix_spawn() can be used for subprocess.\n\n    subprocess requires a posix_spawn() implementation that properly reports\n    errors to the parent process, & sets errno on the following failures:\n\n    * Process attribute actions failed.\n    * File actions failed.\n    * exec() failed.\n\n    Prefer an implementation which can use vfork() in some cases for best\n    performance.\n    '
                'posix_spawn'
                False
                (
                    'darwin'
                    'sunos5'
                )
                True
                'CS_GNU_LIBC_VERSION'
                1
                (
                    'maxsplit'
                )
                2
                0
                '.'
                'linux'
                'glibc'
                (
                    2
                    24
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: _mswindows
                2       POP_JUMP_IF_TRUE                7 (to 14)
                4       LOAD_GLOBAL                     1: hasattr
                6       LOAD_GLOBAL                     2: os
                8       LOAD_CONST                      1: 'posix_spawn'
                10      CALL_FUNCTION                   2
                12      POP_JUMP_IF_TRUE                9 (to 18)
                14      LOAD_CONST                      2: False
                16      RETURN_VALUE                    
                18      LOAD_GLOBAL                     3: sys
                20      LOAD_ATTR                       4: platform
                22      LOAD_CONST                      3: ('darwin', 'sunos5')
                24      CONTAINS_OP                     0 (in)
                26      POP_JUMP_IF_FALSE               16 (to 32)
                28      LOAD_CONST                      4: True
                30      RETURN_VALUE                    
                32      SETUP_FINALLY                   60 (to 154)
                34      LOAD_GLOBAL                     2: os
                36      LOAD_METHOD                     5: confstr
                38      LOAD_CONST                      5: 'CS_GNU_LIBC_VERSION'
                40      CALL_METHOD                     1
                42      STORE_FAST                      0: ver
                44      LOAD_FAST                       0: ver
                46      LOAD_ATTR                       6: split
                48      LOAD_CONST                      6: 1
                50      LOAD_CONST                      7: ('maxsplit',)
                52      CALL_FUNCTION_KW                1
                54      STORE_FAST                      1: parts
                56      LOAD_GLOBAL                     7: len
                58      LOAD_FAST                       1: parts
                60      CALL_FUNCTION                   1
                62      LOAD_CONST                      8: 2
                64      COMPARE_OP                      3 (!=)
                66      POP_JUMP_IF_FALSE               36 (to 72)
                68      LOAD_GLOBAL                     8: ValueError
                70      RAISE_VARARGS                   1
                72      LOAD_FAST                       1: parts
                74      LOAD_CONST                      9: 0
                76      BINARY_SUBSCR                   
                78      STORE_FAST                      2: libc
                80      LOAD_GLOBAL                     9: tuple
                82      LOAD_GLOBAL                     10: map
                84      LOAD_GLOBAL                     11: int
                86      LOAD_FAST                       1: parts
                88      LOAD_CONST                      6: 1
                90      BINARY_SUBSCR                   
                92      LOAD_METHOD                     6: split
                94      LOAD_CONST                      10: '.'
                96      CALL_METHOD                     1
                98      CALL_FUNCTION                   2
                100     CALL_FUNCTION                   1
                102     STORE_FAST                      3: version
                104     LOAD_GLOBAL                     3: sys
                106     LOAD_ATTR                       4: platform
                108     LOAD_CONST                      11: 'linux'
                110     COMPARE_OP                      2 (==)
                112     POP_JUMP_IF_FALSE               68 (to 136)
                114     LOAD_FAST                       2: libc
                116     LOAD_CONST                      12: 'glibc'
                118     COMPARE_OP                      2 (==)
                120     POP_JUMP_IF_FALSE               71 (to 142)
                122     LOAD_FAST                       3: version
                124     LOAD_CONST                      13: (2, 24)
                126     COMPARE_OP                      5 (>=)
                128     POP_JUMP_IF_FALSE               74 (to 148)
                130     POP_BLOCK                       
                132     LOAD_CONST                      4: True
                134     RETURN_VALUE                    
                136     POP_BLOCK                       
                138     LOAD_CONST                      2: False
                140     RETURN_VALUE                    
                142     POP_BLOCK                       
                144     LOAD_CONST                      2: False
                146     RETURN_VALUE                    
                148     POP_BLOCK                       
                150     LOAD_CONST                      2: False
                152     RETURN_VALUE                    
                154     DUP_TOP                         
                156     LOAD_GLOBAL                     12: AttributeError
                158     LOAD_GLOBAL                     8: ValueError
                160     LOAD_GLOBAL                     13: OSError
                162     BUILD_TUPLE                     3
                164     JUMP_IF_NOT_EXC_MATCH           89 (to 178)
                166     POP_TOP                         
                168     POP_TOP                         
                170     POP_TOP                         
                172     POP_EXCEPT                      
                174     LOAD_CONST                      2: False
                176     RETURN_VALUE                    
                178     RERAISE                         0
        '_use_posix_spawn'
        [Code]
            File Name: subprocess.py
            Object Name: Popen
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 10
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_child_created'
                '__init__'
                '__repr__'
                'classmethod'
                'types'
                'GenericAlias'
                '__class_getitem__'
                'property'
                'universal_newlines'
                'setter'
                '_translate_newlines'
                '__enter__'
                '__exit__'
                'sys'
                'maxsize'
                'warnings'
                'warn'
                '__del__'
                '_get_devnull'
                '_stdin_write'
                'communicate'
                'poll'
                '_remaining_time'
                '_check_timeout'
                'wait'
                '_close_pipe_fds'
                '_mswindows'
                '_get_handles'
                '_make_inheritable'
                '_filter_handle_list'
                '_execute_child'
                '_winapi'
                'WaitForSingleObject'
                'WAIT_OBJECT_0'
                'GetExitCodeProcess'
                '_internal_poll'
                '_wait'
                '_readerthread'
                '_communicate'
                'send_signal'
                'terminate'
                'kill'
                '_posix_spawn'
                'os'
                'waitstatus_to_exitcode'
                'WIFSTOPPED'
                'WSTOPSIG'
                '_handle_exitstatus'
                'waitpid'
                'WNOHANG'
                'errno'
                'ECHILD'
                '_try_wait'
                '_save_input'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Popen'
                " Execute a child program in a new process.\n\n    For a complete description of the arguments see the Python documentation.\n\n    Arguments:\n      args: A string, or a sequence of program arguments.\n\n      bufsize: supplied as the buffering argument to the open() function when\n          creating the stdin/stdout/stderr pipe file objects\n\n      executable: A replacement program to execute.\n\n      stdin, stdout and stderr: These specify the executed programs' standard\n          input, standard output and standard error file handles, respectively.\n\n      preexec_fn: (POSIX only) An object to be called in the child process\n          just before the child is executed.\n\n      close_fds: Controls closing or inheriting of file descriptors.\n\n      shell: If true, the command will be executed through the shell.\n\n      cwd: Sets the current directory before the child is executed.\n\n      env: Defines the environment variables for the new process.\n\n      text: If true, decode stdin, stdout and stderr using the given encoding\n          (if set) or the system default otherwise.\n\n      universal_newlines: Alias of text, provided for backwards compatibility.\n\n      startupinfo and creationflags (Windows only)\n\n      restore_signals (POSIX only)\n\n      start_new_session (POSIX only)\n\n      group (POSIX only)\n\n      extra_groups (POSIX only)\n\n      user (POSIX only)\n\n      umask (POSIX only)\n\n      pass_fds (POSIX only)\n\n      encoding and errors: Text mode encoding and error handling to use for\n          file objects stdin, stdout and stderr.\n\n    Attributes:\n        stdin, stdout, stderr, pid, returncode\n    "
                False
                -1
                None
                True
                0
                (
                )
                (
                    'user'
                    'group'
                    'extra_groups'
                    'encoding'
                    'errors'
                    'text'
                    'umask'
                    'pipesize'
                )
                [Code]
                    File Name: subprocess.py
                    Object Name: __init__
                    Arg Count: 18
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 8
                    Locals: 43
                    Stack Size: 24
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_cleanup'
                        'threading'
                        'Lock'
                        '_waitpid_lock'
                        '_input'
                        '_communication_started'
                        'isinstance'
                        'int'
                        'TypeError'
                        '_mswindows'
                        'ValueError'
                        'warnings'
                        'warn'
                        'RuntimeWarning'
                        'args'
                        'stdin'
                        'stdout'
                        'stderr'
                        'pid'
                        'returncode'
                        'encoding'
                        'errors'
                        'pipesize'
                        'bool'
                        'SubprocessError'
                        '_get_handles'
                        'msvcrt'
                        'open_osfhandle'
                        'Detach'
                        'text_mode'
                        '_sigint_wait_secs'
                        '_closed_child_pipe_fds'
                        'hasattr'
                        'os'
                        'str'
                        'grp'
                        'ImportError'
                        'getgrnam'
                        'gr_gid'
                        'format'
                        'type'
                        'append'
                        'pwd'
                        'getpwnam'
                        'pw_uid'
                        'io'
                        'open'
                        'TextIOWrapper'
                        '_execute_child'
                        'filter'
                        'close'
                        'OSError'
                        'PIPE'
                        '_devnull'
                        'Handle'
                        'Close'
                    [Var Names]
                        'self'
                        'args'
                        'bufsize'
                        'executable'
                        'stdin'
                        'stdout'
                        'stderr'
                        'preexec_fn'
                        'close_fds'
                        'shell'
                        'cwd'
                        'env'
                        'universal_newlines'
                        'startupinfo'
                        'creationflags'
                        'restore_signals'
                        'start_new_session'
                        'pass_fds'
                        'user'
                        'group'
                        'extra_groups'
                        'encoding'
                        'errors'
                        'text'
                        'umask'
                        'pipesize'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        'line_buffering'
                        'gid'
                        'grp'
                        'gids'
                        'extra_group'
                        'gid_check'
                        'uid'
                        'pwd'
                        'f'
                        'to_close'
                        'fd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Create new Popen instance.'
                        None
                        False
                        -1
                        'bufsize must be an integer'
                        'pipesize must be an integer'
                        'preexec_fn is not supported on Windows platforms'
                        'pass_fds overriding close_fds.'
                        True
                        'startupinfo is only supported on Windows platforms'
                        0
                        'creationflags is only supported on Windows platforms'
                        'Cannot disambiguate when both text and universal_newlines are supplied but different. Pass one or the other.'
                        'locale'
                        0.25
                        1
                        'setregid'
                        "The 'group' parameter is not supported on the current platform"
                        'The group parameter cannot be a string on systems without the grp module'
                        'Group must be a string or an integer, not {}'
                        'Group ID cannot be negative, got '
                        'setgroups'
                        "The 'extra_groups' parameter is not supported on the current platform"
                        'Groups must be a list, not a string'
                        'Items in extra_groups cannot be strings on systems without the grp module'
                        'Items in extra_groups must be a string or integer, not {}'
                        'setreuid'
                        "The 'user' parameter is not supported on the current platform"
                        'The user parameter cannot be a string on systems without the pwd module'
                        'User must be a string or an integer'
                        'User ID cannot be negative, got '
                        'wb'
                        (
                            'write_through'
                            'line_buffering'
                            'encoding'
                            'errors'
                        )
                        'rb'
                        (
                            'encoding'
                            'errors'
                        )
                        '_devnull'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _cleanup
                        2       CALL_FUNCTION                   0
                        4       POP_TOP                         
                        6       LOAD_GLOBAL                     1: threading
                        8       LOAD_METHOD                     2: Lock
                        10      CALL_METHOD                     0
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      3: _waitpid_lock
                        16      LOAD_CONST                      1: None
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      4: _input
                        22      LOAD_CONST                      2: False
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      5: _communication_started
                        28      LOAD_FAST                       2: bufsize
                        30      LOAD_CONST                      1: None
                        32      IS_OP                           0 (is)
                        34      POP_JUMP_IF_FALSE               20 (to 40)
                        36      LOAD_CONST                      3: -1
                        38      STORE_FAST                      2: bufsize
                        40      LOAD_GLOBAL                     6: isinstance
                        42      LOAD_FAST                       2: bufsize
                        44      LOAD_GLOBAL                     7: int
                        46      CALL_FUNCTION                   2
                        48      POP_JUMP_IF_TRUE                29 (to 58)
                        50      LOAD_GLOBAL                     8: TypeError
                        52      LOAD_CONST                      4: 'bufsize must be an integer'
                        54      CALL_FUNCTION                   1
                        56      RAISE_VARARGS                   1
                        58      LOAD_FAST                       25: pipesize
                        60      LOAD_CONST                      1: None
                        62      IS_OP                           0 (is)
                        64      POP_JUMP_IF_FALSE               35 (to 70)
                        66      LOAD_CONST                      3: -1
                        68      STORE_FAST                      25: pipesize
                        70      LOAD_GLOBAL                     6: isinstance
                        72      LOAD_FAST                       25: pipesize
                        74      LOAD_GLOBAL                     7: int
                        76      CALL_FUNCTION                   2
                        78      POP_JUMP_IF_TRUE                44 (to 88)
                        80      LOAD_GLOBAL                     8: TypeError
                        82      LOAD_CONST                      5: 'pipesize must be an integer'
                        84      CALL_FUNCTION                   1
                        86      RAISE_VARARGS                   1
                        88      LOAD_GLOBAL                     9: _mswindows
                        90      POP_JUMP_IF_FALSE               55 (to 110)
                        92      LOAD_FAST                       7: preexec_fn
                        94      LOAD_CONST                      1: None
                        96      IS_OP                           1 (is not)
                        98      POP_JUMP_IF_FALSE               54 (to 108)
                        100     LOAD_GLOBAL                     10: ValueError
                        102     LOAD_CONST                      6: 'preexec_fn is not supported on Windows platforms'
                        104     CALL_FUNCTION                   1
                        106     RAISE_VARARGS                   1
                        108     JUMP_FORWARD                    28 (to 166)
                        110     LOAD_FAST                       17: pass_fds
                        112     POP_JUMP_IF_FALSE               67 (to 134)
                        114     LOAD_FAST                       8: close_fds
                        116     POP_JUMP_IF_TRUE                67 (to 134)
                        118     LOAD_GLOBAL                     11: warnings
                        120     LOAD_METHOD                     12: warn
                        122     LOAD_CONST                      7: 'pass_fds overriding close_fds.'
                        124     LOAD_GLOBAL                     13: RuntimeWarning
                        126     CALL_METHOD                     2
                        128     POP_TOP                         
                        130     LOAD_CONST                      8: True
                        132     STORE_FAST                      8: close_fds
                        134     LOAD_FAST                       13: startupinfo
                        136     LOAD_CONST                      1: None
                        138     IS_OP                           1 (is not)
                        140     POP_JUMP_IF_FALSE               75 (to 150)
                        142     LOAD_GLOBAL                     10: ValueError
                        144     LOAD_CONST                      9: 'startupinfo is only supported on Windows platforms'
                        146     CALL_FUNCTION                   1
                        148     RAISE_VARARGS                   1
                        150     LOAD_FAST                       14: creationflags
                        152     LOAD_CONST                      10: 0
                        154     COMPARE_OP                      3 (!=)
                        156     POP_JUMP_IF_FALSE               83 (to 166)
                        158     LOAD_GLOBAL                     10: ValueError
                        160     LOAD_CONST                      11: 'creationflags is only supported on Windows platforms'
                        162     CALL_FUNCTION                   1
                        164     RAISE_VARARGS                   1
                        166     LOAD_FAST                       1: args
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      14: args
                        172     LOAD_CONST                      1: None
                        174     LOAD_FAST                       0: self
                        176     STORE_ATTR                      15: stdin
                        178     LOAD_CONST                      1: None
                        180     LOAD_FAST                       0: self
                        182     STORE_ATTR                      16: stdout
                        184     LOAD_CONST                      1: None
                        186     LOAD_FAST                       0: self
                        188     STORE_ATTR                      17: stderr
                        190     LOAD_CONST                      1: None
                        192     LOAD_FAST                       0: self
                        194     STORE_ATTR                      18: pid
                        196     LOAD_CONST                      1: None
                        198     LOAD_FAST                       0: self
                        200     STORE_ATTR                      19: returncode
                        202     LOAD_FAST                       21: encoding
                        204     LOAD_FAST                       0: self
                        206     STORE_ATTR                      20: encoding
                        208     LOAD_FAST                       22: errors
                        210     LOAD_FAST                       0: self
                        212     STORE_ATTR                      21: errors
                        214     LOAD_FAST                       25: pipesize
                        216     LOAD_FAST                       0: self
                        218     STORE_ATTR                      22: pipesize
                        220     LOAD_FAST                       23: text
                        222     LOAD_CONST                      1: None
                        224     IS_OP                           1 (is not)
                        226     POP_JUMP_IF_FALSE               130 (to 260)
                        228     LOAD_FAST                       12: universal_newlines
                        230     LOAD_CONST                      1: None
                        232     IS_OP                           1 (is not)
                        234     POP_JUMP_IF_FALSE               130 (to 260)
                        236     LOAD_GLOBAL                     23: bool
                        238     LOAD_FAST                       12: universal_newlines
                        240     CALL_FUNCTION                   1
                        242     LOAD_GLOBAL                     23: bool
                        244     LOAD_FAST                       23: text
                        246     CALL_FUNCTION                   1
                        248     COMPARE_OP                      3 (!=)
                        250     POP_JUMP_IF_FALSE               130 (to 260)
                        252     LOAD_GLOBAL                     24: SubprocessError
                        254     LOAD_CONST                      12: 'Cannot disambiguate when both text and universal_newlines are supplied but different. Pass one or the other.'
                        256     CALL_FUNCTION                   1
                        258     RAISE_VARARGS                   1
                        260     LOAD_FAST                       0: self
                        262     LOAD_METHOD                     25: _get_handles
                        264     LOAD_FAST                       4: stdin
                        266     LOAD_FAST                       5: stdout
                        268     LOAD_FAST                       6: stderr
                        270     CALL_METHOD                     3
                        272     UNPACK_SEQUENCE                 6
                        274     STORE_FAST                      26: p2cread
                        276     STORE_FAST                      27: p2cwrite
                        278     STORE_FAST                      28: c2pread
                        280     STORE_FAST                      29: c2pwrite
                        282     STORE_FAST                      30: errread
                        284     STORE_FAST                      31: errwrite
                        286     LOAD_GLOBAL                     9: _mswindows
                        288     POP_JUMP_IF_FALSE               181 (to 362)
                        290     LOAD_FAST                       27: p2cwrite
                        292     LOAD_CONST                      3: -1
                        294     COMPARE_OP                      3 (!=)
                        296     POP_JUMP_IF_FALSE               157 (to 314)
                        298     LOAD_GLOBAL                     26: msvcrt
                        300     LOAD_METHOD                     27: open_osfhandle
                        302     LOAD_FAST                       27: p2cwrite
                        304     LOAD_METHOD                     28: Detach
                        306     CALL_METHOD                     0
                        308     LOAD_CONST                      10: 0
                        310     CALL_METHOD                     2
                        312     STORE_FAST                      27: p2cwrite
                        314     LOAD_FAST                       28: c2pread
                        316     LOAD_CONST                      3: -1
                        318     COMPARE_OP                      3 (!=)
                        320     POP_JUMP_IF_FALSE               169 (to 338)
                        322     LOAD_GLOBAL                     26: msvcrt
                        324     LOAD_METHOD                     27: open_osfhandle
                        326     LOAD_FAST                       28: c2pread
                        328     LOAD_METHOD                     28: Detach
                        330     CALL_METHOD                     0
                        332     LOAD_CONST                      10: 0
                        334     CALL_METHOD                     2
                        336     STORE_FAST                      28: c2pread
                        338     LOAD_FAST                       30: errread
                        340     LOAD_CONST                      3: -1
                        342     COMPARE_OP                      3 (!=)
                        344     POP_JUMP_IF_FALSE               181 (to 362)
                        346     LOAD_GLOBAL                     26: msvcrt
                        348     LOAD_METHOD                     27: open_osfhandle
                        350     LOAD_FAST                       30: errread
                        352     LOAD_METHOD                     28: Detach
                        354     CALL_METHOD                     0
                        356     LOAD_CONST                      10: 0
                        358     CALL_METHOD                     2
                        360     STORE_FAST                      30: errread
                        362     LOAD_FAST                       21: encoding
                        364     JUMP_IF_TRUE_OR_POP             188 (to 376)
                        366     LOAD_FAST                       22: errors
                        368     JUMP_IF_TRUE_OR_POP             188 (to 376)
                        370     LOAD_FAST                       23: text
                        372     JUMP_IF_TRUE_OR_POP             188 (to 376)
                        374     LOAD_FAST                       12: universal_newlines
                        376     LOAD_FAST                       0: self
                        378     STORE_ATTR                      29: text_mode
                        380     LOAD_FAST                       0: self
                        382     LOAD_ATTR                       29: text_mode
                        384     POP_JUMP_IF_FALSE               202 (to 404)
                        386     LOAD_FAST                       21: encoding
                        388     LOAD_CONST                      1: None
                        390     IS_OP                           0 (is)
                        392     POP_JUMP_IF_FALSE               202 (to 404)
                        394     LOAD_CONST                      13: 'locale'
                        396     DUP_TOP                         
                        398     LOAD_FAST                       0: self
                        400     STORE_ATTR                      20: encoding
                        402     STORE_FAST                      21: encoding
                        404     LOAD_CONST                      14: 0.25
                        406     LOAD_FAST                       0: self
                        408     STORE_ATTR                      30: _sigint_wait_secs
                        410     LOAD_CONST                      2: False
                        412     LOAD_FAST                       0: self
                        414     STORE_ATTR                      31: _closed_child_pipe_fds
                        416     LOAD_FAST                       0: self
                        418     LOAD_ATTR                       29: text_mode
                        420     POP_JUMP_IF_FALSE               222 (to 444)
                        422     LOAD_FAST                       2: bufsize
                        424     LOAD_CONST                      15: 1
                        426     COMPARE_OP                      2 (==)
                        428     POP_JUMP_IF_FALSE               220 (to 440)
                        430     LOAD_CONST                      8: True
                        432     STORE_FAST                      32: line_buffering
                        434     LOAD_CONST                      3: -1
                        436     STORE_FAST                      2: bufsize
                        438     JUMP_FORWARD                    2 (to 444)
                        440     LOAD_CONST                      2: False
                        442     STORE_FAST                      32: line_buffering
                        444     LOAD_CONST                      1: None
                        446     STORE_FAST                      33: gid
                        448     LOAD_FAST                       19: group
                        450     LOAD_CONST                      1: None
                        452     IS_OP                           1 (is not)
                        454     POP_JUMP_IF_FALSE               300 (to 600)
                        458     LOAD_GLOBAL                     32: hasattr
                        460     LOAD_GLOBAL                     33: os
                        462     LOAD_CONST                      16: 'setregid'
                        464     CALL_FUNCTION                   2
                        466     POP_JUMP_IF_TRUE                238 (to 476)
                        468     LOAD_GLOBAL                     10: ValueError
                        470     LOAD_CONST                      17: "The 'group' parameter is not supported on the current platform"
                        472     CALL_FUNCTION                   1
                        474     RAISE_VARARGS                   1
                        476     LOAD_GLOBAL                     6: isinstance
                        478     LOAD_FAST                       19: group
                        480     LOAD_GLOBAL                     34: str
                        482     CALL_FUNCTION                   2
                        484     POP_JUMP_IF_FALSE               270 (to 540)
                        488     SETUP_FINALLY                   6 (to 502)
                        490     LOAD_CONST                      10: 0
                        492     LOAD_CONST                      1: None
                        494     IMPORT_NAME                     35: grp
                        496     STORE_FAST                      34: grp
                        498     POP_BLOCK                       
                        500     JUMP_FORWARD                    12 (to 526)
                        502     DUP_TOP                         
                        504     LOAD_GLOBAL                     36: ImportError
                        506     JUMP_IF_NOT_EXC_MATCH           262 (to 524)
                        510     POP_TOP                         
                        512     POP_TOP                         
                        514     POP_TOP                         
                        516     LOAD_GLOBAL                     10: ValueError
                        518     LOAD_CONST                      18: 'The group parameter cannot be a string on systems without the grp module'
                        520     CALL_FUNCTION                   1
                        522     RAISE_VARARGS                   1
                        524     RERAISE                         0
                        526     LOAD_FAST                       34: grp
                        528     LOAD_METHOD                     37: getgrnam
                        530     LOAD_FAST                       19: group
                        532     CALL_METHOD                     1
                        534     LOAD_ATTR                       38: gr_gid
                        536     STORE_FAST                      33: gid
                        538     JUMP_FORWARD                    18 (to 576)
                        540     LOAD_GLOBAL                     6: isinstance
                        542     LOAD_FAST                       19: group
                        544     LOAD_GLOBAL                     7: int
                        546     CALL_FUNCTION                   2
                        548     POP_JUMP_IF_FALSE               279 (to 558)
                        552     LOAD_FAST                       19: group
                        554     STORE_FAST                      33: gid
                        556     JUMP_FORWARD                    9 (to 576)
                        558     LOAD_GLOBAL                     8: TypeError
                        560     LOAD_CONST                      19: 'Group must be a string or an integer, not {}'
                        562     LOAD_METHOD                     39: format
                        564     LOAD_GLOBAL                     40: type
                        566     LOAD_FAST                       19: group
                        568     CALL_FUNCTION                   1
                        570     CALL_METHOD                     1
                        572     CALL_FUNCTION                   1
                        574     RAISE_VARARGS                   1
                        576     LOAD_FAST                       33: gid
                        578     LOAD_CONST                      10: 0
                        580     COMPARE_OP                      0 (<)
                        582     POP_JUMP_IF_FALSE               300 (to 600)
                        586     LOAD_GLOBAL                     10: ValueError
                        588     LOAD_CONST                      20: 'Group ID cannot be negative, got '
                        590     LOAD_FAST                       33: gid
                        592     FORMAT_VALUE                    0 (FVC_NONE)
                        594     BUILD_STRING                    2
                        596     CALL_FUNCTION                   1
                        598     RAISE_VARARGS                   1
                        600     LOAD_CONST                      1: None
                        602     STORE_FAST                      35: gids
                        604     LOAD_FAST                       20: extra_groups
                        606     LOAD_CONST                      1: None
                        608     IS_OP                           1 (is not)
                        610     POP_JUMP_IF_FALSE               409 (to 818)
                        614     LOAD_GLOBAL                     32: hasattr
                        616     LOAD_GLOBAL                     33: os
                        618     LOAD_CONST                      21: 'setgroups'
                        620     CALL_FUNCTION                   2
                        622     POP_JUMP_IF_TRUE                317 (to 634)
                        626     LOAD_GLOBAL                     10: ValueError
                        628     LOAD_CONST                      22: "The 'extra_groups' parameter is not supported on the current platform"
                        630     CALL_FUNCTION                   1
                        632     RAISE_VARARGS                   1
                        634     LOAD_GLOBAL                     6: isinstance
                        636     LOAD_FAST                       20: extra_groups
                        638     LOAD_GLOBAL                     34: str
                        640     CALL_FUNCTION                   2
                        642     POP_JUMP_IF_FALSE               327 (to 654)
                        646     LOAD_GLOBAL                     10: ValueError
                        648     LOAD_CONST                      23: 'Groups must be a list, not a string'
                        650     CALL_FUNCTION                   1
                        652     RAISE_VARARGS                   1
                        654     BUILD_LIST                      0
                        656     STORE_FAST                      35: gids
                        658     LOAD_FAST                       20: extra_groups
                        660     GET_ITER                        
                        662     FOR_ITER                        59 (to 782)
                        664     STORE_FAST                      36: extra_group
                        666     LOAD_GLOBAL                     6: isinstance
                        668     LOAD_FAST                       36: extra_group
                        670     LOAD_GLOBAL                     34: str
                        672     CALL_FUNCTION                   2
                        674     POP_JUMP_IF_FALSE               369 (to 738)
                        678     SETUP_FINALLY                   6 (to 692)
                        680     LOAD_CONST                      10: 0
                        682     LOAD_CONST                      1: None
                        684     IMPORT_NAME                     35: grp
                        686     STORE_FAST                      34: grp
                        688     POP_BLOCK                       
                        690     JUMP_FORWARD                    12 (to 716)
                        692     DUP_TOP                         
                        694     LOAD_GLOBAL                     36: ImportError
                        696     JUMP_IF_NOT_EXC_MATCH           357 (to 714)
                        700     POP_TOP                         
                        702     POP_TOP                         
                        704     POP_TOP                         
                        706     LOAD_GLOBAL                     10: ValueError
                        708     LOAD_CONST                      24: 'Items in extra_groups cannot be strings on systems without the grp module'
                        710     CALL_FUNCTION                   1
                        712     RAISE_VARARGS                   1
                        714     RERAISE                         0
                        716     LOAD_FAST                       35: gids
                        718     LOAD_METHOD                     41: append
                        720     LOAD_FAST                       34: grp
                        722     LOAD_METHOD                     37: getgrnam
                        724     LOAD_FAST                       36: extra_group
                        726     CALL_METHOD                     1
                        728     LOAD_ATTR                       38: gr_gid
                        730     CALL_METHOD                     1
                        732     POP_TOP                         
                        734     JUMP_ABSOLUTE                   331 (to 662)
                        738     LOAD_GLOBAL                     6: isinstance
                        740     LOAD_FAST                       36: extra_group
                        742     LOAD_GLOBAL                     7: int
                        744     CALL_FUNCTION                   2
                        746     POP_JUMP_IF_FALSE               382 (to 764)
                        750     LOAD_FAST                       35: gids
                        752     LOAD_METHOD                     41: append
                        754     LOAD_FAST                       36: extra_group
                        756     CALL_METHOD                     1
                        758     POP_TOP                         
                        760     JUMP_ABSOLUTE                   331 (to 662)
                        764     LOAD_GLOBAL                     8: TypeError
                        766     LOAD_CONST                      25: 'Items in extra_groups must be a string or integer, not {}'
                        768     LOAD_METHOD                     39: format
                        770     LOAD_GLOBAL                     40: type
                        772     LOAD_FAST                       36: extra_group
                        774     CALL_FUNCTION                   1
                        776     CALL_METHOD                     1
                        778     CALL_FUNCTION                   1
                        780     RAISE_VARARGS                   1
                        782     LOAD_FAST                       35: gids
                        784     GET_ITER                        
                        786     FOR_ITER                        15 (to 818)
                        788     STORE_FAST                      37: gid_check
                        790     LOAD_FAST                       37: gid_check
                        792     LOAD_CONST                      10: 0
                        794     COMPARE_OP                      0 (<)
                        796     POP_JUMP_IF_FALSE               407 (to 814)
                        800     LOAD_GLOBAL                     10: ValueError
                        802     LOAD_CONST                      20: 'Group ID cannot be negative, got '
                        804     LOAD_FAST                       37: gid_check
                        806     FORMAT_VALUE                    0 (FVC_NONE)
                        808     BUILD_STRING                    2
                        810     CALL_FUNCTION                   1
                        812     RAISE_VARARGS                   1
                        814     JUMP_ABSOLUTE                   393 (to 786)
                        818     LOAD_CONST                      1: None
                        820     STORE_FAST                      38: uid
                        822     LOAD_FAST                       18: user
                        824     LOAD_CONST                      1: None
                        826     IS_OP                           1 (is not)
                        828     POP_JUMP_IF_FALSE               483 (to 966)
                        832     LOAD_GLOBAL                     32: hasattr
                        834     LOAD_GLOBAL                     33: os
                        836     LOAD_CONST                      26: 'setreuid'
                        838     CALL_FUNCTION                   2
                        840     POP_JUMP_IF_TRUE                426 (to 852)
                        844     LOAD_GLOBAL                     10: ValueError
                        846     LOAD_CONST                      27: "The 'user' parameter is not supported on the current platform"
                        848     CALL_FUNCTION                   1
                        850     RAISE_VARARGS                   1
                        852     LOAD_GLOBAL                     6: isinstance
                        854     LOAD_FAST                       18: user
                        856     LOAD_GLOBAL                     34: str
                        858     CALL_FUNCTION                   2
                        860     POP_JUMP_IF_FALSE               458 (to 916)
                        864     SETUP_FINALLY                   6 (to 878)
                        866     LOAD_CONST                      10: 0
                        868     LOAD_CONST                      1: None
                        870     IMPORT_NAME                     42: pwd
                        872     STORE_FAST                      39: pwd
                        874     POP_BLOCK                       
                        876     JUMP_FORWARD                    12 (to 902)
                        878     DUP_TOP                         
                        880     LOAD_GLOBAL                     36: ImportError
                        882     JUMP_IF_NOT_EXC_MATCH           450 (to 900)
                        886     POP_TOP                         
                        888     POP_TOP                         
                        890     POP_TOP                         
                        892     LOAD_GLOBAL                     10: ValueError
                        894     LOAD_CONST                      28: 'The user parameter cannot be a string on systems without the pwd module'
                        896     CALL_FUNCTION                   1
                        898     RAISE_VARARGS                   1
                        900     RERAISE                         0
                        902     LOAD_FAST                       39: pwd
                        904     LOAD_METHOD                     43: getpwnam
                        906     LOAD_FAST                       18: user
                        908     CALL_METHOD                     1
                        910     LOAD_ATTR                       44: pw_uid
                        912     STORE_FAST                      38: uid
                        914     JUMP_FORWARD                    13 (to 942)
                        916     LOAD_GLOBAL                     6: isinstance
                        918     LOAD_FAST                       18: user
                        920     LOAD_GLOBAL                     7: int
                        922     CALL_FUNCTION                   2
                        924     POP_JUMP_IF_FALSE               467 (to 934)
                        928     LOAD_FAST                       18: user
                        930     STORE_FAST                      38: uid
                        932     JUMP_FORWARD                    4 (to 942)
                        934     LOAD_GLOBAL                     8: TypeError
                        936     LOAD_CONST                      29: 'User must be a string or an integer'
                        938     CALL_FUNCTION                   1
                        940     RAISE_VARARGS                   1
                        942     LOAD_FAST                       38: uid
                        944     LOAD_CONST                      10: 0
                        946     COMPARE_OP                      0 (<)
                        948     POP_JUMP_IF_FALSE               483 (to 966)
                        952     LOAD_GLOBAL                     10: ValueError
                        954     LOAD_CONST                      30: 'User ID cannot be negative, got '
                        956     LOAD_FAST                       38: uid
                        958     FORMAT_VALUE                    0 (FVC_NONE)
                        960     BUILD_STRING                    2
                        962     CALL_FUNCTION                   1
                        964     RAISE_VARARGS                   1
                        966     SETUP_FINALLY                   112 (to 1192)
                        968     LOAD_FAST                       27: p2cwrite
                        970     LOAD_CONST                      3: -1
                        972     COMPARE_OP                      3 (!=)
                        974     POP_JUMP_IF_FALSE               513 (to 1026)
                        978     LOAD_GLOBAL                     45: io
                        980     LOAD_METHOD                     46: open
                        982     LOAD_FAST                       27: p2cwrite
                        984     LOAD_CONST                      31: 'wb'
                        986     LOAD_FAST                       2: bufsize
                        988     CALL_METHOD                     3
                        990     LOAD_FAST                       0: self
                        992     STORE_ATTR                      15: stdin
                        994     LOAD_FAST                       0: self
                        996     LOAD_ATTR                       29: text_mode
                        998     POP_JUMP_IF_FALSE               513 (to 1026)
                        1002    LOAD_GLOBAL                     45: io
                        1004    LOAD_ATTR                       47: TextIOWrapper
                        1006    LOAD_FAST                       0: self
                        1008    LOAD_ATTR                       15: stdin
                        1010    LOAD_CONST                      8: True
                        1012    LOAD_FAST                       32: line_buffering
                        1014    LOAD_FAST                       21: encoding
                        1016    LOAD_FAST                       22: errors
                        1018    LOAD_CONST                      32: ('write_through', 'line_buffering', 'encoding', 'errors')
                        1020    CALL_FUNCTION_KW                5
                        1022    LOAD_FAST                       0: self
                        1024    STORE_ATTR                      15: stdin
                        1026    LOAD_FAST                       28: c2pread
                        1028    LOAD_CONST                      3: -1
                        1030    COMPARE_OP                      3 (!=)
                        1032    POP_JUMP_IF_FALSE               540 (to 1080)
                        1036    LOAD_GLOBAL                     45: io
                        1038    LOAD_METHOD                     46: open
                        1040    LOAD_FAST                       28: c2pread
                        1042    LOAD_CONST                      33: 'rb'
                        1044    LOAD_FAST                       2: bufsize
                        1046    CALL_METHOD                     3
                        1048    LOAD_FAST                       0: self
                        1050    STORE_ATTR                      16: stdout
                        1052    LOAD_FAST                       0: self
                        1054    LOAD_ATTR                       29: text_mode
                        1056    POP_JUMP_IF_FALSE               540 (to 1080)
                        1060    LOAD_GLOBAL                     45: io
                        1062    LOAD_ATTR                       47: TextIOWrapper
                        1064    LOAD_FAST                       0: self
                        1066    LOAD_ATTR                       16: stdout
                        1068    LOAD_FAST                       21: encoding
                        1070    LOAD_FAST                       22: errors
                        1072    LOAD_CONST                      34: ('encoding', 'errors')
                        1074    CALL_FUNCTION_KW                3
                        1076    LOAD_FAST                       0: self
                        1078    STORE_ATTR                      16: stdout
                        1080    LOAD_FAST                       30: errread
                        1082    LOAD_CONST                      3: -1
                        1084    COMPARE_OP                      3 (!=)
                        1086    POP_JUMP_IF_FALSE               567 (to 1134)
                        1090    LOAD_GLOBAL                     45: io
                        1092    LOAD_METHOD                     46: open
                        1094    LOAD_FAST                       30: errread
                        1096    LOAD_CONST                      33: 'rb'
                        1098    LOAD_FAST                       2: bufsize
                        1100    CALL_METHOD                     3
                        1102    LOAD_FAST                       0: self
                        1104    STORE_ATTR                      17: stderr
                        1106    LOAD_FAST                       0: self
                        1108    LOAD_ATTR                       29: text_mode
                        1110    POP_JUMP_IF_FALSE               567 (to 1134)
                        1114    LOAD_GLOBAL                     45: io
                        1116    LOAD_ATTR                       47: TextIOWrapper
                        1118    LOAD_FAST                       0: self
                        1120    LOAD_ATTR                       17: stderr
                        1122    LOAD_FAST                       21: encoding
                        1124    LOAD_FAST                       22: errors
                        1126    LOAD_CONST                      34: ('encoding', 'errors')
                        1128    CALL_FUNCTION_KW                3
                        1130    LOAD_FAST                       0: self
                        1132    STORE_ATTR                      17: stderr
                        1134    LOAD_FAST                       0: self
                        1136    LOAD_METHOD                     48: _execute_child
                        1138    LOAD_FAST                       1: args
                        1140    LOAD_FAST                       3: executable
                        1142    LOAD_FAST                       7: preexec_fn
                        1144    LOAD_FAST                       8: close_fds
                        1146    LOAD_FAST                       17: pass_fds
                        1148    LOAD_FAST                       10: cwd
                        1150    LOAD_FAST                       11: env
                        1152    LOAD_FAST                       13: startupinfo
                        1154    LOAD_FAST                       14: creationflags
                        1156    LOAD_FAST                       9: shell
                        1158    LOAD_FAST                       26: p2cread
                        1160    LOAD_FAST                       27: p2cwrite
                        1162    LOAD_FAST                       28: c2pread
                        1164    LOAD_FAST                       29: c2pwrite
                        1166    LOAD_FAST                       30: errread
                        1168    LOAD_FAST                       31: errwrite
                        1170    LOAD_FAST                       15: restore_signals
                        1172    LOAD_FAST                       33: gid
                        1174    LOAD_FAST                       35: gids
                        1176    LOAD_FAST                       38: uid
                        1178    LOAD_FAST                       24: umask
                        1180    LOAD_FAST                       16: start_new_session
                        1182    CALL_METHOD                     22
                        1184    POP_TOP                         
                        1186    POP_BLOCK                       
                        1188    LOAD_CONST                      1: None
                        1190    RETURN_VALUE                    
                        1192    POP_TOP                         
                        1194    POP_TOP                         
                        1196    POP_TOP                         
                        1198    LOAD_GLOBAL                     49: filter
                        1200    LOAD_CONST                      1: None
                        1202    LOAD_FAST                       0: self
                        1204    LOAD_ATTR                       15: stdin
                        1206    LOAD_FAST                       0: self
                        1208    LOAD_ATTR                       16: stdout
                        1210    LOAD_FAST                       0: self
                        1212    LOAD_ATTR                       17: stderr
                        1214    BUILD_TUPLE                     3
                        1216    CALL_FUNCTION                   2
                        1218    GET_ITER                        
                        1220    FOR_ITER                        20 (to 1262)
                        1222    STORE_FAST                      40: f
                        1224    SETUP_FINALLY                   7 (to 1240)
                        1226    LOAD_FAST                       40: f
                        1228    LOAD_METHOD                     50: close
                        1230    CALL_METHOD                     0
                        1232    POP_TOP                         
                        1234    POP_BLOCK                       
                        1236    JUMP_ABSOLUTE                   610 (to 1220)
                        1240    DUP_TOP                         
                        1242    LOAD_GLOBAL                     51: OSError
                        1244    JUMP_IF_NOT_EXC_MATCH           630 (to 1260)
                        1248    POP_TOP                         
                        1250    POP_TOP                         
                        1252    POP_TOP                         
                        1254    POP_EXCEPT                      
                        1256    JUMP_ABSOLUTE                   610 (to 1220)
                        1260    RERAISE                         0
                        1262    LOAD_FAST                       0: self
                        1264    LOAD_ATTR                       31: _closed_child_pipe_fds
                        1266    POP_JUMP_IF_TRUE                717 (to 1434)
                        1270    BUILD_LIST                      0
                        1272    STORE_FAST                      41: to_close
                        1274    LOAD_FAST                       4: stdin
                        1276    LOAD_GLOBAL                     52: PIPE
                        1278    COMPARE_OP                      2 (==)
                        1280    POP_JUMP_IF_FALSE               647 (to 1294)
                        1284    LOAD_FAST                       41: to_close
                        1286    LOAD_METHOD                     41: append
                        1288    LOAD_FAST                       26: p2cread
                        1290    CALL_METHOD                     1
                        1292    POP_TOP                         
                        1294    LOAD_FAST                       5: stdout
                        1296    LOAD_GLOBAL                     52: PIPE
                        1298    COMPARE_OP                      2 (==)
                        1300    POP_JUMP_IF_FALSE               657 (to 1314)
                        1304    LOAD_FAST                       41: to_close
                        1306    LOAD_METHOD                     41: append
                        1308    LOAD_FAST                       29: c2pwrite
                        1310    CALL_METHOD                     1
                        1312    POP_TOP                         
                        1314    LOAD_FAST                       6: stderr
                        1316    LOAD_GLOBAL                     52: PIPE
                        1318    COMPARE_OP                      2 (==)
                        1320    POP_JUMP_IF_FALSE               667 (to 1334)
                        1324    LOAD_FAST                       41: to_close
                        1326    LOAD_METHOD                     41: append
                        1328    LOAD_FAST                       31: errwrite
                        1330    CALL_METHOD                     1
                        1332    POP_TOP                         
                        1334    LOAD_GLOBAL                     32: hasattr
                        1336    LOAD_FAST                       0: self
                        1338    LOAD_CONST                      35: '_devnull'
                        1340    CALL_FUNCTION                   2
                        1342    POP_JUMP_IF_FALSE               679 (to 1358)
                        1346    LOAD_FAST                       41: to_close
                        1348    LOAD_METHOD                     41: append
                        1350    LOAD_FAST                       0: self
                        1352    LOAD_ATTR                       53: _devnull
                        1354    CALL_METHOD                     1
                        1356    POP_TOP                         
                        1358    LOAD_FAST                       41: to_close
                        1360    GET_ITER                        
                        1362    FOR_ITER                        35 (to 1434)
                        1364    STORE_FAST                      42: fd
                        1366    SETUP_FINALLY                   22 (to 1412)
                        1368    LOAD_GLOBAL                     9: _mswindows
                        1370    POP_JUMP_IF_FALSE               698 (to 1396)
                        1374    LOAD_GLOBAL                     6: isinstance
                        1376    LOAD_FAST                       42: fd
                        1378    LOAD_GLOBAL                     54: Handle
                        1380    CALL_FUNCTION                   2
                        1382    POP_JUMP_IF_FALSE               698 (to 1396)
                        1386    LOAD_FAST                       42: fd
                        1388    LOAD_METHOD                     55: Close
                        1390    CALL_METHOD                     0
                        1392    POP_TOP                         
                        1394    JUMP_FORWARD                    5 (to 1406)
                        1396    LOAD_GLOBAL                     33: os
                        1398    LOAD_METHOD                     50: close
                        1400    LOAD_FAST                       42: fd
                        1402    CALL_METHOD                     1
                        1404    POP_TOP                         
                        1406    POP_BLOCK                       
                        1408    JUMP_ABSOLUTE                   681 (to 1362)
                        1412    DUP_TOP                         
                        1414    LOAD_GLOBAL                     51: OSError
                        1416    JUMP_IF_NOT_EXC_MATCH           716 (to 1432)
                        1420    POP_TOP                         
                        1422    POP_TOP                         
                        1424    POP_TOP                         
                        1426    POP_EXCEPT                      
                        1428    JUMP_ABSOLUTE                   681 (to 1362)
                        1432    RERAISE                         0
                        1434    RAISE_VARARGS                   0
                'Popen.__init__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__name__'
                        'returncode'
                        'args'
                        'len'
                    [Var Names]
                        'self'
                        'obj_repr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<'
                        ': returncode: '
                        ' args: '
                        '>'
                        80
                        76
                        '...>'
                    [Disassembly]
                        0       LOAD_CONST                      1: '<'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __name__
                        8       FORMAT_VALUE                    0 (FVC_NONE)
                        10      LOAD_CONST                      2: ': returncode: '
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: returncode
                        16      FORMAT_VALUE                    0 (FVC_NONE)
                        18      LOAD_CONST                      3: ' args: '
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: args
                        24      FORMAT_VALUE                    2 (FVC_REPR)
                        26      LOAD_CONST                      4: '>'
                        28      BUILD_STRING                    7
                        30      STORE_FAST                      1: obj_repr
                        32      LOAD_GLOBAL                     4: len
                        34      LOAD_FAST                       1: obj_repr
                        36      CALL_FUNCTION                   1
                        38      LOAD_CONST                      5: 80
                        40      COMPARE_OP                      4 (>)
                        42      POP_JUMP_IF_FALSE               30 (to 60)
                        44      LOAD_FAST                       1: obj_repr
                        46      LOAD_CONST                      0: None
                        48      LOAD_CONST                      6: 76
                        50      BUILD_SLICE                     2
                        52      BINARY_SUBSCR                   
                        54      LOAD_CONST                      7: '...>'
                        56      BINARY_ADD                      
                        58      STORE_FAST                      1: obj_repr
                        60      LOAD_FAST                       1: obj_repr
                        62      RETURN_VALUE                    
                'Popen.__repr__'
                [Code]
                    File Name: subprocess.py
                    Object Name: universal_newlines
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'text_mode'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: text_mode
                        4       RETURN_VALUE                    
                'Popen.universal_newlines'
                [Code]
                    File Name: subprocess.py
                    Object Name: universal_newlines
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'bool'
                        'text_mode'
                    [Var Names]
                        'self'
                        'universal_newlines'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: bool
                        2       LOAD_FAST                       1: universal_newlines
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       0: self
                        8       STORE_ATTR                      1: text_mode
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _translate_newlines
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'decode'
                        'replace'
                    [Var Names]
                        'self'
                        'data'
                        'encoding'
                        'errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '\r\n'
                        '\n'
                        '\r'
                    [Disassembly]
                        0       LOAD_FAST                       1: data
                        2       LOAD_METHOD                     0: decode
                        4       LOAD_FAST                       2: encoding
                        6       LOAD_FAST                       3: errors
                        8       CALL_METHOD                     2
                        10      STORE_FAST                      1: data
                        12      LOAD_FAST                       1: data
                        14      LOAD_METHOD                     1: replace
                        16      LOAD_CONST                      1: '\r\n'
                        18      LOAD_CONST                      2: '\n'
                        20      CALL_METHOD                     2
                        22      LOAD_METHOD                     1: replace
                        24      LOAD_CONST                      3: '\r'
                        26      LOAD_CONST                      2: '\n'
                        28      CALL_METHOD                     2
                        30      RETURN_VALUE                    
                'Popen._translate_newlines'
                [Code]
                    File Name: subprocess.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       RETURN_VALUE                    
                'Popen.__enter__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 14
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stdout'
                        'close'
                        'stderr'
                        'stdin'
                        'KeyboardInterrupt'
                        '_sigint_wait_secs'
                        '_wait'
                        'TimeoutExpired'
                        'wait'
                    [Var Names]
                        'self'
                        'exc_type'
                        'value'
                        'traceback'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        (
                            'timeout'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: stdout
                        4       POP_JUMP_IF_FALSE               8 (to 16)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: stdout
                        10      LOAD_METHOD                     1: close
                        12      CALL_METHOD                     0
                        14      POP_TOP                         
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: stderr
                        20      POP_JUMP_IF_FALSE               16 (to 32)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       2: stderr
                        26      LOAD_METHOD                     1: close
                        28      CALL_METHOD                     0
                        30      POP_TOP                         
                        32      SETUP_FINALLY                   48 (to 130)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       3: stdin
                        38      POP_JUMP_IF_FALSE               25 (to 50)
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       3: stdin
                        44      LOAD_METHOD                     1: close
                        46      CALL_METHOD                     0
                        48      POP_TOP                         
                        50      POP_BLOCK                       
                        52      LOAD_FAST                       1: exc_type
                        54      LOAD_GLOBAL                     4: KeyboardInterrupt
                        56      COMPARE_OP                      2 (==)
                        58      POP_JUMP_IF_FALSE               59 (to 118)
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       5: _sigint_wait_secs
                        64      LOAD_CONST                      1: 0
                        66      COMPARE_OP                      4 (>)
                        68      POP_JUMP_IF_FALSE               54 (to 108)
                        70      SETUP_FINALLY                   9 (to 90)
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       6: _wait
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       5: _sigint_wait_secs
                        80      LOAD_CONST                      2: ('timeout',)
                        82      CALL_FUNCTION_KW                1
                        84      POP_TOP                         
                        86      POP_BLOCK                       
                        88      JUMP_FORWARD                    9 (to 108)
                        90      DUP_TOP                         
                        92      LOAD_GLOBAL                     7: TimeoutExpired
                        94      JUMP_IF_NOT_EXC_MATCH           53 (to 106)
                        96      POP_TOP                         
                        98      POP_TOP                         
                        100     POP_TOP                         
                        102     POP_EXCEPT                      
                        104     JUMP_FORWARD                    1 (to 108)
                        106     RERAISE                         0
                        108     LOAD_CONST                      1: 0
                        110     LOAD_FAST                       0: self
                        112     STORE_ATTR                      5: _sigint_wait_secs
                        114     LOAD_CONST                      0: None
                        116     RETURN_VALUE                    
                        118     LOAD_FAST                       0: self
                        120     LOAD_METHOD                     8: wait
                        122     CALL_METHOD                     0
                        124     POP_TOP                         
                        126     LOAD_CONST                      0: None
                        128     RETURN_VALUE                    
                        130     LOAD_FAST                       1: exc_type
                        132     LOAD_GLOBAL                     4: KeyboardInterrupt
                        134     COMPARE_OP                      2 (==)
                        136     POP_JUMP_IF_FALSE               102 (to 204)
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       5: _sigint_wait_secs
                        142     LOAD_CONST                      1: 0
                        144     COMPARE_OP                      4 (>)
                        146     POP_JUMP_IF_FALSE               93 (to 186)
                        148     SETUP_FINALLY                   9 (to 168)
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       6: _wait
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       5: _sigint_wait_secs
                        158     LOAD_CONST                      2: ('timeout',)
                        160     CALL_FUNCTION_KW                1
                        162     POP_TOP                         
                        164     POP_BLOCK                       
                        166     JUMP_FORWARD                    9 (to 186)
                        168     DUP_TOP                         
                        170     LOAD_GLOBAL                     7: TimeoutExpired
                        172     JUMP_IF_NOT_EXC_MATCH           92 (to 184)
                        174     POP_TOP                         
                        176     POP_TOP                         
                        178     POP_TOP                         
                        180     POP_EXCEPT                      
                        182     JUMP_FORWARD                    1 (to 186)
                        184     RERAISE                         0
                        186     LOAD_CONST                      1: 0
                        188     LOAD_FAST                       0: self
                        190     STORE_ATTR                      5: _sigint_wait_secs
                        192     POP_TOP                         
                        194     POP_TOP                         
                        196     POP_TOP                         
                        198     POP_EXCEPT                      
                        200     LOAD_CONST                      0: None
                        202     RETURN_VALUE                    
                        204     LOAD_FAST                       0: self
                        206     LOAD_METHOD                     8: wait
                        208     CALL_METHOD                     0
                        210     POP_TOP                         
                        212     RERAISE                         0
                'Popen.__exit__'
                [Code]
                    File Name: subprocess.py
                    Object Name: __del__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_child_created'
                        'returncode'
                        'pid'
                        'ResourceWarning'
                        '_internal_poll'
                        '_active'
                        'append'
                    [Var Names]
                        'self'
                        '_maxsize'
                        '_warn'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'subprocess %s is still running'
                        (
                            'source'
                        )
                        (
                            '_deadstate'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _child_created
                        4       POP_JUMP_IF_TRUE                5 (to 10)
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: returncode
                        14      LOAD_CONST                      0: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               20 (to 40)
                        20      LOAD_FAST                       2: _warn
                        22      LOAD_CONST                      1: 'subprocess %s is still running'
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       2: pid
                        28      BINARY_MODULO                   
                        30      LOAD_GLOBAL                     3: ResourceWarning
                        32      LOAD_FAST                       0: self
                        34      LOAD_CONST                      2: ('source',)
                        36      CALL_FUNCTION_KW                3
                        38      POP_TOP                         
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       4: _internal_poll
                        44      LOAD_FAST                       1: _maxsize
                        46      LOAD_CONST                      3: ('_deadstate',)
                        48      CALL_FUNCTION_KW                1
                        50      POP_TOP                         
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       1: returncode
                        56      LOAD_CONST                      0: None
                        58      IS_OP                           0 (is)
                        60      POP_JUMP_IF_FALSE               42 (to 84)
                        62      LOAD_GLOBAL                     5: _active
                        64      LOAD_CONST                      0: None
                        66      IS_OP                           1 (is not)
                        68      POP_JUMP_IF_FALSE               44 (to 88)
                        70      LOAD_GLOBAL                     5: _active
                        72      LOAD_METHOD                     6: append
                        74      LOAD_FAST                       0: self
                        76      CALL_METHOD                     1
                        78      POP_TOP                         
                        80      LOAD_CONST                      0: None
                        82      RETURN_VALUE                    
                        84      LOAD_CONST                      0: None
                        86      RETURN_VALUE                    
                        88      LOAD_CONST                      0: None
                        90      RETURN_VALUE                    
                'Popen.__del__'
                [Code]
                    File Name: subprocess.py
                    Object Name: _get_devnull
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'os'
                        'open'
                        'devnull'
                        'O_RDWR'
                        '_devnull'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '_devnull'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_FAST                       0: self
                        4       LOAD_CONST                      1: '_devnull'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                14 (to 28)
                        10      LOAD_GLOBAL                     1: os
                        12      LOAD_METHOD                     2: open
                        14      LOAD_GLOBAL                     1: os
                        16      LOAD_ATTR                       3: devnull
                        18      LOAD_GLOBAL                     1: os
                        20      LOAD_ATTR                       4: O_RDWR
                        22      CALL_METHOD                     2
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      5: _devnull
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       5: _devnull
                        32      RETURN_VALUE                    
                'Popen._get_devnull'
                [Code]
                    File Name: subprocess.py
                    Object Name: _stdin_write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stdin'
                        'write'
                        'BrokenPipeError'
                        'OSError'
                        'errno'
                        'EINVAL'
                        'close'
                    [Var Names]
                        'self'
                        'input'
                        'exc'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: input
                        2       POP_JUMP_IF_FALSE               45 (to 90)
                        4       SETUP_FINALLY                   8 (to 22)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: stdin
                        10      LOAD_METHOD                     1: write
                        12      LOAD_FAST                       1: input
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      POP_BLOCK                       
                        20      JUMP_FORWARD                    34 (to 90)
                        22      DUP_TOP                         
                        24      LOAD_GLOBAL                     2: BrokenPipeError
                        26      JUMP_IF_NOT_EXC_MATCH           19 (to 38)
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      POP_EXCEPT                      
                        36      JUMP_FORWARD                    26 (to 90)
                        38      DUP_TOP                         
                        40      LOAD_GLOBAL                     3: OSError
                        42      JUMP_IF_NOT_EXC_MATCH           44 (to 88)
                        44      POP_TOP                         
                        46      STORE_FAST                      2: exc
                        48      POP_TOP                         
                        50      SETUP_FINALLY                   14 (to 80)
                        52      LOAD_FAST                       2: exc
                        54      LOAD_ATTR                       4: errno
                        56      LOAD_GLOBAL                     4: errno
                        58      LOAD_ATTR                       5: EINVAL
                        60      COMPARE_OP                      2 (==)
                        62      POP_JUMP_IF_FALSE               33 (to 66)
                        64      JUMP_FORWARD                    1 (to 68)
                        66      RAISE_VARARGS                   0
                        68      POP_BLOCK                       
                        70      POP_EXCEPT                      
                        72      LOAD_CONST                      0: None
                        74      STORE_FAST                      2: exc
                        76      DELETE_FAST                     2: exc
                        78      JUMP_FORWARD                    5 (to 90)
                        80      LOAD_CONST                      0: None
                        82      STORE_FAST                      2: exc
                        84      DELETE_FAST                     2: exc
                        86      RERAISE                         1
                        88      RERAISE                         0
                        90      SETUP_FINALLY                   8 (to 108)
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       0: stdin
                        96      LOAD_METHOD                     6: close
                        98      CALL_METHOD                     0
                        100     POP_TOP                         
                        102     POP_BLOCK                       
                        104     LOAD_CONST                      0: None
                        106     RETURN_VALUE                    
                        108     DUP_TOP                         
                        110     LOAD_GLOBAL                     2: BrokenPipeError
                        112     JUMP_IF_NOT_EXC_MATCH           63 (to 126)
                        114     POP_TOP                         
                        116     POP_TOP                         
                        118     POP_TOP                         
                        120     POP_EXCEPT                      
                        122     LOAD_CONST                      0: None
                        124     RETURN_VALUE                    
                        126     DUP_TOP                         
                        128     LOAD_GLOBAL                     3: OSError
                        130     JUMP_IF_NOT_EXC_MATCH           89 (to 178)
                        132     POP_TOP                         
                        134     STORE_FAST                      2: exc
                        136     POP_TOP                         
                        138     SETUP_FINALLY                   15 (to 170)
                        140     LOAD_FAST                       2: exc
                        142     LOAD_ATTR                       4: errno
                        144     LOAD_GLOBAL                     4: errno
                        146     LOAD_ATTR                       5: EINVAL
                        148     COMPARE_OP                      2 (==)
                        150     POP_JUMP_IF_FALSE               77 (to 154)
                        152     JUMP_FORWARD                    1 (to 156)
                        154     RAISE_VARARGS                   0
                        156     POP_BLOCK                       
                        158     POP_EXCEPT                      
                        160     LOAD_CONST                      0: None
                        162     STORE_FAST                      2: exc
                        164     DELETE_FAST                     2: exc
                        166     LOAD_CONST                      0: None
                        168     RETURN_VALUE                    
                        170     LOAD_CONST                      0: None
                        172     STORE_FAST                      2: exc
                        174     DELETE_FAST                     2: exc
                        176     RERAISE                         1
                        178     RERAISE                         0
                'Popen._stdin_write'
                [Code]
                    File Name: subprocess.py
                    Object Name: communicate
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_communication_started'
                        'ValueError'
                        'stdin'
                        'stdout'
                        'stderr'
                        'count'
                        '_stdin_write'
                        'read'
                        'close'
                        'wait'
                        '_time'
                        '_communicate'
                        'KeyboardInterrupt'
                        'min'
                        '_sigint_wait_secs'
                        '_remaining_time'
                        '_wait'
                        'TimeoutExpired'
                    [Var Names]
                        'self'
                        'input'
                        'timeout'
                        'stdout'
                        'stderr'
                        'endtime'
                        'sigint_timeout'
                        'sts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Interact with process: Send data to stdin and close it.\n        Read data from stdout and stderr, until end-of-file is\n        reached.  Wait for process to terminate.\n\n        The optional "input" argument should be data to be sent to the\n        child process, or None, if no data should be sent to the child.\n        communicate() returns a tuple (stdout, stderr).\n\n        By default, all communication is in bytes, and therefore any\n        "input" should be bytes, and the (stdout, stderr) will be bytes.\n        If in text mode (indicated by self.text_mode), any "input" should\n        be a string, and (stdout, stderr) will be strings decoded\n        according to locale encoding, or by "encoding" if set. Text mode\n        is triggered by setting any of text, encoding, errors or\n        universal_newlines.\n        '
                        'Cannot send input after starting communication'
                        None
                        2
                        0
                        (
                            'timeout'
                        )
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _communication_started
                        4       POP_JUMP_IF_FALSE               9 (to 18)
                        6       LOAD_FAST                       1: input
                        8       POP_JUMP_IF_FALSE               9 (to 18)
                        10      LOAD_GLOBAL                     1: ValueError
                        12      LOAD_CONST                      1: 'Cannot send input after starting communication'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       2: timeout
                        20      LOAD_CONST                      2: None
                        22      IS_OP                           0 (is)
                        24      POP_JUMP_IF_FALSE               77 (to 154)
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       0: _communication_started
                        30      POP_JUMP_IF_TRUE                77 (to 154)
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       2: stdin
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       3: stdout
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       4: stderr
                        44      BUILD_LIST                      3
                        46      LOAD_METHOD                     5: count
                        48      LOAD_CONST                      2: None
                        50      CALL_METHOD                     1
                        52      LOAD_CONST                      3: 2
                        54      COMPARE_OP                      5 (>=)
                        56      POP_JUMP_IF_FALSE               77 (to 154)
                        58      LOAD_CONST                      2: None
                        60      STORE_FAST                      3: stdout
                        62      LOAD_CONST                      2: None
                        64      STORE_FAST                      4: stderr
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       2: stdin
                        70      POP_JUMP_IF_FALSE               42 (to 84)
                        72      LOAD_FAST                       0: self
                        74      LOAD_METHOD                     6: _stdin_write
                        76      LOAD_FAST                       1: input
                        78      CALL_METHOD                     1
                        80      POP_TOP                         
                        82      JUMP_FORWARD                    27 (to 138)
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       3: stdout
                        88      POP_JUMP_IF_FALSE               56 (to 112)
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       3: stdout
                        94      LOAD_METHOD                     7: read
                        96      CALL_METHOD                     0
                        98      STORE_FAST                      3: stdout
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       3: stdout
                        104     LOAD_METHOD                     8: close
                        106     CALL_METHOD                     0
                        108     POP_TOP                         
                        110     JUMP_FORWARD                    13 (to 138)
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       4: stderr
                        116     POP_JUMP_IF_FALSE               69 (to 138)
                        118     LOAD_FAST                       0: self
                        120     LOAD_ATTR                       4: stderr
                        122     LOAD_METHOD                     7: read
                        124     CALL_METHOD                     0
                        126     STORE_FAST                      4: stderr
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       4: stderr
                        132     LOAD_METHOD                     8: close
                        134     CALL_METHOD                     0
                        136     POP_TOP                         
                        138     LOAD_FAST                       0: self
                        140     LOAD_METHOD                     9: wait
                        142     CALL_METHOD                     0
                        144     POP_TOP                         
                        146     LOAD_FAST                       3: stdout
                        148     LOAD_FAST                       4: stderr
                        150     BUILD_TUPLE                     2
                        152     RETURN_VALUE                    
                        154     LOAD_FAST                       2: timeout
                        156     LOAD_CONST                      2: None
                        158     IS_OP                           1 (is not)
                        160     POP_JUMP_IF_FALSE               87 (to 174)
                        162     LOAD_GLOBAL                     10: _time
                        164     CALL_FUNCTION                   0
                        166     LOAD_FAST                       2: timeout
                        168     BINARY_ADD                      
                        170     STORE_FAST                      5: endtime
                        172     JUMP_FORWARD                    2 (to 178)
                        174     LOAD_CONST                      2: None
                        176     STORE_FAST                      5: endtime
                        178     SETUP_FINALLY                   62 (to 304)
                        180     SETUP_FINALLY                   11 (to 204)
                        182     LOAD_FAST                       0: self
                        184     LOAD_METHOD                     11: _communicate
                        186     LOAD_FAST                       1: input
                        188     LOAD_FAST                       5: endtime
                        190     LOAD_FAST                       2: timeout
                        192     CALL_METHOD                     3
                        194     UNPACK_SEQUENCE                 2
                        196     STORE_FAST                      3: stdout
                        198     STORE_FAST                      4: stderr
                        200     POP_BLOCK                       
                        202     JUMP_FORWARD                    45 (to 294)
                        204     DUP_TOP                         
                        206     LOAD_GLOBAL                     12: KeyboardInterrupt
                        208     JUMP_IF_NOT_EXC_MATCH           146 (to 292)
                        210     POP_TOP                         
                        212     POP_TOP                         
                        214     POP_TOP                         
                        216     LOAD_FAST                       2: timeout
                        218     LOAD_CONST                      2: None
                        220     IS_OP                           1 (is not)
                        222     POP_JUMP_IF_FALSE               122 (to 244)
                        224     LOAD_GLOBAL                     13: min
                        226     LOAD_FAST                       0: self
                        228     LOAD_ATTR                       14: _sigint_wait_secs
                        230     LOAD_FAST                       0: self
                        232     LOAD_METHOD                     15: _remaining_time
                        234     LOAD_FAST                       5: endtime
                        236     CALL_METHOD                     1
                        238     CALL_FUNCTION                   2
                        240     STORE_FAST                      6: sigint_timeout
                        242     JUMP_FORWARD                    3 (to 250)
                        244     LOAD_FAST                       0: self
                        246     LOAD_ATTR                       14: _sigint_wait_secs
                        248     STORE_FAST                      6: sigint_timeout
                        250     LOAD_CONST                      4: 0
                        252     LOAD_FAST                       0: self
                        254     STORE_ATTR                      14: _sigint_wait_secs
                        256     SETUP_FINALLY                   8 (to 274)
                        258     LOAD_FAST                       0: self
                        260     LOAD_ATTR                       16: _wait
                        262     LOAD_FAST                       6: sigint_timeout
                        264     LOAD_CONST                      5: ('timeout',)
                        266     CALL_FUNCTION_KW                1
                        268     POP_TOP                         
                        270     POP_BLOCK                       
                        272     RAISE_VARARGS                   0
                        274     DUP_TOP                         
                        276     LOAD_GLOBAL                     17: TimeoutExpired
                        278     JUMP_IF_NOT_EXC_MATCH           145 (to 290)
                        280     POP_TOP                         
                        282     POP_TOP                         
                        284     POP_TOP                         
                        286     POP_EXCEPT                      
                        288     RAISE_VARARGS                   0
                        290     RERAISE                         0
                        292     RERAISE                         0
                        294     POP_BLOCK                       
                        296     LOAD_CONST                      6: True
                        298     LOAD_FAST                       0: self
                        300     STORE_ATTR                      0: _communication_started
                        302     JUMP_FORWARD                    4 (to 312)
                        304     LOAD_CONST                      6: True
                        306     LOAD_FAST                       0: self
                        308     STORE_ATTR                      0: _communication_started
                        310     RERAISE                         0
                        312     LOAD_FAST                       0: self
                        314     LOAD_ATTR                       9: wait
                        316     LOAD_FAST                       0: self
                        318     LOAD_METHOD                     15: _remaining_time
                        320     LOAD_FAST                       5: endtime
                        322     CALL_METHOD                     1
                        324     LOAD_CONST                      5: ('timeout',)
                        326     CALL_FUNCTION_KW                1
                        328     STORE_FAST                      7: sts
                        330     LOAD_FAST                       3: stdout
                        332     LOAD_FAST                       4: stderr
                        334     BUILD_TUPLE                     2
                        336     RETURN_VALUE                    
                'Popen.communicate'
                [Code]
                    File Name: subprocess.py
                    Object Name: poll
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_internal_poll'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Check if child process has terminated. Set and return returncode\n        attribute.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _internal_poll
                        4       CALL_METHOD                     0
                        6       RETURN_VALUE                    
                'Popen.poll'
                [Code]
                    File Name: subprocess.py
                    Object Name: _remaining_time
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                    [Var Names]
                        'self'
                        'endtime'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convenience for _communicate when computing timeouts.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: endtime
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               6 (to 12)
                        8       LOAD_CONST                      1: None
                        10      RETURN_VALUE                    
                        12      LOAD_FAST                       1: endtime
                        14      LOAD_GLOBAL                     0: _time
                        16      CALL_FUNCTION                   0
                        18      BINARY_SUBTRACT                 
                        20      RETURN_VALUE                    
                'Popen._remaining_time'
                [Code]
                    File Name: subprocess.py
                    Object Name: _check_timeout
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        'TimeoutExpired'
                        'args'
                        'join'
                    [Var Names]
                        'self'
                        'endtime'
                        'orig_timeout'
                        'stdout_seq'
                        'stderr_seq'
                        'skip_check_and_raise'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Convenience for checking if a timeout has expired.'
                        None
                        b''
                        (
                            'output'
                            'stderr'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       1: endtime
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               6 (to 12)
                        8       LOAD_CONST                      1: None
                        10      RETURN_VALUE                    
                        12      LOAD_FAST                       5: skip_check_and_raise
                        14      POP_JUMP_IF_TRUE                13 (to 26)
                        16      LOAD_GLOBAL                     0: _time
                        18      CALL_FUNCTION                   0
                        20      LOAD_FAST                       1: endtime
                        22      COMPARE_OP                      4 (>)
                        24      POP_JUMP_IF_FALSE               38 (to 76)
                        26      LOAD_GLOBAL                     1: TimeoutExpired
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       2: args
                        32      LOAD_FAST                       2: orig_timeout
                        34      LOAD_FAST                       3: stdout_seq
                        36      POP_JUMP_IF_FALSE               24 (to 48)
                        38      LOAD_CONST                      2: b''
                        40      LOAD_METHOD                     3: join
                        42      LOAD_FAST                       3: stdout_seq
                        44      CALL_METHOD                     1
                        46      JUMP_FORWARD                    1 (to 50)
                        48      LOAD_CONST                      1: None
                        50      LOAD_FAST                       4: stderr_seq
                        52      POP_JUMP_IF_FALSE               34 (to 68)
                        54      LOAD_CONST                      2: b''
                        56      LOAD_METHOD                     3: join
                        58      LOAD_FAST                       4: stderr_seq
                        60      CALL_METHOD                     1
                        62      LOAD_CONST                      3: ('output', 'stderr')
                        64      CALL_FUNCTION_KW                4
                        66      RAISE_VARARGS                   1
                        68      LOAD_CONST                      1: None
                        70      LOAD_CONST                      3: ('output', 'stderr')
                        72      CALL_FUNCTION_KW                4
                        74      RAISE_VARARGS                   1
                        76      LOAD_CONST                      1: None
                        78      RETURN_VALUE                    
                'Popen._check_timeout'
                [Code]
                    File Name: subprocess.py
                    Object Name: wait
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_time'
                        '_wait'
                        'KeyboardInterrupt'
                        'min'
                        '_sigint_wait_secs'
                        '_remaining_time'
                        'TimeoutExpired'
                    [Var Names]
                        'self'
                        'timeout'
                        'endtime'
                        'sigint_timeout'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Wait for child process to terminate; returns self.returncode.'
                        None
                        (
                            'timeout'
                        )
                        0
                    [Disassembly]
                        0       LOAD_FAST                       1: timeout
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_FALSE               9 (to 18)
                        8       LOAD_GLOBAL                     0: _time
                        10      CALL_FUNCTION                   0
                        12      LOAD_FAST                       1: timeout
                        14      BINARY_ADD                      
                        16      STORE_FAST                      2: endtime
                        18      SETUP_FINALLY                   7 (to 34)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: _wait
                        24      LOAD_FAST                       1: timeout
                        26      LOAD_CONST                      2: ('timeout',)
                        28      CALL_FUNCTION_KW                1
                        30      POP_BLOCK                       
                        32      RETURN_VALUE                    
                        34      DUP_TOP                         
                        36      LOAD_GLOBAL                     2: KeyboardInterrupt
                        38      JUMP_IF_NOT_EXC_MATCH           61 (to 122)
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      LOAD_FAST                       1: timeout
                        48      LOAD_CONST                      1: None
                        50      IS_OP                           1 (is not)
                        52      POP_JUMP_IF_FALSE               37 (to 74)
                        54      LOAD_GLOBAL                     3: min
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       4: _sigint_wait_secs
                        60      LOAD_FAST                       0: self
                        62      LOAD_METHOD                     5: _remaining_time
                        64      LOAD_FAST                       2: endtime
                        66      CALL_METHOD                     1
                        68      CALL_FUNCTION                   2
                        70      STORE_FAST                      3: sigint_timeout
                        72      JUMP_FORWARD                    3 (to 80)
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       4: _sigint_wait_secs
                        78      STORE_FAST                      3: sigint_timeout
                        80      LOAD_CONST                      3: 0
                        82      LOAD_FAST                       0: self
                        84      STORE_ATTR                      4: _sigint_wait_secs
                        86      SETUP_FINALLY                   8 (to 104)
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       1: _wait
                        92      LOAD_FAST                       3: sigint_timeout
                        94      LOAD_CONST                      2: ('timeout',)
                        96      CALL_FUNCTION_KW                1
                        98      POP_TOP                         
                        100     POP_BLOCK                       
                        102     RAISE_VARARGS                   0
                        104     DUP_TOP                         
                        106     LOAD_GLOBAL                     6: TimeoutExpired
                        108     JUMP_IF_NOT_EXC_MATCH           60 (to 120)
                        110     POP_TOP                         
                        112     POP_TOP                         
                        114     POP_TOP                         
                        116     POP_EXCEPT                      
                        118     RAISE_VARARGS                   0
                        120     RERAISE                         0
                        122     RERAISE                         0
                'Popen.wait'
                [Code]
                    File Name: subprocess.py
                    Object Name: _close_pipe_fds
                    Arg Count: 7
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'getattr'
                        'contextlib'
                        'ExitStack'
                        '_mswindows'
                        'callback'
                        'Close'
                        'os'
                        'close'
                        '_closed_child_pipe_fds'
                    [Var Names]
                        'self'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        'devnull_fd'
                        'stack'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '_devnull'
                        -1
                        True
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: getattr
                        2       LOAD_FAST                       0: self
                        4       LOAD_CONST                      1: '_devnull'
                        6       LOAD_CONST                      0: None
                        8       CALL_FUNCTION                   3
                        10      STORE_FAST                      7: devnull_fd
                        12      LOAD_GLOBAL                     1: contextlib
                        14      LOAD_METHOD                     2: ExitStack
                        16      CALL_METHOD                     0
                        18      SETUP_WITH                      109 (to 238)
                        20      STORE_FAST                      8: stack
                        22      LOAD_GLOBAL                     3: _mswindows
                        24      POP_JUMP_IF_FALSE               44 (to 88)
                        26      LOAD_FAST                       1: p2cread
                        28      LOAD_CONST                      2: -1
                        30      COMPARE_OP                      3 (!=)
                        32      POP_JUMP_IF_FALSE               23 (to 46)
                        34      LOAD_FAST                       8: stack
                        36      LOAD_METHOD                     4: callback
                        38      LOAD_FAST                       1: p2cread
                        40      LOAD_ATTR                       5: Close
                        42      CALL_METHOD                     1
                        44      POP_TOP                         
                        46      LOAD_FAST                       4: c2pwrite
                        48      LOAD_CONST                      2: -1
                        50      COMPARE_OP                      3 (!=)
                        52      POP_JUMP_IF_FALSE               33 (to 66)
                        54      LOAD_FAST                       8: stack
                        56      LOAD_METHOD                     4: callback
                        58      LOAD_FAST                       4: c2pwrite
                        60      LOAD_ATTR                       5: Close
                        62      CALL_METHOD                     1
                        64      POP_TOP                         
                        66      LOAD_FAST                       6: errwrite
                        68      LOAD_CONST                      2: -1
                        70      COMPARE_OP                      3 (!=)
                        72      POP_JUMP_IF_FALSE               43 (to 86)
                        74      LOAD_FAST                       8: stack
                        76      LOAD_METHOD                     4: callback
                        78      LOAD_FAST                       6: errwrite
                        80      LOAD_ATTR                       5: Close
                        82      CALL_METHOD                     1
                        84      POP_TOP                         
                        86      JUMP_FORWARD                    57 (to 202)
                        88      LOAD_FAST                       1: p2cread
                        90      LOAD_CONST                      2: -1
                        92      COMPARE_OP                      3 (!=)
                        94      POP_JUMP_IF_FALSE               63 (to 126)
                        96      LOAD_FAST                       2: p2cwrite
                        98      LOAD_CONST                      2: -1
                        100     COMPARE_OP                      3 (!=)
                        102     POP_JUMP_IF_FALSE               63 (to 126)
                        104     LOAD_FAST                       1: p2cread
                        106     LOAD_FAST                       7: devnull_fd
                        108     COMPARE_OP                      3 (!=)
                        110     POP_JUMP_IF_FALSE               63 (to 126)
                        112     LOAD_FAST                       8: stack
                        114     LOAD_METHOD                     4: callback
                        116     LOAD_GLOBAL                     6: os
                        118     LOAD_ATTR                       7: close
                        120     LOAD_FAST                       1: p2cread
                        122     CALL_METHOD                     2
                        124     POP_TOP                         
                        126     LOAD_FAST                       4: c2pwrite
                        128     LOAD_CONST                      2: -1
                        130     COMPARE_OP                      3 (!=)
                        132     POP_JUMP_IF_FALSE               82 (to 164)
                        134     LOAD_FAST                       3: c2pread
                        136     LOAD_CONST                      2: -1
                        138     COMPARE_OP                      3 (!=)
                        140     POP_JUMP_IF_FALSE               82 (to 164)
                        142     LOAD_FAST                       4: c2pwrite
                        144     LOAD_FAST                       7: devnull_fd
                        146     COMPARE_OP                      3 (!=)
                        148     POP_JUMP_IF_FALSE               82 (to 164)
                        150     LOAD_FAST                       8: stack
                        152     LOAD_METHOD                     4: callback
                        154     LOAD_GLOBAL                     6: os
                        156     LOAD_ATTR                       7: close
                        158     LOAD_FAST                       4: c2pwrite
                        160     CALL_METHOD                     2
                        162     POP_TOP                         
                        164     LOAD_FAST                       6: errwrite
                        166     LOAD_CONST                      2: -1
                        168     COMPARE_OP                      3 (!=)
                        170     POP_JUMP_IF_FALSE               101 (to 202)
                        172     LOAD_FAST                       5: errread
                        174     LOAD_CONST                      2: -1
                        176     COMPARE_OP                      3 (!=)
                        178     POP_JUMP_IF_FALSE               101 (to 202)
                        180     LOAD_FAST                       6: errwrite
                        182     LOAD_FAST                       7: devnull_fd
                        184     COMPARE_OP                      3 (!=)
                        186     POP_JUMP_IF_FALSE               101 (to 202)
                        188     LOAD_FAST                       8: stack
                        190     LOAD_METHOD                     4: callback
                        192     LOAD_GLOBAL                     6: os
                        194     LOAD_ATTR                       7: close
                        196     LOAD_FAST                       6: errwrite
                        198     CALL_METHOD                     2
                        200     POP_TOP                         
                        202     LOAD_FAST                       7: devnull_fd
                        204     LOAD_CONST                      0: None
                        206     IS_OP                           1 (is not)
                        208     POP_JUMP_IF_FALSE               112 (to 224)
                        210     LOAD_FAST                       8: stack
                        212     LOAD_METHOD                     4: callback
                        214     LOAD_GLOBAL                     6: os
                        216     LOAD_ATTR                       7: close
                        218     LOAD_FAST                       7: devnull_fd
                        220     CALL_METHOD                     2
                        222     POP_TOP                         
                        224     POP_BLOCK                       
                        226     LOAD_CONST                      0: None
                        228     DUP_TOP                         
                        230     DUP_TOP                         
                        232     CALL_FUNCTION                   3
                        234     POP_TOP                         
                        236     JUMP_FORWARD                    8 (to 254)
                        238     WITH_EXCEPT_START               
                        240     POP_JUMP_IF_TRUE                122 (to 244)
                        242     RERAISE                         1
                        244     POP_TOP                         
                        246     POP_TOP                         
                        248     POP_TOP                         
                        250     POP_EXCEPT                      
                        252     POP_TOP                         
                        254     LOAD_CONST                      3: True
                        256     LOAD_FAST                       0: self
                        258     STORE_ATTR                      8: _closed_child_pipe_fds
                        260     LOAD_CONST                      0: None
                        262     RETURN_VALUE                    
                'Popen._close_pipe_fds'
                [Code]
                    File Name: subprocess.py
                    Object Name: _get_handles
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_winapi'
                        'GetStdHandle'
                        'STD_INPUT_HANDLE'
                        'CreatePipe'
                        'Handle'
                        'CloseHandle'
                        'PIPE'
                        'DEVNULL'
                        'msvcrt'
                        'get_osfhandle'
                        '_get_devnull'
                        'isinstance'
                        'int'
                        'fileno'
                        '_make_inheritable'
                        'STD_OUTPUT_HANDLE'
                        'STD_ERROR_HANDLE'
                        'STDOUT'
                    [Var Names]
                        'self'
                        'stdin'
                        'stdout'
                        'stderr'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        '_'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct and return tuple with IO objects:\n            p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite\n            '
                        None
                        (
                            -1
                            -1
                            -1
                            -1
                            -1
                            -1
                        )
                        (
                            -1
                            -1
                        )
                        0
                    [Disassembly]
                        0       LOAD_FAST                       1: stdin
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               14 (to 28)
                        8       LOAD_FAST                       2: stdout
                        10      LOAD_CONST                      1: None
                        12      IS_OP                           0 (is)
                        14      POP_JUMP_IF_FALSE               14 (to 28)
                        16      LOAD_FAST                       3: stderr
                        18      LOAD_CONST                      1: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               14 (to 28)
                        24      LOAD_CONST                      2: (-1, -1, -1, -1, -1, -1)
                        26      RETURN_VALUE                    
                        28      LOAD_CONST                      3: (-1, -1)
                        30      UNPACK_SEQUENCE                 2
                        32      STORE_FAST                      4: p2cread
                        34      STORE_FAST                      5: p2cwrite
                        36      LOAD_CONST                      3: (-1, -1)
                        38      UNPACK_SEQUENCE                 2
                        40      STORE_FAST                      6: c2pread
                        42      STORE_FAST                      7: c2pwrite
                        44      LOAD_CONST                      3: (-1, -1)
                        46      UNPACK_SEQUENCE                 2
                        48      STORE_FAST                      8: errread
                        50      STORE_FAST                      9: errwrite
                        52      LOAD_FAST                       1: stdin
                        54      LOAD_CONST                      1: None
                        56      IS_OP                           0 (is)
                        58      POP_JUMP_IF_FALSE               58 (to 116)
                        60      LOAD_GLOBAL                     0: _winapi
                        62      LOAD_METHOD                     1: GetStdHandle
                        64      LOAD_GLOBAL                     0: _winapi
                        66      LOAD_ATTR                       2: STD_INPUT_HANDLE
                        68      CALL_METHOD                     1
                        70      STORE_FAST                      4: p2cread
                        72      LOAD_FAST                       4: p2cread
                        74      LOAD_CONST                      1: None
                        76      IS_OP                           0 (is)
                        78      POP_JUMP_IF_FALSE               57 (to 114)
                        80      LOAD_GLOBAL                     0: _winapi
                        82      LOAD_METHOD                     3: CreatePipe
                        84      LOAD_CONST                      1: None
                        86      LOAD_CONST                      4: 0
                        88      CALL_METHOD                     2
                        90      UNPACK_SEQUENCE                 2
                        92      STORE_FAST                      4: p2cread
                        94      STORE_FAST                      10: _
                        96      LOAD_GLOBAL                     4: Handle
                        98      LOAD_FAST                       4: p2cread
                        100     CALL_FUNCTION                   1
                        102     STORE_FAST                      4: p2cread
                        104     LOAD_GLOBAL                     0: _winapi
                        106     LOAD_METHOD                     5: CloseHandle
                        108     LOAD_FAST                       10: _
                        110     CALL_METHOD                     1
                        112     POP_TOP                         
                        114     JUMP_FORWARD                    52 (to 220)
                        116     LOAD_FAST                       1: stdin
                        118     LOAD_GLOBAL                     6: PIPE
                        120     COMPARE_OP                      2 (==)
                        122     POP_JUMP_IF_FALSE               80 (to 160)
                        124     LOAD_GLOBAL                     0: _winapi
                        126     LOAD_METHOD                     3: CreatePipe
                        128     LOAD_CONST                      1: None
                        130     LOAD_CONST                      4: 0
                        132     CALL_METHOD                     2
                        134     UNPACK_SEQUENCE                 2
                        136     STORE_FAST                      4: p2cread
                        138     STORE_FAST                      5: p2cwrite
                        140     LOAD_GLOBAL                     4: Handle
                        142     LOAD_FAST                       4: p2cread
                        144     CALL_FUNCTION                   1
                        146     LOAD_GLOBAL                     4: Handle
                        148     LOAD_FAST                       5: p2cwrite
                        150     CALL_FUNCTION                   1
                        152     ROT_TWO                         
                        154     STORE_FAST                      4: p2cread
                        156     STORE_FAST                      5: p2cwrite
                        158     JUMP_FORWARD                    30 (to 220)
                        160     LOAD_FAST                       1: stdin
                        162     LOAD_GLOBAL                     7: DEVNULL
                        164     COMPARE_OP                      2 (==)
                        166     POP_JUMP_IF_FALSE               92 (to 184)
                        168     LOAD_GLOBAL                     8: msvcrt
                        170     LOAD_METHOD                     9: get_osfhandle
                        172     LOAD_FAST                       0: self
                        174     LOAD_METHOD                     10: _get_devnull
                        176     CALL_METHOD                     0
                        178     CALL_METHOD                     1
                        180     STORE_FAST                      4: p2cread
                        182     JUMP_FORWARD                    18 (to 220)
                        184     LOAD_GLOBAL                     11: isinstance
                        186     LOAD_FAST                       1: stdin
                        188     LOAD_GLOBAL                     12: int
                        190     CALL_FUNCTION                   2
                        192     POP_JUMP_IF_FALSE               103 (to 206)
                        194     LOAD_GLOBAL                     8: msvcrt
                        196     LOAD_METHOD                     9: get_osfhandle
                        198     LOAD_FAST                       1: stdin
                        200     CALL_METHOD                     1
                        202     STORE_FAST                      4: p2cread
                        204     JUMP_FORWARD                    7 (to 220)
                        206     LOAD_GLOBAL                     8: msvcrt
                        208     LOAD_METHOD                     9: get_osfhandle
                        210     LOAD_FAST                       1: stdin
                        212     LOAD_METHOD                     13: fileno
                        214     CALL_METHOD                     0
                        216     CALL_METHOD                     1
                        218     STORE_FAST                      4: p2cread
                        220     LOAD_FAST                       0: self
                        222     LOAD_METHOD                     14: _make_inheritable
                        224     LOAD_FAST                       4: p2cread
                        226     CALL_METHOD                     1
                        228     STORE_FAST                      4: p2cread
                        230     LOAD_FAST                       2: stdout
                        232     LOAD_CONST                      1: None
                        234     IS_OP                           0 (is)
                        236     POP_JUMP_IF_FALSE               147 (to 294)
                        238     LOAD_GLOBAL                     0: _winapi
                        240     LOAD_METHOD                     1: GetStdHandle
                        242     LOAD_GLOBAL                     0: _winapi
                        244     LOAD_ATTR                       15: STD_OUTPUT_HANDLE
                        246     CALL_METHOD                     1
                        248     STORE_FAST                      7: c2pwrite
                        250     LOAD_FAST                       7: c2pwrite
                        252     LOAD_CONST                      1: None
                        254     IS_OP                           0 (is)
                        256     POP_JUMP_IF_FALSE               146 (to 292)
                        258     LOAD_GLOBAL                     0: _winapi
                        260     LOAD_METHOD                     3: CreatePipe
                        262     LOAD_CONST                      1: None
                        264     LOAD_CONST                      4: 0
                        266     CALL_METHOD                     2
                        268     UNPACK_SEQUENCE                 2
                        270     STORE_FAST                      10: _
                        272     STORE_FAST                      7: c2pwrite
                        274     LOAD_GLOBAL                     4: Handle
                        276     LOAD_FAST                       7: c2pwrite
                        278     CALL_FUNCTION                   1
                        280     STORE_FAST                      7: c2pwrite
                        282     LOAD_GLOBAL                     0: _winapi
                        284     LOAD_METHOD                     5: CloseHandle
                        286     LOAD_FAST                       10: _
                        288     CALL_METHOD                     1
                        290     POP_TOP                         
                        292     JUMP_FORWARD                    52 (to 398)
                        294     LOAD_FAST                       2: stdout
                        296     LOAD_GLOBAL                     6: PIPE
                        298     COMPARE_OP                      2 (==)
                        300     POP_JUMP_IF_FALSE               169 (to 338)
                        302     LOAD_GLOBAL                     0: _winapi
                        304     LOAD_METHOD                     3: CreatePipe
                        306     LOAD_CONST                      1: None
                        308     LOAD_CONST                      4: 0
                        310     CALL_METHOD                     2
                        312     UNPACK_SEQUENCE                 2
                        314     STORE_FAST                      6: c2pread
                        316     STORE_FAST                      7: c2pwrite
                        318     LOAD_GLOBAL                     4: Handle
                        320     LOAD_FAST                       6: c2pread
                        322     CALL_FUNCTION                   1
                        324     LOAD_GLOBAL                     4: Handle
                        326     LOAD_FAST                       7: c2pwrite
                        328     CALL_FUNCTION                   1
                        330     ROT_TWO                         
                        332     STORE_FAST                      6: c2pread
                        334     STORE_FAST                      7: c2pwrite
                        336     JUMP_FORWARD                    30 (to 398)
                        338     LOAD_FAST                       2: stdout
                        340     LOAD_GLOBAL                     7: DEVNULL
                        342     COMPARE_OP                      2 (==)
                        344     POP_JUMP_IF_FALSE               181 (to 362)
                        346     LOAD_GLOBAL                     8: msvcrt
                        348     LOAD_METHOD                     9: get_osfhandle
                        350     LOAD_FAST                       0: self
                        352     LOAD_METHOD                     10: _get_devnull
                        354     CALL_METHOD                     0
                        356     CALL_METHOD                     1
                        358     STORE_FAST                      7: c2pwrite
                        360     JUMP_FORWARD                    18 (to 398)
                        362     LOAD_GLOBAL                     11: isinstance
                        364     LOAD_FAST                       2: stdout
                        366     LOAD_GLOBAL                     12: int
                        368     CALL_FUNCTION                   2
                        370     POP_JUMP_IF_FALSE               192 (to 384)
                        372     LOAD_GLOBAL                     8: msvcrt
                        374     LOAD_METHOD                     9: get_osfhandle
                        376     LOAD_FAST                       2: stdout
                        378     CALL_METHOD                     1
                        380     STORE_FAST                      7: c2pwrite
                        382     JUMP_FORWARD                    7 (to 398)
                        384     LOAD_GLOBAL                     8: msvcrt
                        386     LOAD_METHOD                     9: get_osfhandle
                        388     LOAD_FAST                       2: stdout
                        390     LOAD_METHOD                     13: fileno
                        392     CALL_METHOD                     0
                        394     CALL_METHOD                     1
                        396     STORE_FAST                      7: c2pwrite
                        398     LOAD_FAST                       0: self
                        400     LOAD_METHOD                     14: _make_inheritable
                        402     LOAD_FAST                       7: c2pwrite
                        404     CALL_METHOD                     1
                        406     STORE_FAST                      7: c2pwrite
                        408     LOAD_FAST                       3: stderr
                        410     LOAD_CONST                      1: None
                        412     IS_OP                           0 (is)
                        414     POP_JUMP_IF_FALSE               236 (to 472)
                        416     LOAD_GLOBAL                     0: _winapi
                        418     LOAD_METHOD                     1: GetStdHandle
                        420     LOAD_GLOBAL                     0: _winapi
                        422     LOAD_ATTR                       16: STD_ERROR_HANDLE
                        424     CALL_METHOD                     1
                        426     STORE_FAST                      9: errwrite
                        428     LOAD_FAST                       9: errwrite
                        430     LOAD_CONST                      1: None
                        432     IS_OP                           0 (is)
                        434     POP_JUMP_IF_FALSE               235 (to 470)
                        436     LOAD_GLOBAL                     0: _winapi
                        438     LOAD_METHOD                     3: CreatePipe
                        440     LOAD_CONST                      1: None
                        442     LOAD_CONST                      4: 0
                        444     CALL_METHOD                     2
                        446     UNPACK_SEQUENCE                 2
                        448     STORE_FAST                      10: _
                        450     STORE_FAST                      9: errwrite
                        452     LOAD_GLOBAL                     4: Handle
                        454     LOAD_FAST                       9: errwrite
                        456     CALL_FUNCTION                   1
                        458     STORE_FAST                      9: errwrite
                        460     LOAD_GLOBAL                     0: _winapi
                        462     LOAD_METHOD                     5: CloseHandle
                        464     LOAD_FAST                       10: _
                        466     CALL_METHOD                     1
                        468     POP_TOP                         
                        470     JUMP_FORWARD                    63 (to 598)
                        472     LOAD_FAST                       3: stderr
                        474     LOAD_GLOBAL                     6: PIPE
                        476     COMPARE_OP                      2 (==)
                        478     POP_JUMP_IF_FALSE               259 (to 518)
                        482     LOAD_GLOBAL                     0: _winapi
                        484     LOAD_METHOD                     3: CreatePipe
                        486     LOAD_CONST                      1: None
                        488     LOAD_CONST                      4: 0
                        490     CALL_METHOD                     2
                        492     UNPACK_SEQUENCE                 2
                        494     STORE_FAST                      8: errread
                        496     STORE_FAST                      9: errwrite
                        498     LOAD_GLOBAL                     4: Handle
                        500     LOAD_FAST                       8: errread
                        502     CALL_FUNCTION                   1
                        504     LOAD_GLOBAL                     4: Handle
                        506     LOAD_FAST                       9: errwrite
                        508     CALL_FUNCTION                   1
                        510     ROT_TWO                         
                        512     STORE_FAST                      8: errread
                        514     STORE_FAST                      9: errwrite
                        516     JUMP_FORWARD                    40 (to 598)
                        518     LOAD_FAST                       3: stderr
                        520     LOAD_GLOBAL                     17: STDOUT
                        522     COMPARE_OP                      2 (==)
                        524     POP_JUMP_IF_FALSE               267 (to 534)
                        528     LOAD_FAST                       7: c2pwrite
                        530     STORE_FAST                      9: errwrite
                        532     JUMP_FORWARD                    32 (to 598)
                        534     LOAD_FAST                       3: stderr
                        536     LOAD_GLOBAL                     7: DEVNULL
                        538     COMPARE_OP                      2 (==)
                        540     POP_JUMP_IF_FALSE               280 (to 560)
                        544     LOAD_GLOBAL                     8: msvcrt
                        546     LOAD_METHOD                     9: get_osfhandle
                        548     LOAD_FAST                       0: self
                        550     LOAD_METHOD                     10: _get_devnull
                        552     CALL_METHOD                     0
                        554     CALL_METHOD                     1
                        556     STORE_FAST                      9: errwrite
                        558     JUMP_FORWARD                    19 (to 598)
                        560     LOAD_GLOBAL                     11: isinstance
                        562     LOAD_FAST                       3: stderr
                        564     LOAD_GLOBAL                     12: int
                        566     CALL_FUNCTION                   2
                        568     POP_JUMP_IF_FALSE               292 (to 584)
                        572     LOAD_GLOBAL                     8: msvcrt
                        574     LOAD_METHOD                     9: get_osfhandle
                        576     LOAD_FAST                       3: stderr
                        578     CALL_METHOD                     1
                        580     STORE_FAST                      9: errwrite
                        582     JUMP_FORWARD                    7 (to 598)
                        584     LOAD_GLOBAL                     8: msvcrt
                        586     LOAD_METHOD                     9: get_osfhandle
                        588     LOAD_FAST                       3: stderr
                        590     LOAD_METHOD                     13: fileno
                        592     CALL_METHOD                     0
                        594     CALL_METHOD                     1
                        596     STORE_FAST                      9: errwrite
                        598     LOAD_FAST                       0: self
                        600     LOAD_METHOD                     14: _make_inheritable
                        602     LOAD_FAST                       9: errwrite
                        604     CALL_METHOD                     1
                        606     STORE_FAST                      9: errwrite
                        608     LOAD_FAST                       4: p2cread
                        610     LOAD_FAST                       5: p2cwrite
                        612     LOAD_FAST                       6: c2pread
                        614     LOAD_FAST                       7: c2pwrite
                        616     LOAD_FAST                       8: errread
                        618     LOAD_FAST                       9: errwrite
                        620     BUILD_TUPLE                     6
                        622     RETURN_VALUE                    
                'Popen._get_handles'
                [Code]
                    File Name: subprocess.py
                    Object Name: _make_inheritable
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_winapi'
                        'DuplicateHandle'
                        'GetCurrentProcess'
                        'DUPLICATE_SAME_ACCESS'
                        'Handle'
                    [Var Names]
                        'self'
                        'handle'
                        'h'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a duplicate of handle, which is inheritable'
                        0
                        1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _winapi
                        2       LOAD_METHOD                     1: DuplicateHandle
                        4       LOAD_GLOBAL                     0: _winapi
                        6       LOAD_METHOD                     2: GetCurrentProcess
                        8       CALL_METHOD                     0
                        10      LOAD_FAST                       1: handle
                        12      LOAD_GLOBAL                     0: _winapi
                        14      LOAD_METHOD                     2: GetCurrentProcess
                        16      CALL_METHOD                     0
                        18      LOAD_CONST                      1: 0
                        20      LOAD_CONST                      2: 1
                        22      LOAD_GLOBAL                     0: _winapi
                        24      LOAD_ATTR                       3: DUPLICATE_SAME_ACCESS
                        26      CALL_METHOD                     6
                        28      STORE_FAST                      2: h
                        30      LOAD_GLOBAL                     4: Handle
                        32      LOAD_FAST                       2: h
                        34      CALL_FUNCTION                   1
                        36      RETURN_VALUE                    
                'Popen._make_inheritable'
                [Code]
                    File Name: subprocess.py
                    Object Name: _filter_handle_list
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'list'
                    [Var Names]
                        'self'
                        'handle_list'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Filter out console handles that can\'t be used\n            in lpAttributeList["handle_list"] and make sure the list\n            isn\'t empty. This also removes duplicate handles.'
                        [Code]
                            File Name: subprocess.py
                            Object Name: <setcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 5
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                '_winapi'
                                'GetFileType'
                                'FILE_TYPE_CHAR'
                            [Var Names]
                                '.0'
                                'handle'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                3
                            [Disassembly]
                                0       BUILD_SET                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        18 (to 42)
                                6       STORE_FAST                      1: handle
                                8       LOAD_FAST                       1: handle
                                10      LOAD_CONST                      0: 3
                                12      BINARY_AND                      
                                14      LOAD_CONST                      0: 3
                                16      COMPARE_OP                      3 (!=)
                                18      POP_JUMP_IF_TRUE                18 (to 36)
                                20      LOAD_GLOBAL                     0: _winapi
                                22      LOAD_METHOD                     1: GetFileType
                                24      LOAD_FAST                       1: handle
                                26      CALL_METHOD                     1
                                28      LOAD_GLOBAL                     0: _winapi
                                30      LOAD_ATTR                       2: FILE_TYPE_CHAR
                                32      COMPARE_OP                      3 (!=)
                                34      POP_JUMP_IF_FALSE               2 (to 4)
                                36      LOAD_FAST                       1: handle
                                38      SET_ADD                         2
                                40      JUMP_ABSOLUTE                   2 (to 4)
                                42      RETURN_VALUE                    
                        'Popen._filter_handle_list.<locals>.<setcomp>'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: list
                        2       LOAD_CONST                      1: <CODE> <setcomp>
                        4       LOAD_CONST                      2: 'Popen._filter_handle_list.<locals>.<setcomp>'
                        6       MAKE_FUNCTION                   0
                        8       LOAD_FAST                       1: handle_list
                        10      GET_ITER                        
                        12      CALL_FUNCTION                   1
                        14      CALL_FUNCTION                   1
                        16      RETURN_VALUE                    
                'Popen._filter_handle_list'
                [Code]
                    File Name: subprocess.py
                    Object Name: _execute_child
                    Arg Count: 23
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 33
                    Stack Size: 14
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'bytes'
                        'TypeError'
                        'list2cmdline'
                        'os'
                        'PathLike'
                        'fsdecode'
                        'STARTUPINFO'
                        'copy'
                        'dwFlags'
                        '_winapi'
                        'STARTF_USESTDHANDLES'
                        'hStdInput'
                        'hStdOutput'
                        'hStdError'
                        'lpAttributeList'
                        'bool'
                        'list'
                        'get'
                        'int'
                        '_filter_handle_list'
                        'warnings'
                        'warn'
                        'RuntimeWarning'
                        'STARTF_USESHOWWINDOW'
                        'SW_HIDE'
                        'wShowWindow'
                        'environ'
                        'path'
                        'join'
                        'isabs'
                        'FileNotFoundError'
                        'format'
                        'sys'
                        'audit'
                        'CreateProcess'
                        '_close_pipe_fds'
                        '_child_created'
                        'Handle'
                        '_handle'
                        'pid'
                        'CloseHandle'
                    [Var Names]
                        'self'
                        'args'
                        'executable'
                        'preexec_fn'
                        'close_fds'
                        'pass_fds'
                        'cwd'
                        'env'
                        'startupinfo'
                        'creationflags'
                        'shell'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        'unused_restore_signals'
                        'unused_gid'
                        'unused_gids'
                        'unused_uid'
                        'unused_umask'
                        'unused_start_new_session'
                        'use_std_handles'
                        'attribute_list'
                        'have_handle_list'
                        'handle_list'
                        'comspec'
                        'system_root'
                        'hp'
                        'ht'
                        'pid'
                        'tid'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Execute program (MS Windows version)'
                        'pass_fds not supported on Windows.'
                        'bytes args is not allowed on Windows'
                        'path-like args is not allowed when shell is true'
                        None
                        -1
                        'handle_list'
                        "startupinfo.lpAttributeList['handle_list'] overriding close_fds"
                        False
                        'ComSpec'
                        'SystemRoot'
                        ''
                        'System32'
                        'cmd.exe'
                        'shell not found: neither %ComSpec% nor %SystemRoot% is set'
                        '{} /c "{}"'
                        'subprocess.Popen'
                        True
                    [Disassembly]
                        0       LOAD_FAST                       5: pass_fds
                        2       POP_JUMP_IF_FALSE               6 (to 12)
                        4       LOAD_ASSERTION_ERROR            
                        6       LOAD_CONST                      1: 'pass_fds not supported on Windows.'
                        8       CALL_FUNCTION                   1
                        10      RAISE_VARARGS                   1
                        12      LOAD_GLOBAL                     0: isinstance
                        14      LOAD_FAST                       1: args
                        16      LOAD_GLOBAL                     1: str
                        18      CALL_FUNCTION                   2
                        20      POP_JUMP_IF_FALSE               12 (to 24)
                        22      JUMP_FORWARD                    39 (to 102)
                        24      LOAD_GLOBAL                     0: isinstance
                        26      LOAD_FAST                       1: args
                        28      LOAD_GLOBAL                     2: bytes
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_FALSE               29 (to 58)
                        34      LOAD_FAST                       10: shell
                        36      POP_JUMP_IF_FALSE               23 (to 46)
                        38      LOAD_GLOBAL                     3: TypeError
                        40      LOAD_CONST                      2: 'bytes args is not allowed on Windows'
                        42      CALL_FUNCTION                   1
                        44      RAISE_VARARGS                   1
                        46      LOAD_GLOBAL                     4: list2cmdline
                        48      LOAD_FAST                       1: args
                        50      BUILD_LIST                      1
                        52      CALL_FUNCTION                   1
                        54      STORE_FAST                      1: args
                        56      JUMP_FORWARD                    22 (to 102)
                        58      LOAD_GLOBAL                     0: isinstance
                        60      LOAD_FAST                       1: args
                        62      LOAD_GLOBAL                     5: os
                        64      LOAD_ATTR                       6: PathLike
                        66      CALL_FUNCTION                   2
                        68      POP_JUMP_IF_FALSE               47 (to 94)
                        70      LOAD_FAST                       10: shell
                        72      POP_JUMP_IF_FALSE               41 (to 82)
                        74      LOAD_GLOBAL                     3: TypeError
                        76      LOAD_CONST                      3: 'path-like args is not allowed when shell is true'
                        78      CALL_FUNCTION                   1
                        80      RAISE_VARARGS                   1
                        82      LOAD_GLOBAL                     4: list2cmdline
                        84      LOAD_FAST                       1: args
                        86      BUILD_LIST                      1
                        88      CALL_FUNCTION                   1
                        90      STORE_FAST                      1: args
                        92      JUMP_FORWARD                    4 (to 102)
                        94      LOAD_GLOBAL                     4: list2cmdline
                        96      LOAD_FAST                       1: args
                        98      CALL_FUNCTION                   1
                        100     STORE_FAST                      1: args
                        102     LOAD_FAST                       2: executable
                        104     LOAD_CONST                      4: None
                        106     IS_OP                           1 (is not)
                        108     POP_JUMP_IF_FALSE               60 (to 120)
                        110     LOAD_GLOBAL                     5: os
                        112     LOAD_METHOD                     7: fsdecode
                        114     LOAD_FAST                       2: executable
                        116     CALL_METHOD                     1
                        118     STORE_FAST                      2: executable
                        120     LOAD_FAST                       8: startupinfo
                        122     LOAD_CONST                      4: None
                        124     IS_OP                           0 (is)
                        126     POP_JUMP_IF_FALSE               68 (to 136)
                        128     LOAD_GLOBAL                     8: STARTUPINFO
                        130     CALL_FUNCTION                   0
                        132     STORE_FAST                      8: startupinfo
                        134     JUMP_FORWARD                    4 (to 144)
                        136     LOAD_FAST                       8: startupinfo
                        138     LOAD_METHOD                     9: copy
                        140     CALL_METHOD                     0
                        142     STORE_FAST                      8: startupinfo
                        144     LOAD_CONST                      5: -1
                        146     LOAD_FAST                       11: p2cread
                        148     LOAD_FAST                       14: c2pwrite
                        150     LOAD_FAST                       16: errwrite
                        152     BUILD_TUPLE                     3
                        154     CONTAINS_OP                     1 (not in)
                        156     STORE_FAST                      23: use_std_handles
                        158     LOAD_FAST                       23: use_std_handles
                        160     POP_JUMP_IF_FALSE               98 (to 196)
                        162     LOAD_FAST                       8: startupinfo
                        164     DUP_TOP                         
                        166     LOAD_ATTR                       10: dwFlags
                        168     LOAD_GLOBAL                     11: _winapi
                        170     LOAD_ATTR                       12: STARTF_USESTDHANDLES
                        172     INPLACE_OR                      
                        174     ROT_TWO                         
                        176     STORE_ATTR                      10: dwFlags
                        178     LOAD_FAST                       11: p2cread
                        180     LOAD_FAST                       8: startupinfo
                        182     STORE_ATTR                      13: hStdInput
                        184     LOAD_FAST                       14: c2pwrite
                        186     LOAD_FAST                       8: startupinfo
                        188     STORE_ATTR                      14: hStdOutput
                        190     LOAD_FAST                       16: errwrite
                        192     LOAD_FAST                       8: startupinfo
                        194     STORE_ATTR                      15: hStdError
                        196     LOAD_FAST                       8: startupinfo
                        198     LOAD_ATTR                       16: lpAttributeList
                        200     STORE_FAST                      24: attribute_list
                        202     LOAD_GLOBAL                     17: bool
                        204     LOAD_FAST                       24: attribute_list
                        206     JUMP_IF_FALSE_OR_POP            111 (to 222)
                        208     LOAD_CONST                      6: 'handle_list'
                        210     LOAD_FAST                       24: attribute_list
                        212     CONTAINS_OP                     0 (in)
                        214     JUMP_IF_FALSE_OR_POP            111 (to 222)
                        216     LOAD_FAST                       24: attribute_list
                        218     LOAD_CONST                      6: 'handle_list'
                        220     BINARY_SUBSCR                   
                        222     CALL_FUNCTION                   1
                        224     STORE_FAST                      25: have_handle_list
                        226     LOAD_FAST                       25: have_handle_list
                        228     POP_JUMP_IF_TRUE                119 (to 238)
                        230     LOAD_FAST                       23: use_std_handles
                        232     POP_JUMP_IF_FALSE               176 (to 352)
                        234     LOAD_FAST                       4: close_fds
                        236     POP_JUMP_IF_FALSE               176 (to 352)
                        238     LOAD_FAST                       24: attribute_list
                        240     LOAD_CONST                      4: None
                        242     IS_OP                           0 (is)
                        244     POP_JUMP_IF_FALSE               128 (to 256)
                        246     BUILD_MAP                       0
                        248     DUP_TOP                         
                        250     STORE_FAST                      24: attribute_list
                        252     LOAD_FAST                       8: startupinfo
                        254     STORE_ATTR                      16: lpAttributeList
                        256     LOAD_GLOBAL                     18: list
                        258     LOAD_FAST                       24: attribute_list
                        260     LOAD_METHOD                     19: get
                        262     LOAD_CONST                      6: 'handle_list'
                        264     BUILD_LIST                      0
                        266     CALL_METHOD                     2
                        268     CALL_FUNCTION                   1
                        270     DUP_TOP                         
                        272     STORE_FAST                      26: handle_list
                        274     LOAD_FAST                       24: attribute_list
                        276     LOAD_CONST                      6: 'handle_list'
                        278     STORE_SUBSCR                    
                        280     LOAD_FAST                       23: use_std_handles
                        282     POP_JUMP_IF_FALSE               155 (to 310)
                        284     LOAD_FAST                       26: handle_list
                        286     LOAD_GLOBAL                     20: int
                        288     LOAD_FAST                       11: p2cread
                        290     CALL_FUNCTION                   1
                        292     LOAD_GLOBAL                     20: int
                        294     LOAD_FAST                       14: c2pwrite
                        296     CALL_FUNCTION                   1
                        298     LOAD_GLOBAL                     20: int
                        300     LOAD_FAST                       16: errwrite
                        302     CALL_FUNCTION                   1
                        304     BUILD_LIST                      3
                        306     INPLACE_ADD                     
                        308     STORE_FAST                      26: handle_list
                        310     LOAD_FAST                       0: self
                        312     LOAD_METHOD                     21: _filter_handle_list
                        314     LOAD_FAST                       26: handle_list
                        316     CALL_METHOD                     1
                        318     LOAD_FAST                       26: handle_list
                        320     LOAD_CONST                      4: None
                        322     LOAD_CONST                      4: None
                        324     BUILD_SLICE                     2
                        326     STORE_SUBSCR                    
                        328     LOAD_FAST                       26: handle_list
                        330     POP_JUMP_IF_FALSE               176 (to 352)
                        332     LOAD_FAST                       4: close_fds
                        334     POP_JUMP_IF_TRUE                174 (to 348)
                        336     LOAD_GLOBAL                     22: warnings
                        338     LOAD_METHOD                     23: warn
                        340     LOAD_CONST                      7: "startupinfo.lpAttributeList['handle_list'] overriding close_fds"
                        342     LOAD_GLOBAL                     24: RuntimeWarning
                        344     CALL_METHOD                     2
                        346     POP_TOP                         
                        348     LOAD_CONST                      8: False
                        350     STORE_FAST                      4: close_fds
                        352     LOAD_FAST                       10: shell
                        354     POP_JUMP_IF_FALSE               242 (to 484)
                        356     LOAD_FAST                       8: startupinfo
                        358     DUP_TOP                         
                        360     LOAD_ATTR                       10: dwFlags
                        362     LOAD_GLOBAL                     11: _winapi
                        364     LOAD_ATTR                       25: STARTF_USESHOWWINDOW
                        366     INPLACE_OR                      
                        368     ROT_TWO                         
                        370     STORE_ATTR                      10: dwFlags
                        372     LOAD_GLOBAL                     11: _winapi
                        374     LOAD_ATTR                       26: SW_HIDE
                        376     LOAD_FAST                       8: startupinfo
                        378     STORE_ATTR                      27: wShowWindow
                        380     LOAD_FAST                       2: executable
                        382     POP_JUMP_IF_TRUE                234 (to 468)
                        384     LOAD_GLOBAL                     5: os
                        386     LOAD_ATTR                       28: environ
                        388     LOAD_METHOD                     19: get
                        390     LOAD_CONST                      9: 'ComSpec'
                        392     CALL_METHOD                     1
                        394     STORE_FAST                      27: comspec
                        396     LOAD_FAST                       27: comspec
                        398     POP_JUMP_IF_TRUE                225 (to 450)
                        400     LOAD_GLOBAL                     5: os
                        402     LOAD_ATTR                       28: environ
                        404     LOAD_METHOD                     19: get
                        406     LOAD_CONST                      10: 'SystemRoot'
                        408     LOAD_CONST                      11: ''
                        410     CALL_METHOD                     2
                        412     STORE_FAST                      28: system_root
                        414     LOAD_GLOBAL                     5: os
                        416     LOAD_ATTR                       29: path
                        418     LOAD_METHOD                     30: join
                        420     LOAD_FAST                       28: system_root
                        422     LOAD_CONST                      12: 'System32'
                        424     LOAD_CONST                      13: 'cmd.exe'
                        426     CALL_METHOD                     3
                        428     STORE_FAST                      27: comspec
                        430     LOAD_GLOBAL                     5: os
                        432     LOAD_ATTR                       29: path
                        434     LOAD_METHOD                     31: isabs
                        436     LOAD_FAST                       27: comspec
                        438     CALL_METHOD                     1
                        440     POP_JUMP_IF_TRUE                225 (to 450)
                        442     LOAD_GLOBAL                     32: FileNotFoundError
                        444     LOAD_CONST                      14: 'shell not found: neither %ComSpec% nor %SystemRoot% is set'
                        446     CALL_FUNCTION                   1
                        448     RAISE_VARARGS                   1
                        450     LOAD_GLOBAL                     5: os
                        452     LOAD_ATTR                       29: path
                        454     LOAD_METHOD                     31: isabs
                        456     LOAD_FAST                       27: comspec
                        458     CALL_METHOD                     1
                        460     POP_JUMP_IF_FALSE               233 (to 466)
                        462     LOAD_FAST                       27: comspec
                        464     STORE_FAST                      2: executable
                        466     JUMP_FORWARD                    2 (to 472)
                        468     LOAD_FAST                       2: executable
                        470     STORE_FAST                      27: comspec
                        472     LOAD_CONST                      15: '{} /c "{}"'
                        474     LOAD_METHOD                     33: format
                        476     LOAD_FAST                       27: comspec
                        478     LOAD_FAST                       1: args
                        480     CALL_METHOD                     2
                        482     STORE_FAST                      1: args
                        484     LOAD_FAST                       6: cwd
                        486     LOAD_CONST                      4: None
                        488     IS_OP                           1 (is not)
                        490     POP_JUMP_IF_FALSE               251 (to 502)
                        492     LOAD_GLOBAL                     5: os
                        494     LOAD_METHOD                     7: fsdecode
                        496     LOAD_FAST                       6: cwd
                        498     CALL_METHOD                     1
                        500     STORE_FAST                      6: cwd
                        502     LOAD_GLOBAL                     34: sys
                        504     LOAD_METHOD                     35: audit
                        506     LOAD_CONST                      16: 'subprocess.Popen'
                        508     LOAD_FAST                       2: executable
                        510     LOAD_FAST                       1: args
                        512     LOAD_FAST                       6: cwd
                        514     LOAD_FAST                       7: env
                        516     CALL_METHOD                     5
                        518     POP_TOP                         
                        520     SETUP_FINALLY                   32 (to 586)
                        522     LOAD_GLOBAL                     11: _winapi
                        524     LOAD_METHOD                     36: CreateProcess
                        526     LOAD_FAST                       2: executable
                        528     LOAD_FAST                       1: args
                        530     LOAD_CONST                      4: None
                        532     LOAD_CONST                      4: None
                        534     LOAD_GLOBAL                     20: int
                        536     LOAD_FAST                       4: close_fds
                        538     UNARY_NOT                       
                        540     CALL_FUNCTION                   1
                        542     LOAD_FAST                       9: creationflags
                        544     LOAD_FAST                       7: env
                        546     LOAD_FAST                       6: cwd
                        548     LOAD_FAST                       8: startupinfo
                        550     CALL_METHOD                     9
                        552     UNPACK_SEQUENCE                 4
                        554     STORE_FAST                      29: hp
                        556     STORE_FAST                      30: ht
                        558     STORE_FAST                      31: pid
                        560     STORE_FAST                      32: tid
                        562     POP_BLOCK                       
                        564     LOAD_FAST                       0: self
                        566     LOAD_METHOD                     37: _close_pipe_fds
                        568     LOAD_FAST                       11: p2cread
                        570     LOAD_FAST                       12: p2cwrite
                        572     LOAD_FAST                       13: c2pread
                        574     LOAD_FAST                       14: c2pwrite
                        576     LOAD_FAST                       15: errread
                        578     LOAD_FAST                       16: errwrite
                        580     CALL_METHOD                     6
                        582     POP_TOP                         
                        584     JUMP_FORWARD                    11 (to 608)
                        586     LOAD_FAST                       0: self
                        588     LOAD_METHOD                     37: _close_pipe_fds
                        590     LOAD_FAST                       11: p2cread
                        592     LOAD_FAST                       12: p2cwrite
                        594     LOAD_FAST                       13: c2pread
                        596     LOAD_FAST                       14: c2pwrite
                        598     LOAD_FAST                       15: errread
                        600     LOAD_FAST                       16: errwrite
                        602     CALL_METHOD                     6
                        604     POP_TOP                         
                        606     RERAISE                         0
                        608     LOAD_CONST                      17: True
                        610     LOAD_FAST                       0: self
                        612     STORE_ATTR                      38: _child_created
                        614     LOAD_GLOBAL                     39: Handle
                        616     LOAD_FAST                       29: hp
                        618     CALL_FUNCTION                   1
                        620     LOAD_FAST                       0: self
                        622     STORE_ATTR                      40: _handle
                        624     LOAD_FAST                       31: pid
                        626     LOAD_FAST                       0: self
                        628     STORE_ATTR                      41: pid
                        630     LOAD_GLOBAL                     11: _winapi
                        632     LOAD_METHOD                     42: CloseHandle
                        634     LOAD_FAST                       30: ht
                        636     CALL_METHOD                     1
                        638     POP_TOP                         
                        640     LOAD_CONST                      4: None
                        642     RETURN_VALUE                    
                'Popen._execute_child'
                [Code]
                    File Name: subprocess.py
                    Object Name: _internal_poll
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        '_handle'
                    [Var Names]
                        'self'
                        '_deadstate'
                        '_WaitForSingleObject'
                        '_WAIT_OBJECT_0'
                        '_GetExitCodeProcess'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Check if child process has terminated.  Returns returncode\n            attribute.\n\n            This method is called by __del__, so it can only refer to objects\n            in its local scope.\n\n            '
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               19 (to 38)
                        10      LOAD_FAST                       2: _WaitForSingleObject
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _handle
                        16      LOAD_CONST                      2: 0
                        18      CALL_FUNCTION                   2
                        20      LOAD_FAST                       3: _WAIT_OBJECT_0
                        22      COMPARE_OP                      2 (==)
                        24      POP_JUMP_IF_FALSE               19 (to 38)
                        26      LOAD_FAST                       4: _GetExitCodeProcess
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       1: _handle
                        32      CALL_FUNCTION                   1
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      0: returncode
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       0: returncode
                        42      RETURN_VALUE                    
                'Popen._internal_poll'
                [Code]
                    File Name: subprocess.py
                    Object Name: _wait
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_winapi'
                        'INFINITE'
                        'int'
                        'returncode'
                        'WaitForSingleObject'
                        '_handle'
                        'WAIT_TIMEOUT'
                        'TimeoutExpired'
                        'args'
                        'GetExitCodeProcess'
                    [Var Names]
                        'self'
                        'timeout'
                        'timeout_millis'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Internal implementation of wait() on Windows.'
                        None
                        1000
                    [Disassembly]
                        0       LOAD_FAST                       1: timeout
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: _winapi
                        10      LOAD_ATTR                       1: INFINITE
                        12      STORE_FAST                      2: timeout_millis
                        14      JUMP_FORWARD                    6 (to 28)
                        16      LOAD_GLOBAL                     2: int
                        18      LOAD_FAST                       1: timeout
                        20      LOAD_CONST                      2: 1000
                        22      BINARY_MULTIPLY                 
                        24      CALL_FUNCTION                   1
                        26      STORE_FAST                      2: timeout_millis
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: returncode
                        32      LOAD_CONST                      1: None
                        34      IS_OP                           0 (is)
                        36      POP_JUMP_IF_FALSE               44 (to 88)
                        38      LOAD_GLOBAL                     0: _winapi
                        40      LOAD_METHOD                     4: WaitForSingleObject
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       5: _handle
                        46      LOAD_FAST                       2: timeout_millis
                        48      CALL_METHOD                     2
                        50      STORE_FAST                      3: result
                        52      LOAD_FAST                       3: result
                        54      LOAD_GLOBAL                     0: _winapi
                        56      LOAD_ATTR                       6: WAIT_TIMEOUT
                        58      COMPARE_OP                      2 (==)
                        60      POP_JUMP_IF_FALSE               37 (to 74)
                        62      LOAD_GLOBAL                     7: TimeoutExpired
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       8: args
                        68      LOAD_FAST                       1: timeout
                        70      CALL_FUNCTION                   2
                        72      RAISE_VARARGS                   1
                        74      LOAD_GLOBAL                     0: _winapi
                        76      LOAD_METHOD                     9: GetExitCodeProcess
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       5: _handle
                        82      CALL_METHOD                     1
                        84      LOAD_FAST                       0: self
                        86      STORE_ATTR                      3: returncode
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       3: returncode
                        92      RETURN_VALUE                    
                'Popen._wait'
                [Code]
                    File Name: subprocess.py
                    Object Name: _readerthread
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'append'
                        'read'
                        'close'
                    [Var Names]
                        'self'
                        'fh'
                        'buffer'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: buffer
                        2       LOAD_METHOD                     0: append
                        4       LOAD_FAST                       1: fh
                        6       LOAD_METHOD                     1: read
                        8       CALL_METHOD                     0
                        10      CALL_METHOD                     1
                        12      POP_TOP                         
                        14      LOAD_FAST                       1: fh
                        16      LOAD_METHOD                     2: close
                        18      CALL_METHOD                     0
                        20      POP_TOP                         
                        22      LOAD_CONST                      0: None
                        24      RETURN_VALUE                    
                'Popen._readerthread'
                [Code]
                    File Name: subprocess.py
                    Object Name: _communicate
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stdout'
                        'hasattr'
                        '_stdout_buff'
                        'threading'
                        'Thread'
                        '_readerthread'
                        'stdout_thread'
                        'daemon'
                        'start'
                        'stderr'
                        '_stderr_buff'
                        'stderr_thread'
                        'stdin'
                        '_stdin_write'
                        'join'
                        '_remaining_time'
                        'is_alive'
                        'TimeoutExpired'
                        'args'
                        'close'
                    [Var Names]
                        'self'
                        'input'
                        'endtime'
                        'orig_timeout'
                        'stdout'
                        'stderr'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '_stdout_buff'
                        (
                            'target'
                            'args'
                        )
                        True
                        '_stderr_buff'
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: stdout
                        4       POP_JUMP_IF_FALSE               33 (to 66)
                        6       LOAD_GLOBAL                     1: hasattr
                        8       LOAD_FAST                       0: self
                        10      LOAD_CONST                      1: '_stdout_buff'
                        12      CALL_FUNCTION                   2
                        14      POP_JUMP_IF_TRUE                33 (to 66)
                        16      BUILD_LIST                      0
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      2: _stdout_buff
                        22      LOAD_GLOBAL                     3: threading
                        24      LOAD_ATTR                       4: Thread
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       5: _readerthread
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       0: stdout
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       2: _stdout_buff
                        38      BUILD_TUPLE                     2
                        40      LOAD_CONST                      2: ('target', 'args')
                        42      CALL_FUNCTION_KW                2
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      6: stdout_thread
                        48      LOAD_CONST                      3: True
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       6: stdout_thread
                        54      STORE_ATTR                      7: daemon
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       6: stdout_thread
                        60      LOAD_METHOD                     8: start
                        62      CALL_METHOD                     0
                        64      POP_TOP                         
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       9: stderr
                        70      POP_JUMP_IF_FALSE               66 (to 132)
                        72      LOAD_GLOBAL                     1: hasattr
                        74      LOAD_FAST                       0: self
                        76      LOAD_CONST                      4: '_stderr_buff'
                        78      CALL_FUNCTION                   2
                        80      POP_JUMP_IF_TRUE                66 (to 132)
                        82      BUILD_LIST                      0
                        84      LOAD_FAST                       0: self
                        86      STORE_ATTR                      10: _stderr_buff
                        88      LOAD_GLOBAL                     3: threading
                        90      LOAD_ATTR                       4: Thread
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       5: _readerthread
                        96      LOAD_FAST                       0: self
                        98      LOAD_ATTR                       9: stderr
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       10: _stderr_buff
                        104     BUILD_TUPLE                     2
                        106     LOAD_CONST                      2: ('target', 'args')
                        108     CALL_FUNCTION_KW                2
                        110     LOAD_FAST                       0: self
                        112     STORE_ATTR                      11: stderr_thread
                        114     LOAD_CONST                      3: True
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       11: stderr_thread
                        120     STORE_ATTR                      7: daemon
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       11: stderr_thread
                        126     LOAD_METHOD                     8: start
                        128     CALL_METHOD                     0
                        130     POP_TOP                         
                        132     LOAD_FAST                       0: self
                        134     LOAD_ATTR                       12: stdin
                        136     POP_JUMP_IF_FALSE               74 (to 148)
                        138     LOAD_FAST                       0: self
                        140     LOAD_METHOD                     13: _stdin_write
                        142     LOAD_FAST                       1: input
                        144     CALL_METHOD                     1
                        146     POP_TOP                         
                        148     LOAD_FAST                       0: self
                        150     LOAD_ATTR                       0: stdout
                        152     LOAD_CONST                      0: None
                        154     IS_OP                           1 (is not)
                        156     POP_JUMP_IF_FALSE               99 (to 198)
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       6: stdout_thread
                        162     LOAD_METHOD                     14: join
                        164     LOAD_FAST                       0: self
                        166     LOAD_METHOD                     15: _remaining_time
                        168     LOAD_FAST                       2: endtime
                        170     CALL_METHOD                     1
                        172     CALL_METHOD                     1
                        174     POP_TOP                         
                        176     LOAD_FAST                       0: self
                        178     LOAD_ATTR                       6: stdout_thread
                        180     LOAD_METHOD                     16: is_alive
                        182     CALL_METHOD                     0
                        184     POP_JUMP_IF_FALSE               99 (to 198)
                        186     LOAD_GLOBAL                     17: TimeoutExpired
                        188     LOAD_FAST                       0: self
                        190     LOAD_ATTR                       18: args
                        192     LOAD_FAST                       3: orig_timeout
                        194     CALL_FUNCTION                   2
                        196     RAISE_VARARGS                   1
                        198     LOAD_FAST                       0: self
                        200     LOAD_ATTR                       9: stderr
                        202     LOAD_CONST                      0: None
                        204     IS_OP                           1 (is not)
                        206     POP_JUMP_IF_FALSE               124 (to 248)
                        208     LOAD_FAST                       0: self
                        210     LOAD_ATTR                       11: stderr_thread
                        212     LOAD_METHOD                     14: join
                        214     LOAD_FAST                       0: self
                        216     LOAD_METHOD                     15: _remaining_time
                        218     LOAD_FAST                       2: endtime
                        220     CALL_METHOD                     1
                        222     CALL_METHOD                     1
                        224     POP_TOP                         
                        226     LOAD_FAST                       0: self
                        228     LOAD_ATTR                       11: stderr_thread
                        230     LOAD_METHOD                     16: is_alive
                        232     CALL_METHOD                     0
                        234     POP_JUMP_IF_FALSE               124 (to 248)
                        236     LOAD_GLOBAL                     17: TimeoutExpired
                        238     LOAD_FAST                       0: self
                        240     LOAD_ATTR                       18: args
                        242     LOAD_FAST                       3: orig_timeout
                        244     CALL_FUNCTION                   2
                        246     RAISE_VARARGS                   1
                        248     LOAD_CONST                      0: None
                        250     STORE_FAST                      4: stdout
                        252     LOAD_CONST                      0: None
                        254     STORE_FAST                      5: stderr
                        256     LOAD_FAST                       0: self
                        258     LOAD_ATTR                       0: stdout
                        260     POP_JUMP_IF_FALSE               139 (to 278)
                        262     LOAD_FAST                       0: self
                        264     LOAD_ATTR                       2: _stdout_buff
                        266     STORE_FAST                      4: stdout
                        268     LOAD_FAST                       0: self
                        270     LOAD_ATTR                       0: stdout
                        272     LOAD_METHOD                     19: close
                        274     CALL_METHOD                     0
                        276     POP_TOP                         
                        278     LOAD_FAST                       0: self
                        280     LOAD_ATTR                       9: stderr
                        282     POP_JUMP_IF_FALSE               150 (to 300)
                        284     LOAD_FAST                       0: self
                        286     LOAD_ATTR                       10: _stderr_buff
                        288     STORE_FAST                      5: stderr
                        290     LOAD_FAST                       0: self
                        292     LOAD_ATTR                       9: stderr
                        294     LOAD_METHOD                     19: close
                        296     CALL_METHOD                     0
                        298     POP_TOP                         
                        300     LOAD_FAST                       4: stdout
                        302     POP_JUMP_IF_FALSE               156 (to 312)
                        304     LOAD_FAST                       4: stdout
                        306     LOAD_CONST                      5: 0
                        308     BINARY_SUBSCR                   
                        310     JUMP_FORWARD                    1 (to 314)
                        312     LOAD_CONST                      0: None
                        314     STORE_FAST                      4: stdout
                        316     LOAD_FAST                       5: stderr
                        318     POP_JUMP_IF_FALSE               164 (to 328)
                        320     LOAD_FAST                       5: stderr
                        322     LOAD_CONST                      5: 0
                        324     BINARY_SUBSCR                   
                        326     JUMP_FORWARD                    1 (to 330)
                        328     LOAD_CONST                      0: None
                        330     STORE_FAST                      5: stderr
                        332     LOAD_FAST                       4: stdout
                        334     LOAD_FAST                       5: stderr
                        336     BUILD_TUPLE                     2
                        338     RETURN_VALUE                    
                'Popen._communicate'
                [Code]
                    File Name: subprocess.py
                    Object Name: send_signal
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        'signal'
                        'SIGTERM'
                        'terminate'
                        'CTRL_C_EVENT'
                        'os'
                        'kill'
                        'pid'
                        'CTRL_BREAK_EVENT'
                        'ValueError'
                        'format'
                    [Var Names]
                        'self'
                        'sig'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Send a signal to the process.'
                        None
                        'Unsupported signal: {}'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           1 (is not)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       1: sig
                        16      LOAD_GLOBAL                     1: signal
                        18      LOAD_ATTR                       2: SIGTERM
                        20      COMPARE_OP                      2 (==)
                        22      POP_JUMP_IF_FALSE               18 (to 36)
                        24      LOAD_FAST                       0: self
                        26      LOAD_METHOD                     3: terminate
                        28      CALL_METHOD                     0
                        30      POP_TOP                         
                        32      LOAD_CONST                      1: None
                        34      RETURN_VALUE                    
                        36      LOAD_FAST                       1: sig
                        38      LOAD_GLOBAL                     1: signal
                        40      LOAD_ATTR                       4: CTRL_C_EVENT
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               33 (to 66)
                        46      LOAD_GLOBAL                     5: os
                        48      LOAD_METHOD                     6: kill
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       7: pid
                        54      LOAD_GLOBAL                     1: signal
                        56      LOAD_ATTR                       4: CTRL_C_EVENT
                        58      CALL_METHOD                     2
                        60      POP_TOP                         
                        62      LOAD_CONST                      1: None
                        64      RETURN_VALUE                    
                        66      LOAD_FAST                       1: sig
                        68      LOAD_GLOBAL                     1: signal
                        70      LOAD_ATTR                       8: CTRL_BREAK_EVENT
                        72      COMPARE_OP                      2 (==)
                        74      POP_JUMP_IF_FALSE               48 (to 96)
                        76      LOAD_GLOBAL                     5: os
                        78      LOAD_METHOD                     6: kill
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       7: pid
                        84      LOAD_GLOBAL                     1: signal
                        86      LOAD_ATTR                       8: CTRL_BREAK_EVENT
                        88      CALL_METHOD                     2
                        90      POP_TOP                         
                        92      LOAD_CONST                      1: None
                        94      RETURN_VALUE                    
                        96      LOAD_GLOBAL                     9: ValueError
                        98      LOAD_CONST                      2: 'Unsupported signal: {}'
                        100     LOAD_METHOD                     10: format
                        102     LOAD_FAST                       1: sig
                        104     CALL_METHOD                     1
                        106     CALL_FUNCTION                   1
                        108     RAISE_VARARGS                   1
                'Popen.send_signal'
                [Code]
                    File Name: subprocess.py
                    Object Name: terminate
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        '_winapi'
                        'TerminateProcess'
                        '_handle'
                        'PermissionError'
                        'GetExitCodeProcess'
                        'STILL_ACTIVE'
                    [Var Names]
                        'self'
                        'rc'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Terminates the process.'
                        None
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           1 (is not)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      SETUP_FINALLY                   10 (to 36)
                        16      LOAD_GLOBAL                     1: _winapi
                        18      LOAD_METHOD                     2: TerminateProcess
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: _handle
                        24      LOAD_CONST                      2: 1
                        26      CALL_METHOD                     2
                        28      POP_TOP                         
                        30      POP_BLOCK                       
                        32      LOAD_CONST                      1: None
                        34      RETURN_VALUE                    
                        36      DUP_TOP                         
                        38      LOAD_GLOBAL                     4: PermissionError
                        40      JUMP_IF_NOT_EXC_MATCH           42 (to 84)
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      LOAD_GLOBAL                     1: _winapi
                        50      LOAD_METHOD                     5: GetExitCodeProcess
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       3: _handle
                        56      CALL_METHOD                     1
                        58      STORE_FAST                      1: rc
                        60      LOAD_FAST                       1: rc
                        62      LOAD_GLOBAL                     1: _winapi
                        64      LOAD_ATTR                       6: STILL_ACTIVE
                        66      COMPARE_OP                      2 (==)
                        68      POP_JUMP_IF_FALSE               36 (to 72)
                        70      RAISE_VARARGS                   0
                        72      LOAD_FAST                       1: rc
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      0: returncode
                        78      POP_EXCEPT                      
                        80      LOAD_CONST                      1: None
                        82      RETURN_VALUE                    
                        84      RERAISE                         0
                'Popen.terminate'
                [Code]
                    File Name: subprocess.py
                    Object Name: _get_handles
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'PIPE'
                        'os'
                        'pipe'
                        'pipesize'
                        'hasattr'
                        'fcntl'
                        'F_SETPIPE_SZ'
                        'DEVNULL'
                        '_get_devnull'
                        'isinstance'
                        'int'
                        'fileno'
                        'STDOUT'
                        'sys'
                        '__stdout__'
                    [Var Names]
                        'self'
                        'stdin'
                        'stdout'
                        'stderr'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct and return tuple with IO objects:\n            p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite\n            '
                        (
                            -1
                            -1
                        )
                        None
                        0
                        'F_SETPIPE_SZ'
                        -1
                    [Disassembly]
                        0       LOAD_CONST                      1: (-1, -1)
                        2       UNPACK_SEQUENCE                 2
                        4       STORE_FAST                      4: p2cread
                        6       STORE_FAST                      5: p2cwrite
                        8       LOAD_CONST                      1: (-1, -1)
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      6: c2pread
                        14      STORE_FAST                      7: c2pwrite
                        16      LOAD_CONST                      1: (-1, -1)
                        18      UNPACK_SEQUENCE                 2
                        20      STORE_FAST                      8: errread
                        22      STORE_FAST                      9: errwrite
                        24      LOAD_FAST                       1: stdin
                        26      LOAD_CONST                      2: None
                        28      IS_OP                           0 (is)
                        30      POP_JUMP_IF_FALSE               17 (to 34)
                        32      JUMP_FORWARD                    51 (to 136)
                        34      LOAD_FAST                       1: stdin
                        36      LOAD_GLOBAL                     0: PIPE
                        38      COMPARE_OP                      2 (==)
                        40      POP_JUMP_IF_FALSE               47 (to 94)
                        42      LOAD_GLOBAL                     1: os
                        44      LOAD_METHOD                     2: pipe
                        46      CALL_METHOD                     0
                        48      UNPACK_SEQUENCE                 2
                        50      STORE_FAST                      4: p2cread
                        52      STORE_FAST                      5: p2cwrite
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       3: pipesize
                        58      LOAD_CONST                      3: 0
                        60      COMPARE_OP                      4 (>)
                        62      POP_JUMP_IF_FALSE               46 (to 92)
                        64      LOAD_GLOBAL                     4: hasattr
                        66      LOAD_GLOBAL                     5: fcntl
                        68      LOAD_CONST                      4: 'F_SETPIPE_SZ'
                        70      CALL_FUNCTION                   2
                        72      POP_JUMP_IF_FALSE               46 (to 92)
                        74      LOAD_GLOBAL                     5: fcntl
                        76      LOAD_METHOD                     5: fcntl
                        78      LOAD_FAST                       5: p2cwrite
                        80      LOAD_GLOBAL                     5: fcntl
                        82      LOAD_ATTR                       6: F_SETPIPE_SZ
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       3: pipesize
                        88      CALL_METHOD                     3
                        90      POP_TOP                         
                        92      JUMP_FORWARD                    21 (to 136)
                        94      LOAD_FAST                       1: stdin
                        96      LOAD_GLOBAL                     7: DEVNULL
                        98      COMPARE_OP                      2 (==)
                        100     POP_JUMP_IF_FALSE               56 (to 112)
                        102     LOAD_FAST                       0: self
                        104     LOAD_METHOD                     8: _get_devnull
                        106     CALL_METHOD                     0
                        108     STORE_FAST                      4: p2cread
                        110     JUMP_FORWARD                    12 (to 136)
                        112     LOAD_GLOBAL                     9: isinstance
                        114     LOAD_FAST                       1: stdin
                        116     LOAD_GLOBAL                     10: int
                        118     CALL_FUNCTION                   2
                        120     POP_JUMP_IF_FALSE               64 (to 128)
                        122     LOAD_FAST                       1: stdin
                        124     STORE_FAST                      4: p2cread
                        126     JUMP_FORWARD                    4 (to 136)
                        128     LOAD_FAST                       1: stdin
                        130     LOAD_METHOD                     11: fileno
                        132     CALL_METHOD                     0
                        134     STORE_FAST                      4: p2cread
                        136     LOAD_FAST                       2: stdout
                        138     LOAD_CONST                      2: None
                        140     IS_OP                           0 (is)
                        142     POP_JUMP_IF_FALSE               73 (to 146)
                        144     JUMP_FORWARD                    51 (to 248)
                        146     LOAD_FAST                       2: stdout
                        148     LOAD_GLOBAL                     0: PIPE
                        150     COMPARE_OP                      2 (==)
                        152     POP_JUMP_IF_FALSE               103 (to 206)
                        154     LOAD_GLOBAL                     1: os
                        156     LOAD_METHOD                     2: pipe
                        158     CALL_METHOD                     0
                        160     UNPACK_SEQUENCE                 2
                        162     STORE_FAST                      6: c2pread
                        164     STORE_FAST                      7: c2pwrite
                        166     LOAD_FAST                       0: self
                        168     LOAD_ATTR                       3: pipesize
                        170     LOAD_CONST                      3: 0
                        172     COMPARE_OP                      4 (>)
                        174     POP_JUMP_IF_FALSE               102 (to 204)
                        176     LOAD_GLOBAL                     4: hasattr
                        178     LOAD_GLOBAL                     5: fcntl
                        180     LOAD_CONST                      4: 'F_SETPIPE_SZ'
                        182     CALL_FUNCTION                   2
                        184     POP_JUMP_IF_FALSE               102 (to 204)
                        186     LOAD_GLOBAL                     5: fcntl
                        188     LOAD_METHOD                     5: fcntl
                        190     LOAD_FAST                       7: c2pwrite
                        192     LOAD_GLOBAL                     5: fcntl
                        194     LOAD_ATTR                       6: F_SETPIPE_SZ
                        196     LOAD_FAST                       0: self
                        198     LOAD_ATTR                       3: pipesize
                        200     CALL_METHOD                     3
                        202     POP_TOP                         
                        204     JUMP_FORWARD                    21 (to 248)
                        206     LOAD_FAST                       2: stdout
                        208     LOAD_GLOBAL                     7: DEVNULL
                        210     COMPARE_OP                      2 (==)
                        212     POP_JUMP_IF_FALSE               112 (to 224)
                        214     LOAD_FAST                       0: self
                        216     LOAD_METHOD                     8: _get_devnull
                        218     CALL_METHOD                     0
                        220     STORE_FAST                      7: c2pwrite
                        222     JUMP_FORWARD                    12 (to 248)
                        224     LOAD_GLOBAL                     9: isinstance
                        226     LOAD_FAST                       2: stdout
                        228     LOAD_GLOBAL                     10: int
                        230     CALL_FUNCTION                   2
                        232     POP_JUMP_IF_FALSE               120 (to 240)
                        234     LOAD_FAST                       2: stdout
                        236     STORE_FAST                      7: c2pwrite
                        238     JUMP_FORWARD                    4 (to 248)
                        240     LOAD_FAST                       2: stdout
                        242     LOAD_METHOD                     11: fileno
                        244     CALL_METHOD                     0
                        246     STORE_FAST                      7: c2pwrite
                        248     LOAD_FAST                       3: stderr
                        250     LOAD_CONST                      2: None
                        252     IS_OP                           0 (is)
                        254     POP_JUMP_IF_FALSE               129 (to 258)
                        256     JUMP_FORWARD                    68 (to 394)
                        258     LOAD_FAST                       3: stderr
                        260     LOAD_GLOBAL                     0: PIPE
                        262     COMPARE_OP                      2 (==)
                        264     POP_JUMP_IF_FALSE               159 (to 318)
                        266     LOAD_GLOBAL                     1: os
                        268     LOAD_METHOD                     2: pipe
                        270     CALL_METHOD                     0
                        272     UNPACK_SEQUENCE                 2
                        274     STORE_FAST                      8: errread
                        276     STORE_FAST                      9: errwrite
                        278     LOAD_FAST                       0: self
                        280     LOAD_ATTR                       3: pipesize
                        282     LOAD_CONST                      3: 0
                        284     COMPARE_OP                      4 (>)
                        286     POP_JUMP_IF_FALSE               158 (to 316)
                        288     LOAD_GLOBAL                     4: hasattr
                        290     LOAD_GLOBAL                     5: fcntl
                        292     LOAD_CONST                      4: 'F_SETPIPE_SZ'
                        294     CALL_FUNCTION                   2
                        296     POP_JUMP_IF_FALSE               158 (to 316)
                        298     LOAD_GLOBAL                     5: fcntl
                        300     LOAD_METHOD                     5: fcntl
                        302     LOAD_FAST                       9: errwrite
                        304     LOAD_GLOBAL                     5: fcntl
                        306     LOAD_ATTR                       6: F_SETPIPE_SZ
                        308     LOAD_FAST                       0: self
                        310     LOAD_ATTR                       3: pipesize
                        312     CALL_METHOD                     3
                        314     POP_TOP                         
                        316     JUMP_FORWARD                    38 (to 394)
                        318     LOAD_FAST                       3: stderr
                        320     LOAD_GLOBAL                     12: STDOUT
                        322     COMPARE_OP                      2 (==)
                        324     POP_JUMP_IF_FALSE               176 (to 352)
                        326     LOAD_FAST                       7: c2pwrite
                        328     LOAD_CONST                      5: -1
                        330     COMPARE_OP                      3 (!=)
                        332     POP_JUMP_IF_FALSE               170 (to 340)
                        334     LOAD_FAST                       7: c2pwrite
                        336     STORE_FAST                      9: errwrite
                        338     JUMP_FORWARD                    27 (to 394)
                        340     LOAD_GLOBAL                     13: sys
                        342     LOAD_ATTR                       14: __stdout__
                        344     LOAD_METHOD                     11: fileno
                        346     CALL_METHOD                     0
                        348     STORE_FAST                      9: errwrite
                        350     JUMP_FORWARD                    21 (to 394)
                        352     LOAD_FAST                       3: stderr
                        354     LOAD_GLOBAL                     7: DEVNULL
                        356     COMPARE_OP                      2 (==)
                        358     POP_JUMP_IF_FALSE               185 (to 370)
                        360     LOAD_FAST                       0: self
                        362     LOAD_METHOD                     8: _get_devnull
                        364     CALL_METHOD                     0
                        366     STORE_FAST                      9: errwrite
                        368     JUMP_FORWARD                    12 (to 394)
                        370     LOAD_GLOBAL                     9: isinstance
                        372     LOAD_FAST                       3: stderr
                        374     LOAD_GLOBAL                     10: int
                        376     CALL_FUNCTION                   2
                        378     POP_JUMP_IF_FALSE               193 (to 386)
                        380     LOAD_FAST                       3: stderr
                        382     STORE_FAST                      9: errwrite
                        384     JUMP_FORWARD                    4 (to 394)
                        386     LOAD_FAST                       3: stderr
                        388     LOAD_METHOD                     11: fileno
                        390     CALL_METHOD                     0
                        392     STORE_FAST                      9: errwrite
                        394     LOAD_FAST                       4: p2cread
                        396     LOAD_FAST                       5: p2cwrite
                        398     LOAD_FAST                       6: c2pread
                        400     LOAD_FAST                       7: c2pwrite
                        402     LOAD_FAST                       8: errread
                        404     LOAD_FAST                       9: errwrite
                        406     BUILD_TUPLE                     6
                        408     RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _posix_spawn
                    Arg Count: 11
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 18
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'environ'
                        'getattr'
                        'signal'
                        'append'
                        'POSIX_SPAWN_CLOSE'
                        'POSIX_SPAWN_DUP2'
                        'posix_spawn'
                        'pid'
                        '_child_created'
                        '_close_pipe_fds'
                    [Var Names]
                        'self'
                        'args'
                        'executable'
                        'env'
                        'restore_signals'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        'kwargs'
                        'sigset'
                        'signame'
                        'signum'
                        'file_actions'
                        'fd'
                        'fd2'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Execute program using os.posix_spawn().'
                        None
                        (
                            'SIGPIPE'
                            'SIGXFZ'
                            'SIGXFSZ'
                        )
                        'setsigdef'
                        -1
                        0
                        1
                        2
                        'file_actions'
                        True
                    [Disassembly]
                        0       LOAD_FAST                       3: env
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               7 (to 14)
                        8       LOAD_GLOBAL                     0: os
                        10      LOAD_ATTR                       1: environ
                        12      STORE_FAST                      3: env
                        14      BUILD_MAP                       0
                        16      STORE_FAST                      11: kwargs
                        18      LOAD_FAST                       4: restore_signals
                        20      POP_JUMP_IF_FALSE               37 (to 74)
                        22      BUILD_LIST                      0
                        24      STORE_FAST                      12: sigset
                        26      LOAD_CONST                      2: ('SIGPIPE', 'SIGXFZ', 'SIGXFSZ')
                        28      GET_ITER                        
                        30      FOR_ITER                        17 (to 66)
                        32      STORE_FAST                      13: signame
                        34      LOAD_GLOBAL                     2: getattr
                        36      LOAD_GLOBAL                     3: signal
                        38      LOAD_FAST                       13: signame
                        40      LOAD_CONST                      1: None
                        42      CALL_FUNCTION                   3
                        44      STORE_FAST                      14: signum
                        46      LOAD_FAST                       14: signum
                        48      LOAD_CONST                      1: None
                        50      IS_OP                           1 (is not)
                        52      POP_JUMP_IF_FALSE               32 (to 64)
                        54      LOAD_FAST                       12: sigset
                        56      LOAD_METHOD                     4: append
                        58      LOAD_FAST                       14: signum
                        60      CALL_METHOD                     1
                        62      POP_TOP                         
                        64      JUMP_ABSOLUTE                   15 (to 30)
                        66      LOAD_FAST                       12: sigset
                        68      LOAD_FAST                       11: kwargs
                        70      LOAD_CONST                      3: 'setsigdef'
                        72      STORE_SUBSCR                    
                        74      BUILD_LIST                      0
                        76      STORE_FAST                      15: file_actions
                        78      LOAD_FAST                       6: p2cwrite
                        80      LOAD_FAST                       7: c2pread
                        82      LOAD_FAST                       9: errread
                        84      BUILD_TUPLE                     3
                        86      GET_ITER                        
                        88      FOR_ITER                        14 (to 118)
                        90      STORE_FAST                      16: fd
                        92      LOAD_FAST                       16: fd
                        94      LOAD_CONST                      4: -1
                        96      COMPARE_OP                      3 (!=)
                        98      POP_JUMP_IF_FALSE               58 (to 116)
                        100     LOAD_FAST                       15: file_actions
                        102     LOAD_METHOD                     4: append
                        104     LOAD_GLOBAL                     0: os
                        106     LOAD_ATTR                       5: POSIX_SPAWN_CLOSE
                        108     LOAD_FAST                       16: fd
                        110     BUILD_TUPLE                     2
                        112     CALL_METHOD                     1
                        114     POP_TOP                         
                        116     JUMP_ABSOLUTE                   44 (to 88)
                        118     LOAD_FAST                       5: p2cread
                        120     LOAD_CONST                      5: 0
                        122     BUILD_TUPLE                     2
                        124     LOAD_FAST                       8: c2pwrite
                        126     LOAD_CONST                      6: 1
                        128     BUILD_TUPLE                     2
                        130     LOAD_FAST                       10: errwrite
                        132     LOAD_CONST                      7: 2
                        134     BUILD_TUPLE                     2
                        136     BUILD_TUPLE                     3
                        138     GET_ITER                        
                        140     FOR_ITER                        17 (to 176)
                        142     UNPACK_SEQUENCE                 2
                        144     STORE_FAST                      16: fd
                        146     STORE_FAST                      17: fd2
                        148     LOAD_FAST                       16: fd
                        150     LOAD_CONST                      4: -1
                        152     COMPARE_OP                      3 (!=)
                        154     POP_JUMP_IF_FALSE               87 (to 174)
                        156     LOAD_FAST                       15: file_actions
                        158     LOAD_METHOD                     4: append
                        160     LOAD_GLOBAL                     0: os
                        162     LOAD_ATTR                       6: POSIX_SPAWN_DUP2
                        164     LOAD_FAST                       16: fd
                        166     LOAD_FAST                       17: fd2
                        168     BUILD_TUPLE                     3
                        170     CALL_METHOD                     1
                        172     POP_TOP                         
                        174     JUMP_ABSOLUTE                   70 (to 140)
                        176     LOAD_FAST                       15: file_actions
                        178     POP_JUMP_IF_FALSE               94 (to 188)
                        180     LOAD_FAST                       15: file_actions
                        182     LOAD_FAST                       11: kwargs
                        184     LOAD_CONST                      8: 'file_actions'
                        186     STORE_SUBSCR                    
                        188     LOAD_GLOBAL                     0: os
                        190     LOAD_ATTR                       7: posix_spawn
                        192     LOAD_FAST                       2: executable
                        194     LOAD_FAST                       1: args
                        196     LOAD_FAST                       3: env
                        198     BUILD_TUPLE                     3
                        200     BUILD_MAP                       0
                        202     LOAD_FAST                       11: kwargs
                        204     DICT_MERGE                      1
                        206     CALL_FUNCTION_EX                1
                        208     LOAD_FAST                       0: self
                        210     STORE_ATTR                      8: pid
                        212     LOAD_CONST                      9: True
                        214     LOAD_FAST                       0: self
                        216     STORE_ATTR                      9: _child_created
                        218     LOAD_FAST                       0: self
                        220     LOAD_METHOD                     10: _close_pipe_fds
                        222     LOAD_FAST                       5: p2cread
                        224     LOAD_FAST                       6: p2cwrite
                        226     LOAD_FAST                       7: c2pread
                        228     LOAD_FAST                       8: c2pwrite
                        230     LOAD_FAST                       9: errread
                        232     LOAD_FAST                       10: errwrite
                        234     CALL_METHOD                     6
                        236     POP_TOP                         
                        238     LOAD_CONST                      1: None
                        240     RETURN_VALUE                    
                'Popen._posix_spawn'
                [Code]
                    File Name: subprocess.py
                    Object Name: _execute_child
                    Arg Count: 23
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 45
                    Stack Size: 23
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'isinstance'
                        'str'
                        'bytes'
                        'os'
                        'PathLike'
                        'TypeError'
                        'list'
                        'hasattr'
                        'sys'
                        'audit'
                        '_USE_POSIX_SPAWN'
                        'path'
                        'dirname'
                        '_posix_spawn'
                        'pipe'
                        'append'
                        'dup'
                        'close'
                        'items'
                        'fsencode'
                        'ValueError'
                        'tuple'
                        'get_exec_path'
                        'set'
                        'add'
                        '_posixsubprocess'
                        'fork_exec'
                        'sorted'
                        'map'
                        'int'
                        'pid'
                        '_child_created'
                        '_close_pipe_fds'
                        'bytearray'
                        'read'
                        'len'
                        'waitpid'
                        '_handle_exitstatus'
                        'maxsize'
                        'returncode'
                        'ChildProcessError'
                        'split'
                        'decode'
                        'format'
                        'getattr'
                        'builtins'
                        'SubprocessError'
                        'issubclass'
                        'OSError'
                        'strerror'
                    [Var Names]
                        'self'
                        'args'
                        'executable'
                        'preexec_fn'
                        'close_fds'
                        'pass_fds'
                        'cwd'
                        'env'
                        'startupinfo'
                        'creationflags'
                        'shell'
                        'p2cread'
                        'p2cwrite'
                        'c2pread'
                        'c2pwrite'
                        'errread'
                        'errwrite'
                        'restore_signals'
                        'gid'
                        'gids'
                        'uid'
                        'umask'
                        'start_new_session'
                        'unix_shell'
                        'orig_executable'
                        'errpipe_read'
                        'errpipe_write'
                        'low_fds_to_close'
                        'low_fd'
                        'env_list'
                        'k'
                        'v'
                        'executable_list'
                        'fds_to_keep'
                        'errpipe_data'
                        'part'
                        'pid'
                        'sts'
                        'exception_name'
                        'hex_errno'
                        'err_msg'
                        'child_exception_type'
                        'errno_num'
                        'child_exec_never_called'
                        'err_filename'
                    [Free Vars]
                    [Cell Vars]
                        'executable'
                    [Constants]
                        'Execute program (POSIX version)'
                        'path-like args is not allowed when shell is true'
                        'getandroidapilevel'
                        '/system/bin/sh'
                        '/bin/sh'
                        '-c'
                        0
                        None
                        'subprocess.Popen'
                        -1
                        2
                        3
                        b'='
                        'illegal environment variable name'
                        [Code]
                            File Name: subprocess.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 6
                            Flags: 0x00000033 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR)
                            [Names]
                                'os'
                                'path'
                                'join'
                                'fsencode'
                            [Var Names]
                                '.0'
                                'dir'
                            [Free Vars]
                                'executable'
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        13 (to 32)
                                6       STORE_FAST                      1: dir
                                8       LOAD_GLOBAL                     0: os
                                10      LOAD_ATTR                       1: path
                                12      LOAD_METHOD                     2: join
                                14      LOAD_GLOBAL                     0: os
                                16      LOAD_METHOD                     3: fsencode
                                18      LOAD_FAST                       1: dir
                                20      CALL_METHOD                     1
                                22      LOAD_DEREF                      0: executable
                                24      CALL_METHOD                     2
                                26      YIELD_VALUE                     
                                28      POP_TOP                         
                                30      JUMP_ABSOLUTE                   2 (to 4)
                                32      LOAD_CONST                      0: None
                                34      RETURN_VALUE                    
                        'Popen._execute_child.<locals>.<genexpr>'
                        True
                        50000
                        b':'
                        b'SubprocessError'
                        b'0'
                        'Bad exception data from child: {!r}'
                        'ascii'
                        16
                        'noexec'
                        ''
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: args
                        4       LOAD_GLOBAL                     1: str
                        6       LOAD_GLOBAL                     2: bytes
                        8       BUILD_TUPLE                     2
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_FALSE               11 (to 22)
                        14      LOAD_FAST                       1: args
                        16      BUILD_LIST                      1
                        18      STORE_FAST                      1: args
                        20      JUMP_FORWARD                    20 (to 62)
                        22      LOAD_GLOBAL                     0: isinstance
                        24      LOAD_FAST                       1: args
                        26      LOAD_GLOBAL                     3: os
                        28      LOAD_ATTR                       4: PathLike
                        30      CALL_FUNCTION                   2
                        32      POP_JUMP_IF_FALSE               27 (to 54)
                        34      LOAD_FAST                       10: shell
                        36      POP_JUMP_IF_FALSE               23 (to 46)
                        38      LOAD_GLOBAL                     5: TypeError
                        40      LOAD_CONST                      1: 'path-like args is not allowed when shell is true'
                        42      CALL_FUNCTION                   1
                        44      RAISE_VARARGS                   1
                        46      LOAD_FAST                       1: args
                        48      BUILD_LIST                      1
                        50      STORE_FAST                      1: args
                        52      JUMP_FORWARD                    4 (to 62)
                        54      LOAD_GLOBAL                     6: list
                        56      LOAD_FAST                       1: args
                        58      CALL_FUNCTION                   1
                        60      STORE_FAST                      1: args
                        62      LOAD_FAST                       10: shell
                        64      POP_JUMP_IF_FALSE               54 (to 108)
                        66      LOAD_GLOBAL                     7: hasattr
                        68      LOAD_GLOBAL                     8: sys
                        70      LOAD_CONST                      2: 'getandroidapilevel'
                        72      CALL_FUNCTION                   2
                        74      POP_JUMP_IF_FALSE               40 (to 80)
                        76      LOAD_CONST                      3: '/system/bin/sh'
                        78      JUMP_FORWARD                    1 (to 82)
                        80      LOAD_CONST                      4: '/bin/sh'
                        82      STORE_FAST                      23: unix_shell
                        84      LOAD_FAST                       23: unix_shell
                        86      LOAD_CONST                      5: '-c'
                        88      BUILD_LIST                      2
                        90      LOAD_FAST                       1: args
                        92      BINARY_ADD                      
                        94      STORE_FAST                      1: args
                        96      LOAD_DEREF                      0: executable
                        98      POP_JUMP_IF_FALSE               54 (to 108)
                        100     LOAD_DEREF                      0: executable
                        102     LOAD_FAST                       1: args
                        104     LOAD_CONST                      6: 0
                        106     STORE_SUBSCR                    
                        108     LOAD_DEREF                      0: executable
                        110     LOAD_CONST                      7: None
                        112     IS_OP                           0 (is)
                        114     POP_JUMP_IF_FALSE               62 (to 124)
                        116     LOAD_FAST                       1: args
                        118     LOAD_CONST                      6: 0
                        120     BINARY_SUBSCR                   
                        122     STORE_DEREF                     0: executable
                        124     LOAD_GLOBAL                     8: sys
                        126     LOAD_METHOD                     9: audit
                        128     LOAD_CONST                      8: 'subprocess.Popen'
                        130     LOAD_DEREF                      0: executable
                        132     LOAD_FAST                       1: args
                        134     LOAD_FAST                       6: cwd
                        136     LOAD_FAST                       7: env
                        138     CALL_METHOD                     5
                        140     POP_TOP                         
                        142     LOAD_GLOBAL                     10: _USE_POSIX_SPAWN
                        144     POP_JUMP_IF_FALSE               149 (to 298)
                        146     LOAD_GLOBAL                     3: os
                        148     LOAD_ATTR                       11: path
                        150     LOAD_METHOD                     12: dirname
                        152     LOAD_DEREF                      0: executable
                        154     CALL_METHOD                     1
                        156     POP_JUMP_IF_FALSE               149 (to 298)
                        158     LOAD_FAST                       3: preexec_fn
                        160     LOAD_CONST                      7: None
                        162     IS_OP                           0 (is)
                        164     POP_JUMP_IF_FALSE               149 (to 298)
                        166     LOAD_FAST                       4: close_fds
                        168     POP_JUMP_IF_TRUE                149 (to 298)
                        170     LOAD_FAST                       5: pass_fds
                        172     POP_JUMP_IF_TRUE                149 (to 298)
                        174     LOAD_FAST                       6: cwd
                        176     LOAD_CONST                      7: None
                        178     IS_OP                           0 (is)
                        180     POP_JUMP_IF_FALSE               149 (to 298)
                        182     LOAD_FAST                       11: p2cread
                        184     LOAD_CONST                      9: -1
                        186     COMPARE_OP                      2 (==)
                        188     POP_JUMP_IF_TRUE                99 (to 198)
                        190     LOAD_FAST                       11: p2cread
                        192     LOAD_CONST                      10: 2
                        194     COMPARE_OP                      4 (>)
                        196     POP_JUMP_IF_FALSE               149 (to 298)
                        198     LOAD_FAST                       14: c2pwrite
                        200     LOAD_CONST                      9: -1
                        202     COMPARE_OP                      2 (==)
                        204     POP_JUMP_IF_TRUE                107 (to 214)
                        206     LOAD_FAST                       14: c2pwrite
                        208     LOAD_CONST                      10: 2
                        210     COMPARE_OP                      4 (>)
                        212     POP_JUMP_IF_FALSE               149 (to 298)
                        214     LOAD_FAST                       16: errwrite
                        216     LOAD_CONST                      9: -1
                        218     COMPARE_OP                      2 (==)
                        220     POP_JUMP_IF_TRUE                115 (to 230)
                        222     LOAD_FAST                       16: errwrite
                        224     LOAD_CONST                      10: 2
                        226     COMPARE_OP                      4 (>)
                        228     POP_JUMP_IF_FALSE               149 (to 298)
                        230     LOAD_FAST                       22: start_new_session
                        232     POP_JUMP_IF_TRUE                149 (to 298)
                        234     LOAD_FAST                       18: gid
                        236     LOAD_CONST                      7: None
                        238     IS_OP                           0 (is)
                        240     POP_JUMP_IF_FALSE               149 (to 298)
                        242     LOAD_FAST                       19: gids
                        244     LOAD_CONST                      7: None
                        246     IS_OP                           0 (is)
                        248     POP_JUMP_IF_FALSE               149 (to 298)
                        250     LOAD_FAST                       20: uid
                        252     LOAD_CONST                      7: None
                        254     IS_OP                           0 (is)
                        256     POP_JUMP_IF_FALSE               149 (to 298)
                        258     LOAD_FAST                       21: umask
                        260     LOAD_CONST                      6: 0
                        262     COMPARE_OP                      0 (<)
                        264     POP_JUMP_IF_FALSE               149 (to 298)
                        266     LOAD_FAST                       0: self
                        268     LOAD_METHOD                     13: _posix_spawn
                        270     LOAD_FAST                       1: args
                        272     LOAD_DEREF                      0: executable
                        274     LOAD_FAST                       7: env
                        276     LOAD_FAST                       17: restore_signals
                        278     LOAD_FAST                       11: p2cread
                        280     LOAD_FAST                       12: p2cwrite
                        282     LOAD_FAST                       13: c2pread
                        284     LOAD_FAST                       14: c2pwrite
                        286     LOAD_FAST                       15: errread
                        288     LOAD_FAST                       16: errwrite
                        290     CALL_METHOD                     10
                        292     POP_TOP                         
                        294     LOAD_CONST                      7: None
                        296     RETURN_VALUE                    
                        298     LOAD_DEREF                      0: executable
                        300     STORE_FAST                      24: orig_executable
                        302     LOAD_GLOBAL                     3: os
                        304     LOAD_METHOD                     14: pipe
                        306     CALL_METHOD                     0
                        308     UNPACK_SEQUENCE                 2
                        310     STORE_FAST                      25: errpipe_read
                        312     STORE_FAST                      26: errpipe_write
                        314     BUILD_LIST                      0
                        316     STORE_FAST                      27: low_fds_to_close
                        318     LOAD_FAST                       26: errpipe_write
                        320     LOAD_CONST                      11: 3
                        322     COMPARE_OP                      0 (<)
                        324     POP_JUMP_IF_FALSE               177 (to 354)
                        326     LOAD_FAST                       27: low_fds_to_close
                        328     LOAD_METHOD                     15: append
                        330     LOAD_FAST                       26: errpipe_write
                        332     CALL_METHOD                     1
                        334     POP_TOP                         
                        336     LOAD_GLOBAL                     3: os
                        338     LOAD_METHOD                     16: dup
                        340     LOAD_FAST                       26: errpipe_write
                        342     CALL_METHOD                     1
                        344     STORE_FAST                      26: errpipe_write
                        346     LOAD_FAST                       26: errpipe_write
                        348     LOAD_CONST                      11: 3
                        350     COMPARE_OP                      0 (<)
                        352     POP_JUMP_IF_TRUE                163 (to 326)
                        354     LOAD_FAST                       27: low_fds_to_close
                        356     GET_ITER                        
                        358     FOR_ITER                        7 (to 374)
                        360     STORE_FAST                      28: low_fd
                        362     LOAD_GLOBAL                     3: os
                        364     LOAD_METHOD                     17: close
                        366     LOAD_FAST                       28: low_fd
                        368     CALL_METHOD                     1
                        370     POP_TOP                         
                        372     JUMP_ABSOLUTE                   179 (to 358)
                        374     SETUP_FINALLY                   175 (to 726)
                        376     SETUP_FINALLY                   124 (to 626)
                        378     LOAD_FAST                       7: env
                        380     LOAD_CONST                      7: None
                        382     IS_OP                           1 (is not)
                        384     POP_JUMP_IF_FALSE               230 (to 460)
                        386     BUILD_LIST                      0
                        388     STORE_FAST                      29: env_list
                        390     LOAD_FAST                       7: env
                        392     LOAD_METHOD                     18: items
                        394     CALL_METHOD                     0
                        396     GET_ITER                        
                        398     FOR_ITER                        29 (to 458)
                        400     UNPACK_SEQUENCE                 2
                        402     STORE_FAST                      30: k
                        404     STORE_FAST                      31: v
                        406     LOAD_GLOBAL                     3: os
                        408     LOAD_METHOD                     19: fsencode
                        410     LOAD_FAST                       30: k
                        412     CALL_METHOD                     1
                        414     STORE_FAST                      30: k
                        416     LOAD_CONST                      12: b'='
                        418     LOAD_FAST                       30: k
                        420     CONTAINS_OP                     0 (in)
                        422     POP_JUMP_IF_FALSE               216 (to 432)
                        424     LOAD_GLOBAL                     20: ValueError
                        426     LOAD_CONST                      13: 'illegal environment variable name'
                        428     CALL_FUNCTION                   1
                        430     RAISE_VARARGS                   1
                        432     LOAD_FAST                       29: env_list
                        434     LOAD_METHOD                     15: append
                        436     LOAD_FAST                       30: k
                        438     LOAD_CONST                      12: b'='
                        440     BINARY_ADD                      
                        442     LOAD_GLOBAL                     3: os
                        444     LOAD_METHOD                     19: fsencode
                        446     LOAD_FAST                       31: v
                        448     CALL_METHOD                     1
                        450     BINARY_ADD                      
                        452     CALL_METHOD                     1
                        454     POP_TOP                         
                        456     JUMP_ABSOLUTE                   199 (to 398)
                        458     JUMP_FORWARD                    2 (to 464)
                        460     LOAD_CONST                      7: None
                        462     STORE_FAST                      29: env_list
                        464     LOAD_GLOBAL                     3: os
                        466     LOAD_METHOD                     19: fsencode
                        468     LOAD_DEREF                      0: executable
                        470     CALL_METHOD                     1
                        472     STORE_DEREF                     0: executable
                        474     LOAD_GLOBAL                     3: os
                        476     LOAD_ATTR                       11: path
                        478     LOAD_METHOD                     12: dirname
                        480     LOAD_DEREF                      0: executable
                        482     CALL_METHOD                     1
                        484     POP_JUMP_IF_FALSE               247 (to 494)
                        486     LOAD_DEREF                      0: executable
                        488     BUILD_TUPLE                     1
                        490     STORE_FAST                      32: executable_list
                        492     JUMP_FORWARD                    14 (to 522)
                        494     LOAD_GLOBAL                     21: tuple
                        496     LOAD_CLOSURE                    0: executable
                        498     BUILD_TUPLE                     1
                        500     LOAD_CONST                      14: <CODE> <genexpr>
                        502     LOAD_CONST                      15: 'Popen._execute_child.<locals>.<genexpr>'
                        504     MAKE_FUNCTION                   8
                        506     LOAD_GLOBAL                     3: os
                        508     LOAD_METHOD                     22: get_exec_path
                        510     LOAD_FAST                       7: env
                        512     CALL_METHOD                     1
                        514     GET_ITER                        
                        516     CALL_FUNCTION                   1
                        518     CALL_FUNCTION                   1
                        520     STORE_FAST                      32: executable_list
                        522     LOAD_GLOBAL                     23: set
                        524     LOAD_FAST                       5: pass_fds
                        526     CALL_FUNCTION                   1
                        528     STORE_FAST                      33: fds_to_keep
                        530     LOAD_FAST                       33: fds_to_keep
                        532     LOAD_METHOD                     24: add
                        534     LOAD_FAST                       26: errpipe_write
                        536     CALL_METHOD                     1
                        538     POP_TOP                         
                        540     LOAD_GLOBAL                     25: _posixsubprocess
                        542     LOAD_METHOD                     26: fork_exec
                        544     LOAD_FAST                       1: args
                        546     LOAD_FAST                       32: executable_list
                        548     LOAD_FAST                       4: close_fds
                        550     LOAD_GLOBAL                     21: tuple
                        552     LOAD_GLOBAL                     27: sorted
                        554     LOAD_GLOBAL                     28: map
                        556     LOAD_GLOBAL                     29: int
                        558     LOAD_FAST                       33: fds_to_keep
                        560     CALL_FUNCTION                   2
                        562     CALL_FUNCTION                   1
                        564     CALL_FUNCTION                   1
                        566     LOAD_FAST                       6: cwd
                        568     LOAD_FAST                       29: env_list
                        570     LOAD_FAST                       11: p2cread
                        572     LOAD_FAST                       12: p2cwrite
                        574     LOAD_FAST                       13: c2pread
                        576     LOAD_FAST                       14: c2pwrite
                        578     LOAD_FAST                       15: errread
                        580     LOAD_FAST                       16: errwrite
                        582     LOAD_FAST                       25: errpipe_read
                        584     LOAD_FAST                       26: errpipe_write
                        586     LOAD_FAST                       17: restore_signals
                        588     LOAD_FAST                       22: start_new_session
                        590     LOAD_FAST                       18: gid
                        592     LOAD_FAST                       19: gids
                        594     LOAD_FAST                       20: uid
                        596     LOAD_FAST                       21: umask
                        598     LOAD_FAST                       3: preexec_fn
                        600     CALL_METHOD                     21
                        602     LOAD_FAST                       0: self
                        604     STORE_ATTR                      30: pid
                        606     LOAD_CONST                      16: True
                        608     LOAD_FAST                       0: self
                        610     STORE_ATTR                      31: _child_created
                        612     POP_BLOCK                       
                        614     LOAD_GLOBAL                     3: os
                        616     LOAD_METHOD                     17: close
                        618     LOAD_FAST                       26: errpipe_write
                        620     CALL_METHOD                     1
                        622     POP_TOP                         
                        624     JUMP_FORWARD                    6 (to 638)
                        626     LOAD_GLOBAL                     3: os
                        628     LOAD_METHOD                     17: close
                        630     LOAD_FAST                       26: errpipe_write
                        632     CALL_METHOD                     1
                        634     POP_TOP                         
                        636     RERAISE                         0
                        638     LOAD_FAST                       0: self
                        640     LOAD_METHOD                     32: _close_pipe_fds
                        642     LOAD_FAST                       11: p2cread
                        644     LOAD_FAST                       12: p2cwrite
                        646     LOAD_FAST                       13: c2pread
                        648     LOAD_FAST                       14: c2pwrite
                        650     LOAD_FAST                       15: errread
                        652     LOAD_FAST                       16: errwrite
                        654     CALL_METHOD                     6
                        656     POP_TOP                         
                        658     LOAD_GLOBAL                     33: bytearray
                        660     CALL_FUNCTION                   0
                        662     STORE_FAST                      34: errpipe_data
                        664     NOP                             
                        666     LOAD_GLOBAL                     3: os
                        668     LOAD_METHOD                     34: read
                        670     LOAD_FAST                       25: errpipe_read
                        672     LOAD_CONST                      17: 50000
                        674     CALL_METHOD                     2
                        676     STORE_FAST                      35: part
                        678     LOAD_FAST                       34: errpipe_data
                        680     LOAD_FAST                       35: part
                        682     INPLACE_ADD                     
                        684     STORE_FAST                      34: errpipe_data
                        686     LOAD_FAST                       35: part
                        688     POP_JUMP_IF_FALSE               353 (to 706)
                        692     LOAD_GLOBAL                     35: len
                        694     LOAD_FAST                       34: errpipe_data
                        696     CALL_FUNCTION                   1
                        698     LOAD_CONST                      17: 50000
                        700     COMPARE_OP                      4 (>)
                        702     POP_JUMP_IF_FALSE               354 (to 708)
                        706     JUMP_FORWARD                    2 (to 712)
                        708     JUMP_ABSOLUTE                   333 (to 666)
                        712     POP_BLOCK                       
                        714     LOAD_GLOBAL                     3: os
                        716     LOAD_METHOD                     17: close
                        718     LOAD_FAST                       25: errpipe_read
                        720     CALL_METHOD                     1
                        722     POP_TOP                         
                        724     JUMP_FORWARD                    6 (to 738)
                        726     LOAD_GLOBAL                     3: os
                        728     LOAD_METHOD                     17: close
                        730     LOAD_FAST                       25: errpipe_read
                        732     CALL_METHOD                     1
                        734     POP_TOP                         
                        736     RERAISE                         0
                        738     LOAD_FAST                       34: errpipe_data
                        740     POP_JUMP_IF_FALSE               504 (to 1008)
                        744     SETUP_FINALLY                   27 (to 800)
                        746     LOAD_GLOBAL                     3: os
                        748     LOAD_METHOD                     36: waitpid
                        750     LOAD_FAST                       0: self
                        752     LOAD_ATTR                       30: pid
                        754     LOAD_CONST                      6: 0
                        756     CALL_METHOD                     2
                        758     UNPACK_SEQUENCE                 2
                        760     STORE_FAST                      36: pid
                        762     STORE_FAST                      37: sts
                        764     LOAD_FAST                       36: pid
                        766     LOAD_FAST                       0: self
                        768     LOAD_ATTR                       30: pid
                        770     COMPARE_OP                      2 (==)
                        772     POP_JUMP_IF_FALSE               394 (to 788)
                        776     LOAD_FAST                       0: self
                        778     LOAD_METHOD                     37: _handle_exitstatus
                        780     LOAD_FAST                       37: sts
                        782     CALL_METHOD                     1
                        784     POP_TOP                         
                        786     JUMP_FORWARD                    4 (to 796)
                        788     LOAD_GLOBAL                     8: sys
                        790     LOAD_ATTR                       38: maxsize
                        792     LOAD_FAST                       0: self
                        794     STORE_ATTR                      39: returncode
                        796     POP_BLOCK                       
                        798     JUMP_FORWARD                    10 (to 820)
                        800     DUP_TOP                         
                        802     LOAD_GLOBAL                     40: ChildProcessError
                        804     JUMP_IF_NOT_EXC_MATCH           409 (to 818)
                        808     POP_TOP                         
                        810     POP_TOP                         
                        812     POP_TOP                         
                        814     POP_EXCEPT                      
                        816     JUMP_FORWARD                    1 (to 820)
                        818     RERAISE                         0
                        820     SETUP_FINALLY                   15 (to 852)
                        822     LOAD_FAST                       34: errpipe_data
                        824     LOAD_METHOD                     41: split
                        826     LOAD_CONST                      18: b':'
                        828     LOAD_CONST                      10: 2
                        830     CALL_METHOD                     2
                        832     UNPACK_SEQUENCE                 3
                        834     STORE_FAST                      38: exception_name
                        836     STORE_FAST                      39: hex_errno
                        838     STORE_FAST                      40: err_msg
                        840     LOAD_FAST                       40: err_msg
                        842     LOAD_METHOD                     42: decode
                        844     CALL_METHOD                     0
                        846     STORE_FAST                      40: err_msg
                        848     POP_BLOCK                       
                        850     JUMP_FORWARD                    21 (to 894)
                        852     DUP_TOP                         
                        854     LOAD_GLOBAL                     20: ValueError
                        856     JUMP_IF_NOT_EXC_MATCH           446 (to 892)
                        860     POP_TOP                         
                        862     POP_TOP                         
                        864     POP_TOP                         
                        866     LOAD_CONST                      19: b'SubprocessError'
                        868     STORE_FAST                      38: exception_name
                        870     LOAD_CONST                      20: b'0'
                        872     STORE_FAST                      39: hex_errno
                        874     LOAD_CONST                      21: 'Bad exception data from child: {!r}'
                        876     LOAD_METHOD                     43: format
                        878     LOAD_GLOBAL                     2: bytes
                        880     LOAD_FAST                       34: errpipe_data
                        882     CALL_FUNCTION                   1
                        884     CALL_METHOD                     1
                        886     STORE_FAST                      40: err_msg
                        888     POP_EXCEPT                      
                        890     JUMP_FORWARD                    1 (to 894)
                        892     RERAISE                         0
                        894     LOAD_GLOBAL                     44: getattr
                        896     LOAD_GLOBAL                     45: builtins
                        898     LOAD_FAST                       38: exception_name
                        900     LOAD_METHOD                     42: decode
                        902     LOAD_CONST                      22: 'ascii'
                        904     CALL_METHOD                     1
                        906     LOAD_GLOBAL                     46: SubprocessError
                        908     CALL_FUNCTION                   3
                        910     STORE_FAST                      41: child_exception_type
                        912     LOAD_GLOBAL                     47: issubclass
                        914     LOAD_FAST                       41: child_exception_type
                        916     LOAD_GLOBAL                     48: OSError
                        918     CALL_FUNCTION                   2
                        920     POP_JUMP_IF_FALSE               500 (to 1000)
                        924     LOAD_FAST                       39: hex_errno
                        926     POP_JUMP_IF_FALSE               500 (to 1000)
                        930     LOAD_GLOBAL                     29: int
                        932     LOAD_FAST                       39: hex_errno
                        934     LOAD_CONST                      23: 16
                        936     CALL_FUNCTION                   2
                        938     STORE_FAST                      42: errno_num
                        940     LOAD_FAST                       40: err_msg
                        942     LOAD_CONST                      24: 'noexec'
                        944     COMPARE_OP                      2 (==)
                        946     STORE_FAST                      43: child_exec_never_called
                        948     LOAD_FAST                       43: child_exec_never_called
                        950     POP_JUMP_IF_FALSE               482 (to 964)
                        954     LOAD_CONST                      25: ''
                        956     STORE_FAST                      40: err_msg
                        958     LOAD_FAST                       6: cwd
                        960     STORE_FAST                      44: err_filename
                        962     JUMP_FORWARD                    2 (to 968)
                        964     LOAD_FAST                       24: orig_executable
                        966     STORE_FAST                      44: err_filename
                        968     LOAD_FAST                       42: errno_num
                        970     LOAD_CONST                      6: 0
                        972     COMPARE_OP                      3 (!=)
                        974     POP_JUMP_IF_FALSE               494 (to 988)
                        978     LOAD_GLOBAL                     3: os
                        980     LOAD_METHOD                     49: strerror
                        982     LOAD_FAST                       42: errno_num
                        984     CALL_METHOD                     1
                        986     STORE_FAST                      40: err_msg
                        988     LOAD_FAST                       41: child_exception_type
                        990     LOAD_FAST                       42: errno_num
                        992     LOAD_FAST                       40: err_msg
                        994     LOAD_FAST                       44: err_filename
                        996     CALL_FUNCTION                   3
                        998     RAISE_VARARGS                   1
                        1000    LOAD_FAST                       41: child_exception_type
                        1002    LOAD_FAST                       40: err_msg
                        1004    CALL_FUNCTION                   1
                        1006    RAISE_VARARGS                   1
                        1008    LOAD_CONST                      7: None
                        1010    RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _handle_exitstatus
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                    [Var Names]
                        'self'
                        'sts'
                        'waitstatus_to_exitcode'
                        '_WIFSTOPPED'
                        '_WSTOPSIG'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'All callers to this function MUST hold self._waitpid_lock.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       3: _WIFSTOPPED
                        2       LOAD_FAST                       1: sts
                        4       CALL_FUNCTION                   1
                        6       POP_JUMP_IF_FALSE               12 (to 24)
                        8       LOAD_FAST                       4: _WSTOPSIG
                        10      LOAD_FAST                       1: sts
                        12      CALL_FUNCTION                   1
                        14      UNARY_NEGATIVE                  
                        16      LOAD_FAST                       0: self
                        18      STORE_ATTR                      0: returncode
                        20      LOAD_CONST                      1: None
                        22      RETURN_VALUE                    
                        24      LOAD_FAST                       2: waitstatus_to_exitcode
                        26      LOAD_FAST                       1: sts
                        28      CALL_FUNCTION                   1
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      0: returncode
                        34      LOAD_CONST                      1: None
                        36      RETURN_VALUE                    
                'Popen._handle_exitstatus'
                [Code]
                    File Name: subprocess.py
                    Object Name: _internal_poll
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        '_waitpid_lock'
                        'acquire'
                        'release'
                        'pid'
                        '_handle_exitstatus'
                        'OSError'
                        'errno'
                    [Var Names]
                        'self'
                        '_deadstate'
                        '_waitpid'
                        '_WNOHANG'
                        '_ECHILD'
                        'pid'
                        'sts'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Check if child process has terminated.  Returns returncode\n            attribute.\n\n            This method is called by __del__, so it cannot reference anything\n            outside of the local scope (nor can any methods it calls).\n\n            '
                        None
                        False
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               108 (to 216)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _waitpid_lock
                        14      LOAD_METHOD                     2: acquire
                        16      LOAD_CONST                      2: False
                        18      CALL_METHOD                     1
                        20      POP_JUMP_IF_TRUE                13 (to 26)
                        22      LOAD_CONST                      1: None
                        24      RETURN_VALUE                    
                        26      SETUP_FINALLY                   88 (to 204)
                        28      SETUP_FINALLY                   35 (to 100)
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       0: returncode
                        34      LOAD_CONST                      1: None
                        36      IS_OP                           1 (is not)
                        38      POP_JUMP_IF_FALSE               30 (to 60)
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       0: returncode
                        44      POP_BLOCK                       
                        46      POP_BLOCK                       
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       1: _waitpid_lock
                        52      LOAD_METHOD                     3: release
                        54      CALL_METHOD                     0
                        56      POP_TOP                         
                        58      RETURN_VALUE                    
                        60      LOAD_FAST                       2: _waitpid
                        62      LOAD_FAST                       0: self
                        64      LOAD_ATTR                       4: pid
                        66      LOAD_FAST                       3: _WNOHANG
                        68      CALL_FUNCTION                   2
                        70      UNPACK_SEQUENCE                 2
                        72      STORE_FAST                      5: pid
                        74      STORE_FAST                      6: sts
                        76      LOAD_FAST                       5: pid
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       4: pid
                        82      COMPARE_OP                      2 (==)
                        84      POP_JUMP_IF_FALSE               48 (to 96)
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     5: _handle_exitstatus
                        90      LOAD_FAST                       6: sts
                        92      CALL_METHOD                     1
                        94      POP_TOP                         
                        96      POP_BLOCK                       
                        98      JUMP_FORWARD                    34 (to 168)
                        100     DUP_TOP                         
                        102     LOAD_GLOBAL                     6: OSError
                        104     JUMP_IF_NOT_EXC_MATCH           83 (to 166)
                        106     POP_TOP                         
                        108     STORE_FAST                      7: e
                        110     POP_TOP                         
                        112     SETUP_FINALLY                   22 (to 158)
                        114     LOAD_FAST                       1: _deadstate
                        116     LOAD_CONST                      1: None
                        118     IS_OP                           1 (is not)
                        120     POP_JUMP_IF_FALSE               65 (to 130)
                        122     LOAD_FAST                       1: _deadstate
                        124     LOAD_FAST                       0: self
                        126     STORE_ATTR                      0: returncode
                        128     JUMP_FORWARD                    8 (to 146)
                        130     LOAD_FAST                       7: e
                        132     LOAD_ATTR                       7: errno
                        134     LOAD_FAST                       4: _ECHILD
                        136     COMPARE_OP                      2 (==)
                        138     POP_JUMP_IF_FALSE               73 (to 146)
                        140     LOAD_CONST                      3: 0
                        142     LOAD_FAST                       0: self
                        144     STORE_ATTR                      0: returncode
                        146     POP_BLOCK                       
                        148     POP_EXCEPT                      
                        150     LOAD_CONST                      1: None
                        152     STORE_FAST                      7: e
                        154     DELETE_FAST                     7: e
                        156     JUMP_FORWARD                    14 (to 186)
                        158     LOAD_CONST                      1: None
                        160     STORE_FAST                      7: e
                        162     DELETE_FAST                     7: e
                        164     RERAISE                         1
                        166     RERAISE                         0
                        168     POP_BLOCK                       
                        170     LOAD_FAST                       0: self
                        172     LOAD_ATTR                       1: _waitpid_lock
                        174     LOAD_METHOD                     3: release
                        176     CALL_METHOD                     0
                        178     POP_TOP                         
                        180     LOAD_FAST                       0: self
                        182     LOAD_ATTR                       0: returncode
                        184     RETURN_VALUE                    
                        186     POP_BLOCK                       
                        188     LOAD_FAST                       0: self
                        190     LOAD_ATTR                       1: _waitpid_lock
                        192     LOAD_METHOD                     3: release
                        194     CALL_METHOD                     0
                        196     POP_TOP                         
                        198     LOAD_FAST                       0: self
                        200     LOAD_ATTR                       0: returncode
                        202     RETURN_VALUE                    
                        204     LOAD_FAST                       0: self
                        206     LOAD_ATTR                       1: _waitpid_lock
                        208     LOAD_METHOD                     3: release
                        210     CALL_METHOD                     0
                        212     POP_TOP                         
                        214     RERAISE                         0
                        216     LOAD_FAST                       0: self
                        218     LOAD_ATTR                       0: returncode
                        220     RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _try_wait
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'waitpid'
                        'pid'
                        'ChildProcessError'
                    [Var Names]
                        'self'
                        'wait_flags'
                        'pid'
                        'sts'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'All callers to this function MUST hold self._waitpid_lock.'
                        0
                    [Disassembly]
                        0       SETUP_FINALLY                   14 (to 30)
                        2       LOAD_GLOBAL                     0: os
                        4       LOAD_METHOD                     1: waitpid
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       2: pid
                        10      LOAD_FAST                       1: wait_flags
                        12      CALL_METHOD                     2
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      2: pid
                        18      STORE_FAST                      3: sts
                        20      POP_BLOCK                       
                        22      LOAD_FAST                       2: pid
                        24      LOAD_FAST                       3: sts
                        26      BUILD_TUPLE                     2
                        28      RETURN_VALUE                    
                        30      DUP_TOP                         
                        32      LOAD_GLOBAL                     3: ChildProcessError
                        34      JUMP_IF_NOT_EXC_MATCH           31 (to 62)
                        36      POP_TOP                         
                        38      POP_TOP                         
                        40      POP_TOP                         
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       2: pid
                        46      STORE_FAST                      2: pid
                        48      LOAD_CONST                      1: 0
                        50      STORE_FAST                      3: sts
                        52      POP_EXCEPT                      
                        54      LOAD_FAST                       2: pid
                        56      LOAD_FAST                       3: sts
                        58      BUILD_TUPLE                     2
                        60      RETURN_VALUE                    
                        62      RERAISE                         0
                'Popen._try_wait'
                [Code]
                    File Name: subprocess.py
                    Object Name: _wait
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'returncode'
                        '_time'
                        '_waitpid_lock'
                        'acquire'
                        'release'
                        '_try_wait'
                        'os'
                        'WNOHANG'
                        'pid'
                        '_handle_exitstatus'
                        '_remaining_time'
                        'TimeoutExpired'
                        'args'
                        'min'
                        'time'
                        'sleep'
                    [Var Names]
                        'self'
                        'timeout'
                        'endtime'
                        'delay'
                        'pid'
                        'sts'
                        'remaining'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Internal implementation of wait() on POSIX.'
                        None
                        0.0005
                        True
                        False
                        0
                        2
                        0.05
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: returncode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           1 (is not)
                        8       POP_JUMP_IF_FALSE               8 (to 16)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       0: returncode
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       1: timeout
                        18      LOAD_CONST                      1: None
                        20      IS_OP                           1 (is not)
                        22      POP_JUMP_IF_FALSE               121 (to 242)
                        24      LOAD_GLOBAL                     1: _time
                        26      CALL_FUNCTION                   0
                        28      LOAD_FAST                       1: timeout
                        30      BINARY_ADD                      
                        32      STORE_FAST                      2: endtime
                        34      LOAD_CONST                      2: 0.0005
                        36      STORE_FAST                      3: delay
                        38      NOP                             
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       2: _waitpid_lock
                        44      LOAD_METHOD                     3: acquire
                        46      LOAD_CONST                      4: False
                        48      CALL_METHOD                     1
                        50      POP_JUMP_IF_FALSE               92 (to 184)
                        52      SETUP_FINALLY                   59 (to 172)
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       0: returncode
                        58      LOAD_CONST                      1: None
                        60      IS_OP                           1 (is not)
                        62      POP_JUMP_IF_FALSE               41 (to 82)
                        64      POP_BLOCK                       
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       2: _waitpid_lock
                        70      LOAD_METHOD                     4: release
                        72      CALL_METHOD                     0
                        74      POP_TOP                         
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       0: returncode
                        80      RETURN_VALUE                    
                        82      LOAD_FAST                       0: self
                        84      LOAD_METHOD                     5: _try_wait
                        86      LOAD_GLOBAL                     6: os
                        88      LOAD_ATTR                       7: WNOHANG
                        90      CALL_METHOD                     1
                        92      UNPACK_SEQUENCE                 2
                        94      STORE_FAST                      4: pid
                        96      STORE_FAST                      5: sts
                        98      LOAD_FAST                       4: pid
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       8: pid
                        104     COMPARE_OP                      2 (==)
                        106     POP_JUMP_IF_TRUE                60 (to 120)
                        108     LOAD_FAST                       4: pid
                        110     LOAD_CONST                      5: 0
                        112     COMPARE_OP                      2 (==)
                        114     POP_JUMP_IF_TRUE                60 (to 120)
                        116     LOAD_ASSERTION_ERROR            
                        118     RAISE_VARARGS                   1
                        120     LOAD_FAST                       4: pid
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       8: pid
                        126     COMPARE_OP                      2 (==)
                        128     POP_JUMP_IF_FALSE               79 (to 158)
                        130     LOAD_FAST                       0: self
                        132     LOAD_METHOD                     9: _handle_exitstatus
                        134     LOAD_FAST                       5: sts
                        136     CALL_METHOD                     1
                        138     POP_TOP                         
                        140     POP_BLOCK                       
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       2: _waitpid_lock
                        146     LOAD_METHOD                     4: release
                        148     CALL_METHOD                     0
                        150     POP_TOP                         
                        152     LOAD_FAST                       0: self
                        154     LOAD_ATTR                       0: returncode
                        156     RETURN_VALUE                    
                        158     POP_BLOCK                       
                        160     LOAD_FAST                       0: self
                        162     LOAD_ATTR                       2: _waitpid_lock
                        164     LOAD_METHOD                     4: release
                        166     CALL_METHOD                     0
                        168     POP_TOP                         
                        170     JUMP_FORWARD                    6 (to 184)
                        172     LOAD_FAST                       0: self
                        174     LOAD_ATTR                       2: _waitpid_lock
                        176     LOAD_METHOD                     4: release
                        178     CALL_METHOD                     0
                        180     POP_TOP                         
                        182     RERAISE                         0
                        184     LOAD_FAST                       0: self
                        186     LOAD_METHOD                     10: _remaining_time
                        188     LOAD_FAST                       2: endtime
                        190     CALL_METHOD                     1
                        192     STORE_FAST                      6: remaining
                        194     LOAD_FAST                       6: remaining
                        196     LOAD_CONST                      5: 0
                        198     COMPARE_OP                      1 (<=)
                        200     POP_JUMP_IF_FALSE               107 (to 214)
                        202     LOAD_GLOBAL                     11: TimeoutExpired
                        204     LOAD_FAST                       0: self
                        206     LOAD_ATTR                       12: args
                        208     LOAD_FAST                       1: timeout
                        210     CALL_FUNCTION                   2
                        212     RAISE_VARARGS                   1
                        214     LOAD_GLOBAL                     13: min
                        216     LOAD_FAST                       3: delay
                        218     LOAD_CONST                      6: 2
                        220     BINARY_MULTIPLY                 
                        222     LOAD_FAST                       6: remaining
                        224     LOAD_CONST                      7: 0.05
                        226     CALL_FUNCTION                   3
                        228     STORE_FAST                      3: delay
                        230     LOAD_GLOBAL                     14: time
                        232     LOAD_METHOD                     15: sleep
                        234     LOAD_FAST                       3: delay
                        236     CALL_METHOD                     1
                        238     POP_TOP                         
                        240     JUMP_ABSOLUTE                   20 (to 40)
                        242     LOAD_FAST                       0: self
                        244     LOAD_ATTR                       0: returncode
                        246     LOAD_CONST                      1: None
                        248     IS_OP                           0 (is)
                        250     POP_JUMP_IF_FALSE               182 (to 364)
                        252     LOAD_FAST                       0: self
                        254     LOAD_ATTR                       2: _waitpid_lock
                        256     SETUP_WITH                      40 (to 338)
                        258     POP_TOP                         
                        260     LOAD_FAST                       0: self
                        262     LOAD_ATTR                       0: returncode
                        264     LOAD_CONST                      1: None
                        266     IS_OP                           1 (is not)
                        268     POP_JUMP_IF_FALSE               145 (to 290)
                        270     NOP                             
                        272     POP_BLOCK                       
                        274     LOAD_CONST                      1: None
                        276     DUP_TOP                         
                        278     DUP_TOP                         
                        280     CALL_FUNCTION                   3
                        282     POP_TOP                         
                        284     LOAD_FAST                       0: self
                        286     LOAD_ATTR                       0: returncode
                        288     RETURN_VALUE                    
                        290     LOAD_FAST                       0: self
                        292     LOAD_METHOD                     5: _try_wait
                        294     LOAD_CONST                      5: 0
                        296     CALL_METHOD                     1
                        298     UNPACK_SEQUENCE                 2
                        300     STORE_FAST                      4: pid
                        302     STORE_FAST                      5: sts
                        304     LOAD_FAST                       4: pid
                        306     LOAD_FAST                       0: self
                        308     LOAD_ATTR                       8: pid
                        310     COMPARE_OP                      2 (==)
                        312     POP_JUMP_IF_FALSE               162 (to 324)
                        314     LOAD_FAST                       0: self
                        316     LOAD_METHOD                     9: _handle_exitstatus
                        318     LOAD_FAST                       5: sts
                        320     CALL_METHOD                     1
                        322     POP_TOP                         
                        324     POP_BLOCK                       
                        326     LOAD_CONST                      1: None
                        328     DUP_TOP                         
                        330     DUP_TOP                         
                        332     CALL_FUNCTION                   3
                        334     POP_TOP                         
                        336     JUMP_FORWARD                    8 (to 354)
                        338     WITH_EXCEPT_START               
                        340     POP_JUMP_IF_TRUE                172 (to 344)
                        342     RERAISE                         1
                        344     POP_TOP                         
                        346     POP_TOP                         
                        348     POP_TOP                         
                        350     POP_EXCEPT                      
                        352     POP_TOP                         
                        354     LOAD_FAST                       0: self
                        356     LOAD_ATTR                       0: returncode
                        358     LOAD_CONST                      1: None
                        360     IS_OP                           0 (is)
                        362     POP_JUMP_IF_TRUE                126 (to 252)
                        364     LOAD_FAST                       0: self
                        366     LOAD_ATTR                       0: returncode
                        368     RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _communicate
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 14
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stdin'
                        '_communication_started'
                        'flush'
                        'BrokenPipeError'
                        'close'
                        '_fileobj2output'
                        'stdout'
                        'stderr'
                        '_save_input'
                        '_input'
                        'memoryview'
                        '_PopenSelector'
                        'register'
                        'selectors'
                        'EVENT_WRITE'
                        'closed'
                        'EVENT_READ'
                        'get_map'
                        '_remaining_time'
                        '_check_timeout'
                        'RuntimeError'
                        'select'
                        'fileobj'
                        '_input_offset'
                        '_PIPE_BUF'
                        'os'
                        'write'
                        'fd'
                        'unregister'
                        'len'
                        'read'
                        'append'
                        'wait'
                        'join'
                        'text_mode'
                        '_translate_newlines'
                        'encoding'
                        'errors'
                    [Var Names]
                        'self'
                        'input'
                        'endtime'
                        'orig_timeout'
                        'stdout'
                        'stderr'
                        'input_view'
                        'selector'
                        'timeout'
                        'ready'
                        'key'
                        'events'
                        'chunk'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        True
                        (
                            'skip_check_and_raise'
                        )
                        '_check_timeout(..., skip_check_and_raise=True) failed to raise TimeoutExpired.'
                        32768
                        (
                            'timeout'
                        )
                        b''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: stdin
                        4       POP_JUMP_IF_FALSE               42 (to 84)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _communication_started
                        10      POP_JUMP_IF_TRUE                42 (to 84)
                        12      SETUP_FINALLY                   7 (to 28)
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: stdin
                        18      LOAD_METHOD                     2: flush
                        20      CALL_METHOD                     0
                        22      POP_TOP                         
                        24      POP_BLOCK                       
                        26      JUMP_FORWARD                    9 (to 46)
                        28      DUP_TOP                         
                        30      LOAD_GLOBAL                     3: BrokenPipeError
                        32      JUMP_IF_NOT_EXC_MATCH           22 (to 44)
                        34      POP_TOP                         
                        36      POP_TOP                         
                        38      POP_TOP                         
                        40      POP_EXCEPT                      
                        42      JUMP_FORWARD                    1 (to 46)
                        44      RERAISE                         0
                        46      LOAD_FAST                       1: input
                        48      POP_JUMP_IF_TRUE                42 (to 84)
                        50      SETUP_FINALLY                   7 (to 66)
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       0: stdin
                        56      LOAD_METHOD                     4: close
                        58      CALL_METHOD                     0
                        60      POP_TOP                         
                        62      POP_BLOCK                       
                        64      JUMP_FORWARD                    9 (to 84)
                        66      DUP_TOP                         
                        68      LOAD_GLOBAL                     3: BrokenPipeError
                        70      JUMP_IF_NOT_EXC_MATCH           41 (to 82)
                        72      POP_TOP                         
                        74      POP_TOP                         
                        76      POP_TOP                         
                        78      POP_EXCEPT                      
                        80      JUMP_FORWARD                    1 (to 84)
                        82      RERAISE                         0
                        84      LOAD_CONST                      0: None
                        86      STORE_FAST                      4: stdout
                        88      LOAD_CONST                      0: None
                        90      STORE_FAST                      5: stderr
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       1: _communication_started
                        96      POP_JUMP_IF_TRUE                70 (to 140)
                        98      BUILD_MAP                       0
                        100     LOAD_FAST                       0: self
                        102     STORE_ATTR                      5: _fileobj2output
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       6: stdout
                        108     POP_JUMP_IF_FALSE               61 (to 122)
                        110     BUILD_LIST                      0
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       5: _fileobj2output
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       6: stdout
                        120     STORE_SUBSCR                    
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       7: stderr
                        126     POP_JUMP_IF_FALSE               70 (to 140)
                        128     BUILD_LIST                      0
                        130     LOAD_FAST                       0: self
                        132     LOAD_ATTR                       5: _fileobj2output
                        134     LOAD_FAST                       0: self
                        136     LOAD_ATTR                       7: stderr
                        138     STORE_SUBSCR                    
                        140     LOAD_FAST                       0: self
                        142     LOAD_ATTR                       6: stdout
                        144     POP_JUMP_IF_FALSE               79 (to 158)
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       5: _fileobj2output
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       6: stdout
                        154     BINARY_SUBSCR                   
                        156     STORE_FAST                      4: stdout
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       7: stderr
                        162     POP_JUMP_IF_FALSE               88 (to 176)
                        164     LOAD_FAST                       0: self
                        166     LOAD_ATTR                       5: _fileobj2output
                        168     LOAD_FAST                       0: self
                        170     LOAD_ATTR                       7: stderr
                        172     BINARY_SUBSCR                   
                        174     STORE_FAST                      5: stderr
                        176     LOAD_FAST                       0: self
                        178     LOAD_METHOD                     8: _save_input
                        180     LOAD_FAST                       1: input
                        182     CALL_METHOD                     1
                        184     POP_TOP                         
                        186     LOAD_FAST                       0: self
                        188     LOAD_ATTR                       9: _input
                        190     POP_JUMP_IF_FALSE               101 (to 202)
                        192     LOAD_GLOBAL                     10: memoryview
                        194     LOAD_FAST                       0: self
                        196     LOAD_ATTR                       9: _input
                        198     CALL_FUNCTION                   1
                        200     STORE_FAST                      6: input_view
                        202     LOAD_GLOBAL                     11: _PopenSelector
                        204     CALL_FUNCTION                   0
                        206     SETUP_WITH                      220 (to 648)
                        208     STORE_FAST                      7: selector
                        210     LOAD_FAST                       0: self
                        212     LOAD_ATTR                       0: stdin
                        214     POP_JUMP_IF_FALSE               118 (to 236)
                        216     LOAD_FAST                       1: input
                        218     POP_JUMP_IF_FALSE               118 (to 236)
                        220     LOAD_FAST                       7: selector
                        222     LOAD_METHOD                     12: register
                        224     LOAD_FAST                       0: self
                        226     LOAD_ATTR                       0: stdin
                        228     LOAD_GLOBAL                     13: selectors
                        230     LOAD_ATTR                       14: EVENT_WRITE
                        232     CALL_METHOD                     2
                        234     POP_TOP                         
                        236     LOAD_FAST                       0: self
                        238     LOAD_ATTR                       6: stdout
                        240     POP_JUMP_IF_FALSE               133 (to 266)
                        242     LOAD_FAST                       0: self
                        244     LOAD_ATTR                       6: stdout
                        246     LOAD_ATTR                       15: closed
                        248     POP_JUMP_IF_TRUE                133 (to 266)
                        250     LOAD_FAST                       7: selector
                        252     LOAD_METHOD                     12: register
                        254     LOAD_FAST                       0: self
                        256     LOAD_ATTR                       6: stdout
                        258     LOAD_GLOBAL                     13: selectors
                        260     LOAD_ATTR                       16: EVENT_READ
                        262     CALL_METHOD                     2
                        264     POP_TOP                         
                        266     LOAD_FAST                       0: self
                        268     LOAD_ATTR                       7: stderr
                        270     POP_JUMP_IF_FALSE               148 (to 296)
                        272     LOAD_FAST                       0: self
                        274     LOAD_ATTR                       7: stderr
                        276     LOAD_ATTR                       15: closed
                        278     POP_JUMP_IF_TRUE                148 (to 296)
                        280     LOAD_FAST                       7: selector
                        282     LOAD_METHOD                     12: register
                        284     LOAD_FAST                       0: self
                        286     LOAD_ATTR                       7: stderr
                        288     LOAD_GLOBAL                     13: selectors
                        290     LOAD_ATTR                       16: EVENT_READ
                        292     CALL_METHOD                     2
                        294     POP_TOP                         
                        296     LOAD_FAST                       7: selector
                        298     LOAD_METHOD                     17: get_map
                        300     CALL_METHOD                     0
                        302     POP_JUMP_IF_FALSE               317 (to 634)
                        306     LOAD_FAST                       0: self
                        308     LOAD_METHOD                     18: _remaining_time
                        310     LOAD_FAST                       2: endtime
                        312     CALL_METHOD                     1
                        314     STORE_FAST                      8: timeout
                        316     LOAD_FAST                       8: timeout
                        318     LOAD_CONST                      0: None
                        320     IS_OP                           1 (is not)
                        322     POP_JUMP_IF_FALSE               180 (to 360)
                        324     LOAD_FAST                       8: timeout
                        326     LOAD_CONST                      1: 0
                        328     COMPARE_OP                      0 (<)
                        330     POP_JUMP_IF_FALSE               180 (to 360)
                        332     LOAD_FAST                       0: self
                        334     LOAD_ATTR                       19: _check_timeout
                        336     LOAD_FAST                       2: endtime
                        338     LOAD_FAST                       3: orig_timeout
                        340     LOAD_FAST                       4: stdout
                        342     LOAD_FAST                       5: stderr
                        344     LOAD_CONST                      2: True
                        346     LOAD_CONST                      3: ('skip_check_and_raise',)
                        348     CALL_FUNCTION_KW                5
                        350     POP_TOP                         
                        352     LOAD_GLOBAL                     20: RuntimeError
                        354     LOAD_CONST                      4: '_check_timeout(..., skip_check_and_raise=True) failed to raise TimeoutExpired.'
                        356     CALL_FUNCTION                   1
                        358     RAISE_VARARGS                   1
                        360     LOAD_FAST                       7: selector
                        362     LOAD_METHOD                     21: select
                        364     LOAD_FAST                       8: timeout
                        366     CALL_METHOD                     1
                        368     STORE_FAST                      9: ready
                        370     LOAD_FAST                       0: self
                        372     LOAD_METHOD                     19: _check_timeout
                        374     LOAD_FAST                       2: endtime
                        376     LOAD_FAST                       3: orig_timeout
                        378     LOAD_FAST                       4: stdout
                        380     LOAD_FAST                       5: stderr
                        382     CALL_METHOD                     4
                        384     POP_TOP                         
                        386     LOAD_FAST                       9: ready
                        388     GET_ITER                        
                        390     FOR_ITER                        117 (to 626)
                        392     UNPACK_SEQUENCE                 2
                        394     STORE_FAST                      10: key
                        396     STORE_FAST                      11: events
                        398     LOAD_FAST                       10: key
                        400     LOAD_ATTR                       22: fileobj
                        402     LOAD_FAST                       0: self
                        404     LOAD_ATTR                       0: stdin
                        406     IS_OP                           0 (is)
                        408     POP_JUMP_IF_FALSE               272 (to 544)
                        412     LOAD_FAST                       6: input_view
                        414     LOAD_FAST                       0: self
                        416     LOAD_ATTR                       23: _input_offset
                        418     LOAD_FAST                       0: self
                        420     LOAD_ATTR                       23: _input_offset
                        422     LOAD_GLOBAL                     24: _PIPE_BUF
                        424     BINARY_ADD                      
                        426     BUILD_SLICE                     2
                        428     BINARY_SUBSCR                   
                        430     STORE_FAST                      12: chunk
                        432     SETUP_FINALLY                   14 (to 462)
                        434     LOAD_FAST                       0: self
                        436     DUP_TOP                         
                        438     LOAD_ATTR                       23: _input_offset
                        440     LOAD_GLOBAL                     25: os
                        442     LOAD_METHOD                     26: write
                        444     LOAD_FAST                       10: key
                        446     LOAD_ATTR                       27: fd
                        448     LOAD_FAST                       12: chunk
                        450     CALL_METHOD                     2
                        452     INPLACE_ADD                     
                        454     ROT_TWO                         
                        456     STORE_ATTR                      23: _input_offset
                        458     POP_BLOCK                       
                        460     JUMP_FORWARD                    20 (to 502)
                        462     DUP_TOP                         
                        464     LOAD_GLOBAL                     3: BrokenPipeError
                        466     JUMP_IF_NOT_EXC_MATCH           250 (to 500)
                        468     POP_TOP                         
                        470     POP_TOP                         
                        472     POP_TOP                         
                        474     LOAD_FAST                       7: selector
                        476     LOAD_METHOD                     28: unregister
                        478     LOAD_FAST                       10: key
                        480     LOAD_ATTR                       22: fileobj
                        482     CALL_METHOD                     1
                        484     POP_TOP                         
                        486     LOAD_FAST                       10: key
                        488     LOAD_ATTR                       22: fileobj
                        490     LOAD_METHOD                     4: close
                        492     CALL_METHOD                     0
                        494     POP_TOP                         
                        496     POP_EXCEPT                      
                        498     JUMP_ABSOLUTE                   195 (to 390)
                        500     RERAISE                         0
                        502     LOAD_FAST                       0: self
                        504     LOAD_ATTR                       23: _input_offset
                        506     LOAD_GLOBAL                     29: len
                        508     LOAD_FAST                       0: self
                        510     LOAD_ATTR                       9: _input
                        512     CALL_FUNCTION                   1
                        514     COMPARE_OP                      5 (>=)
                        516     POP_JUMP_IF_FALSE               271 (to 542)
                        520     LOAD_FAST                       7: selector
                        522     LOAD_METHOD                     28: unregister
                        524     LOAD_FAST                       10: key
                        526     LOAD_ATTR                       22: fileobj
                        528     CALL_METHOD                     1
                        530     POP_TOP                         
                        532     LOAD_FAST                       10: key
                        534     LOAD_ATTR                       22: fileobj
                        536     LOAD_METHOD                     4: close
                        538     CALL_METHOD                     0
                        540     POP_TOP                         
                        542     JUMP_ABSOLUTE                   195 (to 390)
                        544     LOAD_FAST                       10: key
                        546     LOAD_ATTR                       22: fileobj
                        548     LOAD_FAST                       0: self
                        550     LOAD_ATTR                       6: stdout
                        552     LOAD_FAST                       0: self
                        554     LOAD_ATTR                       7: stderr
                        556     BUILD_TUPLE                     2
                        558     CONTAINS_OP                     0 (in)
                        560     POP_JUMP_IF_FALSE               312 (to 624)
                        564     LOAD_GLOBAL                     25: os
                        566     LOAD_METHOD                     30: read
                        568     LOAD_FAST                       10: key
                        570     LOAD_ATTR                       27: fd
                        572     LOAD_CONST                      5: 32768
                        574     CALL_METHOD                     2
                        576     STORE_FAST                      13: data
                        578     LOAD_FAST                       13: data
                        580     POP_JUMP_IF_TRUE                303 (to 606)
                        584     LOAD_FAST                       7: selector
                        586     LOAD_METHOD                     28: unregister
                        588     LOAD_FAST                       10: key
                        590     LOAD_ATTR                       22: fileobj
                        592     CALL_METHOD                     1
                        594     POP_TOP                         
                        596     LOAD_FAST                       10: key
                        598     LOAD_ATTR                       22: fileobj
                        600     LOAD_METHOD                     4: close
                        602     CALL_METHOD                     0
                        604     POP_TOP                         
                        606     LOAD_FAST                       0: self
                        608     LOAD_ATTR                       5: _fileobj2output
                        610     LOAD_FAST                       10: key
                        612     LOAD_ATTR                       22: fileobj
                        614     BINARY_SUBSCR                   
                        616     LOAD_METHOD                     31: append
                        618     LOAD_FAST                       13: data
                        620     CALL_METHOD                     1
                        622     POP_TOP                         
                        624     JUMP_ABSOLUTE                   195 (to 390)
                        626     LOAD_FAST                       7: selector
                        628     LOAD_METHOD                     17: get_map
                        630     CALL_METHOD                     0
                        632     POP_JUMP_IF_TRUE                153 (to 306)
                        634     POP_BLOCK                       
                        636     LOAD_CONST                      0: None
                        638     DUP_TOP                         
                        640     DUP_TOP                         
                        642     CALL_FUNCTION                   3
                        644     POP_TOP                         
                        646     JUMP_FORWARD                    9 (to 666)
                        648     WITH_EXCEPT_START               
                        650     POP_JUMP_IF_TRUE                328 (to 656)
                        654     RERAISE                         1
                        656     POP_TOP                         
                        658     POP_TOP                         
                        660     POP_TOP                         
                        662     POP_EXCEPT                      
                        664     POP_TOP                         
                        666     LOAD_FAST                       0: self
                        668     LOAD_ATTR                       32: wait
                        670     LOAD_FAST                       0: self
                        672     LOAD_METHOD                     18: _remaining_time
                        674     LOAD_FAST                       2: endtime
                        676     CALL_METHOD                     1
                        678     LOAD_CONST                      6: ('timeout',)
                        680     CALL_FUNCTION_KW                1
                        682     POP_TOP                         
                        684     LOAD_FAST                       4: stdout
                        686     LOAD_CONST                      0: None
                        688     IS_OP                           1 (is not)
                        690     POP_JUMP_IF_FALSE               352 (to 704)
                        694     LOAD_CONST                      7: b''
                        696     LOAD_METHOD                     33: join
                        698     LOAD_FAST                       4: stdout
                        700     CALL_METHOD                     1
                        702     STORE_FAST                      4: stdout
                        704     LOAD_FAST                       5: stderr
                        706     LOAD_CONST                      0: None
                        708     IS_OP                           1 (is not)
                        710     POP_JUMP_IF_FALSE               362 (to 724)
                        714     LOAD_CONST                      7: b''
                        716     LOAD_METHOD                     33: join
                        718     LOAD_FAST                       5: stderr
                        720     CALL_METHOD                     1
                        722     STORE_FAST                      5: stderr
                        724     LOAD_FAST                       0: self
                        726     LOAD_ATTR                       34: text_mode
                        728     POP_JUMP_IF_FALSE               398 (to 796)
                        732     LOAD_FAST                       4: stdout
                        734     LOAD_CONST                      0: None
                        736     IS_OP                           1 (is not)
                        738     POP_JUMP_IF_FALSE               382 (to 764)
                        742     LOAD_FAST                       0: self
                        744     LOAD_METHOD                     35: _translate_newlines
                        746     LOAD_FAST                       4: stdout
                        748     LOAD_FAST                       0: self
                        750     LOAD_ATTR                       6: stdout
                        752     LOAD_ATTR                       36: encoding
                        754     LOAD_FAST                       0: self
                        756     LOAD_ATTR                       6: stdout
                        758     LOAD_ATTR                       37: errors
                        760     CALL_METHOD                     3
                        762     STORE_FAST                      4: stdout
                        764     LOAD_FAST                       5: stderr
                        766     LOAD_CONST                      0: None
                        768     IS_OP                           1 (is not)
                        770     POP_JUMP_IF_FALSE               398 (to 796)
                        774     LOAD_FAST                       0: self
                        776     LOAD_METHOD                     35: _translate_newlines
                        778     LOAD_FAST                       5: stderr
                        780     LOAD_FAST                       0: self
                        782     LOAD_ATTR                       7: stderr
                        784     LOAD_ATTR                       36: encoding
                        786     LOAD_FAST                       0: self
                        788     LOAD_ATTR                       7: stderr
                        790     LOAD_ATTR                       37: errors
                        792     CALL_METHOD                     3
                        794     STORE_FAST                      5: stderr
                        796     LOAD_FAST                       4: stdout
                        798     LOAD_FAST                       5: stderr
                        800     BUILD_TUPLE                     2
                        802     RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: _save_input
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'stdin'
                        '_input'
                        '_input_offset'
                        'text_mode'
                        'encode'
                        'encoding'
                        'errors'
                    [Var Names]
                        'self'
                        'input'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: stdin
                        4       POP_JUMP_IF_FALSE               35 (to 70)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: _input
                        10      LOAD_CONST                      0: None
                        12      IS_OP                           0 (is)
                        14      POP_JUMP_IF_FALSE               37 (to 74)
                        16      LOAD_CONST                      1: 0
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      2: _input_offset
                        22      LOAD_FAST                       1: input
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      1: _input
                        28      LOAD_FAST                       1: input
                        30      LOAD_CONST                      0: None
                        32      IS_OP                           1 (is not)
                        34      POP_JUMP_IF_FALSE               39 (to 78)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       3: text_mode
                        40      POP_JUMP_IF_FALSE               41 (to 82)
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       1: _input
                        46      LOAD_METHOD                     4: encode
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       0: stdin
                        52      LOAD_ATTR                       5: encoding
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       0: stdin
                        58      LOAD_ATTR                       6: errors
                        60      CALL_METHOD                     2
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      1: _input
                        66      LOAD_CONST                      0: None
                        68      RETURN_VALUE                    
                        70      LOAD_CONST                      0: None
                        72      RETURN_VALUE                    
                        74      LOAD_CONST                      0: None
                        76      RETURN_VALUE                    
                        78      LOAD_CONST                      0: None
                        80      RETURN_VALUE                    
                        82      LOAD_CONST                      0: None
                        84      RETURN_VALUE                    
                'Popen._save_input'
                [Code]
                    File Name: subprocess.py
                    Object Name: send_signal
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'poll'
                        'returncode'
                        'os'
                        'kill'
                        'pid'
                        'ProcessLookupError'
                    [Var Names]
                        'self'
                        'sig'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Send a signal to the process.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: poll
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: returncode
                        12      LOAD_CONST                      1: None
                        14      IS_OP                           1 (is not)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_CONST                      1: None
                        20      RETURN_VALUE                    
                        22      SETUP_FINALLY                   10 (to 44)
                        24      LOAD_GLOBAL                     2: os
                        26      LOAD_METHOD                     3: kill
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       4: pid
                        32      LOAD_FAST                       1: sig
                        34      CALL_METHOD                     2
                        36      POP_TOP                         
                        38      POP_BLOCK                       
                        40      LOAD_CONST                      1: None
                        42      RETURN_VALUE                    
                        44      DUP_TOP                         
                        46      LOAD_GLOBAL                     5: ProcessLookupError
                        48      JUMP_IF_NOT_EXC_MATCH           31 (to 62)
                        50      POP_TOP                         
                        52      POP_TOP                         
                        54      POP_TOP                         
                        56      POP_EXCEPT                      
                        58      LOAD_CONST                      1: None
                        60      RETURN_VALUE                    
                        62      RERAISE                         0
                [Code]
                    File Name: subprocess.py
                    Object Name: terminate
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'send_signal'
                        'signal'
                        'SIGTERM'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Terminate the process with SIGTERM\n            '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: send_signal
                        4       LOAD_GLOBAL                     1: signal
                        6       LOAD_ATTR                       2: SIGTERM
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                [Code]
                    File Name: subprocess.py
                    Object Name: kill
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'send_signal'
                        'signal'
                        'SIGKILL'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Kill the process with SIGKILL\n            '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: send_signal
                        4       LOAD_GLOBAL                     1: signal
                        6       LOAD_ATTR                       2: SIGKILL
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      1: None
                        14      RETURN_VALUE                    
                'Popen.kill'
                (
                    -1
                    None
                    None
                    None
                    None
                    None
                    True
                    False
                    None
                    None
                    None
                    None
                    0
                    True
                    False
                    (
                    )
                )
                (
                    None
                    None
                )
                (
                    False
                )
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Popen'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: " Execute a child program in a new process.\n\n    For a complete description of the arguments see the Python documentation.\n\n    Arguments:\n      args: A string, or a sequence of program arguments.\n\n      bufsize: supplied as the buffering argument to the open() function when\n          creating the stdin/stdout/stderr pipe file objects\n\n      executable: A replacement program to execute.\n\n      stdin, stdout and stderr: These specify the executed programs' standard\n          input, standard output and standard error file handles, respectively.\n\n      preexec_fn: (POSIX only) An object to be called in the child process\n          just before the child is executed.\n\n      close_fds: Controls closing or inheriting of file descriptors.\n\n      shell: If true, the command will be executed through the shell.\n\n      cwd: Sets the current directory before the child is executed.\n\n      env: Defines the environment variables for the new process.\n\n      text: If true, decode stdin, stdout and stderr using the given encoding\n          (if set) or the system default otherwise.\n\n      universal_newlines: Alias of text, provided for backwards compatibility.\n\n      startupinfo and creationflags (Windows only)\n\n      restore_signals (POSIX only)\n\n      start_new_session (POSIX only)\n\n      group (POSIX only)\n\n      extra_groups (POSIX only)\n\n      user (POSIX only)\n\n      umask (POSIX only)\n\n      pass_fds (POSIX only)\n\n      encoding and errors: Text mode encoding and error handling to use for\n          file objects stdin, stdout and stderr.\n\n    Attributes:\n        stdin, stdout, stderr, pid, returncode\n    "
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: False
                14      STORE_NAME                      4: _child_created
                16      NOP                             
                18      NOP                             
                20      NOP                             
                22      NOP                             
                24      NOP                             
                26      NOP                             
                28      NOP                             
                30      LOAD_CONST                      77: (-1, None, None, None, None, None, True, False, None, None, None, None, 0, True, False, ())
                32      LOAD_CONST                      4: None
                34      LOAD_CONST                      4: None
                36      LOAD_CONST                      4: None
                38      LOAD_CONST                      4: None
                40      LOAD_CONST                      4: None
                42      LOAD_CONST                      4: None
                44      LOAD_CONST                      3: -1
                46      LOAD_CONST                      3: -1
                48      LOAD_CONST                      8: ('user', 'group', 'extra_groups', 'encoding', 'errors', 'text', 'umask', 'pipesize')
                50      BUILD_CONST_KEY_MAP             8
                52      LOAD_CONST                      9: <CODE> __init__
                54      LOAD_CONST                      10: 'Popen.__init__'
                56      MAKE_FUNCTION                   3
                58      STORE_NAME                      5: __init__
                60      LOAD_CONST                      11: <CODE> __repr__
                62      LOAD_CONST                      12: 'Popen.__repr__'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      6: __repr__
                68      LOAD_NAME                       7: classmethod
                70      LOAD_NAME                       8: types
                72      LOAD_ATTR                       9: GenericAlias
                74      CALL_FUNCTION                   1
                76      STORE_NAME                      10: __class_getitem__
                78      LOAD_NAME                       11: property
                80      LOAD_CONST                      13: <CODE> universal_newlines
                82      LOAD_CONST                      14: 'Popen.universal_newlines'
                84      MAKE_FUNCTION                   0
                86      CALL_FUNCTION                   1
                88      STORE_NAME                      12: universal_newlines
                90      LOAD_NAME                       12: universal_newlines
                92      LOAD_ATTR                       13: setter
                94      LOAD_CONST                      15: <CODE> universal_newlines
                96      LOAD_CONST                      14: 'Popen.universal_newlines'
                98      MAKE_FUNCTION                   0
                100     CALL_FUNCTION                   1
                102     STORE_NAME                      12: universal_newlines
                104     LOAD_CONST                      16: <CODE> _translate_newlines
                106     LOAD_CONST                      17: 'Popen._translate_newlines'
                108     MAKE_FUNCTION                   0
                110     STORE_NAME                      14: _translate_newlines
                112     LOAD_CONST                      18: <CODE> __enter__
                114     LOAD_CONST                      19: 'Popen.__enter__'
                116     MAKE_FUNCTION                   0
                118     STORE_NAME                      15: __enter__
                120     LOAD_CONST                      20: <CODE> __exit__
                122     LOAD_CONST                      21: 'Popen.__exit__'
                124     MAKE_FUNCTION                   0
                126     STORE_NAME                      16: __exit__
                128     LOAD_NAME                       17: sys
                130     LOAD_ATTR                       18: maxsize
                132     LOAD_NAME                       19: warnings
                134     LOAD_ATTR                       20: warn
                136     BUILD_TUPLE                     2
                138     LOAD_CONST                      22: <CODE> __del__
                140     LOAD_CONST                      23: 'Popen.__del__'
                142     MAKE_FUNCTION                   1
                144     STORE_NAME                      21: __del__
                146     LOAD_CONST                      24: <CODE> _get_devnull
                148     LOAD_CONST                      25: 'Popen._get_devnull'
                150     MAKE_FUNCTION                   0
                152     STORE_NAME                      22: _get_devnull
                154     LOAD_CONST                      26: <CODE> _stdin_write
                156     LOAD_CONST                      27: 'Popen._stdin_write'
                158     MAKE_FUNCTION                   0
                160     STORE_NAME                      23: _stdin_write
                162     LOAD_CONST                      78: (None, None)
                164     LOAD_CONST                      28: <CODE> communicate
                166     LOAD_CONST                      29: 'Popen.communicate'
                168     MAKE_FUNCTION                   1
                170     STORE_NAME                      24: communicate
                172     LOAD_CONST                      30: <CODE> poll
                174     LOAD_CONST                      31: 'Popen.poll'
                176     MAKE_FUNCTION                   0
                178     STORE_NAME                      25: poll
                180     LOAD_CONST                      32: <CODE> _remaining_time
                182     LOAD_CONST                      33: 'Popen._remaining_time'
                184     MAKE_FUNCTION                   0
                186     STORE_NAME                      26: _remaining_time
                188     NOP                             
                190     LOAD_CONST                      79: (False,)
                192     LOAD_CONST                      34: <CODE> _check_timeout
                194     LOAD_CONST                      35: 'Popen._check_timeout'
                196     MAKE_FUNCTION                   1
                198     STORE_NAME                      27: _check_timeout
                200     LOAD_CONST                      80: (None,)
                202     LOAD_CONST                      36: <CODE> wait
                204     LOAD_CONST                      37: 'Popen.wait'
                206     MAKE_FUNCTION                   1
                208     STORE_NAME                      28: wait
                210     LOAD_CONST                      38: <CODE> _close_pipe_fds
                212     LOAD_CONST                      39: 'Popen._close_pipe_fds'
                214     MAKE_FUNCTION                   0
                216     STORE_NAME                      29: _close_pipe_fds
                218     LOAD_NAME                       30: _mswindows
                220     POP_JUMP_IF_FALSE               163 (to 326)
                222     LOAD_CONST                      40: <CODE> _get_handles
                224     LOAD_CONST                      41: 'Popen._get_handles'
                226     MAKE_FUNCTION                   0
                228     STORE_NAME                      31: _get_handles
                230     LOAD_CONST                      42: <CODE> _make_inheritable
                232     LOAD_CONST                      43: 'Popen._make_inheritable'
                234     MAKE_FUNCTION                   0
                236     STORE_NAME                      32: _make_inheritable
                238     LOAD_CONST                      44: <CODE> _filter_handle_list
                240     LOAD_CONST                      45: 'Popen._filter_handle_list'
                242     MAKE_FUNCTION                   0
                244     STORE_NAME                      33: _filter_handle_list
                246     LOAD_CONST                      46: <CODE> _execute_child
                248     LOAD_CONST                      47: 'Popen._execute_child'
                250     MAKE_FUNCTION                   0
                252     STORE_NAME                      34: _execute_child
                254     LOAD_CONST                      4: None
                256     LOAD_NAME                       35: _winapi
                258     LOAD_ATTR                       36: WaitForSingleObject
                260     LOAD_NAME                       35: _winapi
                262     LOAD_ATTR                       37: WAIT_OBJECT_0
                264     LOAD_NAME                       35: _winapi
                266     LOAD_ATTR                       38: GetExitCodeProcess
                268     BUILD_TUPLE                     4
                270     LOAD_CONST                      48: <CODE> _internal_poll
                272     LOAD_CONST                      49: 'Popen._internal_poll'
                274     MAKE_FUNCTION                   1
                276     STORE_NAME                      39: _internal_poll
                278     LOAD_CONST                      50: <CODE> _wait
                280     LOAD_CONST                      51: 'Popen._wait'
                282     MAKE_FUNCTION                   0
                284     STORE_NAME                      40: _wait
                286     LOAD_CONST                      52: <CODE> _readerthread
                288     LOAD_CONST                      53: 'Popen._readerthread'
                290     MAKE_FUNCTION                   0
                292     STORE_NAME                      41: _readerthread
                294     LOAD_CONST                      54: <CODE> _communicate
                296     LOAD_CONST                      55: 'Popen._communicate'
                298     MAKE_FUNCTION                   0
                300     STORE_NAME                      42: _communicate
                302     LOAD_CONST                      56: <CODE> send_signal
                304     LOAD_CONST                      57: 'Popen.send_signal'
                306     MAKE_FUNCTION                   0
                308     STORE_NAME                      43: send_signal
                310     LOAD_CONST                      58: <CODE> terminate
                312     LOAD_CONST                      59: 'Popen.terminate'
                314     MAKE_FUNCTION                   0
                316     STORE_NAME                      44: terminate
                318     LOAD_NAME                       44: terminate
                320     STORE_NAME                      45: kill
                322     LOAD_CONST                      4: None
                324     RETURN_VALUE                    
                326     LOAD_CONST                      60: <CODE> _get_handles
                328     LOAD_CONST                      41: 'Popen._get_handles'
                330     MAKE_FUNCTION                   0
                332     STORE_NAME                      31: _get_handles
                334     LOAD_CONST                      61: <CODE> _posix_spawn
                336     LOAD_CONST                      62: 'Popen._posix_spawn'
                338     MAKE_FUNCTION                   0
                340     STORE_NAME                      46: _posix_spawn
                342     LOAD_CONST                      63: <CODE> _execute_child
                344     LOAD_CONST                      47: 'Popen._execute_child'
                346     MAKE_FUNCTION                   0
                348     STORE_NAME                      34: _execute_child
                350     LOAD_NAME                       47: os
                352     LOAD_ATTR                       48: waitstatus_to_exitcode
                354     LOAD_NAME                       47: os
                356     LOAD_ATTR                       49: WIFSTOPPED
                358     LOAD_NAME                       47: os
                360     LOAD_ATTR                       50: WSTOPSIG
                362     BUILD_TUPLE                     3
                364     LOAD_CONST                      64: <CODE> _handle_exitstatus
                366     LOAD_CONST                      65: 'Popen._handle_exitstatus'
                368     MAKE_FUNCTION                   1
                370     STORE_NAME                      51: _handle_exitstatus
                372     LOAD_CONST                      4: None
                374     LOAD_NAME                       47: os
                376     LOAD_ATTR                       52: waitpid
                378     LOAD_NAME                       47: os
                380     LOAD_ATTR                       53: WNOHANG
                382     LOAD_NAME                       54: errno
                384     LOAD_ATTR                       55: ECHILD
                386     BUILD_TUPLE                     4
                388     LOAD_CONST                      66: <CODE> _internal_poll
                390     LOAD_CONST                      49: 'Popen._internal_poll'
                392     MAKE_FUNCTION                   1
                394     STORE_NAME                      39: _internal_poll
                396     LOAD_CONST                      67: <CODE> _try_wait
                398     LOAD_CONST                      68: 'Popen._try_wait'
                400     MAKE_FUNCTION                   0
                402     STORE_NAME                      56: _try_wait
                404     LOAD_CONST                      69: <CODE> _wait
                406     LOAD_CONST                      51: 'Popen._wait'
                408     MAKE_FUNCTION                   0
                410     STORE_NAME                      40: _wait
                412     LOAD_CONST                      70: <CODE> _communicate
                414     LOAD_CONST                      55: 'Popen._communicate'
                416     MAKE_FUNCTION                   0
                418     STORE_NAME                      42: _communicate
                420     LOAD_CONST                      71: <CODE> _save_input
                422     LOAD_CONST                      72: 'Popen._save_input'
                424     MAKE_FUNCTION                   0
                426     STORE_NAME                      57: _save_input
                428     LOAD_CONST                      73: <CODE> send_signal
                430     LOAD_CONST                      57: 'Popen.send_signal'
                432     MAKE_FUNCTION                   0
                434     STORE_NAME                      43: send_signal
                436     LOAD_CONST                      74: <CODE> terminate
                438     LOAD_CONST                      59: 'Popen.terminate'
                440     MAKE_FUNCTION                   0
                442     STORE_NAME                      44: terminate
                444     LOAD_CONST                      75: <CODE> kill
                446     LOAD_CONST                      76: 'Popen.kill'
                448     MAKE_FUNCTION                   0
                450     STORE_NAME                      45: kill
                452     LOAD_CONST                      4: None
                454     RETURN_VALUE                    
        'Popen'
    [Disassembly]
        0       LOAD_CONST                      0: 'Subprocesses with accessible I/O streams\n\nThis module allows you to spawn processes, connect to their\ninput/output/error pipes, and obtain their return codes.\n\nFor a complete description of this module see the Python documentation.\n\nMain API\n========\nrun(...): Runs a command, waits for it to complete, then returns a\n          CompletedProcess instance.\nPopen(...): A class for flexibly executing a command in a new process\n\nConstants\n---------\nDEVNULL: Special value that indicates that os.devnull should be used\nPIPE:    Special value that indicates a pipe should be created\nSTDOUT:  Special value that indicates that stderr should go to stdout\n\n\nOlder API\n=========\ncall(...): Runs a command, waits for it to complete, then returns\n    the return code.\ncheck_call(...): Same as call() but raises CalledProcessError()\n    if return code is not 0\ncheck_output(...): Same as check_call() but returns the contents of\n    stdout instead of a return code\ngetoutput(...): Runs a command in the shell, waits for it to complete,\n    then returns the output\ngetstatusoutput(...): Runs a command in the shell, waits for it to complete,\n    then returns a (exitcode, output) tuple\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: 0
        6       LOAD_CONST                      2: None
        8       IMPORT_NAME                     1: builtins
        10      STORE_NAME                      1: builtins
        12      LOAD_CONST                      1: 0
        14      LOAD_CONST                      2: None
        16      IMPORT_NAME                     2: errno
        18      STORE_NAME                      2: errno
        20      LOAD_CONST                      1: 0
        22      LOAD_CONST                      2: None
        24      IMPORT_NAME                     3: io
        26      STORE_NAME                      3: io
        28      LOAD_CONST                      1: 0
        30      LOAD_CONST                      2: None
        32      IMPORT_NAME                     4: os
        34      STORE_NAME                      4: os
        36      LOAD_CONST                      1: 0
        38      LOAD_CONST                      2: None
        40      IMPORT_NAME                     5: time
        42      STORE_NAME                      5: time
        44      LOAD_CONST                      1: 0
        46      LOAD_CONST                      2: None
        48      IMPORT_NAME                     6: signal
        50      STORE_NAME                      6: signal
        52      LOAD_CONST                      1: 0
        54      LOAD_CONST                      2: None
        56      IMPORT_NAME                     7: sys
        58      STORE_NAME                      7: sys
        60      LOAD_CONST                      1: 0
        62      LOAD_CONST                      2: None
        64      IMPORT_NAME                     8: threading
        66      STORE_NAME                      8: threading
        68      LOAD_CONST                      1: 0
        70      LOAD_CONST                      2: None
        72      IMPORT_NAME                     9: warnings
        74      STORE_NAME                      9: warnings
        76      LOAD_CONST                      1: 0
        78      LOAD_CONST                      2: None
        80      IMPORT_NAME                     10: contextlib
        82      STORE_NAME                      10: contextlib
        84      LOAD_CONST                      1: 0
        86      LOAD_CONST                      3: ('monotonic',)
        88      IMPORT_NAME                     5: time
        90      IMPORT_FROM                     11: monotonic
        92      STORE_NAME                      12: _time
        94      POP_TOP                         
        96      LOAD_CONST                      1: 0
        98      LOAD_CONST                      2: None
        100     IMPORT_NAME                     13: types
        102     STORE_NAME                      13: types
        104     SETUP_FINALLY                   6 (to 118)
        106     LOAD_CONST                      1: 0
        108     LOAD_CONST                      2: None
        110     IMPORT_NAME                     14: fcntl
        112     STORE_NAME                      14: fcntl
        114     POP_BLOCK                       
        116     JUMP_FORWARD                    11 (to 140)
        118     DUP_TOP                         
        120     LOAD_NAME                       15: ImportError
        122     JUMP_IF_NOT_EXC_MATCH           69 (to 138)
        124     POP_TOP                         
        126     POP_TOP                         
        128     POP_TOP                         
        130     LOAD_CONST                      2: None
        132     STORE_NAME                      14: fcntl
        134     POP_EXCEPT                      
        136     JUMP_FORWARD                    1 (to 140)
        138     RERAISE                         0
        140     BUILD_LIST                      0
        142     LOAD_CONST                      4: ('Popen', 'PIPE', 'STDOUT', 'call', 'check_call', 'getstatusoutput', 'getoutput', 'check_output', 'run', 'CalledProcessError', 'DEVNULL', 'SubprocessError', 'TimeoutExpired', 'CompletedProcess')
        144     LIST_EXTEND                     1
        146     STORE_NAME                      16: __all__
        148     SETUP_FINALLY                   12 (to 174)
        150     LOAD_CONST                      1: 0
        152     LOAD_CONST                      2: None
        154     IMPORT_NAME                     17: msvcrt
        156     STORE_NAME                      17: msvcrt
        158     LOAD_CONST                      1: 0
        160     LOAD_CONST                      2: None
        162     IMPORT_NAME                     18: _winapi
        164     STORE_NAME                      18: _winapi
        166     LOAD_CONST                      5: True
        168     STORE_NAME                      19: _mswindows
        170     POP_BLOCK                       
        172     JUMP_FORWARD                    23 (to 220)
        174     DUP_TOP                         
        176     LOAD_NAME                       20: ModuleNotFoundError
        178     JUMP_IF_NOT_EXC_MATCH           109 (to 218)
        180     POP_TOP                         
        182     POP_TOP                         
        184     POP_TOP                         
        186     LOAD_CONST                      6: False
        188     STORE_NAME                      19: _mswindows
        190     LOAD_CONST                      1: 0
        192     LOAD_CONST                      2: None
        194     IMPORT_NAME                     21: _posixsubprocess
        196     STORE_NAME                      21: _posixsubprocess
        198     LOAD_CONST                      1: 0
        200     LOAD_CONST                      2: None
        202     IMPORT_NAME                     22: select
        204     STORE_NAME                      22: select
        206     LOAD_CONST                      1: 0
        208     LOAD_CONST                      2: None
        210     IMPORT_NAME                     23: selectors
        212     STORE_NAME                      23: selectors
        214     POP_EXCEPT                      
        216     JUMP_FORWARD                    48 (to 314)
        218     RERAISE                         0
        220     LOAD_CONST                      1: 0
        222     LOAD_CONST                      7: ('CREATE_NEW_CONSOLE', 'CREATE_NEW_PROCESS_GROUP', 'STD_INPUT_HANDLE', 'STD_OUTPUT_HANDLE', 'STD_ERROR_HANDLE', 'SW_HIDE', 'STARTF_USESTDHANDLES', 'STARTF_USESHOWWINDOW', 'ABOVE_NORMAL_PRIORITY_CLASS', 'BELOW_NORMAL_PRIORITY_CLASS', 'HIGH_PRIORITY_CLASS', 'IDLE_PRIORITY_CLASS', 'NORMAL_PRIORITY_CLASS', 'REALTIME_PRIORITY_CLASS', 'CREATE_NO_WINDOW', 'DETACHED_PROCESS', 'CREATE_DEFAULT_ERROR_MODE', 'CREATE_BREAKAWAY_FROM_JOB')
        224     IMPORT_NAME                     18: _winapi
        226     IMPORT_FROM                     24: CREATE_NEW_CONSOLE
        228     STORE_NAME                      24: CREATE_NEW_CONSOLE
        230     IMPORT_FROM                     25: CREATE_NEW_PROCESS_GROUP
        232     STORE_NAME                      25: CREATE_NEW_PROCESS_GROUP
        234     IMPORT_FROM                     26: STD_INPUT_HANDLE
        236     STORE_NAME                      26: STD_INPUT_HANDLE
        238     IMPORT_FROM                     27: STD_OUTPUT_HANDLE
        240     STORE_NAME                      27: STD_OUTPUT_HANDLE
        242     IMPORT_FROM                     28: STD_ERROR_HANDLE
        244     STORE_NAME                      28: STD_ERROR_HANDLE
        246     IMPORT_FROM                     29: SW_HIDE
        248     STORE_NAME                      29: SW_HIDE
        250     IMPORT_FROM                     30: STARTF_USESTDHANDLES
        252     STORE_NAME                      30: STARTF_USESTDHANDLES
        254     IMPORT_FROM                     31: STARTF_USESHOWWINDOW
        256     STORE_NAME                      31: STARTF_USESHOWWINDOW
        258     IMPORT_FROM                     32: ABOVE_NORMAL_PRIORITY_CLASS
        260     STORE_NAME                      32: ABOVE_NORMAL_PRIORITY_CLASS
        262     IMPORT_FROM                     33: BELOW_NORMAL_PRIORITY_CLASS
        264     STORE_NAME                      33: BELOW_NORMAL_PRIORITY_CLASS
        266     IMPORT_FROM                     34: HIGH_PRIORITY_CLASS
        268     STORE_NAME                      34: HIGH_PRIORITY_CLASS
        270     IMPORT_FROM                     35: IDLE_PRIORITY_CLASS
        272     STORE_NAME                      35: IDLE_PRIORITY_CLASS
        274     IMPORT_FROM                     36: NORMAL_PRIORITY_CLASS
        276     STORE_NAME                      36: NORMAL_PRIORITY_CLASS
        278     IMPORT_FROM                     37: REALTIME_PRIORITY_CLASS
        280     STORE_NAME                      37: REALTIME_PRIORITY_CLASS
        282     IMPORT_FROM                     38: CREATE_NO_WINDOW
        284     STORE_NAME                      38: CREATE_NO_WINDOW
        286     IMPORT_FROM                     39: DETACHED_PROCESS
        288     STORE_NAME                      39: DETACHED_PROCESS
        290     IMPORT_FROM                     40: CREATE_DEFAULT_ERROR_MODE
        292     STORE_NAME                      40: CREATE_DEFAULT_ERROR_MODE
        294     IMPORT_FROM                     41: CREATE_BREAKAWAY_FROM_JOB
        296     STORE_NAME                      41: CREATE_BREAKAWAY_FROM_JOB
        298     POP_TOP                         
        300     LOAD_NAME                       16: __all__
        302     LOAD_METHOD                     42: extend
        304     BUILD_LIST                      0
        306     LOAD_CONST                      8: ('CREATE_NEW_CONSOLE', 'CREATE_NEW_PROCESS_GROUP', 'STD_INPUT_HANDLE', 'STD_OUTPUT_HANDLE', 'STD_ERROR_HANDLE', 'SW_HIDE', 'STARTF_USESTDHANDLES', 'STARTF_USESHOWWINDOW', 'STARTUPINFO', 'ABOVE_NORMAL_PRIORITY_CLASS', 'BELOW_NORMAL_PRIORITY_CLASS', 'HIGH_PRIORITY_CLASS', 'IDLE_PRIORITY_CLASS', 'NORMAL_PRIORITY_CLASS', 'REALTIME_PRIORITY_CLASS', 'CREATE_NO_WINDOW', 'DETACHED_PROCESS', 'CREATE_DEFAULT_ERROR_MODE', 'CREATE_BREAKAWAY_FROM_JOB')
        308     LIST_EXTEND                     1
        310     CALL_METHOD                     1
        312     POP_TOP                         
        314     LOAD_BUILD_CLASS                
        316     LOAD_CONST                      9: <CODE> SubprocessError
        318     LOAD_CONST                      10: 'SubprocessError'
        320     MAKE_FUNCTION                   0
        322     LOAD_CONST                      10: 'SubprocessError'
        324     LOAD_NAME                       43: Exception
        326     CALL_FUNCTION                   3
        328     STORE_NAME                      44: SubprocessError
        330     LOAD_BUILD_CLASS                
        332     LOAD_CONST                      11: <CODE> CalledProcessError
        334     LOAD_CONST                      12: 'CalledProcessError'
        336     MAKE_FUNCTION                   0
        338     LOAD_CONST                      12: 'CalledProcessError'
        340     LOAD_NAME                       44: SubprocessError
        342     CALL_FUNCTION                   3
        344     STORE_NAME                      45: CalledProcessError
        346     LOAD_BUILD_CLASS                
        348     LOAD_CONST                      13: <CODE> TimeoutExpired
        350     LOAD_CONST                      14: 'TimeoutExpired'
        352     MAKE_FUNCTION                   0
        354     LOAD_CONST                      14: 'TimeoutExpired'
        356     LOAD_NAME                       44: SubprocessError
        358     CALL_FUNCTION                   3
        360     STORE_NAME                      46: TimeoutExpired
        362     LOAD_NAME                       19: _mswindows
        364     POP_JUMP_IF_FALSE               199 (to 398)
        366     LOAD_BUILD_CLASS                
        368     LOAD_CONST                      15: <CODE> STARTUPINFO
        370     LOAD_CONST                      16: 'STARTUPINFO'
        372     MAKE_FUNCTION                   0
        374     LOAD_CONST                      16: 'STARTUPINFO'
        376     CALL_FUNCTION                   2
        378     STORE_NAME                      47: STARTUPINFO
        380     LOAD_BUILD_CLASS                
        382     LOAD_CONST                      17: <CODE> Handle
        384     LOAD_CONST                      18: 'Handle'
        386     MAKE_FUNCTION                   0
        388     LOAD_CONST                      18: 'Handle'
        390     LOAD_NAME                       48: int
        392     CALL_FUNCTION                   3
        394     STORE_NAME                      49: Handle
        396     JUMP_FORWARD                    18 (to 434)
        398     LOAD_NAME                       50: getattr
        400     LOAD_NAME                       22: select
        402     LOAD_CONST                      19: 'PIPE_BUF'
        404     LOAD_CONST                      20: 512
        406     CALL_FUNCTION                   3
        408     STORE_NAME                      51: _PIPE_BUF
        410     LOAD_NAME                       52: hasattr
        412     LOAD_NAME                       23: selectors
        414     LOAD_CONST                      21: 'PollSelector'
        416     CALL_FUNCTION                   2
        418     POP_JUMP_IF_FALSE               214 (to 428)
        420     LOAD_NAME                       23: selectors
        422     LOAD_ATTR                       53: PollSelector
        424     STORE_NAME                      54: _PopenSelector
        426     JUMP_FORWARD                    3 (to 434)
        428     LOAD_NAME                       23: selectors
        430     LOAD_ATTR                       55: SelectSelector
        432     STORE_NAME                      54: _PopenSelector
        434     LOAD_NAME                       19: _mswindows
        436     POP_JUMP_IF_FALSE               226 (to 452)
        438     LOAD_CONST                      2: None
        440     STORE_NAME                      56: _active
        442     LOAD_CONST                      22: <CODE> _cleanup
        444     LOAD_CONST                      23: '_cleanup'
        446     MAKE_FUNCTION                   0
        448     STORE_NAME                      57: _cleanup
        450     JUMP_FORWARD                    6 (to 464)
        452     BUILD_LIST                      0
        454     STORE_NAME                      56: _active
        456     LOAD_CONST                      24: <CODE> _cleanup
        458     LOAD_CONST                      23: '_cleanup'
        460     MAKE_FUNCTION                   0
        462     STORE_NAME                      57: _cleanup
        464     LOAD_CONST                      25: -1
        466     STORE_NAME                      58: PIPE
        468     LOAD_CONST                      26: -2
        470     STORE_NAME                      59: STDOUT
        472     LOAD_CONST                      27: -3
        474     STORE_NAME                      60: DEVNULL
        476     LOAD_CONST                      28: <CODE> _optim_args_from_interpreter_flags
        478     LOAD_CONST                      29: '_optim_args_from_interpreter_flags'
        480     MAKE_FUNCTION                   0
        482     STORE_NAME                      61: _optim_args_from_interpreter_flags
        484     LOAD_CONST                      30: <CODE> _args_from_interpreter_flags
        486     LOAD_CONST                      31: '_args_from_interpreter_flags'
        488     MAKE_FUNCTION                   0
        490     STORE_NAME                      62: _args_from_interpreter_flags
        492     LOAD_CONST                      2: None
        494     LOAD_CONST                      32: ('timeout',)
        496     BUILD_CONST_KEY_MAP             1
        498     LOAD_CONST                      33: <CODE> call
        500     LOAD_CONST                      34: 'call'
        502     MAKE_FUNCTION                   2
        504     STORE_NAME                      63: call
        506     LOAD_CONST                      35: <CODE> check_call
        508     LOAD_CONST                      36: 'check_call'
        510     MAKE_FUNCTION                   0
        512     STORE_NAME                      64: check_call
        514     LOAD_CONST                      2: None
        516     LOAD_CONST                      32: ('timeout',)
        518     BUILD_CONST_KEY_MAP             1
        520     LOAD_CONST                      37: <CODE> check_output
        522     LOAD_CONST                      38: 'check_output'
        524     MAKE_FUNCTION                   2
        526     STORE_NAME                      65: check_output
        528     LOAD_BUILD_CLASS                
        530     LOAD_CONST                      39: <CODE> CompletedProcess
        532     LOAD_CONST                      40: 'CompletedProcess'
        534     MAKE_FUNCTION                   0
        536     LOAD_CONST                      40: 'CompletedProcess'
        538     LOAD_NAME                       66: object
        540     CALL_FUNCTION                   3
        542     STORE_NAME                      67: CompletedProcess
        544     LOAD_CONST                      2: None
        546     LOAD_CONST                      6: False
        548     LOAD_CONST                      2: None
        550     LOAD_CONST                      6: False
        552     LOAD_CONST                      41: ('input', 'capture_output', 'timeout', 'check')
        554     BUILD_CONST_KEY_MAP             4
        556     LOAD_CONST                      42: <CODE> run
        558     LOAD_CONST                      43: 'run'
        560     MAKE_FUNCTION                   2
        562     STORE_NAME                      68: run
        564     LOAD_CONST                      44: <CODE> list2cmdline
        566     LOAD_CONST                      45: 'list2cmdline'
        568     MAKE_FUNCTION                   0
        570     STORE_NAME                      69: list2cmdline
        572     LOAD_CONST                      46: <CODE> getstatusoutput
        574     LOAD_CONST                      47: 'getstatusoutput'
        576     MAKE_FUNCTION                   0
        578     STORE_NAME                      70: getstatusoutput
        580     LOAD_CONST                      48: <CODE> getoutput
        582     LOAD_CONST                      49: 'getoutput'
        584     MAKE_FUNCTION                   0
        586     STORE_NAME                      71: getoutput
        588     LOAD_CONST                      50: <CODE> _use_posix_spawn
        590     LOAD_CONST                      51: '_use_posix_spawn'
        592     MAKE_FUNCTION                   0
        594     STORE_NAME                      72: _use_posix_spawn
        596     LOAD_NAME                       72: _use_posix_spawn
        598     CALL_FUNCTION                   0
        600     STORE_NAME                      73: _USE_POSIX_SPAWN
        602     LOAD_CONST                      5: True
        604     STORE_NAME                      74: _USE_VFORK
        606     LOAD_BUILD_CLASS                
        608     LOAD_CONST                      52: <CODE> Popen
        610     LOAD_CONST                      53: 'Popen'
        612     MAKE_FUNCTION                   0
        614     LOAD_CONST                      53: 'Popen'
        616     CALL_FUNCTION                   2
        618     STORE_NAME                      75: Popen
        620     LOAD_CONST                      2: None
        622     RETURN_VALUE                    
