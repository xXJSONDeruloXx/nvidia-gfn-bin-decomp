tarfile.pyc (Python 3.10)
[Code]
    File Name: tarfile.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 12
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        'version'
        '__author__'
        '__credits__'
        'builtins'
        'open'
        'bltn_open'
        'sys'
        'os'
        'io'
        'shutil'
        'stat'
        'time'
        'struct'
        'copy'
        're'
        'warnings'
        'pwd'
        'ImportError'
        'grp'
        'AttributeError'
        'NotImplementedError'
        'symlink_exception'
        'OSError'
        'NameError'
        '__all__'
        'NUL'
        'BLOCKSIZE'
        'RECORDSIZE'
        'GNU_MAGIC'
        'POSIX_MAGIC'
        'LENGTH_NAME'
        'LENGTH_LINK'
        'LENGTH_PREFIX'
        'REGTYPE'
        'AREGTYPE'
        'LNKTYPE'
        'SYMTYPE'
        'CHRTYPE'
        'BLKTYPE'
        'DIRTYPE'
        'FIFOTYPE'
        'CONTTYPE'
        'GNUTYPE_LONGNAME'
        'GNUTYPE_LONGLINK'
        'GNUTYPE_SPARSE'
        'XHDTYPE'
        'XGLTYPE'
        'SOLARIS_XHDTYPE'
        'USTAR_FORMAT'
        'GNU_FORMAT'
        'PAX_FORMAT'
        'DEFAULT_FORMAT'
        'SUPPORTED_TYPES'
        'REGULAR_TYPES'
        'GNU_TYPES'
        'PAX_FIELDS'
        'PAX_NAME_FIELDS'
        'float'
        'int'
        'PAX_NUMBER_FIELDS'
        'name'
        'ENCODING'
        'getfilesystemencoding'
        'stn'
        'nts'
        'nti'
        'itn'
        'calc_chksums'
        'copyfileobj'
        '_safe_print'
        'Exception'
        'TarError'
        'ExtractError'
        'ReadError'
        'CompressionError'
        'StreamError'
        'HeaderError'
        'EmptyHeaderError'
        'TruncatedHeaderError'
        'EOFHeaderError'
        'InvalidHeaderError'
        'SubsequentHeaderError'
        '_LowLevelFile'
        '_Stream'
        'object'
        '_StreamProxy'
        '_FileInFile'
        'BufferedReader'
        'ExFileObject'
        'FilterError'
        'AbsolutePathError'
        'OutsideDestinationError'
        'SpecialFileError'
        'AbsoluteLinkError'
        'LinkOutsideDestinationError'
        '_get_filtered_attrs'
        'fully_trusted_filter'
        'tar_filter'
        'data_filter'
        '_NAMED_FILTERS'
        '_KEEP'
        'compile'
        '_header_length_prefix_re'
        'TarInfo'
        'TarFile'
        'is_tarfile'
        'main'
        '__name__'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        'Read from and write to tar format archives.\n'
        '0.9.0'
        'Lars Gustäbel (lars@gustaebel.de)'
        'Gustavo Niemeyer, Niels Gustäbel, Richard Townsend.'
        0
        (
            'open'
        )
        None
        (
            'TarFile'
            'TarInfo'
            'is_tarfile'
            'TarError'
            'ReadError'
            'CompressionError'
            'StreamError'
            'ExtractError'
            'HeaderError'
            'ENCODING'
            'USTAR_FORMAT'
            'GNU_FORMAT'
            'PAX_FORMAT'
            'DEFAULT_FORMAT'
            'open'
        )
        b'\x00'
        512
        20
        b'ustar  \x00'
        b'ustar\x0000'
        100
        155
        b'0'
        b'1'
        b'2'
        b'3'
        b'4'
        b'5'
        b'6'
        b'7'
        b'L'
        b'K'
        b'S'
        b'x'
        b'g'
        b'X'
        1
        2
        (
            'path'
            'linkpath'
            'size'
            'mtime'
            'uid'
            'gid'
            'uname'
            'gname'
        )
        frozenset({
            'path'
            'gname'
            'uname'
            'linkpath'
        })
        (
            'atime'
            'ctime'
            'mtime'
            'uid'
            'gid'
            'size'
        )
        'nt'
        'utf-8'
        [Code]
            File Name: tarfile.py
            Object Name: stn
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'ValueError'
                'encode'
                'len'
                'NUL'
            [Var Names]
                's'
                'length'
                'encoding'
                'errors'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Convert a string to a null-terminated bytes object.\n    '
                None
                'metadata cannot contain None'
            [Disassembly]
                0       LOAD_FAST                       0: s
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               8 (to 16)
                8       LOAD_GLOBAL                     0: ValueError
                10      LOAD_CONST                      2: 'metadata cannot contain None'
                12      CALL_FUNCTION                   1
                14      RAISE_VARARGS                   1
                16      LOAD_FAST                       0: s
                18      LOAD_METHOD                     1: encode
                20      LOAD_FAST                       2: encoding
                22      LOAD_FAST                       3: errors
                24      CALL_METHOD                     2
                26      STORE_FAST                      0: s
                28      LOAD_FAST                       0: s
                30      LOAD_CONST                      1: None
                32      LOAD_FAST                       1: length
                34      BUILD_SLICE                     2
                36      BINARY_SUBSCR                   
                38      LOAD_FAST                       1: length
                40      LOAD_GLOBAL                     2: len
                42      LOAD_FAST                       0: s
                44      CALL_FUNCTION                   1
                46      BINARY_SUBTRACT                 
                48      LOAD_GLOBAL                     3: NUL
                50      BINARY_MULTIPLY                 
                52      BINARY_ADD                      
                54      RETURN_VALUE                    
        'stn'
        [Code]
            File Name: tarfile.py
            Object Name: nts
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'find'
                'decode'
            [Var Names]
                's'
                'encoding'
                'errors'
                'p'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Convert a null-terminated bytes object to a string.\n    '
                b'\x00'
                -1
                None
            [Disassembly]
                0       LOAD_FAST                       0: s
                2       LOAD_METHOD                     0: find
                4       LOAD_CONST                      1: b'\x00'
                6       CALL_METHOD                     1
                8       STORE_FAST                      3: p
                10      LOAD_FAST                       3: p
                12      LOAD_CONST                      2: -1
                14      COMPARE_OP                      3 (!=)
                16      POP_JUMP_IF_FALSE               15 (to 30)
                18      LOAD_FAST                       0: s
                20      LOAD_CONST                      3: None
                22      LOAD_FAST                       3: p
                24      BUILD_SLICE                     2
                26      BINARY_SUBSCR                   
                28      STORE_FAST                      0: s
                30      LOAD_FAST                       0: s
                32      LOAD_METHOD                     1: decode
                34      LOAD_FAST                       1: encoding
                36      LOAD_FAST                       2: errors
                38      CALL_METHOD                     2
                40      RETURN_VALUE                    
        'nts'
        [Code]
            File Name: tarfile.py
            Object Name: nti
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'range'
                'len'
                'nts'
                'int'
                'strip'
                'ValueError'
                'InvalidHeaderError'
            [Var Names]
                's'
                'n'
                'i'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Convert a number field to a python number.\n    '
                0
                (
                    128
                    255
                )
                1
                8
                255
                256
                'ascii'
                'strict'
                '0'
                'invalid header'
            [Disassembly]
                0       LOAD_FAST                       0: s
                2       LOAD_CONST                      1: 0
                4       BINARY_SUBSCR                   
                6       LOAD_CONST                      2: (128, 255)
                8       CONTAINS_OP                     0 (in)
                10      POP_JUMP_IF_FALSE               50 (to 100)
                12      LOAD_CONST                      1: 0
                14      STORE_FAST                      1: n
                16      LOAD_GLOBAL                     0: range
                18      LOAD_GLOBAL                     1: len
                20      LOAD_FAST                       0: s
                22      CALL_FUNCTION                   1
                24      LOAD_CONST                      3: 1
                26      BINARY_SUBTRACT                 
                28      CALL_FUNCTION                   1
                30      GET_ITER                        
                32      FOR_ITER                        14 (to 62)
                34      STORE_FAST                      2: i
                36      LOAD_FAST                       1: n
                38      LOAD_CONST                      4: 8
                40      INPLACE_LSHIFT                  
                42      STORE_FAST                      1: n
                44      LOAD_FAST                       1: n
                46      LOAD_FAST                       0: s
                48      LOAD_FAST                       2: i
                50      LOAD_CONST                      3: 1
                52      BINARY_ADD                      
                54      BINARY_SUBSCR                   
                56      INPLACE_ADD                     
                58      STORE_FAST                      1: n
                60      JUMP_ABSOLUTE                   16 (to 32)
                62      LOAD_FAST                       0: s
                64      LOAD_CONST                      1: 0
                66      BINARY_SUBSCR                   
                68      LOAD_CONST                      5: 255
                70      COMPARE_OP                      2 (==)
                72      POP_JUMP_IF_FALSE               48 (to 96)
                74      LOAD_CONST                      6: 256
                76      LOAD_GLOBAL                     1: len
                78      LOAD_FAST                       0: s
                80      CALL_FUNCTION                   1
                82      LOAD_CONST                      3: 1
                84      BINARY_SUBTRACT                 
                86      BINARY_POWER                    
                88      LOAD_FAST                       1: n
                90      BINARY_SUBTRACT                 
                92      UNARY_NEGATIVE                  
                94      STORE_FAST                      1: n
                96      LOAD_FAST                       1: n
                98      RETURN_VALUE                    
                100     SETUP_FINALLY                   18 (to 138)
                102     LOAD_GLOBAL                     2: nts
                104     LOAD_FAST                       0: s
                106     LOAD_CONST                      7: 'ascii'
                108     LOAD_CONST                      8: 'strict'
                110     CALL_FUNCTION                   3
                112     STORE_FAST                      0: s
                114     LOAD_GLOBAL                     3: int
                116     LOAD_FAST                       0: s
                118     LOAD_METHOD                     4: strip
                120     CALL_METHOD                     0
                122     JUMP_IF_TRUE_OR_POP             63 (to 126)
                124     LOAD_CONST                      9: '0'
                126     LOAD_CONST                      4: 8
                128     CALL_FUNCTION                   2
                130     STORE_FAST                      1: n
                132     POP_BLOCK                       
                134     LOAD_FAST                       1: n
                136     RETURN_VALUE                    
                138     DUP_TOP                         
                140     LOAD_GLOBAL                     5: ValueError
                142     JUMP_IF_NOT_EXC_MATCH           79 (to 158)
                144     POP_TOP                         
                146     POP_TOP                         
                148     POP_TOP                         
                150     LOAD_GLOBAL                     6: InvalidHeaderError
                152     LOAD_CONST                      10: 'invalid header'
                154     CALL_FUNCTION                   1
                156     RAISE_VARARGS                   1
                158     RERAISE                         0
        'nti'
        8
        [Code]
            File Name: tarfile.py
            Object Name: itn
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'int'
                'bytes'
                'NUL'
                'GNU_FORMAT'
                'bytearray'
                'range'
                'insert'
                'ValueError'
            [Var Names]
                'n'
                'digits'
                'format'
                'original_n'
                's'
                'i'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Convert a python number to a number field.\n    '
                0
                8
                1
                '%0*o'
                'ascii'
                256
                128
                255
                'overflow in number field'
            [Disassembly]
                0       LOAD_FAST                       0: n
                2       STORE_FAST                      3: original_n
                4       LOAD_GLOBAL                     0: int
                6       LOAD_FAST                       0: n
                8       CALL_FUNCTION                   1
                10      STORE_FAST                      0: n
                12      LOAD_CONST                      1: 0
                14      LOAD_FAST                       0: n
                16      DUP_TOP                         
                18      ROT_THREE                       
                20      COMPARE_OP                      1 (<=)
                22      POP_JUMP_IF_FALSE               20 (to 40)
                24      LOAD_CONST                      2: 8
                26      LOAD_FAST                       1: digits
                28      LOAD_CONST                      3: 1
                30      BINARY_SUBTRACT                 
                32      BINARY_POWER                    
                34      COMPARE_OP                      0 (<)
                36      POP_JUMP_IF_FALSE               37 (to 74)
                38      JUMP_FORWARD                    2 (to 44)
                40      POP_TOP                         
                42      JUMP_FORWARD                    15 (to 74)
                44      LOAD_GLOBAL                     1: bytes
                46      LOAD_CONST                      4: '%0*o'
                48      LOAD_FAST                       1: digits
                50      LOAD_CONST                      3: 1
                52      BINARY_SUBTRACT                 
                54      LOAD_FAST                       0: n
                56      BUILD_TUPLE                     2
                58      BINARY_MODULO                   
                60      LOAD_CONST                      5: 'ascii'
                62      CALL_FUNCTION                   2
                64      LOAD_GLOBAL                     2: NUL
                66      BINARY_ADD                      
                68      STORE_FAST                      4: s
                70      LOAD_FAST                       4: s
                72      RETURN_VALUE                    
                74      LOAD_FAST                       2: format
                76      LOAD_GLOBAL                     3: GNU_FORMAT
                78      COMPARE_OP                      2 (==)
                80      POP_JUMP_IF_FALSE               109 (to 218)
                82      LOAD_CONST                      6: 256
                84      LOAD_FAST                       1: digits
                86      LOAD_CONST                      3: 1
                88      BINARY_SUBTRACT                 
                90      BINARY_POWER                    
                92      UNARY_NEGATIVE                  
                94      LOAD_FAST                       0: n
                96      DUP_TOP                         
                98      ROT_THREE                       
                100     COMPARE_OP                      1 (<=)
                102     POP_JUMP_IF_FALSE               60 (to 120)
                104     LOAD_CONST                      6: 256
                106     LOAD_FAST                       1: digits
                108     LOAD_CONST                      3: 1
                110     BINARY_SUBTRACT                 
                112     BINARY_POWER                    
                114     COMPARE_OP                      0 (<)
                116     POP_JUMP_IF_FALSE               109 (to 218)
                118     JUMP_FORWARD                    5 (to 130)
                120     POP_TOP                         
                122     LOAD_GLOBAL                     7: ValueError
                124     LOAD_CONST                      9: 'overflow in number field'
                126     CALL_FUNCTION                   1
                128     RAISE_VARARGS                   1
                130     LOAD_FAST                       0: n
                132     LOAD_CONST                      1: 0
                134     COMPARE_OP                      5 (>=)
                136     POP_JUMP_IF_FALSE               75 (to 150)
                138     LOAD_GLOBAL                     4: bytearray
                140     LOAD_CONST                      7: 128
                142     BUILD_LIST                      1
                144     CALL_FUNCTION                   1
                146     STORE_FAST                      4: s
                148     JUMP_FORWARD                    11 (to 172)
                150     LOAD_GLOBAL                     4: bytearray
                152     LOAD_CONST                      8: 255
                154     BUILD_LIST                      1
                156     CALL_FUNCTION                   1
                158     STORE_FAST                      4: s
                160     LOAD_CONST                      6: 256
                162     LOAD_FAST                       1: digits
                164     BINARY_POWER                    
                166     LOAD_FAST                       0: n
                168     BINARY_ADD                      
                170     STORE_FAST                      0: n
                172     LOAD_GLOBAL                     5: range
                174     LOAD_FAST                       1: digits
                176     LOAD_CONST                      3: 1
                178     BINARY_SUBTRACT                 
                180     CALL_FUNCTION                   1
                182     GET_ITER                        
                184     FOR_ITER                        14 (to 214)
                186     STORE_FAST                      5: i
                188     LOAD_FAST                       4: s
                190     LOAD_METHOD                     6: insert
                192     LOAD_CONST                      3: 1
                194     LOAD_FAST                       0: n
                196     LOAD_CONST                      8: 255
                198     BINARY_AND                      
                200     CALL_METHOD                     2
                202     POP_TOP                         
                204     LOAD_FAST                       0: n
                206     LOAD_CONST                      2: 8
                208     INPLACE_RSHIFT                  
                210     STORE_FAST                      0: n
                212     JUMP_ABSOLUTE                   92 (to 184)
                214     LOAD_FAST                       4: s
                216     RETURN_VALUE                    
                218     LOAD_GLOBAL                     7: ValueError
                220     LOAD_CONST                      9: 'overflow in number field'
                222     CALL_FUNCTION                   1
                224     RAISE_VARARGS                   1
        'itn'
        [Code]
            File Name: tarfile.py
            Object Name: calc_chksums
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sum'
                'struct'
                'unpack_from'
            [Var Names]
                'buf'
                'unsigned_chksum'
                'signed_chksum'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Calculate the checksum for a member's header by summing up all\n       characters except for the chksum field which is treated as if\n       it was filled with spaces. According to the GNU tar sources,\n       some tars (Sun and NeXT) calculate chksum with signed char,\n       which will be different if there are chars in the buffer with\n       the high bit set. So we calculate two checksums, unsigned and\n       signed.\n    "
                256
                '148B8x356B'
                '148b8x356b'
            [Disassembly]
                0       LOAD_CONST                      1: 256
                2       LOAD_GLOBAL                     0: sum
                4       LOAD_GLOBAL                     1: struct
                6       LOAD_METHOD                     2: unpack_from
                8       LOAD_CONST                      2: '148B8x356B'
                10      LOAD_FAST                       0: buf
                12      CALL_METHOD                     2
                14      CALL_FUNCTION                   1
                16      BINARY_ADD                      
                18      STORE_FAST                      1: unsigned_chksum
                20      LOAD_CONST                      1: 256
                22      LOAD_GLOBAL                     0: sum
                24      LOAD_GLOBAL                     1: struct
                26      LOAD_METHOD                     2: unpack_from
                28      LOAD_CONST                      3: '148b8x356b'
                30      LOAD_FAST                       0: buf
                32      CALL_METHOD                     2
                34      CALL_FUNCTION                   1
                36      BINARY_ADD                      
                38      STORE_FAST                      2: signed_chksum
                40      LOAD_FAST                       1: unsigned_chksum
                42      LOAD_FAST                       2: signed_chksum
                44      BUILD_TUPLE                     2
                46      RETURN_VALUE                    
        'calc_chksums'
        [Code]
            File Name: tarfile.py
            Object Name: copyfileobj
            Arg Count: 5
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'shutil'
                'copyfileobj'
                'divmod'
                'range'
                'read'
                'len'
                'write'
            [Var Names]
                'src'
                'dst'
                'length'
                'exception'
                'bufsize'
                'blocks'
                'remainder'
                'b'
                'buf'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy length bytes from fileobj src to fileobj dst.\n       If length is None, copy the entire content.\n    '
                16384
                0
                None
                'unexpected end of data'
            [Disassembly]
                0       LOAD_FAST                       4: bufsize
                2       JUMP_IF_TRUE_OR_POP             3 (to 6)
                4       LOAD_CONST                      1: 16384
                6       STORE_FAST                      4: bufsize
                8       LOAD_FAST                       2: length
                10      LOAD_CONST                      2: 0
                12      COMPARE_OP                      2 (==)
                14      POP_JUMP_IF_FALSE               10 (to 20)
                16      LOAD_CONST                      3: None
                18      RETURN_VALUE                    
                20      LOAD_FAST                       2: length
                22      LOAD_CONST                      3: None
                24      IS_OP                           0 (is)
                26      POP_JUMP_IF_FALSE               23 (to 46)
                28      LOAD_GLOBAL                     0: shutil
                30      LOAD_METHOD                     1: copyfileobj
                32      LOAD_FAST                       0: src
                34      LOAD_FAST                       1: dst
                36      LOAD_FAST                       4: bufsize
                38      CALL_METHOD                     3
                40      POP_TOP                         
                42      LOAD_CONST                      3: None
                44      RETURN_VALUE                    
                46      LOAD_GLOBAL                     2: divmod
                48      LOAD_FAST                       2: length
                50      LOAD_FAST                       4: bufsize
                52      CALL_FUNCTION                   2
                54      UNPACK_SEQUENCE                 2
                56      STORE_FAST                      5: blocks
                58      STORE_FAST                      6: remainder
                60      LOAD_GLOBAL                     3: range
                62      LOAD_FAST                       5: blocks
                64      CALL_FUNCTION                   1
                66      GET_ITER                        
                68      FOR_ITER                        22 (to 114)
                70      STORE_FAST                      7: b
                72      LOAD_FAST                       0: src
                74      LOAD_METHOD                     4: read
                76      LOAD_FAST                       4: bufsize
                78      CALL_METHOD                     1
                80      STORE_FAST                      8: buf
                82      LOAD_GLOBAL                     5: len
                84      LOAD_FAST                       8: buf
                86      CALL_FUNCTION                   1
                88      LOAD_FAST                       4: bufsize
                90      COMPARE_OP                      0 (<)
                92      POP_JUMP_IF_FALSE               51 (to 102)
                94      LOAD_FAST                       3: exception
                96      LOAD_CONST                      4: 'unexpected end of data'
                98      CALL_FUNCTION                   1
                100     RAISE_VARARGS                   1
                102     LOAD_FAST                       1: dst
                104     LOAD_METHOD                     6: write
                106     LOAD_FAST                       8: buf
                108     CALL_METHOD                     1
                110     POP_TOP                         
                112     JUMP_ABSOLUTE                   34 (to 68)
                114     LOAD_FAST                       6: remainder
                116     LOAD_CONST                      2: 0
                118     COMPARE_OP                      3 (!=)
                120     POP_JUMP_IF_FALSE               81 (to 162)
                122     LOAD_FAST                       0: src
                124     LOAD_METHOD                     4: read
                126     LOAD_FAST                       6: remainder
                128     CALL_METHOD                     1
                130     STORE_FAST                      8: buf
                132     LOAD_GLOBAL                     5: len
                134     LOAD_FAST                       8: buf
                136     CALL_FUNCTION                   1
                138     LOAD_FAST                       6: remainder
                140     COMPARE_OP                      0 (<)
                142     POP_JUMP_IF_FALSE               76 (to 152)
                144     LOAD_FAST                       3: exception
                146     LOAD_CONST                      4: 'unexpected end of data'
                148     CALL_FUNCTION                   1
                150     RAISE_VARARGS                   1
                152     LOAD_FAST                       1: dst
                154     LOAD_METHOD                     6: write
                156     LOAD_FAST                       8: buf
                158     CALL_METHOD                     1
                160     POP_TOP                         
                162     LOAD_CONST                      3: None
                164     RETURN_VALUE                    
        'copyfileobj'
        [Code]
            File Name: tarfile.py
            Object Name: _safe_print
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'getattr'
                'sys'
                'stdout'
                'encode'
                'decode'
                'print'
            [Var Names]
                's'
                'encoding'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'encoding'
                'backslashreplace'
                ' '
                (
                    'end'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: getattr
                2       LOAD_GLOBAL                     1: sys
                4       LOAD_ATTR                       2: stdout
                6       LOAD_CONST                      1: 'encoding'
                8       LOAD_CONST                      0: None
                10      CALL_FUNCTION                   3
                12      STORE_FAST                      1: encoding
                14      LOAD_FAST                       1: encoding
                16      LOAD_CONST                      0: None
                18      IS_OP                           1 (is not)
                20      POP_JUMP_IF_FALSE               20 (to 40)
                22      LOAD_FAST                       0: s
                24      LOAD_METHOD                     3: encode
                26      LOAD_FAST                       1: encoding
                28      LOAD_CONST                      2: 'backslashreplace'
                30      CALL_METHOD                     2
                32      LOAD_METHOD                     4: decode
                34      LOAD_FAST                       1: encoding
                36      CALL_METHOD                     1
                38      STORE_FAST                      0: s
                40      LOAD_GLOBAL                     5: print
                42      LOAD_FAST                       0: s
                44      LOAD_CONST                      3: ' '
                46      LOAD_CONST                      4: ('end',)
                48      CALL_FUNCTION_KW                2
                50      POP_TOP                         
                52      LOAD_CONST                      0: None
                54      RETURN_VALUE                    
        '_safe_print'
        [Code]
            File Name: tarfile.py
            Object Name: TarError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TarError'
                'Base exception.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TarError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Base exception.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'TarError'
        [Code]
            File Name: tarfile.py
            Object Name: ExtractError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ExtractError'
                'General exception for extract errors.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ExtractError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'General exception for extract errors.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'ExtractError'
        [Code]
            File Name: tarfile.py
            Object Name: ReadError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ReadError'
                'Exception for unreadable tar archives.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ReadError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for unreadable tar archives.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'ReadError'
        [Code]
            File Name: tarfile.py
            Object Name: CompressionError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'CompressionError'
                'Exception for unavailable compression methods.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'CompressionError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for unavailable compression methods.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'CompressionError'
        [Code]
            File Name: tarfile.py
            Object Name: StreamError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'StreamError'
                'Exception for unsupported operations on stream-like TarFiles.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'StreamError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for unsupported operations on stream-like TarFiles.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'StreamError'
        [Code]
            File Name: tarfile.py
            Object Name: HeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'HeaderError'
                'Base exception for header errors.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'HeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Base exception for header errors.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'HeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: EmptyHeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'EmptyHeaderError'
                'Exception for empty headers.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'EmptyHeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for empty headers.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'EmptyHeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: TruncatedHeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TruncatedHeaderError'
                'Exception for truncated headers.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TruncatedHeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for truncated headers.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'TruncatedHeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: EOFHeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'EOFHeaderError'
                'Exception for end of file headers.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'EOFHeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for end of file headers.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'EOFHeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: InvalidHeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'InvalidHeaderError'
                'Exception for invalid headers.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'InvalidHeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for invalid headers.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'InvalidHeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: SubsequentHeaderError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'SubsequentHeaderError'
                'Exception for missing and invalid extended headers.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SubsequentHeaderError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Exception for missing and invalid extended headers.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'SubsequentHeaderError'
        [Code]
            File Name: tarfile.py
            Object Name: _LowLevelFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'close'
                'read'
                'write'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_LowLevelFile'
                'Low-level file object. Supports reading and writing.\n       It is used instead of a regular file object for streaming\n       access.\n    '
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'O_RDONLY'
                        'O_WRONLY'
                        'O_CREAT'
                        'O_TRUNC'
                        'hasattr'
                        'O_BINARY'
                        'open'
                        'fd'
                    [Var Names]
                        'self'
                        'name'
                        'mode'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'r'
                            'w'
                        )
                        'O_BINARY'
                        438
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_ATTR                       1: O_RDONLY
                        4       LOAD_GLOBAL                     0: os
                        6       LOAD_ATTR                       2: O_WRONLY
                        8       LOAD_GLOBAL                     0: os
                        10      LOAD_ATTR                       3: O_CREAT
                        12      BINARY_OR                       
                        14      LOAD_GLOBAL                     0: os
                        16      LOAD_ATTR                       4: O_TRUNC
                        18      BINARY_OR                       
                        20      LOAD_CONST                      1: ('r', 'w')
                        22      BUILD_CONST_KEY_MAP             2
                        24      LOAD_FAST                       2: mode
                        26      BINARY_SUBSCR                   
                        28      STORE_FAST                      2: mode
                        30      LOAD_GLOBAL                     5: hasattr
                        32      LOAD_GLOBAL                     0: os
                        34      LOAD_CONST                      2: 'O_BINARY'
                        36      CALL_FUNCTION                   2
                        38      POP_JUMP_IF_FALSE               25 (to 50)
                        40      LOAD_FAST                       2: mode
                        42      LOAD_GLOBAL                     0: os
                        44      LOAD_ATTR                       6: O_BINARY
                        46      INPLACE_OR                      
                        48      STORE_FAST                      2: mode
                        50      LOAD_GLOBAL                     0: os
                        52      LOAD_METHOD                     7: open
                        54      LOAD_FAST                       1: name
                        56      LOAD_FAST                       2: mode
                        58      LOAD_CONST                      3: 438
                        60      CALL_METHOD                     3
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      8: fd
                        66      LOAD_CONST                      0: None
                        68      RETURN_VALUE                    
                '_LowLevelFile.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'close'
                        'fd'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_METHOD                     1: close
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: fd
                        8       CALL_METHOD                     1
                        10      POP_TOP                         
                        12      LOAD_CONST                      0: None
                        14      RETURN_VALUE                    
                '_LowLevelFile.close'
                [Code]
                    File Name: tarfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'read'
                        'fd'
                    [Var Names]
                        'self'
                        'size'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_METHOD                     1: read
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: fd
                        8       LOAD_FAST                       1: size
                        10      CALL_METHOD                     2
                        12      RETURN_VALUE                    
                '_LowLevelFile.read'
                [Code]
                    File Name: tarfile.py
                    Object Name: write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'write'
                        'fd'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_METHOD                     1: write
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: fd
                        8       LOAD_FAST                       1: s
                        10      CALL_METHOD                     2
                        12      POP_TOP                         
                        14      LOAD_CONST                      0: None
                        16      RETURN_VALUE                    
                '_LowLevelFile.write'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_LowLevelFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Low-level file object. Supports reading and writing.\n       It is used instead of a regular file object for streaming\n       access.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: '_LowLevelFile.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> close
                22      LOAD_CONST                      5: '_LowLevelFile.close'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: close
                28      LOAD_CONST                      6: <CODE> read
                30      LOAD_CONST                      7: '_LowLevelFile.read'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: read
                36      LOAD_CONST                      8: <CODE> write
                38      LOAD_CONST                      9: '_LowLevelFile.write'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: write
                44      LOAD_CONST                      10: None
                46      RETURN_VALUE                    
        '_LowLevelFile'
        [Code]
            File Name: tarfile.py
            Object Name: _Stream
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__del__'
                '_init_write_gz'
                'write'
                '_Stream__write'
                'close'
                '_init_read_gz'
                'tell'
                'seek'
                'read'
                '_read'
                '_Stream__read'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Stream'
                'Class that serves as an adapter between TarFile and\n       a stream-like object.  The stream-like object only\n       needs to have a read() or write() method and is accessed\n       blockwise.  Use of gzip or bzip2 compression is possible.\n       A stream-like object could be for example: sys.stdin,\n       sys.stdout, a socket, a tape device etc.\n\n       _Stream is intended to be used only internally.\n    '
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_extfileobj'
                        '_LowLevelFile'
                        '_StreamProxy'
                        'getcomptype'
                        'name'
                        'mode'
                        'comptype'
                        'fileobj'
                        'bufsize'
                        'buf'
                        'pos'
                        'closed'
                        'zlib'
                        'ImportError'
                        'CompressionError'
                        'crc32'
                        'crc'
                        '_init_read_gz'
                        'error'
                        'exception'
                        '_init_write_gz'
                        'bz2'
                        'dbuf'
                        'BZ2Decompressor'
                        'cmp'
                        'OSError'
                        'BZ2Compressor'
                        'lzma'
                        'LZMADecompressor'
                        'LZMAError'
                        'LZMACompressor'
                        'close'
                    [Var Names]
                        'self'
                        'name'
                        'mode'
                        'comptype'
                        'fileobj'
                        'bufsize'
                        'zlib'
                        'bz2'
                        'lzma'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a _Stream object.\n        '
                        True
                        None
                        False
                        '*'
                        ''
                        b''
                        0
                        'gz'
                        'zlib module is not available'
                        'r'
                        'bz2'
                        'bz2 module is not available'
                        'xz'
                        'lzma module is not available'
                        'tar'
                        'unknown compression type %r'
                    [Disassembly]
                        0       LOAD_CONST                      1: True
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _extfileobj
                        6       LOAD_FAST                       4: fileobj
                        8       LOAD_CONST                      2: None
                        10      IS_OP                           0 (is)
                        12      POP_JUMP_IF_FALSE               15 (to 30)
                        14      LOAD_GLOBAL                     1: _LowLevelFile
                        16      LOAD_FAST                       1: name
                        18      LOAD_FAST                       2: mode
                        20      CALL_FUNCTION                   2
                        22      STORE_FAST                      4: fileobj
                        24      LOAD_CONST                      3: False
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      0: _extfileobj
                        30      LOAD_FAST                       3: comptype
                        32      LOAD_CONST                      4: '*'
                        34      COMPARE_OP                      2 (==)
                        36      POP_JUMP_IF_FALSE               27 (to 54)
                        38      LOAD_GLOBAL                     2: _StreamProxy
                        40      LOAD_FAST                       4: fileobj
                        42      CALL_FUNCTION                   1
                        44      STORE_FAST                      4: fileobj
                        46      LOAD_FAST                       4: fileobj
                        48      LOAD_METHOD                     3: getcomptype
                        50      CALL_METHOD                     0
                        52      STORE_FAST                      3: comptype
                        54      LOAD_FAST                       1: name
                        56      JUMP_IF_TRUE_OR_POP             30 (to 60)
                        58      LOAD_CONST                      5: ''
                        60      LOAD_FAST                       0: self
                        62      STORE_ATTR                      4: name
                        64      LOAD_FAST                       2: mode
                        66      LOAD_FAST                       0: self
                        68      STORE_ATTR                      5: mode
                        70      LOAD_FAST                       3: comptype
                        72      LOAD_FAST                       0: self
                        74      STORE_ATTR                      6: comptype
                        76      LOAD_FAST                       4: fileobj
                        78      LOAD_FAST                       0: self
                        80      STORE_ATTR                      7: fileobj
                        82      LOAD_FAST                       5: bufsize
                        84      LOAD_FAST                       0: self
                        86      STORE_ATTR                      8: bufsize
                        88      LOAD_CONST                      6: b''
                        90      LOAD_FAST                       0: self
                        92      STORE_ATTR                      9: buf
                        94      LOAD_CONST                      7: 0
                        96      LOAD_FAST                       0: self
                        98      STORE_ATTR                      10: pos
                        100     LOAD_CONST                      3: False
                        102     LOAD_FAST                       0: self
                        104     STORE_ATTR                      11: closed
                        106     SETUP_FINALLY                   166 (to 440)
                        108     LOAD_FAST                       3: comptype
                        110     LOAD_CONST                      8: 'gz'
                        112     COMPARE_OP                      2 (==)
                        114     POP_JUMP_IF_FALSE               108 (to 216)
                        116     SETUP_FINALLY                   6 (to 130)
                        118     LOAD_CONST                      7: 0
                        120     LOAD_CONST                      2: None
                        122     IMPORT_NAME                     12: zlib
                        124     STORE_FAST                      6: zlib
                        126     POP_BLOCK                       
                        128     JUMP_FORWARD                    12 (to 154)
                        130     DUP_TOP                         
                        132     LOAD_GLOBAL                     13: ImportError
                        134     JUMP_IF_NOT_EXC_MATCH           76 (to 152)
                        136     POP_TOP                         
                        138     POP_TOP                         
                        140     POP_TOP                         
                        142     LOAD_GLOBAL                     14: CompressionError
                        144     LOAD_CONST                      9: 'zlib module is not available'
                        146     CALL_FUNCTION                   1
                        148     LOAD_CONST                      2: None
                        150     RAISE_VARARGS                   2
                        152     RERAISE                         0
                        154     LOAD_FAST                       6: zlib
                        156     LOAD_FAST                       0: self
                        158     STORE_ATTR                      12: zlib
                        160     LOAD_FAST                       6: zlib
                        162     LOAD_METHOD                     15: crc32
                        164     LOAD_CONST                      6: b''
                        166     CALL_METHOD                     1
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      16: crc
                        172     LOAD_FAST                       2: mode
                        174     LOAD_CONST                      10: 'r'
                        176     COMPARE_OP                      2 (==)
                        178     POP_JUMP_IF_FALSE               101 (to 202)
                        180     LOAD_FAST                       0: self
                        182     LOAD_METHOD                     17: _init_read_gz
                        184     CALL_METHOD                     0
                        186     POP_TOP                         
                        188     LOAD_FAST                       6: zlib
                        190     LOAD_ATTR                       18: error
                        192     LOAD_FAST                       0: self
                        194     STORE_ATTR                      19: exception
                        196     POP_BLOCK                       
                        198     LOAD_CONST                      2: None
                        200     RETURN_VALUE                    
                        202     LOAD_FAST                       0: self
                        204     LOAD_METHOD                     20: _init_write_gz
                        206     CALL_METHOD                     0
                        208     POP_TOP                         
                        210     POP_BLOCK                       
                        212     LOAD_CONST                      2: None
                        214     RETURN_VALUE                    
                        216     LOAD_FAST                       3: comptype
                        218     LOAD_CONST                      11: 'bz2'
                        220     COMPARE_OP                      2 (==)
                        222     POP_JUMP_IF_FALSE               157 (to 314)
                        224     SETUP_FINALLY                   6 (to 238)
                        226     LOAD_CONST                      7: 0
                        228     LOAD_CONST                      2: None
                        230     IMPORT_NAME                     21: bz2
                        232     STORE_FAST                      7: bz2
                        234     POP_BLOCK                       
                        236     JUMP_FORWARD                    12 (to 262)
                        238     DUP_TOP                         
                        240     LOAD_GLOBAL                     13: ImportError
                        242     JUMP_IF_NOT_EXC_MATCH           130 (to 260)
                        244     POP_TOP                         
                        246     POP_TOP                         
                        248     POP_TOP                         
                        250     LOAD_GLOBAL                     14: CompressionError
                        252     LOAD_CONST                      12: 'bz2 module is not available'
                        254     CALL_FUNCTION                   1
                        256     LOAD_CONST                      2: None
                        258     RAISE_VARARGS                   2
                        260     RERAISE                         0
                        262     LOAD_FAST                       2: mode
                        264     LOAD_CONST                      10: 'r'
                        266     COMPARE_OP                      2 (==)
                        268     POP_JUMP_IF_FALSE               149 (to 298)
                        270     LOAD_CONST                      6: b''
                        272     LOAD_FAST                       0: self
                        274     STORE_ATTR                      22: dbuf
                        276     LOAD_FAST                       7: bz2
                        278     LOAD_METHOD                     23: BZ2Decompressor
                        280     CALL_METHOD                     0
                        282     LOAD_FAST                       0: self
                        284     STORE_ATTR                      24: cmp
                        286     LOAD_GLOBAL                     25: OSError
                        288     LOAD_FAST                       0: self
                        290     STORE_ATTR                      19: exception
                        292     POP_BLOCK                       
                        294     LOAD_CONST                      2: None
                        296     RETURN_VALUE                    
                        298     LOAD_FAST                       7: bz2
                        300     LOAD_METHOD                     26: BZ2Compressor
                        302     CALL_METHOD                     0
                        304     LOAD_FAST                       0: self
                        306     STORE_ATTR                      24: cmp
                        308     POP_BLOCK                       
                        310     LOAD_CONST                      2: None
                        312     RETURN_VALUE                    
                        314     LOAD_FAST                       3: comptype
                        316     LOAD_CONST                      13: 'xz'
                        318     COMPARE_OP                      2 (==)
                        320     POP_JUMP_IF_FALSE               207 (to 414)
                        322     SETUP_FINALLY                   6 (to 336)
                        324     LOAD_CONST                      7: 0
                        326     LOAD_CONST                      2: None
                        328     IMPORT_NAME                     27: lzma
                        330     STORE_FAST                      8: lzma
                        332     POP_BLOCK                       
                        334     JUMP_FORWARD                    12 (to 360)
                        336     DUP_TOP                         
                        338     LOAD_GLOBAL                     13: ImportError
                        340     JUMP_IF_NOT_EXC_MATCH           179 (to 358)
                        342     POP_TOP                         
                        344     POP_TOP                         
                        346     POP_TOP                         
                        348     LOAD_GLOBAL                     14: CompressionError
                        350     LOAD_CONST                      14: 'lzma module is not available'
                        352     CALL_FUNCTION                   1
                        354     LOAD_CONST                      2: None
                        356     RAISE_VARARGS                   2
                        358     RERAISE                         0
                        360     LOAD_FAST                       2: mode
                        362     LOAD_CONST                      10: 'r'
                        364     COMPARE_OP                      2 (==)
                        366     POP_JUMP_IF_FALSE               199 (to 398)
                        368     LOAD_CONST                      6: b''
                        370     LOAD_FAST                       0: self
                        372     STORE_ATTR                      22: dbuf
                        374     LOAD_FAST                       8: lzma
                        376     LOAD_METHOD                     28: LZMADecompressor
                        378     CALL_METHOD                     0
                        380     LOAD_FAST                       0: self
                        382     STORE_ATTR                      24: cmp
                        384     LOAD_FAST                       8: lzma
                        386     LOAD_ATTR                       29: LZMAError
                        388     LOAD_FAST                       0: self
                        390     STORE_ATTR                      19: exception
                        392     POP_BLOCK                       
                        394     LOAD_CONST                      2: None
                        396     RETURN_VALUE                    
                        398     LOAD_FAST                       8: lzma
                        400     LOAD_METHOD                     30: LZMACompressor
                        402     CALL_METHOD                     0
                        404     LOAD_FAST                       0: self
                        406     STORE_ATTR                      24: cmp
                        408     POP_BLOCK                       
                        410     LOAD_CONST                      2: None
                        412     RETURN_VALUE                    
                        414     LOAD_FAST                       3: comptype
                        416     LOAD_CONST                      15: 'tar'
                        418     COMPARE_OP                      3 (!=)
                        420     POP_JUMP_IF_FALSE               217 (to 434)
                        422     LOAD_GLOBAL                     14: CompressionError
                        424     LOAD_CONST                      16: 'unknown compression type %r'
                        426     LOAD_FAST                       3: comptype
                        428     BINARY_MODULO                   
                        430     CALL_FUNCTION                   1
                        432     RAISE_VARARGS                   1
                        434     POP_BLOCK                       
                        436     LOAD_CONST                      2: None
                        438     RETURN_VALUE                    
                        440     POP_TOP                         
                        442     POP_TOP                         
                        444     POP_TOP                         
                        446     LOAD_FAST                       0: self
                        448     LOAD_ATTR                       0: _extfileobj
                        450     POP_JUMP_IF_TRUE                231 (to 462)
                        452     LOAD_FAST                       0: self
                        454     LOAD_ATTR                       7: fileobj
                        456     LOAD_METHOD                     31: close
                        458     CALL_METHOD                     0
                        460     POP_TOP                         
                        462     LOAD_CONST                      1: True
                        464     LOAD_FAST                       0: self
                        466     STORE_ATTR                      11: closed
                        468     RAISE_VARARGS                   0
                '_Stream.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: __del__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'closed'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'closed'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_FAST                       0: self
                        4       LOAD_CONST                      1: 'closed'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: closed
                        14      POP_JUMP_IF_TRUE                16 (to 32)
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     2: close
                        20      CALL_METHOD                     0
                        22      POP_TOP                         
                        24      LOAD_CONST                      0: None
                        26      RETURN_VALUE                    
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                        32      LOAD_CONST                      0: None
                        34      RETURN_VALUE                    
                '_Stream.__del__'
                [Code]
                    File Name: tarfile.py
                    Object Name: _init_write_gz
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'zlib'
                        'compressobj'
                        'DEFLATED'
                        'MAX_WBITS'
                        'DEF_MEM_LEVEL'
                        'cmp'
                        'struct'
                        'pack'
                        'int'
                        'time'
                        '_Stream__write'
                        'name'
                        'endswith'
                        'os'
                        'path'
                        'basename'
                        'encode'
                        'NUL'
                    [Var Names]
                        'self'
                        'timestamp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Initialize for writing with gzip compression.\n        '
                        9
                        0
                        '<L'
                        b'\x1f\x8b\x08\x08'
                        b'\x02\xff'
                        '.gz'
                        None
                        -3
                        'iso-8859-1'
                        'replace'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: zlib
                        4       LOAD_METHOD                     1: compressobj
                        6       LOAD_CONST                      1: 9
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: zlib
                        12      LOAD_ATTR                       2: DEFLATED
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       0: zlib
                        18      LOAD_ATTR                       3: MAX_WBITS
                        20      UNARY_NEGATIVE                  
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       0: zlib
                        26      LOAD_ATTR                       4: DEF_MEM_LEVEL
                        28      LOAD_CONST                      2: 0
                        30      CALL_METHOD                     5
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      5: cmp
                        36      LOAD_GLOBAL                     6: struct
                        38      LOAD_METHOD                     7: pack
                        40      LOAD_CONST                      3: '<L'
                        42      LOAD_GLOBAL                     8: int
                        44      LOAD_GLOBAL                     9: time
                        46      LOAD_METHOD                     9: time
                        48      CALL_METHOD                     0
                        50      CALL_FUNCTION                   1
                        52      CALL_METHOD                     2
                        54      STORE_FAST                      1: timestamp
                        56      LOAD_FAST                       0: self
                        58      LOAD_METHOD                     10: _Stream__write
                        60      LOAD_CONST                      4: b'\x1f\x8b\x08\x08'
                        62      LOAD_FAST                       1: timestamp
                        64      BINARY_ADD                      
                        66      LOAD_CONST                      5: b'\x02\xff'
                        68      BINARY_ADD                      
                        70      CALL_METHOD                     1
                        72      POP_TOP                         
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       11: name
                        78      LOAD_METHOD                     12: endswith
                        80      LOAD_CONST                      6: '.gz'
                        82      CALL_METHOD                     1
                        84      POP_JUMP_IF_FALSE               51 (to 102)
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       11: name
                        90      LOAD_CONST                      7: None
                        92      LOAD_CONST                      8: -3
                        94      BUILD_SLICE                     2
                        96      BINARY_SUBSCR                   
                        98      LOAD_FAST                       0: self
                        100     STORE_ATTR                      11: name
                        102     LOAD_GLOBAL                     13: os
                        104     LOAD_ATTR                       14: path
                        106     LOAD_METHOD                     15: basename
                        108     LOAD_FAST                       0: self
                        110     LOAD_ATTR                       11: name
                        112     CALL_METHOD                     1
                        114     LOAD_FAST                       0: self
                        116     STORE_ATTR                      11: name
                        118     LOAD_FAST                       0: self
                        120     LOAD_METHOD                     10: _Stream__write
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       11: name
                        126     LOAD_METHOD                     16: encode
                        128     LOAD_CONST                      9: 'iso-8859-1'
                        130     LOAD_CONST                      10: 'replace'
                        132     CALL_METHOD                     2
                        134     LOAD_GLOBAL                     17: NUL
                        136     BINARY_ADD                      
                        138     CALL_METHOD                     1
                        140     POP_TOP                         
                        142     LOAD_CONST                      7: None
                        144     RETURN_VALUE                    
                '_Stream._init_write_gz'
                [Code]
                    File Name: tarfile.py
                    Object Name: write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'comptype'
                        'zlib'
                        'crc32'
                        'crc'
                        'pos'
                        'len'
                        'cmp'
                        'compress'
                        '_Stream__write'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Write string s to the stream.\n        '
                        'gz'
                        'tar'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: comptype
                        4       LOAD_CONST                      1: 'gz'
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: zlib
                        14      LOAD_METHOD                     2: crc32
                        16      LOAD_FAST                       1: s
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       3: crc
                        22      CALL_METHOD                     2
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      3: crc
                        28      LOAD_FAST                       0: self
                        30      DUP_TOP                         
                        32      LOAD_ATTR                       4: pos
                        34      LOAD_GLOBAL                     5: len
                        36      LOAD_FAST                       1: s
                        38      CALL_FUNCTION                   1
                        40      INPLACE_ADD                     
                        42      ROT_TWO                         
                        44      STORE_ATTR                      4: pos
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       0: comptype
                        50      LOAD_CONST                      2: 'tar'
                        52      COMPARE_OP                      3 (!=)
                        54      POP_JUMP_IF_FALSE               34 (to 68)
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       6: cmp
                        60      LOAD_METHOD                     7: compress
                        62      LOAD_FAST                       1: s
                        64      CALL_METHOD                     1
                        66      STORE_FAST                      1: s
                        68      LOAD_FAST                       0: self
                        70      LOAD_METHOD                     8: _Stream__write
                        72      LOAD_FAST                       1: s
                        74      CALL_METHOD                     1
                        76      POP_TOP                         
                        78      LOAD_CONST                      3: None
                        80      RETURN_VALUE                    
                '_Stream.write'
                [Code]
                    File Name: tarfile.py
                    Object Name: __write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'buf'
                        'len'
                        'bufsize'
                        'fileobj'
                        'write'
                    [Var Names]
                        'self'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Write string s to the stream if a whole new block\n           is ready to be written.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       DUP_TOP                         
                        4       LOAD_ATTR                       0: buf
                        6       LOAD_FAST                       1: s
                        8       INPLACE_ADD                     
                        10      ROT_TWO                         
                        12      STORE_ATTR                      0: buf
                        14      LOAD_GLOBAL                     1: len
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: buf
                        20      CALL_FUNCTION                   1
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       2: bufsize
                        26      COMPARE_OP                      4 (>)
                        28      POP_JUMP_IF_FALSE               46 (to 92)
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       3: fileobj
                        34      LOAD_METHOD                     4: write
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       0: buf
                        40      LOAD_CONST                      1: None
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       2: bufsize
                        46      BUILD_SLICE                     2
                        48      BINARY_SUBSCR                   
                        50      CALL_METHOD                     1
                        52      POP_TOP                         
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       0: buf
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       2: bufsize
                        62      LOAD_CONST                      1: None
                        64      BUILD_SLICE                     2
                        66      BINARY_SUBSCR                   
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      0: buf
                        72      LOAD_GLOBAL                     1: len
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       0: buf
                        78      CALL_FUNCTION                   1
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       2: bufsize
                        84      COMPARE_OP                      4 (>)
                        86      POP_JUMP_IF_TRUE                15 (to 30)
                        88      LOAD_CONST                      1: None
                        90      RETURN_VALUE                    
                        92      LOAD_CONST                      1: None
                        94      RETURN_VALUE                    
                '_Stream.__write'
                [Code]
                    File Name: tarfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'mode'
                        'comptype'
                        'buf'
                        'cmp'
                        'flush'
                        'fileobj'
                        'write'
                        'struct'
                        'pack'
                        'crc'
                        'pos'
                        '_extfileobj'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Close the _Stream object. No operation should be\n           done on it afterwards.\n        '
                        None
                        True
                        'w'
                        'tar'
                        b''
                        'gz'
                        '<L'
                        0xFFFFFFFF
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               5 (to 10)
                        6       LOAD_CONST                      1: None
                        8       RETURN_VALUE                    
                        10      LOAD_CONST                      2: True
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      0: closed
                        16      SETUP_FINALLY                   80 (to 178)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       1: mode
                        22      LOAD_CONST                      3: 'w'
                        24      COMPARE_OP                      2 (==)
                        26      POP_JUMP_IF_FALSE               29 (to 58)
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       2: comptype
                        32      LOAD_CONST                      4: 'tar'
                        34      COMPARE_OP                      3 (!=)
                        36      POP_JUMP_IF_FALSE               29 (to 58)
                        38      LOAD_FAST                       0: self
                        40      DUP_TOP                         
                        42      LOAD_ATTR                       3: buf
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       4: cmp
                        48      LOAD_METHOD                     5: flush
                        50      CALL_METHOD                     0
                        52      INPLACE_ADD                     
                        54      ROT_TWO                         
                        56      STORE_ATTR                      3: buf
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       1: mode
                        62      LOAD_CONST                      3: 'w'
                        64      COMPARE_OP                      2 (==)
                        66      POP_JUMP_IF_FALSE               76 (to 152)
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       3: buf
                        72      POP_JUMP_IF_FALSE               76 (to 152)
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       6: fileobj
                        78      LOAD_METHOD                     7: write
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       3: buf
                        84      CALL_METHOD                     1
                        86      POP_TOP                         
                        88      LOAD_CONST                      5: b''
                        90      LOAD_FAST                       0: self
                        92      STORE_ATTR                      3: buf
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       2: comptype
                        98      LOAD_CONST                      6: 'gz'
                        100     COMPARE_OP                      2 (==)
                        102     POP_JUMP_IF_FALSE               76 (to 152)
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       6: fileobj
                        108     LOAD_METHOD                     7: write
                        110     LOAD_GLOBAL                     8: struct
                        112     LOAD_METHOD                     9: pack
                        114     LOAD_CONST                      7: '<L'
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       10: crc
                        120     CALL_METHOD                     2
                        122     CALL_METHOD                     1
                        124     POP_TOP                         
                        126     LOAD_FAST                       0: self
                        128     LOAD_ATTR                       6: fileobj
                        130     LOAD_METHOD                     7: write
                        132     LOAD_GLOBAL                     8: struct
                        134     LOAD_METHOD                     9: pack
                        136     LOAD_CONST                      7: '<L'
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       11: pos
                        142     LOAD_CONST                      8: 0xFFFFFFFF
                        144     BINARY_AND                      
                        146     CALL_METHOD                     2
                        148     CALL_METHOD                     1
                        150     POP_TOP                         
                        152     POP_BLOCK                       
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       12: _extfileobj
                        158     POP_JUMP_IF_TRUE                87 (to 174)
                        160     LOAD_FAST                       0: self
                        162     LOAD_ATTR                       6: fileobj
                        164     LOAD_METHOD                     13: close
                        166     CALL_METHOD                     0
                        168     POP_TOP                         
                        170     LOAD_CONST                      1: None
                        172     RETURN_VALUE                    
                        174     LOAD_CONST                      1: None
                        176     RETURN_VALUE                    
                        178     LOAD_FAST                       0: self
                        180     LOAD_ATTR                       12: _extfileobj
                        182     POP_JUMP_IF_TRUE                98 (to 196)
                        184     LOAD_FAST                       0: self
                        186     LOAD_ATTR                       6: fileobj
                        188     LOAD_METHOD                     13: close
                        190     CALL_METHOD                     0
                        192     POP_TOP                         
                        194     RERAISE                         0
                        196     RERAISE                         0
                '_Stream.close'
                [Code]
                    File Name: tarfile.py
                    Object Name: _init_read_gz
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'zlib'
                        'decompressobj'
                        'MAX_WBITS'
                        'cmp'
                        'dbuf'
                        '_Stream__read'
                        'ReadError'
                        'CompressionError'
                        'ord'
                        'read'
                        'NUL'
                    [Var Names]
                        'self'
                        'flag'
                        'xlen'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Initialize for reading a gzip compressed fileobj.\n        '
                        b''
                        2
                        b'\x1f\x8b'
                        'not a gzip file'
                        1
                        b'\x08'
                        'unsupported compression method'
                        6
                        4
                        256
                        8
                        True
                        16
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: zlib
                        4       LOAD_METHOD                     1: decompressobj
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: zlib
                        10      LOAD_ATTR                       2: MAX_WBITS
                        12      UNARY_NEGATIVE                  
                        14      CALL_METHOD                     1
                        16      LOAD_FAST                       0: self
                        18      STORE_ATTR                      3: cmp
                        20      LOAD_CONST                      1: b''
                        22      LOAD_FAST                       0: self
                        24      STORE_ATTR                      4: dbuf
                        26      LOAD_FAST                       0: self
                        28      LOAD_METHOD                     5: _Stream__read
                        30      LOAD_CONST                      2: 2
                        32      CALL_METHOD                     1
                        34      LOAD_CONST                      3: b'\x1f\x8b'
                        36      COMPARE_OP                      3 (!=)
                        38      POP_JUMP_IF_FALSE               24 (to 48)
                        40      LOAD_GLOBAL                     6: ReadError
                        42      LOAD_CONST                      4: 'not a gzip file'
                        44      CALL_FUNCTION                   1
                        46      RAISE_VARARGS                   1
                        48      LOAD_FAST                       0: self
                        50      LOAD_METHOD                     5: _Stream__read
                        52      LOAD_CONST                      5: 1
                        54      CALL_METHOD                     1
                        56      LOAD_CONST                      6: b'\x08'
                        58      COMPARE_OP                      3 (!=)
                        60      POP_JUMP_IF_FALSE               35 (to 70)
                        62      LOAD_GLOBAL                     7: CompressionError
                        64      LOAD_CONST                      7: 'unsupported compression method'
                        66      CALL_FUNCTION                   1
                        68      RAISE_VARARGS                   1
                        70      LOAD_GLOBAL                     8: ord
                        72      LOAD_FAST                       0: self
                        74      LOAD_METHOD                     5: _Stream__read
                        76      LOAD_CONST                      5: 1
                        78      CALL_METHOD                     1
                        80      CALL_FUNCTION                   1
                        82      STORE_FAST                      1: flag
                        84      LOAD_FAST                       0: self
                        86      LOAD_METHOD                     5: _Stream__read
                        88      LOAD_CONST                      8: 6
                        90      CALL_METHOD                     1
                        92      POP_TOP                         
                        94      LOAD_FAST                       1: flag
                        96      LOAD_CONST                      9: 4
                        98      BINARY_AND                      
                        100     POP_JUMP_IF_FALSE               72 (to 144)
                        102     LOAD_GLOBAL                     8: ord
                        104     LOAD_FAST                       0: self
                        106     LOAD_METHOD                     5: _Stream__read
                        108     LOAD_CONST                      5: 1
                        110     CALL_METHOD                     1
                        112     CALL_FUNCTION                   1
                        114     LOAD_CONST                      10: 256
                        116     LOAD_GLOBAL                     8: ord
                        118     LOAD_FAST                       0: self
                        120     LOAD_METHOD                     5: _Stream__read
                        122     LOAD_CONST                      5: 1
                        124     CALL_METHOD                     1
                        126     CALL_FUNCTION                   1
                        128     BINARY_MULTIPLY                 
                        130     BINARY_ADD                      
                        132     STORE_FAST                      2: xlen
                        134     LOAD_FAST                       0: self
                        136     LOAD_METHOD                     9: read
                        138     LOAD_FAST                       2: xlen
                        140     CALL_METHOD                     1
                        142     POP_TOP                         
                        144     LOAD_FAST                       1: flag
                        146     LOAD_CONST                      11: 8
                        148     BINARY_AND                      
                        150     POP_JUMP_IF_FALSE               90 (to 180)
                        152     NOP                             
                        154     LOAD_FAST                       0: self
                        156     LOAD_METHOD                     5: _Stream__read
                        158     LOAD_CONST                      5: 1
                        160     CALL_METHOD                     1
                        162     STORE_FAST                      3: s
                        164     LOAD_FAST                       3: s
                        166     POP_JUMP_IF_FALSE               88 (to 176)
                        168     LOAD_FAST                       3: s
                        170     LOAD_GLOBAL                     10: NUL
                        172     COMPARE_OP                      2 (==)
                        174     POP_JUMP_IF_FALSE               89 (to 178)
                        176     JUMP_FORWARD                    1 (to 180)
                        178     JUMP_ABSOLUTE                   77 (to 154)
                        180     LOAD_FAST                       1: flag
                        182     LOAD_CONST                      13: 16
                        184     BINARY_AND                      
                        186     POP_JUMP_IF_FALSE               108 (to 216)
                        188     NOP                             
                        190     LOAD_FAST                       0: self
                        192     LOAD_METHOD                     5: _Stream__read
                        194     LOAD_CONST                      5: 1
                        196     CALL_METHOD                     1
                        198     STORE_FAST                      3: s
                        200     LOAD_FAST                       3: s
                        202     POP_JUMP_IF_FALSE               106 (to 212)
                        204     LOAD_FAST                       3: s
                        206     LOAD_GLOBAL                     10: NUL
                        208     COMPARE_OP                      2 (==)
                        210     POP_JUMP_IF_FALSE               107 (to 214)
                        212     JUMP_FORWARD                    1 (to 216)
                        214     JUMP_ABSOLUTE                   95 (to 190)
                        216     LOAD_FAST                       1: flag
                        218     LOAD_CONST                      2: 2
                        220     BINARY_AND                      
                        222     POP_JUMP_IF_FALSE               119 (to 238)
                        224     LOAD_FAST                       0: self
                        226     LOAD_METHOD                     5: _Stream__read
                        228     LOAD_CONST                      2: 2
                        230     CALL_METHOD                     1
                        232     POP_TOP                         
                        234     LOAD_CONST                      14: None
                        236     RETURN_VALUE                    
                        238     LOAD_CONST                      14: None
                        240     RETURN_VALUE                    
                '_Stream._init_read_gz'
                [Code]
                    File Name: tarfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pos'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the stream's file pointer position.\n        "
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: pos
                        4       RETURN_VALUE                    
                '_Stream.tell'
                0
                [Code]
                    File Name: tarfile.py
                    Object Name: seek
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pos'
                        'divmod'
                        'bufsize'
                        'range'
                        'read'
                        'StreamError'
                    [Var Names]
                        'self'
                        'pos'
                        'blocks'
                        'remainder'
                        'i'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Set the stream's file pointer to pos. Negative seeking\n           is forbidden.\n        "
                        0
                        'seeking backwards is not allowed'
                    [Disassembly]
                        0       LOAD_FAST                       1: pos
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: pos
                        6       BINARY_SUBTRACT                 
                        8       LOAD_CONST                      1: 0
                        10      COMPARE_OP                      5 (>=)
                        12      POP_JUMP_IF_FALSE               39 (to 78)
                        14      LOAD_GLOBAL                     1: divmod
                        16      LOAD_FAST                       1: pos
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       0: pos
                        22      BINARY_SUBTRACT                 
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       2: bufsize
                        28      CALL_FUNCTION                   2
                        30      UNPACK_SEQUENCE                 2
                        32      STORE_FAST                      2: blocks
                        34      STORE_FAST                      3: remainder
                        36      LOAD_GLOBAL                     3: range
                        38      LOAD_FAST                       2: blocks
                        40      CALL_FUNCTION                   1
                        42      GET_ITER                        
                        44      FOR_ITER                        8 (to 62)
                        46      STORE_FAST                      4: i
                        48      LOAD_FAST                       0: self
                        50      LOAD_METHOD                     4: read
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       2: bufsize
                        56      CALL_METHOD                     1
                        58      POP_TOP                         
                        60      JUMP_ABSOLUTE                   22 (to 44)
                        62      LOAD_FAST                       0: self
                        64      LOAD_METHOD                     4: read
                        66      LOAD_FAST                       3: remainder
                        68      CALL_METHOD                     1
                        70      POP_TOP                         
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       0: pos
                        76      RETURN_VALUE                    
                        78      LOAD_GLOBAL                     5: StreamError
                        80      LOAD_CONST                      2: 'seeking backwards is not allowed'
                        82      CALL_FUNCTION                   1
                        84      RAISE_VARARGS                   1
                '_Stream.seek'
                [Code]
                    File Name: tarfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_read'
                        'pos'
                        'len'
                    [Var Names]
                        'self'
                        'size'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the next size number of bytes from the stream.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: size
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_TRUE                6 (to 12)
                        8       LOAD_ASSERTION_ERROR            
                        10      RAISE_VARARGS                   1
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     0: _read
                        16      LOAD_FAST                       1: size
                        18      CALL_METHOD                     1
                        20      STORE_FAST                      2: buf
                        22      LOAD_FAST                       0: self
                        24      DUP_TOP                         
                        26      LOAD_ATTR                       1: pos
                        28      LOAD_GLOBAL                     2: len
                        30      LOAD_FAST                       2: buf
                        32      CALL_FUNCTION                   1
                        34      INPLACE_ADD                     
                        36      ROT_TWO                         
                        38      STORE_ATTR                      1: pos
                        40      LOAD_FAST                       2: buf
                        42      RETURN_VALUE                    
                '_Stream.read'
                [Code]
                    File Name: tarfile.py
                    Object Name: _read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'comptype'
                        '_Stream__read'
                        'len'
                        'dbuf'
                        'buf'
                        'fileobj'
                        'read'
                        'bufsize'
                        'cmp'
                        'decompress'
                        'exception'
                        'ReadError'
                        'append'
                        'join'
                    [Var Names]
                        'self'
                        'size'
                        'c'
                        't'
                        'buf'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return size bytes from the stream.\n        '
                        'tar'
                        b''
                        'invalid compressed data'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: comptype
                        4       LOAD_CONST                      1: 'tar'
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _Stream__read
                        14      LOAD_FAST                       1: size
                        16      CALL_METHOD                     1
                        18      RETURN_VALUE                    
                        20      LOAD_GLOBAL                     2: len
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: dbuf
                        26      CALL_FUNCTION                   1
                        28      STORE_FAST                      2: c
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       3: dbuf
                        34      BUILD_LIST                      1
                        36      STORE_FAST                      3: t
                        38      LOAD_FAST                       2: c
                        40      LOAD_FAST                       1: size
                        42      COMPARE_OP                      0 (<)
                        44      POP_JUMP_IF_FALSE               85 (to 170)
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       4: buf
                        50      POP_JUMP_IF_FALSE               33 (to 66)
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       4: buf
                        56      STORE_FAST                      4: buf
                        58      LOAD_CONST                      2: b''
                        60      LOAD_FAST                       0: self
                        62      STORE_ATTR                      4: buf
                        64      JUMP_FORWARD                    10 (to 86)
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       5: fileobj
                        70      LOAD_METHOD                     6: read
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       7: bufsize
                        76      CALL_METHOD                     1
                        78      STORE_FAST                      4: buf
                        80      LOAD_FAST                       4: buf
                        82      POP_JUMP_IF_TRUE                43 (to 86)
                        84      JUMP_FORWARD                    42 (to 170)
                        86      SETUP_FINALLY                   8 (to 104)
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       8: cmp
                        92      LOAD_METHOD                     9: decompress
                        94      LOAD_FAST                       4: buf
                        96      CALL_METHOD                     1
                        98      STORE_FAST                      4: buf
                        100     POP_BLOCK                       
                        102     JUMP_FORWARD                    18 (to 140)
                        104     DUP_TOP                         
                        106     LOAD_FAST                       0: self
                        108     LOAD_ATTR                       10: exception
                        110     JUMP_IF_NOT_EXC_MATCH           69 (to 138)
                        112     POP_TOP                         
                        114     STORE_FAST                      5: e
                        116     POP_TOP                         
                        118     SETUP_FINALLY                   5 (to 130)
                        120     LOAD_GLOBAL                     11: ReadError
                        122     LOAD_CONST                      3: 'invalid compressed data'
                        124     CALL_FUNCTION                   1
                        126     LOAD_FAST                       5: e
                        128     RAISE_VARARGS                   2
                        130     LOAD_CONST                      4: None
                        132     STORE_FAST                      5: e
                        134     DELETE_FAST                     5: e
                        136     RERAISE                         1
                        138     RERAISE                         0
                        140     LOAD_FAST                       3: t
                        142     LOAD_METHOD                     12: append
                        144     LOAD_FAST                       4: buf
                        146     CALL_METHOD                     1
                        148     POP_TOP                         
                        150     LOAD_FAST                       2: c
                        152     LOAD_GLOBAL                     2: len
                        154     LOAD_FAST                       4: buf
                        156     CALL_FUNCTION                   1
                        158     INPLACE_ADD                     
                        160     STORE_FAST                      2: c
                        162     LOAD_FAST                       2: c
                        164     LOAD_FAST                       1: size
                        166     COMPARE_OP                      0 (<)
                        168     POP_JUMP_IF_TRUE                23 (to 46)
                        170     LOAD_CONST                      2: b''
                        172     LOAD_METHOD                     13: join
                        174     LOAD_FAST                       3: t
                        176     CALL_METHOD                     1
                        178     STORE_FAST                      3: t
                        180     LOAD_FAST                       3: t
                        182     LOAD_FAST                       1: size
                        184     LOAD_CONST                      4: None
                        186     BUILD_SLICE                     2
                        188     BINARY_SUBSCR                   
                        190     LOAD_FAST                       0: self
                        192     STORE_ATTR                      3: dbuf
                        194     LOAD_FAST                       3: t
                        196     LOAD_CONST                      4: None
                        198     LOAD_FAST                       1: size
                        200     BUILD_SLICE                     2
                        202     BINARY_SUBSCR                   
                        204     RETURN_VALUE                    
                '_Stream._read'
                [Code]
                    File Name: tarfile.py
                    Object Name: __read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        'buf'
                        'fileobj'
                        'read'
                        'bufsize'
                        'append'
                        'join'
                    [Var Names]
                        'self'
                        'size'
                        'c'
                        't'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return size bytes from stream. If internal buffer is empty,\n           read another block from the stream.\n        '
                        b''
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: buf
                        6       CALL_FUNCTION                   1
                        8       STORE_FAST                      2: c
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: buf
                        14      BUILD_LIST                      1
                        16      STORE_FAST                      3: t
                        18      LOAD_FAST                       2: c
                        20      LOAD_FAST                       1: size
                        22      COMPARE_OP                      0 (<)
                        24      POP_JUMP_IF_FALSE               38 (to 76)
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       2: fileobj
                        30      LOAD_METHOD                     3: read
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: bufsize
                        36      CALL_METHOD                     1
                        38      STORE_FAST                      4: buf
                        40      LOAD_FAST                       4: buf
                        42      POP_JUMP_IF_TRUE                23 (to 46)
                        44      JUMP_FORWARD                    15 (to 76)
                        46      LOAD_FAST                       3: t
                        48      LOAD_METHOD                     5: append
                        50      LOAD_FAST                       4: buf
                        52      CALL_METHOD                     1
                        54      POP_TOP                         
                        56      LOAD_FAST                       2: c
                        58      LOAD_GLOBAL                     0: len
                        60      LOAD_FAST                       4: buf
                        62      CALL_FUNCTION                   1
                        64      INPLACE_ADD                     
                        66      STORE_FAST                      2: c
                        68      LOAD_FAST                       2: c
                        70      LOAD_FAST                       1: size
                        72      COMPARE_OP                      0 (<)
                        74      POP_JUMP_IF_TRUE                13 (to 26)
                        76      LOAD_CONST                      1: b''
                        78      LOAD_METHOD                     6: join
                        80      LOAD_FAST                       3: t
                        82      CALL_METHOD                     1
                        84      STORE_FAST                      3: t
                        86      LOAD_FAST                       3: t
                        88      LOAD_FAST                       1: size
                        90      LOAD_CONST                      2: None
                        92      BUILD_SLICE                     2
                        94      BINARY_SUBSCR                   
                        96      LOAD_FAST                       0: self
                        98      STORE_ATTR                      1: buf
                        100     LOAD_FAST                       3: t
                        102     LOAD_CONST                      2: None
                        104     LOAD_FAST                       1: size
                        106     BUILD_SLICE                     2
                        108     BINARY_SUBSCR                   
                        110     RETURN_VALUE                    
                '_Stream.__read'
                None
                (
                    0
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Stream'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Class that serves as an adapter between TarFile and\n       a stream-like object.  The stream-like object only\n       needs to have a read() or write() method and is accessed\n       blockwise.  Use of gzip or bzip2 compression is possible.\n       A stream-like object could be for example: sys.stdin,\n       sys.stdout, a socket, a tape device etc.\n\n       _Stream is intended to be used only internally.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: '_Stream.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> __del__
                22      LOAD_CONST                      5: '_Stream.__del__'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: __del__
                28      LOAD_CONST                      6: <CODE> _init_write_gz
                30      LOAD_CONST                      7: '_Stream._init_write_gz'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: _init_write_gz
                36      LOAD_CONST                      8: <CODE> write
                38      LOAD_CONST                      9: '_Stream.write'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: write
                44      LOAD_CONST                      10: <CODE> __write
                46      LOAD_CONST                      11: '_Stream.__write'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      8: _Stream__write
                52      LOAD_CONST                      12: <CODE> close
                54      LOAD_CONST                      13: '_Stream.close'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      9: close
                60      LOAD_CONST                      14: <CODE> _init_read_gz
                62      LOAD_CONST                      15: '_Stream._init_read_gz'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      10: _init_read_gz
                68      LOAD_CONST                      16: <CODE> tell
                70      LOAD_CONST                      17: '_Stream.tell'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      11: tell
                76      LOAD_CONST                      28: (0,)
                78      LOAD_CONST                      19: <CODE> seek
                80      LOAD_CONST                      20: '_Stream.seek'
                82      MAKE_FUNCTION                   1
                84      STORE_NAME                      12: seek
                86      LOAD_CONST                      21: <CODE> read
                88      LOAD_CONST                      22: '_Stream.read'
                90      MAKE_FUNCTION                   0
                92      STORE_NAME                      13: read
                94      LOAD_CONST                      23: <CODE> _read
                96      LOAD_CONST                      24: '_Stream._read'
                98      MAKE_FUNCTION                   0
                100     STORE_NAME                      14: _read
                102     LOAD_CONST                      25: <CODE> __read
                104     LOAD_CONST                      26: '_Stream.__read'
                106     MAKE_FUNCTION                   0
                108     STORE_NAME                      15: _Stream__read
                110     LOAD_CONST                      27: None
                112     RETURN_VALUE                    
        '_Stream'
        [Code]
            File Name: tarfile.py
            Object Name: _StreamProxy
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'read'
                'getcomptype'
                'close'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_StreamProxy'
                "Small proxy class that enables transparent compression\n       detection for the Stream interface (mode 'r|*').\n    "
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        'BLOCKSIZE'
                        'buf'
                    [Var Names]
                        'self'
                        'fileobj'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: fileobj
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: fileobj
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: fileobj
                        10      LOAD_METHOD                     1: read
                        12      LOAD_GLOBAL                     2: BLOCKSIZE
                        14      CALL_METHOD                     1
                        16      LOAD_FAST                       0: self
                        18      STORE_ATTR                      3: buf
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                '_StreamProxy.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        'buf'
                    [Var Names]
                        'self'
                        'size'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_ATTR                       1: read
                        6       LOAD_FAST                       0: self
                        8       STORE_ATTR                      1: read
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: buf
                        14      RETURN_VALUE                    
                '_StreamProxy.read'
                [Code]
                    File Name: tarfile.py
                    Object Name: getcomptype
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'buf'
                        'startswith'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        b'\x1f\x8b\x08'
                        'gz'
                        0
                        3
                        b'BZh'
                        4
                        10
                        b'1AY&SY'
                        'bz2'
                        (
                            b']\x00\x00\x80'
                            b'\xfd7zXZ'
                        )
                        'xz'
                        'tar'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: buf
                        4       LOAD_METHOD                     1: startswith
                        6       LOAD_CONST                      1: b'\x1f\x8b\x08'
                        8       CALL_METHOD                     1
                        10      POP_JUMP_IF_FALSE               8 (to 16)
                        12      LOAD_CONST                      2: 'gz'
                        14      RETURN_VALUE                    
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: buf
                        20      LOAD_CONST                      3: 0
                        22      LOAD_CONST                      4: 3
                        24      BUILD_SLICE                     2
                        26      BINARY_SUBSCR                   
                        28      LOAD_CONST                      5: b'BZh'
                        30      COMPARE_OP                      2 (==)
                        32      POP_JUMP_IF_FALSE               28 (to 56)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       0: buf
                        38      LOAD_CONST                      6: 4
                        40      LOAD_CONST                      7: 10
                        42      BUILD_SLICE                     2
                        44      BINARY_SUBSCR                   
                        46      LOAD_CONST                      8: b'1AY&SY'
                        48      COMPARE_OP                      2 (==)
                        50      POP_JUMP_IF_FALSE               28 (to 56)
                        52      LOAD_CONST                      9: 'bz2'
                        54      RETURN_VALUE                    
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       0: buf
                        60      LOAD_METHOD                     1: startswith
                        62      LOAD_CONST                      10: (b']\x00\x00\x80', b'\xfd7zXZ')
                        64      CALL_METHOD                     1
                        66      POP_JUMP_IF_FALSE               36 (to 72)
                        68      LOAD_CONST                      11: 'xz'
                        70      RETURN_VALUE                    
                        72      LOAD_CONST                      12: 'tar'
                        74      RETURN_VALUE                    
                '_StreamProxy.getcomptype'
                [Code]
                    File Name: tarfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: close
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                '_StreamProxy.close'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_StreamProxy'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "Small proxy class that enables transparent compression\n       detection for the Stream interface (mode 'r|*').\n    "
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: <CODE> __init__
                14      LOAD_CONST                      3: '_StreamProxy.__init__'
                16      MAKE_FUNCTION                   0
                18      STORE_NAME                      4: __init__
                20      LOAD_CONST                      4: <CODE> read
                22      LOAD_CONST                      5: '_StreamProxy.read'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: read
                28      LOAD_CONST                      6: <CODE> getcomptype
                30      LOAD_CONST                      7: '_StreamProxy.getcomptype'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: getcomptype
                36      LOAD_CONST                      8: <CODE> close
                38      LOAD_CONST                      9: '_StreamProxy.close'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: close
                44      LOAD_CONST                      10: None
                46      RETURN_VALUE                    
        '_StreamProxy'
        [Code]
            File Name: tarfile.py
            Object Name: _FileInFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'flush'
                'readable'
                'writable'
                'seekable'
                'tell'
                'io'
                'SEEK_SET'
                'seek'
                'read'
                'readinto'
                'close'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_FileInFile'
                'A thin wrapper around an existing file object that\n       provides a part of its data as an individual file\n       object.\n    '
                None
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'offset'
                        'size'
                        'position'
                        'getattr'
                        'name'
                        'closed'
                        'map_index'
                        'map'
                        'append'
                    [Var Names]
                        'self'
                        'fileobj'
                        'offset'
                        'size'
                        'blockinfo'
                        'lastpos'
                        'realpos'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        'name'
                        False
                        True
                    [Disassembly]
                        0       LOAD_FAST                       1: fileobj
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: fileobj
                        6       LOAD_FAST                       2: offset
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: offset
                        12      LOAD_FAST                       3: size
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: size
                        18      LOAD_CONST                      1: 0
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: position
                        24      LOAD_GLOBAL                     4: getattr
                        26      LOAD_FAST                       1: fileobj
                        28      LOAD_CONST                      2: 'name'
                        30      LOAD_CONST                      0: None
                        32      CALL_FUNCTION                   3
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      5: name
                        38      LOAD_CONST                      3: False
                        40      LOAD_FAST                       0: self
                        42      STORE_ATTR                      6: closed
                        44      LOAD_FAST                       4: blockinfo
                        46      LOAD_CONST                      0: None
                        48      IS_OP                           0 (is)
                        50      POP_JUMP_IF_FALSE               31 (to 62)
                        52      LOAD_CONST                      1: 0
                        54      LOAD_FAST                       3: size
                        56      BUILD_TUPLE                     2
                        58      BUILD_LIST                      1
                        60      STORE_FAST                      4: blockinfo
                        62      LOAD_CONST                      1: 0
                        64      LOAD_FAST                       0: self
                        66      STORE_ATTR                      7: map_index
                        68      BUILD_LIST                      0
                        70      LOAD_FAST                       0: self
                        72      STORE_ATTR                      8: map
                        74      LOAD_CONST                      1: 0
                        76      STORE_FAST                      5: lastpos
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       1: offset
                        82      STORE_FAST                      6: realpos
                        84      LOAD_FAST                       4: blockinfo
                        86      GET_ITER                        
                        88      FOR_ITER                        38 (to 166)
                        90      UNPACK_SEQUENCE                 2
                        92      STORE_FAST                      2: offset
                        94      STORE_FAST                      3: size
                        96      LOAD_FAST                       2: offset
                        98      LOAD_FAST                       5: lastpos
                        100     COMPARE_OP                      4 (>)
                        102     POP_JUMP_IF_FALSE               62 (to 124)
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       8: map
                        108     LOAD_METHOD                     9: append
                        110     LOAD_CONST                      3: False
                        112     LOAD_FAST                       5: lastpos
                        114     LOAD_FAST                       2: offset
                        116     LOAD_CONST                      0: None
                        118     BUILD_TUPLE                     4
                        120     CALL_METHOD                     1
                        122     POP_TOP                         
                        124     LOAD_FAST                       0: self
                        126     LOAD_ATTR                       8: map
                        128     LOAD_METHOD                     9: append
                        130     LOAD_CONST                      4: True
                        132     LOAD_FAST                       2: offset
                        134     LOAD_FAST                       2: offset
                        136     LOAD_FAST                       3: size
                        138     BINARY_ADD                      
                        140     LOAD_FAST                       6: realpos
                        142     BUILD_TUPLE                     4
                        144     CALL_METHOD                     1
                        146     POP_TOP                         
                        148     LOAD_FAST                       6: realpos
                        150     LOAD_FAST                       3: size
                        152     INPLACE_ADD                     
                        154     STORE_FAST                      6: realpos
                        156     LOAD_FAST                       2: offset
                        158     LOAD_FAST                       3: size
                        160     BINARY_ADD                      
                        162     STORE_FAST                      5: lastpos
                        164     JUMP_ABSOLUTE                   44 (to 88)
                        166     LOAD_FAST                       5: lastpos
                        168     LOAD_FAST                       0: self
                        170     LOAD_ATTR                       2: size
                        172     COMPARE_OP                      0 (<)
                        174     POP_JUMP_IF_FALSE               101 (to 202)
                        176     LOAD_FAST                       0: self
                        178     LOAD_ATTR                       8: map
                        180     LOAD_METHOD                     9: append
                        182     LOAD_CONST                      3: False
                        184     LOAD_FAST                       5: lastpos
                        186     LOAD_FAST                       0: self
                        188     LOAD_ATTR                       2: size
                        190     LOAD_CONST                      0: None
                        192     BUILD_TUPLE                     4
                        194     CALL_METHOD                     1
                        196     POP_TOP                         
                        198     LOAD_CONST                      0: None
                        200     RETURN_VALUE                    
                        202     LOAD_CONST                      0: None
                        204     RETURN_VALUE                    
                '_FileInFile.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: flush
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       RETURN_VALUE                    
                '_FileInFile.flush'
                [Code]
                    File Name: tarfile.py
                    Object Name: readable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_CONST                      1: True
                        2       RETURN_VALUE                    
                '_FileInFile.readable'
                [Code]
                    File Name: tarfile.py
                    Object Name: writable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        False
                    [Disassembly]
                        0       LOAD_CONST                      1: False
                        2       RETURN_VALUE                    
                '_FileInFile.writable'
                [Code]
                    File Name: tarfile.py
                    Object Name: seekable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'seekable'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: seekable
                        6       CALL_METHOD                     0
                        8       RETURN_VALUE                    
                '_FileInFile.seekable'
                [Code]
                    File Name: tarfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'position'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the current file position.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: position
                        4       RETURN_VALUE                    
                '_FileInFile.tell'
                [Code]
                    File Name: tarfile.py
                    Object Name: seek
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'io'
                        'SEEK_SET'
                        'min'
                        'max'
                        'size'
                        'position'
                        'SEEK_CUR'
                        'SEEK_END'
                        'ValueError'
                    [Var Names]
                        'self'
                        'position'
                        'whence'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Seek to a position in the file.\n        '
                        0
                        'Invalid argument'
                    [Disassembly]
                        0       LOAD_FAST                       2: whence
                        2       LOAD_GLOBAL                     0: io
                        4       LOAD_ATTR                       1: SEEK_SET
                        6       COMPARE_OP                      2 (==)
                        8       POP_JUMP_IF_FALSE               18 (to 36)
                        10      LOAD_GLOBAL                     2: min
                        12      LOAD_GLOBAL                     3: max
                        14      LOAD_FAST                       1: position
                        16      LOAD_CONST                      1: 0
                        18      CALL_FUNCTION                   2
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       4: size
                        24      CALL_FUNCTION                   2
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      5: position
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       5: position
                        34      RETURN_VALUE                    
                        36      LOAD_FAST                       2: whence
                        38      LOAD_GLOBAL                     0: io
                        40      LOAD_ATTR                       6: SEEK_CUR
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               52 (to 104)
                        46      LOAD_FAST                       1: position
                        48      LOAD_CONST                      1: 0
                        50      COMPARE_OP                      0 (<)
                        52      POP_JUMP_IF_FALSE               39 (to 78)
                        54      LOAD_GLOBAL                     3: max
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       5: position
                        60      LOAD_FAST                       1: position
                        62      BINARY_ADD                      
                        64      LOAD_CONST                      1: 0
                        66      CALL_FUNCTION                   2
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      5: position
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       5: position
                        76      RETURN_VALUE                    
                        78      LOAD_GLOBAL                     2: min
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       5: position
                        84      LOAD_FAST                       1: position
                        86      BINARY_ADD                      
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       4: size
                        92      CALL_FUNCTION                   2
                        94      LOAD_FAST                       0: self
                        96      STORE_ATTR                      5: position
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       5: position
                        102     RETURN_VALUE                    
                        104     LOAD_FAST                       2: whence
                        106     LOAD_GLOBAL                     0: io
                        108     LOAD_ATTR                       7: SEEK_END
                        110     COMPARE_OP                      2 (==)
                        112     POP_JUMP_IF_FALSE               73 (to 146)
                        114     LOAD_GLOBAL                     3: max
                        116     LOAD_GLOBAL                     2: min
                        118     LOAD_FAST                       0: self
                        120     LOAD_ATTR                       4: size
                        122     LOAD_FAST                       1: position
                        124     BINARY_ADD                      
                        126     LOAD_FAST                       0: self
                        128     LOAD_ATTR                       4: size
                        130     CALL_FUNCTION                   2
                        132     LOAD_CONST                      1: 0
                        134     CALL_FUNCTION                   2
                        136     LOAD_FAST                       0: self
                        138     STORE_ATTR                      5: position
                        140     LOAD_FAST                       0: self
                        142     LOAD_ATTR                       5: position
                        144     RETURN_VALUE                    
                        146     LOAD_GLOBAL                     8: ValueError
                        148     LOAD_CONST                      2: 'Invalid argument'
                        150     CALL_FUNCTION                   1
                        152     RAISE_VARARGS                   1
                '_FileInFile.seek'
                [Code]
                    File Name: tarfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'size'
                        'position'
                        'min'
                        'map'
                        'map_index'
                        'len'
                        'fileobj'
                        'seek'
                        'read'
                        'ReadError'
                        'NUL'
                    [Var Names]
                        'self'
                        'size'
                        'buf'
                        'data'
                        'start'
                        'stop'
                        'offset'
                        'length'
                        'b'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read data from the file.\n        '
                        None
                        b''
                        0
                        True
                        1
                        'unexpected end of data'
                    [Disassembly]
                        0       LOAD_FAST                       1: size
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               11 (to 22)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: size
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: position
                        16      BINARY_SUBTRACT                 
                        18      STORE_FAST                      1: size
                        20      JUMP_FORWARD                    9 (to 40)
                        22      LOAD_GLOBAL                     2: min
                        24      LOAD_FAST                       1: size
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       0: size
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       1: position
                        34      BINARY_SUBTRACT                 
                        36      CALL_FUNCTION                   2
                        38      STORE_FAST                      1: size
                        40      LOAD_CONST                      2: b''
                        42      STORE_FAST                      2: buf
                        44      LOAD_FAST                       1: size
                        46      LOAD_CONST                      3: 0
                        48      COMPARE_OP                      4 (>)
                        50      POP_JUMP_IF_FALSE               133 (to 266)
                        52      NOP                             
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       3: map
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       4: map_index
                        62      BINARY_SUBSCR                   
                        64      UNPACK_SEQUENCE                 4
                        66      STORE_FAST                      3: data
                        68      STORE_FAST                      4: start
                        70      STORE_FAST                      5: stop
                        72      STORE_FAST                      6: offset
                        74      LOAD_FAST                       4: start
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       1: position
                        80      DUP_TOP                         
                        82      ROT_THREE                       
                        84      COMPARE_OP                      1 (<=)
                        86      POP_JUMP_IF_FALSE               48 (to 96)
                        88      LOAD_FAST                       5: stop
                        90      COMPARE_OP                      0 (<)
                        92      POP_JUMP_IF_FALSE               51 (to 102)
                        94      JUMP_FORWARD                    2 (to 100)
                        96      POP_TOP                         
                        98      JUMP_FORWARD                    1 (to 102)
                        100     JUMP_FORWARD                    19 (to 140)
                        102     LOAD_FAST                       0: self
                        104     DUP_TOP                         
                        106     LOAD_ATTR                       4: map_index
                        108     LOAD_CONST                      5: 1
                        110     INPLACE_ADD                     
                        112     ROT_TWO                         
                        114     STORE_ATTR                      4: map_index
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       4: map_index
                        120     LOAD_GLOBAL                     5: len
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       3: map
                        126     CALL_FUNCTION                   1
                        128     COMPARE_OP                      2 (==)
                        130     POP_JUMP_IF_FALSE               69 (to 138)
                        132     LOAD_CONST                      3: 0
                        134     LOAD_FAST                       0: self
                        136     STORE_ATTR                      4: map_index
                        138     JUMP_ABSOLUTE                   27 (to 54)
                        140     LOAD_GLOBAL                     2: min
                        142     LOAD_FAST                       1: size
                        144     LOAD_FAST                       5: stop
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       1: position
                        150     BINARY_SUBTRACT                 
                        152     CALL_FUNCTION                   2
                        154     STORE_FAST                      7: length
                        156     LOAD_FAST                       3: data
                        158     POP_JUMP_IF_FALSE               112 (to 224)
                        160     LOAD_FAST                       0: self
                        162     LOAD_ATTR                       6: fileobj
                        164     LOAD_METHOD                     7: seek
                        166     LOAD_FAST                       6: offset
                        168     LOAD_FAST                       0: self
                        170     LOAD_ATTR                       1: position
                        172     LOAD_FAST                       4: start
                        174     BINARY_SUBTRACT                 
                        176     BINARY_ADD                      
                        178     CALL_METHOD                     1
                        180     POP_TOP                         
                        182     LOAD_FAST                       0: self
                        184     LOAD_ATTR                       6: fileobj
                        186     LOAD_METHOD                     8: read
                        188     LOAD_FAST                       7: length
                        190     CALL_METHOD                     1
                        192     STORE_FAST                      8: b
                        194     LOAD_GLOBAL                     5: len
                        196     LOAD_FAST                       8: b
                        198     CALL_FUNCTION                   1
                        200     LOAD_FAST                       7: length
                        202     COMPARE_OP                      3 (!=)
                        204     POP_JUMP_IF_FALSE               107 (to 214)
                        206     LOAD_GLOBAL                     9: ReadError
                        208     LOAD_CONST                      6: 'unexpected end of data'
                        210     CALL_FUNCTION                   1
                        212     RAISE_VARARGS                   1
                        214     LOAD_FAST                       2: buf
                        216     LOAD_FAST                       8: b
                        218     INPLACE_ADD                     
                        220     STORE_FAST                      2: buf
                        222     JUMP_FORWARD                    6 (to 236)
                        224     LOAD_FAST                       2: buf
                        226     LOAD_GLOBAL                     10: NUL
                        228     LOAD_FAST                       7: length
                        230     BINARY_MULTIPLY                 
                        232     INPLACE_ADD                     
                        234     STORE_FAST                      2: buf
                        236     LOAD_FAST                       1: size
                        238     LOAD_FAST                       7: length
                        240     INPLACE_SUBTRACT                
                        242     STORE_FAST                      1: size
                        244     LOAD_FAST                       0: self
                        246     DUP_TOP                         
                        248     LOAD_ATTR                       1: position
                        250     LOAD_FAST                       7: length
                        252     INPLACE_ADD                     
                        254     ROT_TWO                         
                        256     STORE_ATTR                      1: position
                        258     LOAD_FAST                       1: size
                        260     LOAD_CONST                      3: 0
                        262     COMPARE_OP                      4 (>)
                        264     POP_JUMP_IF_TRUE                26 (to 52)
                        266     LOAD_FAST                       2: buf
                        268     RETURN_VALUE                    
                '_FileInFile.read'
                [Code]
                    File Name: tarfile.py
                    Object Name: readinto
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'read'
                        'len'
                    [Var Names]
                        'self'
                        'b'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: read
                        4       LOAD_GLOBAL                     1: len
                        6       LOAD_FAST                       1: b
                        8       CALL_FUNCTION                   1
                        10      CALL_METHOD                     1
                        12      STORE_FAST                      2: buf
                        14      LOAD_FAST                       2: buf
                        16      LOAD_FAST                       1: b
                        18      LOAD_CONST                      0: None
                        20      LOAD_GLOBAL                     1: len
                        22      LOAD_FAST                       2: buf
                        24      CALL_FUNCTION                   1
                        26      BUILD_SLICE                     2
                        28      STORE_SUBSCR                    
                        30      LOAD_GLOBAL                     1: len
                        32      LOAD_FAST                       2: buf
                        34      CALL_FUNCTION                   1
                        36      RETURN_VALUE                    
                '_FileInFile.readinto'
                [Code]
                    File Name: tarfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_CONST                      1: True
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: closed
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                '_FileInFile.close'
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_FileInFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'A thin wrapper around an existing file object that\n       provides a part of its data as an individual file\n       object.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      23: (None,)
                14      LOAD_CONST                      3: <CODE> __init__
                16      LOAD_CONST                      4: '_FileInFile.__init__'
                18      MAKE_FUNCTION                   1
                20      STORE_NAME                      4: __init__
                22      LOAD_CONST                      5: <CODE> flush
                24      LOAD_CONST                      6: '_FileInFile.flush'
                26      MAKE_FUNCTION                   0
                28      STORE_NAME                      5: flush
                30      LOAD_CONST                      7: <CODE> readable
                32      LOAD_CONST                      8: '_FileInFile.readable'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      6: readable
                38      LOAD_CONST                      9: <CODE> writable
                40      LOAD_CONST                      10: '_FileInFile.writable'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      7: writable
                46      LOAD_CONST                      11: <CODE> seekable
                48      LOAD_CONST                      12: '_FileInFile.seekable'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      8: seekable
                54      LOAD_CONST                      13: <CODE> tell
                56      LOAD_CONST                      14: '_FileInFile.tell'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      9: tell
                62      LOAD_NAME                       10: io
                64      LOAD_ATTR                       11: SEEK_SET
                66      BUILD_TUPLE                     1
                68      LOAD_CONST                      15: <CODE> seek
                70      LOAD_CONST                      16: '_FileInFile.seek'
                72      MAKE_FUNCTION                   1
                74      STORE_NAME                      12: seek
                76      LOAD_CONST                      23: (None,)
                78      LOAD_CONST                      17: <CODE> read
                80      LOAD_CONST                      18: '_FileInFile.read'
                82      MAKE_FUNCTION                   1
                84      STORE_NAME                      13: read
                86      LOAD_CONST                      19: <CODE> readinto
                88      LOAD_CONST                      20: '_FileInFile.readinto'
                90      MAKE_FUNCTION                   0
                92      STORE_NAME                      14: readinto
                94      LOAD_CONST                      21: <CODE> close
                96      LOAD_CONST                      22: '_FileInFile.close'
                98      MAKE_FUNCTION                   0
                100     STORE_NAME                      15: close
                102     LOAD_CONST                      2: None
                104     RETURN_VALUE                    
        '_FileInFile'
        [Code]
            File Name: tarfile.py
            Object Name: ExFileObject
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'ExFileObject'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '_FileInFile'
                        'fileobj'
                        'offset_data'
                        'size'
                        'sparse'
                        'super'
                        '__init__'
                    [Var Names]
                        'self'
                        'tarfile'
                        'tarinfo'
                        'fileobj'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _FileInFile
                        2       LOAD_FAST                       1: tarfile
                        4       LOAD_ATTR                       1: fileobj
                        6       LOAD_FAST                       2: tarinfo
                        8       LOAD_ATTR                       2: offset_data
                        10      LOAD_FAST                       2: tarinfo
                        12      LOAD_ATTR                       3: size
                        14      LOAD_FAST                       2: tarinfo
                        16      LOAD_ATTR                       4: sparse
                        18      CALL_FUNCTION                   4
                        20      STORE_FAST                      3: fileobj
                        22      LOAD_GLOBAL                     5: super
                        24      CALL_FUNCTION                   0
                        26      LOAD_METHOD                     6: __init__
                        28      LOAD_FAST                       3: fileobj
                        30      CALL_METHOD                     1
                        32      POP_TOP                         
                        34      LOAD_CONST                      0: None
                        36      RETURN_VALUE                    
                'ExFileObject.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ExFileObject'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'ExFileObject.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'ExFileObject'
        [Code]
            File Name: tarfile.py
            Object Name: FilterError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'FilterError'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'FilterError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
        'FilterError'
        [Code]
            File Name: tarfile.py
            Object Name: AbsolutePathError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'AbsolutePathError'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'tarinfo'
                        'super'
                        '__init__'
                        'name'
                    [Var Names]
                        'self'
                        'tarinfo'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        'member '
                        ' has an absolute path'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: tarinfo
                        6       LOAD_GLOBAL                     1: super
                        8       CALL_FUNCTION                   0
                        10      LOAD_METHOD                     2: __init__
                        12      LOAD_CONST                      1: 'member '
                        14      LOAD_FAST                       1: tarinfo
                        16      LOAD_ATTR                       3: name
                        18      FORMAT_VALUE                    2 (FVC_REPR)
                        20      LOAD_CONST                      2: ' has an absolute path'
                        22      BUILD_STRING                    3
                        24      CALL_METHOD                     1
                        26      POP_TOP                         
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                'AbsolutePathError.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'AbsolutePathError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'AbsolutePathError.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'AbsolutePathError'
        [Code]
            File Name: tarfile.py
            Object Name: OutsideDestinationError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'OutsideDestinationError'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 6
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'tarinfo'
                        '_path'
                        'super'
                        '__init__'
                        'name'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'path'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        ' would be extracted to '
                        ', '
                        'which is outside the destination'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: tarinfo
                        6       LOAD_FAST                       2: path
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _path
                        12      LOAD_GLOBAL                     2: super
                        14      CALL_FUNCTION                   0
                        16      LOAD_METHOD                     3: __init__
                        18      LOAD_FAST                       1: tarinfo
                        20      LOAD_ATTR                       4: name
                        22      FORMAT_VALUE                    2 (FVC_REPR)
                        24      LOAD_CONST                      1: ' would be extracted to '
                        26      LOAD_FAST                       2: path
                        28      FORMAT_VALUE                    2 (FVC_REPR)
                        30      LOAD_CONST                      2: ', '
                        32      BUILD_STRING                    4
                        34      LOAD_CONST                      3: 'which is outside the destination'
                        36      BINARY_ADD                      
                        38      CALL_METHOD                     1
                        40      POP_TOP                         
                        42      LOAD_CONST                      0: None
                        44      RETURN_VALUE                    
                'OutsideDestinationError.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'OutsideDestinationError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'OutsideDestinationError.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'OutsideDestinationError'
        [Code]
            File Name: tarfile.py
            Object Name: SpecialFileError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'SpecialFileError'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'tarinfo'
                        'super'
                        '__init__'
                        'name'
                    [Var Names]
                        'self'
                        'tarinfo'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        ' is a special file'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: tarinfo
                        6       LOAD_GLOBAL                     1: super
                        8       CALL_FUNCTION                   0
                        10      LOAD_METHOD                     2: __init__
                        12      LOAD_FAST                       1: tarinfo
                        14      LOAD_ATTR                       3: name
                        16      FORMAT_VALUE                    2 (FVC_REPR)
                        18      LOAD_CONST                      1: ' is a special file'
                        20      BUILD_STRING                    2
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'SpecialFileError.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SpecialFileError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'SpecialFileError.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'SpecialFileError'
        [Code]
            File Name: tarfile.py
            Object Name: AbsoluteLinkError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'AbsoluteLinkError'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'tarinfo'
                        'super'
                        '__init__'
                        'name'
                    [Var Names]
                        'self'
                        'tarinfo'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        ' is a symlink to an absolute path'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: tarinfo
                        6       LOAD_GLOBAL                     1: super
                        8       CALL_FUNCTION                   0
                        10      LOAD_METHOD                     2: __init__
                        12      LOAD_FAST                       1: tarinfo
                        14      LOAD_ATTR                       3: name
                        16      FORMAT_VALUE                    2 (FVC_REPR)
                        18      LOAD_CONST                      1: ' is a symlink to an absolute path'
                        20      BUILD_STRING                    2
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'AbsoluteLinkError.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'AbsoluteLinkError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'AbsoluteLinkError.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'AbsoluteLinkError'
        [Code]
            File Name: tarfile.py
            Object Name: LinkOutsideDestinationError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'LinkOutsideDestinationError'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 6
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'tarinfo'
                        '_path'
                        'super'
                        '__init__'
                        'name'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'path'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        ' would link to '
                        ', '
                        'which is outside the destination'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: tarinfo
                        6       LOAD_FAST                       2: path
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _path
                        12      LOAD_GLOBAL                     2: super
                        14      CALL_FUNCTION                   0
                        16      LOAD_METHOD                     3: __init__
                        18      LOAD_FAST                       1: tarinfo
                        20      LOAD_ATTR                       4: name
                        22      FORMAT_VALUE                    2 (FVC_REPR)
                        24      LOAD_CONST                      1: ' would link to '
                        26      LOAD_FAST                       2: path
                        28      FORMAT_VALUE                    2 (FVC_REPR)
                        30      LOAD_CONST                      2: ', '
                        32      BUILD_STRING                    4
                        34      LOAD_CONST                      3: 'which is outside the destination'
                        36      BINARY_ADD                      
                        38      CALL_METHOD                     1
                        40      POP_TOP                         
                        42      LOAD_CONST                      0: None
                        44      RETURN_VALUE                    
                'LinkOutsideDestinationError.__init__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'LinkOutsideDestinationError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CLOSURE                    0: __class__
                10      BUILD_TUPLE                     1
                12      LOAD_CONST                      1: <CODE> __init__
                14      LOAD_CONST                      2: 'LinkOutsideDestinationError.__init__'
                16      MAKE_FUNCTION                   8
                18      STORE_NAME                      3: __init__
                20      LOAD_CLOSURE                    0: __class__
                22      DUP_TOP                         
                24      STORE_NAME                      4: __classcell__
                26      RETURN_VALUE                    
        'LinkOutsideDestinationError'
        True
        [Code]
            File Name: tarfile.py
            Object Name: _get_filtered_attrs
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'name'
                'os'
                'path'
                'realpath'
                'startswith'
                'sep'
                'lstrip'
                'isabs'
                'AbsolutePathError'
                'join'
                'commonpath'
                'OutsideDestinationError'
                'mode'
                'isreg'
                'islnk'
                'isdir'
                'issym'
                'SpecialFileError'
                'uid'
                'gid'
                'uname'
                'gname'
                'linkname'
                'AbsoluteLinkError'
                'LinkOutsideDestinationError'
            [Var Names]
                'member'
                'dest_path'
                'for_data'
                'new_attrs'
                'name'
                'target_path'
                'mode'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '/'
                'name'
                493
                64
                -74
                384
                'mode'
                'uid'
                'gid'
                'uname'
                'gname'
            [Disassembly]
                0       BUILD_MAP                       0
                2       STORE_FAST                      3: new_attrs
                4       LOAD_FAST                       0: member
                6       LOAD_ATTR                       0: name
                8       STORE_FAST                      4: name
                10      LOAD_GLOBAL                     1: os
                12      LOAD_ATTR                       2: path
                14      LOAD_METHOD                     3: realpath
                16      LOAD_FAST                       1: dest_path
                18      CALL_METHOD                     1
                20      STORE_FAST                      1: dest_path
                22      LOAD_FAST                       4: name
                24      LOAD_METHOD                     4: startswith
                26      LOAD_CONST                      1: '/'
                28      LOAD_GLOBAL                     1: os
                30      LOAD_ATTR                       5: sep
                32      BUILD_TUPLE                     2
                34      CALL_METHOD                     1
                36      POP_JUMP_IF_FALSE               32 (to 64)
                38      LOAD_FAST                       0: member
                40      LOAD_ATTR                       2: path
                42      LOAD_METHOD                     6: lstrip
                44      LOAD_CONST                      1: '/'
                46      LOAD_GLOBAL                     1: os
                48      LOAD_ATTR                       5: sep
                50      BINARY_ADD                      
                52      CALL_METHOD                     1
                54      DUP_TOP                         
                56      STORE_FAST                      4: name
                58      LOAD_FAST                       3: new_attrs
                60      LOAD_CONST                      2: 'name'
                62      STORE_SUBSCR                    
                64      LOAD_GLOBAL                     1: os
                66      LOAD_ATTR                       2: path
                68      LOAD_METHOD                     7: isabs
                70      LOAD_FAST                       4: name
                72      CALL_METHOD                     1
                74      POP_JUMP_IF_FALSE               42 (to 84)
                76      LOAD_GLOBAL                     8: AbsolutePathError
                78      LOAD_FAST                       0: member
                80      CALL_FUNCTION                   1
                82      RAISE_VARARGS                   1
                84      LOAD_GLOBAL                     1: os
                86      LOAD_ATTR                       2: path
                88      LOAD_METHOD                     3: realpath
                90      LOAD_GLOBAL                     1: os
                92      LOAD_ATTR                       2: path
                94      LOAD_METHOD                     9: join
                96      LOAD_FAST                       1: dest_path
                98      LOAD_FAST                       4: name
                100     CALL_METHOD                     2
                102     CALL_METHOD                     1
                104     STORE_FAST                      5: target_path
                106     LOAD_GLOBAL                     1: os
                108     LOAD_ATTR                       2: path
                110     LOAD_METHOD                     10: commonpath
                112     LOAD_FAST                       5: target_path
                114     LOAD_FAST                       1: dest_path
                116     BUILD_LIST                      2
                118     CALL_METHOD                     1
                120     LOAD_FAST                       1: dest_path
                122     COMPARE_OP                      3 (!=)
                124     POP_JUMP_IF_FALSE               68 (to 136)
                126     LOAD_GLOBAL                     11: OutsideDestinationError
                128     LOAD_FAST                       0: member
                130     LOAD_FAST                       5: target_path
                132     CALL_FUNCTION                   2
                134     RAISE_VARARGS                   1
                136     LOAD_FAST                       0: member
                138     LOAD_ATTR                       12: mode
                140     STORE_FAST                      6: mode
                142     LOAD_FAST                       6: mode
                144     LOAD_CONST                      0: None
                146     IS_OP                           1 (is not)
                148     POP_JUMP_IF_FALSE               126 (to 252)
                150     LOAD_FAST                       6: mode
                152     LOAD_CONST                      3: 493
                154     BINARY_AND                      
                156     STORE_FAST                      6: mode
                158     LOAD_FAST                       2: for_data
                160     POP_JUMP_IF_FALSE               117 (to 234)
                162     LOAD_FAST                       0: member
                164     LOAD_METHOD                     13: isreg
                166     CALL_METHOD                     0
                168     POP_JUMP_IF_TRUE                89 (to 178)
                170     LOAD_FAST                       0: member
                172     LOAD_METHOD                     14: islnk
                174     CALL_METHOD                     0
                176     POP_JUMP_IF_FALSE               102 (to 204)
                178     LOAD_FAST                       6: mode
                180     LOAD_CONST                      4: 64
                182     BINARY_AND                      
                184     POP_JUMP_IF_TRUE                97 (to 194)
                186     LOAD_FAST                       6: mode
                188     LOAD_CONST                      5: -74
                190     INPLACE_AND                     
                192     STORE_FAST                      6: mode
                194     LOAD_FAST                       6: mode
                196     LOAD_CONST                      6: 384
                198     INPLACE_OR                      
                200     STORE_FAST                      6: mode
                202     JUMP_FORWARD                    15 (to 234)
                204     LOAD_FAST                       0: member
                206     LOAD_METHOD                     15: isdir
                208     CALL_METHOD                     0
                210     POP_JUMP_IF_TRUE                110 (to 220)
                212     LOAD_FAST                       0: member
                214     LOAD_METHOD                     16: issym
                216     CALL_METHOD                     0
                218     POP_JUMP_IF_FALSE               113 (to 226)
                220     LOAD_CONST                      0: None
                222     STORE_FAST                      6: mode
                224     JUMP_FORWARD                    4 (to 234)
                226     LOAD_GLOBAL                     17: SpecialFileError
                228     LOAD_FAST                       0: member
                230     CALL_FUNCTION                   1
                232     RAISE_VARARGS                   1
                234     LOAD_FAST                       6: mode
                236     LOAD_FAST                       0: member
                238     LOAD_ATTR                       12: mode
                240     COMPARE_OP                      3 (!=)
                242     POP_JUMP_IF_FALSE               126 (to 252)
                244     LOAD_FAST                       6: mode
                246     LOAD_FAST                       3: new_attrs
                248     LOAD_CONST                      7: 'mode'
                250     STORE_SUBSCR                    
                252     LOAD_FAST                       2: for_data
                254     POP_JUMP_IF_FALSE               210 (to 420)
                256     LOAD_FAST                       0: member
                258     LOAD_ATTR                       18: uid
                260     LOAD_CONST                      0: None
                262     IS_OP                           1 (is not)
                264     POP_JUMP_IF_FALSE               137 (to 274)
                266     LOAD_CONST                      0: None
                268     LOAD_FAST                       3: new_attrs
                270     LOAD_CONST                      8: 'uid'
                272     STORE_SUBSCR                    
                274     LOAD_FAST                       0: member
                276     LOAD_ATTR                       19: gid
                278     LOAD_CONST                      0: None
                280     IS_OP                           1 (is not)
                282     POP_JUMP_IF_FALSE               146 (to 292)
                284     LOAD_CONST                      0: None
                286     LOAD_FAST                       3: new_attrs
                288     LOAD_CONST                      9: 'gid'
                290     STORE_SUBSCR                    
                292     LOAD_FAST                       0: member
                294     LOAD_ATTR                       20: uname
                296     LOAD_CONST                      0: None
                298     IS_OP                           1 (is not)
                300     POP_JUMP_IF_FALSE               155 (to 310)
                302     LOAD_CONST                      0: None
                304     LOAD_FAST                       3: new_attrs
                306     LOAD_CONST                      10: 'uname'
                308     STORE_SUBSCR                    
                310     LOAD_FAST                       0: member
                312     LOAD_ATTR                       21: gname
                314     LOAD_CONST                      0: None
                316     IS_OP                           1 (is not)
                318     POP_JUMP_IF_FALSE               164 (to 328)
                320     LOAD_CONST                      0: None
                322     LOAD_FAST                       3: new_attrs
                324     LOAD_CONST                      11: 'gname'
                326     STORE_SUBSCR                    
                328     LOAD_FAST                       0: member
                330     LOAD_METHOD                     14: islnk
                332     CALL_METHOD                     0
                334     POP_JUMP_IF_TRUE                172 (to 344)
                336     LOAD_FAST                       0: member
                338     LOAD_METHOD                     16: issym
                340     CALL_METHOD                     0
                342     POP_JUMP_IF_FALSE               210 (to 420)
                344     LOAD_GLOBAL                     1: os
                346     LOAD_ATTR                       2: path
                348     LOAD_METHOD                     7: isabs
                350     LOAD_FAST                       0: member
                352     LOAD_ATTR                       22: linkname
                354     CALL_METHOD                     1
                356     POP_JUMP_IF_FALSE               183 (to 366)
                358     LOAD_GLOBAL                     23: AbsoluteLinkError
                360     LOAD_FAST                       0: member
                362     CALL_FUNCTION                   1
                364     RAISE_VARARGS                   1
                366     LOAD_GLOBAL                     1: os
                368     LOAD_ATTR                       2: path
                370     LOAD_METHOD                     3: realpath
                372     LOAD_GLOBAL                     1: os
                374     LOAD_ATTR                       2: path
                376     LOAD_METHOD                     9: join
                378     LOAD_FAST                       1: dest_path
                380     LOAD_FAST                       0: member
                382     LOAD_ATTR                       22: linkname
                384     CALL_METHOD                     2
                386     CALL_METHOD                     1
                388     STORE_FAST                      5: target_path
                390     LOAD_GLOBAL                     1: os
                392     LOAD_ATTR                       2: path
                394     LOAD_METHOD                     10: commonpath
                396     LOAD_FAST                       5: target_path
                398     LOAD_FAST                       1: dest_path
                400     BUILD_LIST                      2
                402     CALL_METHOD                     1
                404     LOAD_FAST                       1: dest_path
                406     COMPARE_OP                      3 (!=)
                408     POP_JUMP_IF_FALSE               210 (to 420)
                410     LOAD_GLOBAL                     24: LinkOutsideDestinationError
                412     LOAD_FAST                       0: member
                414     LOAD_FAST                       5: target_path
                416     CALL_FUNCTION                   2
                418     RAISE_VARARGS                   1
                420     LOAD_FAST                       3: new_attrs
                422     RETURN_VALUE                    
        '_get_filtered_attrs'
        [Code]
            File Name: tarfile.py
            Object Name: fully_trusted_filter
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'member'
                'dest_path'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_FAST                       0: member
                2       RETURN_VALUE                    
        'fully_trusted_filter'
        [Code]
            File Name: tarfile.py
            Object Name: tar_filter
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_get_filtered_attrs'
                'replace'
            [Var Names]
                'member'
                'dest_path'
                'new_attrs'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                'deep'
                (
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: _get_filtered_attrs
                2       LOAD_FAST                       0: member
                4       LOAD_FAST                       1: dest_path
                6       LOAD_CONST                      1: False
                8       CALL_FUNCTION                   3
                10      STORE_FAST                      2: new_attrs
                12      LOAD_FAST                       2: new_attrs
                14      POP_JUMP_IF_FALSE               20 (to 40)
                16      LOAD_FAST                       0: member
                18      LOAD_ATTR                       1: replace
                20      LOAD_CONST                      3: ()
                22      BUILD_MAP                       0
                24      LOAD_FAST                       2: new_attrs
                26      DICT_MERGE                      1
                28      LOAD_CONST                      2: 'deep'
                30      LOAD_CONST                      1: False
                32      BUILD_MAP                       1
                34      DICT_MERGE                      1
                36      CALL_FUNCTION_EX                1
                38      RETURN_VALUE                    
                40      LOAD_FAST                       0: member
                42      RETURN_VALUE                    
        'tar_filter'
        [Code]
            File Name: tarfile.py
            Object Name: data_filter
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_get_filtered_attrs'
                'replace'
            [Var Names]
                'member'
                'dest_path'
                'new_attrs'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                True
                'deep'
                False
                (
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: _get_filtered_attrs
                2       LOAD_FAST                       0: member
                4       LOAD_FAST                       1: dest_path
                6       LOAD_CONST                      1: True
                8       CALL_FUNCTION                   3
                10      STORE_FAST                      2: new_attrs
                12      LOAD_FAST                       2: new_attrs
                14      POP_JUMP_IF_FALSE               20 (to 40)
                16      LOAD_FAST                       0: member
                18      LOAD_ATTR                       1: replace
                20      LOAD_CONST                      4: ()
                22      BUILD_MAP                       0
                24      LOAD_FAST                       2: new_attrs
                26      DICT_MERGE                      1
                28      LOAD_CONST                      2: 'deep'
                30      LOAD_CONST                      3: False
                32      BUILD_MAP                       1
                34      DICT_MERGE                      1
                36      CALL_FUNCTION_EX                1
                38      RETURN_VALUE                    
                40      LOAD_FAST                       0: member
                42      RETURN_VALUE                    
        'data_filter'
        (
            'fully_trusted'
            'tar'
            'data'
        )
        b'([0-9]{1,20}) '
        [Code]
            File Name: tarfile.py
            Object Name: TarInfo
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 11
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'dict'
                '__slots__'
                '__init__'
                'property'
                'path'
                'setter'
                'linkpath'
                '__repr__'
                '_KEEP'
                'replace'
                'get_info'
                'DEFAULT_FORMAT'
                'ENCODING'
                'tobuf'
                'create_ustar_header'
                'create_gnu_header'
                'create_pax_header'
                'classmethod'
                'create_pax_global_header'
                '_posix_split_name'
                'staticmethod'
                '_create_header'
                '_create_payload'
                '_create_gnu_long_header'
                '_create_pax_generic_header'
                'frombuf'
                'fromtarfile'
                '_proc_member'
                '_proc_builtin'
                '_proc_gnulong'
                '_proc_sparse'
                '_proc_pax'
                '_proc_gnusparse_00'
                '_proc_gnusparse_01'
                '_proc_gnusparse_10'
                '_apply_pax_info'
                '_decode_pax_field'
                '_block'
                'isreg'
                'isfile'
                'isdir'
                'issym'
                'islnk'
                'ischr'
                'isblk'
                'isfifo'
                'issparse'
                'isdev'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TarInfo'
                'Informational class which holds the details about an\n       archive member given by a tar header block.\n       TarInfo objects are returned by TarFile.getmember(),\n       TarFile.getmembers() and TarFile.gettarinfo() and are\n       usually created internally.\n    '
                'name'
                'Name of the archive member.'
                'mode'
                'Permission bits.'
                'uid'
                'User ID of the user who originally stored this member.'
                'gid'
                'Group ID of the user who originally stored this member.'
                'size'
                'Size in bytes.'
                'mtime'
                'Time of last modification.'
                'chksum'
                'Header checksum.'
                'type'
                'File type. type is usually one of these constants: REGTYPE, AREGTYPE, LNKTYPE, SYMTYPE, DIRTYPE, FIFOTYPE, CONTTYPE, CHRTYPE, BLKTYPE, GNUTYPE_SPARSE.'
                'linkname'
                'Name of the target file name, which is only present in TarInfo objects of type LNKTYPE and SYMTYPE.'
                'uname'
                'User name.'
                'gname'
                'Group name.'
                'devmajor'
                'Device major number.'
                'devminor'
                'Device minor number.'
                'offset'
                'The tar header starts here.'
                'offset_data'
                "The file's data starts here."
                'pax_headers'
                'A dictionary containing key-value pairs of an associated pax extended header.'
                'sparse'
                'Sparse member information.'
                'tarfile'
                None
                '_sparse_structs'
                '_link_target'
                ''
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                        'mode'
                        'uid'
                        'gid'
                        'size'
                        'mtime'
                        'chksum'
                        'REGTYPE'
                        'type'
                        'linkname'
                        'uname'
                        'gname'
                        'devmajor'
                        'devminor'
                        'offset'
                        'offset_data'
                        'sparse'
                        'pax_headers'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a TarInfo object. name is the optional name\n           of the member.\n        '
                        420
                        0
                        ''
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: name
                        6       LOAD_CONST                      1: 420
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: mode
                        12      LOAD_CONST                      2: 0
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: uid
                        18      LOAD_CONST                      2: 0
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: gid
                        24      LOAD_CONST                      2: 0
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      4: size
                        30      LOAD_CONST                      2: 0
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      5: mtime
                        36      LOAD_CONST                      2: 0
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      6: chksum
                        42      LOAD_GLOBAL                     7: REGTYPE
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      8: type
                        48      LOAD_CONST                      3: ''
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      9: linkname
                        54      LOAD_CONST                      3: ''
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      10: uname
                        60      LOAD_CONST                      3: ''
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      11: gname
                        66      LOAD_CONST                      2: 0
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      12: devmajor
                        72      LOAD_CONST                      2: 0
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      13: devminor
                        78      LOAD_CONST                      2: 0
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      14: offset
                        84      LOAD_CONST                      2: 0
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      15: offset_data
                        90      LOAD_CONST                      4: None
                        92      LOAD_FAST                       0: self
                        94      STORE_ATTR                      16: sparse
                        96      BUILD_MAP                       0
                        98      LOAD_FAST                       0: self
                        100     STORE_ATTR                      17: pax_headers
                        102     LOAD_CONST                      4: None
                        104     RETURN_VALUE                    
                'TarInfo.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: path
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'In pax headers, "name" is called "path".'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       RETURN_VALUE                    
                'TarInfo.path'
                [Code]
                    File Name: tarfile.py
                    Object Name: path
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: name
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                [Code]
                    File Name: tarfile.py
                    Object Name: linkpath
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'linkname'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'In pax headers, "linkname" is called "linkpath".'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: linkname
                        4       RETURN_VALUE                    
                'TarInfo.linkpath'
                [Code]
                    File Name: tarfile.py
                    Object Name: linkpath
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'linkname'
                    [Var Names]
                        'self'
                        'linkname'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: linkname
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: linkname
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                [Code]
                    File Name: tarfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__name__'
                        'name'
                        'id'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<%s %r at %#x>'
                    [Disassembly]
                        0       LOAD_CONST                      1: '<%s %r at %#x>'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __name__
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: name
                        12      LOAD_GLOBAL                     3: id
                        14      LOAD_FAST                       0: self
                        16      CALL_FUNCTION                   1
                        18      BUILD_TUPLE                     3
                        20      BINARY_MODULO                   
                        22      RETURN_VALUE                    
                'TarInfo.__repr__'
                True
                (
                    'name'
                    'mtime'
                    'mode'
                    'linkname'
                    'uid'
                    'gid'
                    'uname'
                    'gname'
                    'deep'
                    '_KEEP'
                )
                [Code]
                    File Name: tarfile.py
                    Object Name: replace
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 10
                    Locals: 12
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'copy'
                        'deepcopy'
                        'name'
                        'mtime'
                        'mode'
                        'linkname'
                        'uid'
                        'gid'
                        'uname'
                        'gname'
                    [Var Names]
                        'self'
                        'name'
                        'mtime'
                        'mode'
                        'linkname'
                        'uid'
                        'gid'
                        'uname'
                        'gname'
                        'deep'
                        '_KEEP'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a deep copy of self with the given attributes replaced.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       9: deep
                        2       POP_JUMP_IF_FALSE               8 (to 16)
                        4       LOAD_GLOBAL                     0: copy
                        6       LOAD_METHOD                     1: deepcopy
                        8       LOAD_FAST                       0: self
                        10      CALL_METHOD                     1
                        12      STORE_FAST                      11: result
                        14      JUMP_FORWARD                    5 (to 26)
                        16      LOAD_GLOBAL                     0: copy
                        18      LOAD_METHOD                     0: copy
                        20      LOAD_FAST                       0: self
                        22      CALL_METHOD                     1
                        24      STORE_FAST                      11: result
                        26      LOAD_FAST                       1: name
                        28      LOAD_FAST                       10: _KEEP
                        30      IS_OP                           1 (is not)
                        32      POP_JUMP_IF_FALSE               20 (to 40)
                        34      LOAD_FAST                       1: name
                        36      LOAD_FAST                       11: result
                        38      STORE_ATTR                      2: name
                        40      LOAD_FAST                       2: mtime
                        42      LOAD_FAST                       10: _KEEP
                        44      IS_OP                           1 (is not)
                        46      POP_JUMP_IF_FALSE               27 (to 54)
                        48      LOAD_FAST                       2: mtime
                        50      LOAD_FAST                       11: result
                        52      STORE_ATTR                      3: mtime
                        54      LOAD_FAST                       3: mode
                        56      LOAD_FAST                       10: _KEEP
                        58      IS_OP                           1 (is not)
                        60      POP_JUMP_IF_FALSE               34 (to 68)
                        62      LOAD_FAST                       3: mode
                        64      LOAD_FAST                       11: result
                        66      STORE_ATTR                      4: mode
                        68      LOAD_FAST                       4: linkname
                        70      LOAD_FAST                       10: _KEEP
                        72      IS_OP                           1 (is not)
                        74      POP_JUMP_IF_FALSE               41 (to 82)
                        76      LOAD_FAST                       4: linkname
                        78      LOAD_FAST                       11: result
                        80      STORE_ATTR                      5: linkname
                        82      LOAD_FAST                       5: uid
                        84      LOAD_FAST                       10: _KEEP
                        86      IS_OP                           1 (is not)
                        88      POP_JUMP_IF_FALSE               48 (to 96)
                        90      LOAD_FAST                       5: uid
                        92      LOAD_FAST                       11: result
                        94      STORE_ATTR                      6: uid
                        96      LOAD_FAST                       6: gid
                        98      LOAD_FAST                       10: _KEEP
                        100     IS_OP                           1 (is not)
                        102     POP_JUMP_IF_FALSE               55 (to 110)
                        104     LOAD_FAST                       6: gid
                        106     LOAD_FAST                       11: result
                        108     STORE_ATTR                      7: gid
                        110     LOAD_FAST                       7: uname
                        112     LOAD_FAST                       10: _KEEP
                        114     IS_OP                           1 (is not)
                        116     POP_JUMP_IF_FALSE               62 (to 124)
                        118     LOAD_FAST                       7: uname
                        120     LOAD_FAST                       11: result
                        122     STORE_ATTR                      8: uname
                        124     LOAD_FAST                       8: gname
                        126     LOAD_FAST                       10: _KEEP
                        128     IS_OP                           1 (is not)
                        130     POP_JUMP_IF_FALSE               69 (to 138)
                        132     LOAD_FAST                       8: gname
                        134     LOAD_FAST                       11: result
                        136     STORE_ATTR                      9: gname
                        138     LOAD_FAST                       11: result
                        140     RETURN_VALUE                    
                'TarInfo.replace'
                [Code]
                    File Name: tarfile.py
                    Object Name: get_info
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 14
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'mode'
                        'name'
                        'uid'
                        'gid'
                        'size'
                        'mtime'
                        'chksum'
                        'type'
                        'linkname'
                        'uname'
                        'gname'
                        'devmajor'
                        'devminor'
                        'DIRTYPE'
                        'endswith'
                    [Var Names]
                        'self'
                        'mode'
                        'info'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the TarInfo's attributes as a dictionary.\n        "
                        None
                        4095
                        (
                            'name'
                            'mode'
                            'uid'
                            'gid'
                            'size'
                            'mtime'
                            'chksum'
                            'type'
                            'linkname'
                            'uname'
                            'gname'
                            'devmajor'
                            'devminor'
                        )
                        'type'
                        'name'
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: mode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               8 (to 16)
                        10      LOAD_CONST                      1: None
                        12      STORE_FAST                      1: mode
                        14      JUMP_FORWARD                    5 (to 26)
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: mode
                        20      LOAD_CONST                      2: 4095
                        22      BINARY_AND                      
                        24      STORE_FAST                      1: mode
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       1: name
                        30      LOAD_FAST                       1: mode
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       2: uid
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       3: gid
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       4: size
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       5: mtime
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       6: chksum
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       7: type
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       8: linkname
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       9: uname
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       10: gname
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       11: devmajor
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       12: devminor
                        76      LOAD_CONST                      3: ('name', 'mode', 'uid', 'gid', 'size', 'mtime', 'chksum', 'type', 'linkname', 'uname', 'gname', 'devmajor', 'devminor')
                        78      BUILD_CONST_KEY_MAP             13
                        80      STORE_FAST                      2: info
                        82      LOAD_FAST                       2: info
                        84      LOAD_CONST                      4: 'type'
                        86      BINARY_SUBSCR                   
                        88      LOAD_GLOBAL                     13: DIRTYPE
                        90      COMPARE_OP                      2 (==)
                        92      POP_JUMP_IF_FALSE               62 (to 124)
                        94      LOAD_FAST                       2: info
                        96      LOAD_CONST                      5: 'name'
                        98      BINARY_SUBSCR                   
                        100     LOAD_METHOD                     14: endswith
                        102     LOAD_CONST                      6: '/'
                        104     CALL_METHOD                     1
                        106     POP_JUMP_IF_TRUE                62 (to 124)
                        108     LOAD_FAST                       2: info
                        110     LOAD_CONST                      5: 'name'
                        112     DUP_TOP_TWO                     
                        114     BINARY_SUBSCR                   
                        116     LOAD_CONST                      6: '/'
                        118     INPLACE_ADD                     
                        120     ROT_THREE                       
                        122     STORE_SUBSCR                    
                        124     LOAD_FAST                       2: info
                        126     RETURN_VALUE                    
                'TarInfo.get_info'
                'surrogateescape'
                [Code]
                    File Name: tarfile.py
                    Object Name: tobuf
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get_info'
                        'items'
                        'ValueError'
                        'USTAR_FORMAT'
                        'create_ustar_header'
                        'GNU_FORMAT'
                        'create_gnu_header'
                        'PAX_FORMAT'
                        'create_pax_header'
                    [Var Names]
                        'self'
                        'format'
                        'encoding'
                        'errors'
                        'info'
                        'name'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a tar header as a string of 512 byte blocks.\n        '
                        None
                        '%s may not be None'
                        'invalid format'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: get_info
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      4: info
                        8       LOAD_FAST                       4: info
                        10      LOAD_METHOD                     1: items
                        12      CALL_METHOD                     0
                        14      GET_ITER                        
                        16      FOR_ITER                        14 (to 46)
                        18      UNPACK_SEQUENCE                 2
                        20      STORE_FAST                      5: name
                        22      STORE_FAST                      6: value
                        24      LOAD_FAST                       6: value
                        26      LOAD_CONST                      1: None
                        28      IS_OP                           0 (is)
                        30      POP_JUMP_IF_FALSE               22 (to 44)
                        32      LOAD_GLOBAL                     2: ValueError
                        34      LOAD_CONST                      2: '%s may not be None'
                        36      LOAD_FAST                       5: name
                        38      BINARY_MODULO                   
                        40      CALL_FUNCTION                   1
                        42      RAISE_VARARGS                   1
                        44      JUMP_ABSOLUTE                   8 (to 16)
                        46      LOAD_FAST                       1: format
                        48      LOAD_GLOBAL                     3: USTAR_FORMAT
                        50      COMPARE_OP                      2 (==)
                        52      POP_JUMP_IF_FALSE               34 (to 68)
                        54      LOAD_FAST                       0: self
                        56      LOAD_METHOD                     4: create_ustar_header
                        58      LOAD_FAST                       4: info
                        60      LOAD_FAST                       2: encoding
                        62      LOAD_FAST                       3: errors
                        64      CALL_METHOD                     3
                        66      RETURN_VALUE                    
                        68      LOAD_FAST                       1: format
                        70      LOAD_GLOBAL                     5: GNU_FORMAT
                        72      COMPARE_OP                      2 (==)
                        74      POP_JUMP_IF_FALSE               45 (to 90)
                        76      LOAD_FAST                       0: self
                        78      LOAD_METHOD                     6: create_gnu_header
                        80      LOAD_FAST                       4: info
                        82      LOAD_FAST                       2: encoding
                        84      LOAD_FAST                       3: errors
                        86      CALL_METHOD                     3
                        88      RETURN_VALUE                    
                        90      LOAD_FAST                       1: format
                        92      LOAD_GLOBAL                     7: PAX_FORMAT
                        94      COMPARE_OP                      2 (==)
                        96      POP_JUMP_IF_FALSE               55 (to 110)
                        98      LOAD_FAST                       0: self
                        100     LOAD_METHOD                     8: create_pax_header
                        102     LOAD_FAST                       4: info
                        104     LOAD_FAST                       2: encoding
                        106     CALL_METHOD                     2
                        108     RETURN_VALUE                    
                        110     LOAD_GLOBAL                     2: ValueError
                        112     LOAD_CONST                      3: 'invalid format'
                        114     CALL_FUNCTION                   1
                        116     RAISE_VARARGS                   1
                'TarInfo.tobuf'
                [Code]
                    File Name: tarfile.py
                    Object Name: create_ustar_header
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'POSIX_MAGIC'
                        'len'
                        'encode'
                        'LENGTH_LINK'
                        'ValueError'
                        'LENGTH_NAME'
                        '_posix_split_name'
                        '_create_header'
                        'USTAR_FORMAT'
                    [Var Names]
                        'self'
                        'info'
                        'encoding'
                        'errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the object as a ustar header block.\n        '
                        'magic'
                        'linkname'
                        'linkname is too long'
                        'name'
                        'prefix'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: POSIX_MAGIC
                        2       LOAD_FAST                       1: info
                        4       LOAD_CONST                      1: 'magic'
                        6       STORE_SUBSCR                    
                        8       LOAD_GLOBAL                     1: len
                        10      LOAD_FAST                       1: info
                        12      LOAD_CONST                      2: 'linkname'
                        14      BINARY_SUBSCR                   
                        16      LOAD_METHOD                     2: encode
                        18      LOAD_FAST                       2: encoding
                        20      LOAD_FAST                       3: errors
                        22      CALL_METHOD                     2
                        24      CALL_FUNCTION                   1
                        26      LOAD_GLOBAL                     3: LENGTH_LINK
                        28      COMPARE_OP                      4 (>)
                        30      POP_JUMP_IF_FALSE               20 (to 40)
                        32      LOAD_GLOBAL                     4: ValueError
                        34      LOAD_CONST                      3: 'linkname is too long'
                        36      CALL_FUNCTION                   1
                        38      RAISE_VARARGS                   1
                        40      LOAD_GLOBAL                     1: len
                        42      LOAD_FAST                       1: info
                        44      LOAD_CONST                      4: 'name'
                        46      BINARY_SUBSCR                   
                        48      LOAD_METHOD                     2: encode
                        50      LOAD_FAST                       2: encoding
                        52      LOAD_FAST                       3: errors
                        54      CALL_METHOD                     2
                        56      CALL_FUNCTION                   1
                        58      LOAD_GLOBAL                     5: LENGTH_NAME
                        60      COMPARE_OP                      4 (>)
                        62      POP_JUMP_IF_FALSE               47 (to 94)
                        64      LOAD_FAST                       0: self
                        66      LOAD_METHOD                     6: _posix_split_name
                        68      LOAD_FAST                       1: info
                        70      LOAD_CONST                      4: 'name'
                        72      BINARY_SUBSCR                   
                        74      LOAD_FAST                       2: encoding
                        76      LOAD_FAST                       3: errors
                        78      CALL_METHOD                     3
                        80      UNPACK_SEQUENCE                 2
                        82      LOAD_FAST                       1: info
                        84      LOAD_CONST                      5: 'prefix'
                        86      STORE_SUBSCR                    
                        88      LOAD_FAST                       1: info
                        90      LOAD_CONST                      4: 'name'
                        92      STORE_SUBSCR                    
                        94      LOAD_FAST                       0: self
                        96      LOAD_METHOD                     7: _create_header
                        98      LOAD_FAST                       1: info
                        100     LOAD_GLOBAL                     8: USTAR_FORMAT
                        102     LOAD_FAST                       2: encoding
                        104     LOAD_FAST                       3: errors
                        106     CALL_METHOD                     4
                        108     RETURN_VALUE                    
                'TarInfo.create_ustar_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: create_gnu_header
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'GNU_MAGIC'
                        'len'
                        'encode'
                        'LENGTH_LINK'
                        '_create_gnu_long_header'
                        'GNUTYPE_LONGLINK'
                        'LENGTH_NAME'
                        'GNUTYPE_LONGNAME'
                        '_create_header'
                        'GNU_FORMAT'
                    [Var Names]
                        'self'
                        'info'
                        'encoding'
                        'errors'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the object as a GNU header block sequence.\n        '
                        'magic'
                        b''
                        'linkname'
                        'name'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: GNU_MAGIC
                        2       LOAD_FAST                       1: info
                        4       LOAD_CONST                      1: 'magic'
                        6       STORE_SUBSCR                    
                        8       LOAD_CONST                      2: b''
                        10      STORE_FAST                      4: buf
                        12      LOAD_GLOBAL                     1: len
                        14      LOAD_FAST                       1: info
                        16      LOAD_CONST                      3: 'linkname'
                        18      BINARY_SUBSCR                   
                        20      LOAD_METHOD                     2: encode
                        22      LOAD_FAST                       2: encoding
                        24      LOAD_FAST                       3: errors
                        26      CALL_METHOD                     2
                        28      CALL_FUNCTION                   1
                        30      LOAD_GLOBAL                     3: LENGTH_LINK
                        32      COMPARE_OP                      4 (>)
                        34      POP_JUMP_IF_FALSE               30 (to 60)
                        36      LOAD_FAST                       4: buf
                        38      LOAD_FAST                       0: self
                        40      LOAD_METHOD                     4: _create_gnu_long_header
                        42      LOAD_FAST                       1: info
                        44      LOAD_CONST                      3: 'linkname'
                        46      BINARY_SUBSCR                   
                        48      LOAD_GLOBAL                     5: GNUTYPE_LONGLINK
                        50      LOAD_FAST                       2: encoding
                        52      LOAD_FAST                       3: errors
                        54      CALL_METHOD                     4
                        56      INPLACE_ADD                     
                        58      STORE_FAST                      4: buf
                        60      LOAD_GLOBAL                     1: len
                        62      LOAD_FAST                       1: info
                        64      LOAD_CONST                      4: 'name'
                        66      BINARY_SUBSCR                   
                        68      LOAD_METHOD                     2: encode
                        70      LOAD_FAST                       2: encoding
                        72      LOAD_FAST                       3: errors
                        74      CALL_METHOD                     2
                        76      CALL_FUNCTION                   1
                        78      LOAD_GLOBAL                     6: LENGTH_NAME
                        80      COMPARE_OP                      4 (>)
                        82      POP_JUMP_IF_FALSE               54 (to 108)
                        84      LOAD_FAST                       4: buf
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     4: _create_gnu_long_header
                        90      LOAD_FAST                       1: info
                        92      LOAD_CONST                      4: 'name'
                        94      BINARY_SUBSCR                   
                        96      LOAD_GLOBAL                     7: GNUTYPE_LONGNAME
                        98      LOAD_FAST                       2: encoding
                        100     LOAD_FAST                       3: errors
                        102     CALL_METHOD                     4
                        104     INPLACE_ADD                     
                        106     STORE_FAST                      4: buf
                        108     LOAD_FAST                       4: buf
                        110     LOAD_FAST                       0: self
                        112     LOAD_METHOD                     8: _create_header
                        114     LOAD_FAST                       1: info
                        116     LOAD_GLOBAL                     9: GNU_FORMAT
                        118     LOAD_FAST                       2: encoding
                        120     LOAD_FAST                       3: errors
                        122     CALL_METHOD                     4
                        124     BINARY_ADD                      
                        126     RETURN_VALUE                    
                'TarInfo.create_gnu_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: create_pax_header
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 13
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'POSIX_MAGIC'
                        'pax_headers'
                        'copy'
                        'LENGTH_NAME'
                        'LENGTH_LINK'
                        'encode'
                        'UnicodeEncodeError'
                        'len'
                        'isinstance'
                        'float'
                        'round'
                        'str'
                        '_create_pax_generic_header'
                        'XHDTYPE'
                        '_create_header'
                        'USTAR_FORMAT'
                    [Var Names]
                        'self'
                        'info'
                        'encoding'
                        'pax_headers'
                        'name'
                        'hname'
                        'length'
                        'digits'
                        'needs_pax'
                        'val'
                        'val_is_float'
                        'val_int'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the object as a ustar header block. If it cannot be\n           represented this way, prepend a pax extended header sequence\n           with supplement information.\n        '
                        'magic'
                        'name'
                        'path'
                        'linkname'
                        'linkpath'
                        (
                            'uname'
                            'uname'
                            32
                        )
                        (
                            'gname'
                            'gname'
                            32
                        )
                        'ascii'
                        'strict'
                        (
                            (
                                'uid'
                                8
                            )
                            (
                                'gid'
                                8
                            )
                            (
                                'size'
                                12
                            )
                            (
                                'mtime'
                                12
                            )
                        )
                        False
                        0
                        8
                        1
                        True
                        b''
                        'replace'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: POSIX_MAGIC
                        2       LOAD_FAST                       1: info
                        4       LOAD_CONST                      1: 'magic'
                        6       STORE_SUBSCR                    
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: pax_headers
                        12      LOAD_METHOD                     2: copy
                        14      CALL_METHOD                     0
                        16      STORE_FAST                      3: pax_headers
                        18      LOAD_CONST                      2: 'name'
                        20      LOAD_CONST                      3: 'path'
                        22      LOAD_GLOBAL                     3: LENGTH_NAME
                        24      BUILD_TUPLE                     3
                        26      LOAD_CONST                      4: 'linkname'
                        28      LOAD_CONST                      5: 'linkpath'
                        30      LOAD_GLOBAL                     4: LENGTH_LINK
                        32      BUILD_TUPLE                     3
                        34      LOAD_CONST                      6: ('uname', 'uname', 32)
                        36      LOAD_CONST                      7: ('gname', 'gname', 32)
                        38      BUILD_TUPLE                     4
                        40      GET_ITER                        
                        42      FOR_ITER                        50 (to 144)
                        44      UNPACK_SEQUENCE                 3
                        46      STORE_FAST                      4: name
                        48      STORE_FAST                      5: hname
                        50      STORE_FAST                      6: length
                        52      LOAD_FAST                       5: hname
                        54      LOAD_FAST                       3: pax_headers
                        56      CONTAINS_OP                     0 (in)
                        58      POP_JUMP_IF_FALSE               31 (to 62)
                        60      JUMP_ABSOLUTE                   21 (to 42)
                        62      SETUP_FINALLY                   10 (to 84)
                        64      LOAD_FAST                       1: info
                        66      LOAD_FAST                       4: name
                        68      BINARY_SUBSCR                   
                        70      LOAD_METHOD                     5: encode
                        72      LOAD_CONST                      8: 'ascii'
                        74      LOAD_CONST                      9: 'strict'
                        76      CALL_METHOD                     2
                        78      POP_TOP                         
                        80      POP_BLOCK                       
                        82      JUMP_FORWARD                    15 (to 114)
                        84      DUP_TOP                         
                        86      LOAD_GLOBAL                     6: UnicodeEncodeError
                        88      JUMP_IF_NOT_EXC_MATCH           56 (to 112)
                        90      POP_TOP                         
                        92      POP_TOP                         
                        94      POP_TOP                         
                        96      LOAD_FAST                       1: info
                        98      LOAD_FAST                       4: name
                        100     BINARY_SUBSCR                   
                        102     LOAD_FAST                       3: pax_headers
                        104     LOAD_FAST                       5: hname
                        106     STORE_SUBSCR                    
                        108     POP_EXCEPT                      
                        110     JUMP_ABSOLUTE                   21 (to 42)
                        112     RERAISE                         0
                        114     LOAD_GLOBAL                     7: len
                        116     LOAD_FAST                       1: info
                        118     LOAD_FAST                       4: name
                        120     BINARY_SUBSCR                   
                        122     CALL_FUNCTION                   1
                        124     LOAD_FAST                       6: length
                        126     COMPARE_OP                      4 (>)
                        128     POP_JUMP_IF_FALSE               71 (to 142)
                        130     LOAD_FAST                       1: info
                        132     LOAD_FAST                       4: name
                        134     BINARY_SUBSCR                   
                        136     LOAD_FAST                       3: pax_headers
                        138     LOAD_FAST                       5: hname
                        140     STORE_SUBSCR                    
                        142     JUMP_ABSOLUTE                   21 (to 42)
                        144     LOAD_CONST                      10: (('uid', 8), ('gid', 8), ('size', 12), ('mtime', 12))
                        146     GET_ITER                        
                        148     FOR_ITER                        65 (to 280)
                        150     UNPACK_SEQUENCE                 2
                        152     STORE_FAST                      4: name
                        154     STORE_FAST                      7: digits
                        156     LOAD_CONST                      11: False
                        158     STORE_FAST                      8: needs_pax
                        160     LOAD_FAST                       1: info
                        162     LOAD_FAST                       4: name
                        164     BINARY_SUBSCR                   
                        166     STORE_FAST                      9: val
                        168     LOAD_GLOBAL                     8: isinstance
                        170     LOAD_FAST                       9: val
                        172     LOAD_GLOBAL                     9: float
                        174     CALL_FUNCTION                   2
                        176     STORE_FAST                      10: val_is_float
                        178     LOAD_FAST                       10: val_is_float
                        180     POP_JUMP_IF_FALSE               95 (to 190)
                        182     LOAD_GLOBAL                     10: round
                        184     LOAD_FAST                       9: val
                        186     CALL_FUNCTION                   1
                        188     JUMP_FORWARD                    1 (to 192)
                        190     LOAD_FAST                       9: val
                        192     STORE_FAST                      11: val_int
                        194     LOAD_CONST                      12: 0
                        196     LOAD_FAST                       11: val_int
                        198     DUP_TOP                         
                        200     ROT_THREE                       
                        202     COMPARE_OP                      1 (<=)
                        204     POP_JUMP_IF_FALSE               111 (to 222)
                        206     LOAD_CONST                      13: 8
                        208     LOAD_FAST                       7: digits
                        210     LOAD_CONST                      14: 1
                        212     BINARY_SUBTRACT                 
                        214     BINARY_POWER                    
                        216     COMPARE_OP                      0 (<)
                        218     POP_JUMP_IF_TRUE                119 (to 238)
                        220     JUMP_FORWARD                    1 (to 224)
                        222     POP_TOP                         
                        224     LOAD_CONST                      12: 0
                        226     LOAD_FAST                       1: info
                        228     LOAD_FAST                       4: name
                        230     STORE_SUBSCR                    
                        232     LOAD_CONST                      15: True
                        234     STORE_FAST                      8: needs_pax
                        236     JUMP_FORWARD                    8 (to 254)
                        238     LOAD_FAST                       10: val_is_float
                        240     POP_JUMP_IF_FALSE               127 (to 254)
                        242     LOAD_FAST                       11: val_int
                        244     LOAD_FAST                       1: info
                        246     LOAD_FAST                       4: name
                        248     STORE_SUBSCR                    
                        250     LOAD_CONST                      15: True
                        252     STORE_FAST                      8: needs_pax
                        254     LOAD_FAST                       8: needs_pax
                        256     POP_JUMP_IF_FALSE               139 (to 278)
                        258     LOAD_FAST                       4: name
                        260     LOAD_FAST                       3: pax_headers
                        262     CONTAINS_OP                     1 (not in)
                        264     POP_JUMP_IF_FALSE               139 (to 278)
                        266     LOAD_GLOBAL                     11: str
                        268     LOAD_FAST                       9: val
                        270     CALL_FUNCTION                   1
                        272     LOAD_FAST                       3: pax_headers
                        274     LOAD_FAST                       4: name
                        276     STORE_SUBSCR                    
                        278     JUMP_ABSOLUTE                   74 (to 148)
                        280     LOAD_FAST                       3: pax_headers
                        282     POP_JUMP_IF_FALSE               150 (to 300)
                        284     LOAD_FAST                       0: self
                        286     LOAD_METHOD                     12: _create_pax_generic_header
                        288     LOAD_FAST                       3: pax_headers
                        290     LOAD_GLOBAL                     13: XHDTYPE
                        292     LOAD_FAST                       2: encoding
                        294     CALL_METHOD                     3
                        296     STORE_FAST                      12: buf
                        298     JUMP_FORWARD                    2 (to 304)
                        300     LOAD_CONST                      16: b''
                        302     STORE_FAST                      12: buf
                        304     LOAD_FAST                       12: buf
                        306     LOAD_FAST                       0: self
                        308     LOAD_METHOD                     14: _create_header
                        310     LOAD_FAST                       1: info
                        312     LOAD_GLOBAL                     15: USTAR_FORMAT
                        314     LOAD_CONST                      8: 'ascii'
                        316     LOAD_CONST                      17: 'replace'
                        318     CALL_METHOD                     4
                        320     BINARY_ADD                      
                        322     RETURN_VALUE                    
                'TarInfo.create_pax_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: create_pax_global_header
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_create_pax_generic_header'
                        'XGLTYPE'
                    [Var Names]
                        'cls'
                        'pax_headers'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the object as a pax global header block sequence.\n        '
                        'utf-8'
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_METHOD                     0: _create_pax_generic_header
                        4       LOAD_FAST                       1: pax_headers
                        6       LOAD_GLOBAL                     1: XGLTYPE
                        8       LOAD_CONST                      1: 'utf-8'
                        10      CALL_METHOD                     3
                        12      RETURN_VALUE                    
                'TarInfo.create_pax_global_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: _posix_split_name
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'split'
                        'range'
                        'len'
                        'join'
                        'encode'
                        'LENGTH_PREFIX'
                        'LENGTH_NAME'
                        'ValueError'
                    [Var Names]
                        'self'
                        'name'
                        'encoding'
                        'errors'
                        'components'
                        'i'
                        'prefix'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Split a name longer than 100 chars into a prefix\n           and a name part.\n        '
                        '/'
                        1
                        None
                        'name is too long'
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_METHOD                     0: split
                        4       LOAD_CONST                      1: '/'
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      4: components
                        10      LOAD_GLOBAL                     1: range
                        12      LOAD_CONST                      2: 1
                        14      LOAD_GLOBAL                     2: len
                        16      LOAD_FAST                       4: components
                        18      CALL_FUNCTION                   1
                        20      CALL_FUNCTION                   2
                        22      GET_ITER                        
                        24      FOR_ITER                        45 (to 116)
                        26      STORE_FAST                      5: i
                        28      LOAD_CONST                      1: '/'
                        30      LOAD_METHOD                     3: join
                        32      LOAD_FAST                       4: components
                        34      LOAD_CONST                      3: None
                        36      LOAD_FAST                       5: i
                        38      BUILD_SLICE                     2
                        40      BINARY_SUBSCR                   
                        42      CALL_METHOD                     1
                        44      STORE_FAST                      6: prefix
                        46      LOAD_CONST                      1: '/'
                        48      LOAD_METHOD                     3: join
                        50      LOAD_FAST                       4: components
                        52      LOAD_FAST                       5: i
                        54      LOAD_CONST                      3: None
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      CALL_METHOD                     1
                        62      STORE_FAST                      1: name
                        64      LOAD_GLOBAL                     2: len
                        66      LOAD_FAST                       6: prefix
                        68      LOAD_METHOD                     4: encode
                        70      LOAD_FAST                       2: encoding
                        72      LOAD_FAST                       3: errors
                        74      CALL_METHOD                     2
                        76      CALL_FUNCTION                   1
                        78      LOAD_GLOBAL                     5: LENGTH_PREFIX
                        80      COMPARE_OP                      1 (<=)
                        82      POP_JUMP_IF_FALSE               57 (to 114)
                        84      LOAD_GLOBAL                     2: len
                        86      LOAD_FAST                       1: name
                        88      LOAD_METHOD                     4: encode
                        90      LOAD_FAST                       2: encoding
                        92      LOAD_FAST                       3: errors
                        94      CALL_METHOD                     2
                        96      CALL_FUNCTION                   1
                        98      LOAD_GLOBAL                     6: LENGTH_NAME
                        100     COMPARE_OP                      1 (<=)
                        102     POP_JUMP_IF_FALSE               57 (to 114)
                        104     POP_TOP                         
                        106     LOAD_FAST                       6: prefix
                        108     LOAD_FAST                       1: name
                        110     BUILD_TUPLE                     2
                        112     RETURN_VALUE                    
                        114     JUMP_ABSOLUTE                   12 (to 24)
                        116     LOAD_GLOBAL                     7: ValueError
                        118     LOAD_CONST                      4: 'name is too long'
                        120     CALL_FUNCTION                   1
                        122     RAISE_VARARGS                   1
                'TarInfo._posix_split_name'
                [Code]
                    File Name: tarfile.py
                    Object Name: _create_header
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 19
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'get'
                        'CHRTYPE'
                        'BLKTYPE'
                        'itn'
                        'stn'
                        'REGTYPE'
                        'ValueError'
                        'POSIX_MAGIC'
                        'struct'
                        'pack'
                        'BLOCKSIZE'
                        'join'
                        'calc_chksums'
                        'bytes'
                    [Var Names]
                        'info'
                        'format'
                        'encoding'
                        'errors'
                        'has_device_fields'
                        'devmajor'
                        'devminor'
                        'filetype'
                        'parts'
                        'buf'
                        'chksum'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a header block. info is a dictionary with file\n           information, format must be one of the *_FORMAT constants.\n        '
                        'type'
                        'devmajor'
                        0
                        8
                        'devminor'
                        ''
                        None
                        'TarInfo.type must not be None'
                        'name'
                        100
                        'mode'
                        4095
                        'uid'
                        'gid'
                        'size'
                        12
                        'mtime'
                        b'        '
                        'linkname'
                        'magic'
                        'uname'
                        32
                        'gname'
                        'prefix'
                        155
                        '%ds'
                        b''
                        -364
                        '%06o\x00'
                        'ascii'
                        -357
                    [Disassembly]
                        0       LOAD_FAST                       0: info
                        2       LOAD_METHOD                     0: get
                        4       LOAD_CONST                      1: 'type'
                        6       CALL_METHOD                     1
                        8       LOAD_GLOBAL                     1: CHRTYPE
                        10      LOAD_GLOBAL                     2: BLKTYPE
                        12      BUILD_TUPLE                     2
                        14      CONTAINS_OP                     0 (in)
                        16      STORE_FAST                      4: has_device_fields
                        18      LOAD_FAST                       4: has_device_fields
                        20      POP_JUMP_IF_FALSE               32 (to 64)
                        22      LOAD_GLOBAL                     3: itn
                        24      LOAD_FAST                       0: info
                        26      LOAD_METHOD                     0: get
                        28      LOAD_CONST                      2: 'devmajor'
                        30      LOAD_CONST                      3: 0
                        32      CALL_METHOD                     2
                        34      LOAD_CONST                      4: 8
                        36      LOAD_FAST                       1: format
                        38      CALL_FUNCTION                   3
                        40      STORE_FAST                      5: devmajor
                        42      LOAD_GLOBAL                     3: itn
                        44      LOAD_FAST                       0: info
                        46      LOAD_METHOD                     0: get
                        48      LOAD_CONST                      5: 'devminor'
                        50      LOAD_CONST                      3: 0
                        52      CALL_METHOD                     2
                        54      LOAD_CONST                      4: 8
                        56      LOAD_FAST                       1: format
                        58      CALL_FUNCTION                   3
                        60      STORE_FAST                      6: devminor
                        62      JUMP_FORWARD                    14 (to 92)
                        64      LOAD_GLOBAL                     4: stn
                        66      LOAD_CONST                      6: ''
                        68      LOAD_CONST                      4: 8
                        70      LOAD_FAST                       2: encoding
                        72      LOAD_FAST                       3: errors
                        74      CALL_FUNCTION                   4
                        76      STORE_FAST                      5: devmajor
                        78      LOAD_GLOBAL                     4: stn
                        80      LOAD_CONST                      6: ''
                        82      LOAD_CONST                      4: 8
                        84      LOAD_FAST                       2: encoding
                        86      LOAD_FAST                       3: errors
                        88      CALL_FUNCTION                   4
                        90      STORE_FAST                      6: devminor
                        92      LOAD_FAST                       0: info
                        94      LOAD_METHOD                     0: get
                        96      LOAD_CONST                      1: 'type'
                        98      LOAD_GLOBAL                     5: REGTYPE
                        100     CALL_METHOD                     2
                        102     STORE_FAST                      7: filetype
                        104     LOAD_FAST                       7: filetype
                        106     LOAD_CONST                      7: None
                        108     IS_OP                           0 (is)
                        110     POP_JUMP_IF_FALSE               60 (to 120)
                        112     LOAD_GLOBAL                     6: ValueError
                        114     LOAD_CONST                      8: 'TarInfo.type must not be None'
                        116     CALL_FUNCTION                   1
                        118     RAISE_VARARGS                   1
                        120     LOAD_GLOBAL                     4: stn
                        122     LOAD_FAST                       0: info
                        124     LOAD_METHOD                     0: get
                        126     LOAD_CONST                      9: 'name'
                        128     LOAD_CONST                      6: ''
                        130     CALL_METHOD                     2
                        132     LOAD_CONST                      10: 100
                        134     LOAD_FAST                       2: encoding
                        136     LOAD_FAST                       3: errors
                        138     CALL_FUNCTION                   4
                        140     LOAD_GLOBAL                     3: itn
                        142     LOAD_FAST                       0: info
                        144     LOAD_METHOD                     0: get
                        146     LOAD_CONST                      11: 'mode'
                        148     LOAD_CONST                      3: 0
                        150     CALL_METHOD                     2
                        152     LOAD_CONST                      12: 4095
                        154     BINARY_AND                      
                        156     LOAD_CONST                      4: 8
                        158     LOAD_FAST                       1: format
                        160     CALL_FUNCTION                   3
                        162     LOAD_GLOBAL                     3: itn
                        164     LOAD_FAST                       0: info
                        166     LOAD_METHOD                     0: get
                        168     LOAD_CONST                      13: 'uid'
                        170     LOAD_CONST                      3: 0
                        172     CALL_METHOD                     2
                        174     LOAD_CONST                      4: 8
                        176     LOAD_FAST                       1: format
                        178     CALL_FUNCTION                   3
                        180     LOAD_GLOBAL                     3: itn
                        182     LOAD_FAST                       0: info
                        184     LOAD_METHOD                     0: get
                        186     LOAD_CONST                      14: 'gid'
                        188     LOAD_CONST                      3: 0
                        190     CALL_METHOD                     2
                        192     LOAD_CONST                      4: 8
                        194     LOAD_FAST                       1: format
                        196     CALL_FUNCTION                   3
                        198     LOAD_GLOBAL                     3: itn
                        200     LOAD_FAST                       0: info
                        202     LOAD_METHOD                     0: get
                        204     LOAD_CONST                      15: 'size'
                        206     LOAD_CONST                      3: 0
                        208     CALL_METHOD                     2
                        210     LOAD_CONST                      16: 12
                        212     LOAD_FAST                       1: format
                        214     CALL_FUNCTION                   3
                        216     LOAD_GLOBAL                     3: itn
                        218     LOAD_FAST                       0: info
                        220     LOAD_METHOD                     0: get
                        222     LOAD_CONST                      17: 'mtime'
                        224     LOAD_CONST                      3: 0
                        226     CALL_METHOD                     2
                        228     LOAD_CONST                      16: 12
                        230     LOAD_FAST                       1: format
                        232     CALL_FUNCTION                   3
                        234     LOAD_CONST                      18: b'        '
                        236     LOAD_FAST                       7: filetype
                        238     LOAD_GLOBAL                     4: stn
                        240     LOAD_FAST                       0: info
                        242     LOAD_METHOD                     0: get
                        244     LOAD_CONST                      19: 'linkname'
                        246     LOAD_CONST                      6: ''
                        248     CALL_METHOD                     2
                        250     LOAD_CONST                      10: 100
                        252     LOAD_FAST                       2: encoding
                        254     LOAD_FAST                       3: errors
                        256     CALL_FUNCTION                   4
                        258     LOAD_FAST                       0: info
                        260     LOAD_METHOD                     0: get
                        262     LOAD_CONST                      20: 'magic'
                        264     LOAD_GLOBAL                     7: POSIX_MAGIC
                        266     CALL_METHOD                     2
                        268     LOAD_GLOBAL                     4: stn
                        270     LOAD_FAST                       0: info
                        272     LOAD_METHOD                     0: get
                        274     LOAD_CONST                      21: 'uname'
                        276     LOAD_CONST                      6: ''
                        278     CALL_METHOD                     2
                        280     LOAD_CONST                      22: 32
                        282     LOAD_FAST                       2: encoding
                        284     LOAD_FAST                       3: errors
                        286     CALL_FUNCTION                   4
                        288     LOAD_GLOBAL                     4: stn
                        290     LOAD_FAST                       0: info
                        292     LOAD_METHOD                     0: get
                        294     LOAD_CONST                      23: 'gname'
                        296     LOAD_CONST                      6: ''
                        298     CALL_METHOD                     2
                        300     LOAD_CONST                      22: 32
                        302     LOAD_FAST                       2: encoding
                        304     LOAD_FAST                       3: errors
                        306     CALL_FUNCTION                   4
                        308     LOAD_FAST                       5: devmajor
                        310     LOAD_FAST                       6: devminor
                        312     LOAD_GLOBAL                     4: stn
                        314     LOAD_FAST                       0: info
                        316     LOAD_METHOD                     0: get
                        318     LOAD_CONST                      24: 'prefix'
                        320     LOAD_CONST                      6: ''
                        322     CALL_METHOD                     2
                        324     LOAD_CONST                      25: 155
                        326     LOAD_FAST                       2: encoding
                        328     LOAD_FAST                       3: errors
                        330     CALL_FUNCTION                   4
                        332     BUILD_LIST                      15
                        334     STORE_FAST                      8: parts
                        336     LOAD_GLOBAL                     8: struct
                        338     LOAD_METHOD                     9: pack
                        340     LOAD_CONST                      26: '%ds'
                        342     LOAD_GLOBAL                     10: BLOCKSIZE
                        344     BINARY_MODULO                   
                        346     LOAD_CONST                      27: b''
                        348     LOAD_METHOD                     11: join
                        350     LOAD_FAST                       8: parts
                        352     CALL_METHOD                     1
                        354     CALL_METHOD                     2
                        356     STORE_FAST                      9: buf
                        358     LOAD_GLOBAL                     12: calc_chksums
                        360     LOAD_FAST                       9: buf
                        362     LOAD_GLOBAL                     10: BLOCKSIZE
                        364     UNARY_NEGATIVE                  
                        366     LOAD_CONST                      7: None
                        368     BUILD_SLICE                     2
                        370     BINARY_SUBSCR                   
                        372     CALL_FUNCTION                   1
                        374     LOAD_CONST                      3: 0
                        376     BINARY_SUBSCR                   
                        378     STORE_FAST                      10: chksum
                        380     LOAD_FAST                       9: buf
                        382     LOAD_CONST                      7: None
                        384     LOAD_CONST                      28: -364
                        386     BUILD_SLICE                     2
                        388     BINARY_SUBSCR                   
                        390     LOAD_GLOBAL                     13: bytes
                        392     LOAD_CONST                      29: '%06o\x00'
                        394     LOAD_FAST                       10: chksum
                        396     BINARY_MODULO                   
                        398     LOAD_CONST                      30: 'ascii'
                        400     CALL_FUNCTION                   2
                        402     BINARY_ADD                      
                        404     LOAD_FAST                       9: buf
                        406     LOAD_CONST                      31: -357
                        408     LOAD_CONST                      7: None
                        410     BUILD_SLICE                     2
                        412     BINARY_SUBSCR                   
                        414     BINARY_ADD                      
                        416     STORE_FAST                      9: buf
                        418     LOAD_FAST                       9: buf
                        420     RETURN_VALUE                    
                'TarInfo._create_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: _create_payload
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        'len'
                        'BLOCKSIZE'
                        'NUL'
                    [Var Names]
                        'payload'
                        'blocks'
                        'remainder'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the string payload filled with zero bytes\n           up to the next 512 byte border.\n        '
                        0
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_GLOBAL                     1: len
                        4       LOAD_FAST                       0: payload
                        6       CALL_FUNCTION                   1
                        8       LOAD_GLOBAL                     2: BLOCKSIZE
                        10      CALL_FUNCTION                   2
                        12      UNPACK_SEQUENCE                 2
                        14      STORE_FAST                      1: blocks
                        16      STORE_FAST                      2: remainder
                        18      LOAD_FAST                       2: remainder
                        20      LOAD_CONST                      1: 0
                        22      COMPARE_OP                      4 (>)
                        24      POP_JUMP_IF_FALSE               21 (to 42)
                        26      LOAD_FAST                       0: payload
                        28      LOAD_GLOBAL                     2: BLOCKSIZE
                        30      LOAD_FAST                       2: remainder
                        32      BINARY_SUBTRACT                 
                        34      LOAD_GLOBAL                     3: NUL
                        36      BINARY_MULTIPLY                 
                        38      INPLACE_ADD                     
                        40      STORE_FAST                      0: payload
                        42      LOAD_FAST                       0: payload
                        44      RETURN_VALUE                    
                'TarInfo._create_payload'
                [Code]
                    File Name: tarfile.py
                    Object Name: _create_gnu_long_header
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'encode'
                        'NUL'
                        'len'
                        'GNU_MAGIC'
                        '_create_header'
                        'USTAR_FORMAT'
                        '_create_payload'
                    [Var Names]
                        'cls'
                        'name'
                        'type'
                        'encoding'
                        'errors'
                        'info'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a GNUTYPE_LONGNAME or GNUTYPE_LONGLINK sequence\n           for name.\n        '
                        '././@LongLink'
                        'name'
                        'type'
                        'size'
                        'magic'
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       LOAD_METHOD                     0: encode
                        4       LOAD_FAST                       3: encoding
                        6       LOAD_FAST                       4: errors
                        8       CALL_METHOD                     2
                        10      LOAD_GLOBAL                     1: NUL
                        12      BINARY_ADD                      
                        14      STORE_FAST                      1: name
                        16      BUILD_MAP                       0
                        18      STORE_FAST                      5: info
                        20      LOAD_CONST                      1: '././@LongLink'
                        22      LOAD_FAST                       5: info
                        24      LOAD_CONST                      2: 'name'
                        26      STORE_SUBSCR                    
                        28      LOAD_FAST                       2: type
                        30      LOAD_FAST                       5: info
                        32      LOAD_CONST                      3: 'type'
                        34      STORE_SUBSCR                    
                        36      LOAD_GLOBAL                     2: len
                        38      LOAD_FAST                       1: name
                        40      CALL_FUNCTION                   1
                        42      LOAD_FAST                       5: info
                        44      LOAD_CONST                      4: 'size'
                        46      STORE_SUBSCR                    
                        48      LOAD_GLOBAL                     3: GNU_MAGIC
                        50      LOAD_FAST                       5: info
                        52      LOAD_CONST                      5: 'magic'
                        54      STORE_SUBSCR                    
                        56      LOAD_FAST                       0: cls
                        58      LOAD_METHOD                     4: _create_header
                        60      LOAD_FAST                       5: info
                        62      LOAD_GLOBAL                     5: USTAR_FORMAT
                        64      LOAD_FAST                       3: encoding
                        66      LOAD_FAST                       4: errors
                        68      CALL_METHOD                     4
                        70      LOAD_FAST                       0: cls
                        72      LOAD_METHOD                     6: _create_payload
                        74      LOAD_FAST                       1: name
                        76      CALL_METHOD                     1
                        78      BINARY_ADD                      
                        80      RETURN_VALUE                    
                'TarInfo._create_gnu_long_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: _create_pax_generic_header
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 12
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'items'
                        'encode'
                        'UnicodeEncodeError'
                        'len'
                        'str'
                        'bytes'
                        'POSIX_MAGIC'
                        '_create_header'
                        'USTAR_FORMAT'
                        '_create_payload'
                    [Var Names]
                        'cls'
                        'pax_headers'
                        'type'
                        'encoding'
                        'binary'
                        'keyword'
                        'value'
                        'records'
                        'l'
                        'n'
                        'p'
                        'info'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a POSIX.1-2008 extended or global header sequence\n           that contains a list of keyword, value pairs. The values\n           must be strings.\n        '
                        False
                        'utf-8'
                        'strict'
                        True
                        b''
                        b'21 hdrcharset=BINARY\n'
                        'surrogateescape'
                        3
                        0
                        'ascii'
                        b' '
                        b'='
                        b'\n'
                        '././@PaxHeader'
                        'name'
                        'type'
                        'size'
                        'magic'
                        'replace'
                    [Disassembly]
                        0       LOAD_CONST                      1: False
                        2       STORE_FAST                      4: binary
                        4       LOAD_FAST                       1: pax_headers
                        6       LOAD_METHOD                     0: items
                        8       CALL_METHOD                     0
                        10      GET_ITER                        
                        12      FOR_ITER                        24 (to 62)
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      5: keyword
                        18      STORE_FAST                      6: value
                        20      SETUP_FINALLY                   8 (to 38)
                        22      LOAD_FAST                       6: value
                        24      LOAD_METHOD                     1: encode
                        26      LOAD_CONST                      2: 'utf-8'
                        28      LOAD_CONST                      3: 'strict'
                        30      CALL_METHOD                     2
                        32      POP_TOP                         
                        34      POP_BLOCK                       
                        36      JUMP_ABSOLUTE                   6 (to 12)
                        38      DUP_TOP                         
                        40      LOAD_GLOBAL                     2: UnicodeEncodeError
                        42      JUMP_IF_NOT_EXC_MATCH           30 (to 60)
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_TOP                         
                        50      LOAD_CONST                      4: True
                        52      STORE_FAST                      4: binary
                        54      POP_EXCEPT                      
                        56      POP_TOP                         
                        58      JUMP_FORWARD                    1 (to 62)
                        60      RERAISE                         0
                        62      LOAD_CONST                      5: b''
                        64      STORE_FAST                      7: records
                        66      LOAD_FAST                       4: binary
                        68      POP_JUMP_IF_FALSE               39 (to 78)
                        70      LOAD_FAST                       7: records
                        72      LOAD_CONST                      6: b'21 hdrcharset=BINARY\n'
                        74      INPLACE_ADD                     
                        76      STORE_FAST                      7: records
                        78      LOAD_FAST                       1: pax_headers
                        80      LOAD_METHOD                     0: items
                        82      CALL_METHOD                     0
                        84      GET_ITER                        
                        86      FOR_ITER                        73 (to 234)
                        88      UNPACK_SEQUENCE                 2
                        90      STORE_FAST                      5: keyword
                        92      STORE_FAST                      6: value
                        94      LOAD_FAST                       5: keyword
                        96      LOAD_METHOD                     1: encode
                        98      LOAD_CONST                      2: 'utf-8'
                        100     CALL_METHOD                     1
                        102     STORE_FAST                      5: keyword
                        104     LOAD_FAST                       4: binary
                        106     POP_JUMP_IF_FALSE               61 (to 122)
                        108     LOAD_FAST                       6: value
                        110     LOAD_METHOD                     1: encode
                        112     LOAD_FAST                       3: encoding
                        114     LOAD_CONST                      7: 'surrogateescape'
                        116     CALL_METHOD                     2
                        118     STORE_FAST                      6: value
                        120     JUMP_FORWARD                    5 (to 132)
                        122     LOAD_FAST                       6: value
                        124     LOAD_METHOD                     1: encode
                        126     LOAD_CONST                      2: 'utf-8'
                        128     CALL_METHOD                     1
                        130     STORE_FAST                      6: value
                        132     LOAD_GLOBAL                     3: len
                        134     LOAD_FAST                       5: keyword
                        136     CALL_FUNCTION                   1
                        138     LOAD_GLOBAL                     3: len
                        140     LOAD_FAST                       6: value
                        142     CALL_FUNCTION                   1
                        144     BINARY_ADD                      
                        146     LOAD_CONST                      8: 3
                        148     BINARY_ADD                      
                        150     STORE_FAST                      8: l
                        152     LOAD_CONST                      9: 0
                        154     DUP_TOP                         
                        156     STORE_FAST                      9: n
                        158     STORE_FAST                      10: p
                        160     NOP                             
                        162     LOAD_FAST                       8: l
                        164     LOAD_GLOBAL                     3: len
                        166     LOAD_GLOBAL                     4: str
                        168     LOAD_FAST                       10: p
                        170     CALL_FUNCTION                   1
                        172     CALL_FUNCTION                   1
                        174     BINARY_ADD                      
                        176     STORE_FAST                      9: n
                        178     LOAD_FAST                       9: n
                        180     LOAD_FAST                       10: p
                        182     COMPARE_OP                      2 (==)
                        184     POP_JUMP_IF_FALSE               94 (to 188)
                        186     JUMP_FORWARD                    3 (to 194)
                        188     LOAD_FAST                       9: n
                        190     STORE_FAST                      10: p
                        192     JUMP_ABSOLUTE                   81 (to 162)
                        194     LOAD_FAST                       7: records
                        196     LOAD_GLOBAL                     5: bytes
                        198     LOAD_GLOBAL                     4: str
                        200     LOAD_FAST                       10: p
                        202     CALL_FUNCTION                   1
                        204     LOAD_CONST                      10: 'ascii'
                        206     CALL_FUNCTION                   2
                        208     LOAD_CONST                      11: b' '
                        210     BINARY_ADD                      
                        212     LOAD_FAST                       5: keyword
                        214     BINARY_ADD                      
                        216     LOAD_CONST                      12: b'='
                        218     BINARY_ADD                      
                        220     LOAD_FAST                       6: value
                        222     BINARY_ADD                      
                        224     LOAD_CONST                      13: b'\n'
                        226     BINARY_ADD                      
                        228     INPLACE_ADD                     
                        230     STORE_FAST                      7: records
                        232     JUMP_ABSOLUTE                   43 (to 86)
                        234     BUILD_MAP                       0
                        236     STORE_FAST                      11: info
                        238     LOAD_CONST                      14: '././@PaxHeader'
                        240     LOAD_FAST                       11: info
                        242     LOAD_CONST                      15: 'name'
                        244     STORE_SUBSCR                    
                        246     LOAD_FAST                       2: type
                        248     LOAD_FAST                       11: info
                        250     LOAD_CONST                      16: 'type'
                        252     STORE_SUBSCR                    
                        254     LOAD_GLOBAL                     3: len
                        256     LOAD_FAST                       7: records
                        258     CALL_FUNCTION                   1
                        260     LOAD_FAST                       11: info
                        262     LOAD_CONST                      17: 'size'
                        264     STORE_SUBSCR                    
                        266     LOAD_GLOBAL                     6: POSIX_MAGIC
                        268     LOAD_FAST                       11: info
                        270     LOAD_CONST                      18: 'magic'
                        272     STORE_SUBSCR                    
                        274     LOAD_FAST                       0: cls
                        276     LOAD_METHOD                     7: _create_header
                        278     LOAD_FAST                       11: info
                        280     LOAD_GLOBAL                     8: USTAR_FORMAT
                        282     LOAD_CONST                      10: 'ascii'
                        284     LOAD_CONST                      19: 'replace'
                        286     CALL_METHOD                     4
                        288     LOAD_FAST                       0: cls
                        290     LOAD_METHOD                     9: _create_payload
                        292     LOAD_FAST                       7: records
                        294     CALL_METHOD                     1
                        296     BINARY_ADD                      
                        298     RETURN_VALUE                    
                'TarInfo._create_pax_generic_header'
                [Code]
                    File Name: tarfile.py
                    Object Name: frombuf
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 14
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        'EmptyHeaderError'
                        'BLOCKSIZE'
                        'TruncatedHeaderError'
                        'count'
                        'NUL'
                        'EOFHeaderError'
                        'nti'
                        'calc_chksums'
                        'InvalidHeaderError'
                        'nts'
                        'name'
                        'mode'
                        'uid'
                        'gid'
                        'size'
                        'mtime'
                        'chksum'
                        'type'
                        'linkname'
                        'uname'
                        'gname'
                        'devmajor'
                        'devminor'
                        'AREGTYPE'
                        'endswith'
                        'DIRTYPE'
                        'GNUTYPE_SPARSE'
                        'range'
                        'ValueError'
                        'append'
                        'bool'
                        '_sparse_structs'
                        'isdir'
                        'rstrip'
                        'GNU_TYPES'
                    [Var Names]
                        'cls'
                        'buf'
                        'encoding'
                        'errors'
                        'chksum'
                        'obj'
                        'prefix'
                        'pos'
                        'structs'
                        'i'
                        'offset'
                        'numbytes'
                        'isextended'
                        'origsize'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct a TarInfo object from a 512 byte bytes object.\n        '
                        0
                        'empty header'
                        'truncated header'
                        'end of file header'
                        148
                        156
                        'bad checksum'
                        100
                        108
                        116
                        124
                        136
                        157
                        257
                        265
                        297
                        329
                        337
                        345
                        500
                        '/'
                        386
                        4
                        12
                        24
                        482
                        483
                        495
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_FAST                       1: buf
                        4       CALL_FUNCTION                   1
                        6       LOAD_CONST                      1: 0
                        8       COMPARE_OP                      2 (==)
                        10      POP_JUMP_IF_FALSE               10 (to 20)
                        12      LOAD_GLOBAL                     1: EmptyHeaderError
                        14      LOAD_CONST                      2: 'empty header'
                        16      CALL_FUNCTION                   1
                        18      RAISE_VARARGS                   1
                        20      LOAD_GLOBAL                     0: len
                        22      LOAD_FAST                       1: buf
                        24      CALL_FUNCTION                   1
                        26      LOAD_GLOBAL                     2: BLOCKSIZE
                        28      COMPARE_OP                      3 (!=)
                        30      POP_JUMP_IF_FALSE               20 (to 40)
                        32      LOAD_GLOBAL                     3: TruncatedHeaderError
                        34      LOAD_CONST                      3: 'truncated header'
                        36      CALL_FUNCTION                   1
                        38      RAISE_VARARGS                   1
                        40      LOAD_FAST                       1: buf
                        42      LOAD_METHOD                     4: count
                        44      LOAD_GLOBAL                     5: NUL
                        46      CALL_METHOD                     1
                        48      LOAD_GLOBAL                     2: BLOCKSIZE
                        50      COMPARE_OP                      2 (==)
                        52      POP_JUMP_IF_FALSE               31 (to 62)
                        54      LOAD_GLOBAL                     6: EOFHeaderError
                        56      LOAD_CONST                      4: 'end of file header'
                        58      CALL_FUNCTION                   1
                        60      RAISE_VARARGS                   1
                        62      LOAD_GLOBAL                     7: nti
                        64      LOAD_FAST                       1: buf
                        66      LOAD_CONST                      5: 148
                        68      LOAD_CONST                      6: 156
                        70      BUILD_SLICE                     2
                        72      BINARY_SUBSCR                   
                        74      CALL_FUNCTION                   1
                        76      STORE_FAST                      4: chksum
                        78      LOAD_FAST                       4: chksum
                        80      LOAD_GLOBAL                     8: calc_chksums
                        82      LOAD_FAST                       1: buf
                        84      CALL_FUNCTION                   1
                        86      CONTAINS_OP                     1 (not in)
                        88      POP_JUMP_IF_FALSE               49 (to 98)
                        90      LOAD_GLOBAL                     9: InvalidHeaderError
                        92      LOAD_CONST                      7: 'bad checksum'
                        94      CALL_FUNCTION                   1
                        96      RAISE_VARARGS                   1
                        98      LOAD_FAST                       0: cls
                        100     CALL_FUNCTION                   0
                        102     STORE_FAST                      5: obj
                        104     LOAD_GLOBAL                     10: nts
                        106     LOAD_FAST                       1: buf
                        108     LOAD_CONST                      1: 0
                        110     LOAD_CONST                      8: 100
                        112     BUILD_SLICE                     2
                        114     BINARY_SUBSCR                   
                        116     LOAD_FAST                       2: encoding
                        118     LOAD_FAST                       3: errors
                        120     CALL_FUNCTION                   3
                        122     LOAD_FAST                       5: obj
                        124     STORE_ATTR                      11: name
                        126     LOAD_GLOBAL                     7: nti
                        128     LOAD_FAST                       1: buf
                        130     LOAD_CONST                      8: 100
                        132     LOAD_CONST                      9: 108
                        134     BUILD_SLICE                     2
                        136     BINARY_SUBSCR                   
                        138     CALL_FUNCTION                   1
                        140     LOAD_FAST                       5: obj
                        142     STORE_ATTR                      12: mode
                        144     LOAD_GLOBAL                     7: nti
                        146     LOAD_FAST                       1: buf
                        148     LOAD_CONST                      9: 108
                        150     LOAD_CONST                      10: 116
                        152     BUILD_SLICE                     2
                        154     BINARY_SUBSCR                   
                        156     CALL_FUNCTION                   1
                        158     LOAD_FAST                       5: obj
                        160     STORE_ATTR                      13: uid
                        162     LOAD_GLOBAL                     7: nti
                        164     LOAD_FAST                       1: buf
                        166     LOAD_CONST                      10: 116
                        168     LOAD_CONST                      11: 124
                        170     BUILD_SLICE                     2
                        172     BINARY_SUBSCR                   
                        174     CALL_FUNCTION                   1
                        176     LOAD_FAST                       5: obj
                        178     STORE_ATTR                      14: gid
                        180     LOAD_GLOBAL                     7: nti
                        182     LOAD_FAST                       1: buf
                        184     LOAD_CONST                      11: 124
                        186     LOAD_CONST                      12: 136
                        188     BUILD_SLICE                     2
                        190     BINARY_SUBSCR                   
                        192     CALL_FUNCTION                   1
                        194     LOAD_FAST                       5: obj
                        196     STORE_ATTR                      15: size
                        198     LOAD_GLOBAL                     7: nti
                        200     LOAD_FAST                       1: buf
                        202     LOAD_CONST                      12: 136
                        204     LOAD_CONST                      5: 148
                        206     BUILD_SLICE                     2
                        208     BINARY_SUBSCR                   
                        210     CALL_FUNCTION                   1
                        212     LOAD_FAST                       5: obj
                        214     STORE_ATTR                      16: mtime
                        216     LOAD_FAST                       4: chksum
                        218     LOAD_FAST                       5: obj
                        220     STORE_ATTR                      17: chksum
                        222     LOAD_FAST                       1: buf
                        224     LOAD_CONST                      6: 156
                        226     LOAD_CONST                      13: 157
                        228     BUILD_SLICE                     2
                        230     BINARY_SUBSCR                   
                        232     LOAD_FAST                       5: obj
                        234     STORE_ATTR                      18: type
                        236     LOAD_GLOBAL                     10: nts
                        238     LOAD_FAST                       1: buf
                        240     LOAD_CONST                      13: 157
                        242     LOAD_CONST                      14: 257
                        244     BUILD_SLICE                     2
                        246     BINARY_SUBSCR                   
                        248     LOAD_FAST                       2: encoding
                        250     LOAD_FAST                       3: errors
                        252     CALL_FUNCTION                   3
                        254     LOAD_FAST                       5: obj
                        256     STORE_ATTR                      19: linkname
                        258     LOAD_GLOBAL                     10: nts
                        260     LOAD_FAST                       1: buf
                        262     LOAD_CONST                      15: 265
                        264     LOAD_CONST                      16: 297
                        266     BUILD_SLICE                     2
                        268     BINARY_SUBSCR                   
                        270     LOAD_FAST                       2: encoding
                        272     LOAD_FAST                       3: errors
                        274     CALL_FUNCTION                   3
                        276     LOAD_FAST                       5: obj
                        278     STORE_ATTR                      20: uname
                        280     LOAD_GLOBAL                     10: nts
                        282     LOAD_FAST                       1: buf
                        284     LOAD_CONST                      16: 297
                        286     LOAD_CONST                      17: 329
                        288     BUILD_SLICE                     2
                        290     BINARY_SUBSCR                   
                        292     LOAD_FAST                       2: encoding
                        294     LOAD_FAST                       3: errors
                        296     CALL_FUNCTION                   3
                        298     LOAD_FAST                       5: obj
                        300     STORE_ATTR                      21: gname
                        302     LOAD_GLOBAL                     7: nti
                        304     LOAD_FAST                       1: buf
                        306     LOAD_CONST                      17: 329
                        308     LOAD_CONST                      18: 337
                        310     BUILD_SLICE                     2
                        312     BINARY_SUBSCR                   
                        314     CALL_FUNCTION                   1
                        316     LOAD_FAST                       5: obj
                        318     STORE_ATTR                      22: devmajor
                        320     LOAD_GLOBAL                     7: nti
                        322     LOAD_FAST                       1: buf
                        324     LOAD_CONST                      18: 337
                        326     LOAD_CONST                      19: 345
                        328     BUILD_SLICE                     2
                        330     BINARY_SUBSCR                   
                        332     CALL_FUNCTION                   1
                        334     LOAD_FAST                       5: obj
                        336     STORE_ATTR                      23: devminor
                        338     LOAD_GLOBAL                     10: nts
                        340     LOAD_FAST                       1: buf
                        342     LOAD_CONST                      19: 345
                        344     LOAD_CONST                      20: 500
                        346     BUILD_SLICE                     2
                        348     BINARY_SUBSCR                   
                        350     LOAD_FAST                       2: encoding
                        352     LOAD_FAST                       3: errors
                        354     CALL_FUNCTION                   3
                        356     STORE_FAST                      6: prefix
                        358     LOAD_FAST                       5: obj
                        360     LOAD_ATTR                       18: type
                        362     LOAD_GLOBAL                     24: AREGTYPE
                        364     COMPARE_OP                      2 (==)
                        366     POP_JUMP_IF_FALSE               193 (to 386)
                        368     LOAD_FAST                       5: obj
                        370     LOAD_ATTR                       11: name
                        372     LOAD_METHOD                     25: endswith
                        374     LOAD_CONST                      21: '/'
                        376     CALL_METHOD                     1
                        378     POP_JUMP_IF_FALSE               193 (to 386)
                        380     LOAD_GLOBAL                     26: DIRTYPE
                        382     LOAD_FAST                       5: obj
                        384     STORE_ATTR                      18: type
                        386     LOAD_FAST                       5: obj
                        388     LOAD_ATTR                       18: type
                        390     LOAD_GLOBAL                     27: GNUTYPE_SPARSE
                        392     COMPARE_OP                      2 (==)
                        394     POP_JUMP_IF_FALSE               276 (to 552)
                        398     LOAD_CONST                      22: 386
                        400     STORE_FAST                      7: pos
                        402     BUILD_LIST                      0
                        404     STORE_FAST                      8: structs
                        406     LOAD_GLOBAL                     28: range
                        408     LOAD_CONST                      23: 4
                        410     CALL_FUNCTION                   1
                        412     GET_ITER                        
                        414     FOR_ITER                        48 (to 512)
                        416     STORE_FAST                      9: i
                        418     SETUP_FINALLY                   24 (to 468)
                        420     LOAD_GLOBAL                     7: nti
                        422     LOAD_FAST                       1: buf
                        424     LOAD_FAST                       7: pos
                        426     LOAD_FAST                       7: pos
                        428     LOAD_CONST                      24: 12
                        430     BINARY_ADD                      
                        432     BUILD_SLICE                     2
                        434     BINARY_SUBSCR                   
                        436     CALL_FUNCTION                   1
                        438     STORE_FAST                      10: offset
                        440     LOAD_GLOBAL                     7: nti
                        442     LOAD_FAST                       1: buf
                        444     LOAD_FAST                       7: pos
                        446     LOAD_CONST                      24: 12
                        448     BINARY_ADD                      
                        450     LOAD_FAST                       7: pos
                        452     LOAD_CONST                      25: 24
                        454     BINARY_ADD                      
                        456     BUILD_SLICE                     2
                        458     BINARY_SUBSCR                   
                        460     CALL_FUNCTION                   1
                        462     STORE_FAST                      11: numbytes
                        464     POP_BLOCK                       
                        466     JUMP_FORWARD                    10 (to 488)
                        468     DUP_TOP                         
                        470     LOAD_GLOBAL                     29: ValueError
                        472     JUMP_IF_NOT_EXC_MATCH           243 (to 486)
                        474     POP_TOP                         
                        476     POP_TOP                         
                        478     POP_TOP                         
                        480     POP_EXCEPT                      
                        482     POP_TOP                         
                        484     JUMP_FORWARD                    13 (to 512)
                        486     RERAISE                         0
                        488     LOAD_FAST                       8: structs
                        490     LOAD_METHOD                     30: append
                        492     LOAD_FAST                       10: offset
                        494     LOAD_FAST                       11: numbytes
                        496     BUILD_TUPLE                     2
                        498     CALL_METHOD                     1
                        500     POP_TOP                         
                        502     LOAD_FAST                       7: pos
                        504     LOAD_CONST                      25: 24
                        506     INPLACE_ADD                     
                        508     STORE_FAST                      7: pos
                        510     JUMP_ABSOLUTE                   207 (to 414)
                        512     LOAD_GLOBAL                     31: bool
                        514     LOAD_FAST                       1: buf
                        516     LOAD_CONST                      26: 482
                        518     BINARY_SUBSCR                   
                        520     CALL_FUNCTION                   1
                        522     STORE_FAST                      12: isextended
                        524     LOAD_GLOBAL                     7: nti
                        526     LOAD_FAST                       1: buf
                        528     LOAD_CONST                      27: 483
                        530     LOAD_CONST                      28: 495
                        532     BUILD_SLICE                     2
                        534     BINARY_SUBSCR                   
                        536     CALL_FUNCTION                   1
                        538     STORE_FAST                      13: origsize
                        540     LOAD_FAST                       8: structs
                        542     LOAD_FAST                       12: isextended
                        544     LOAD_FAST                       13: origsize
                        546     BUILD_TUPLE                     3
                        548     LOAD_FAST                       5: obj
                        550     STORE_ATTR                      32: _sparse_structs
                        552     LOAD_FAST                       5: obj
                        554     LOAD_METHOD                     33: isdir
                        556     CALL_METHOD                     0
                        558     POP_JUMP_IF_FALSE               288 (to 576)
                        562     LOAD_FAST                       5: obj
                        564     LOAD_ATTR                       11: name
                        566     LOAD_METHOD                     34: rstrip
                        568     LOAD_CONST                      21: '/'
                        570     CALL_METHOD                     1
                        572     LOAD_FAST                       5: obj
                        574     STORE_ATTR                      11: name
                        576     LOAD_FAST                       6: prefix
                        578     POP_JUMP_IF_FALSE               305 (to 610)
                        582     LOAD_FAST                       5: obj
                        584     LOAD_ATTR                       18: type
                        586     LOAD_GLOBAL                     35: GNU_TYPES
                        588     CONTAINS_OP                     1 (not in)
                        590     POP_JUMP_IF_FALSE               305 (to 610)
                        594     LOAD_FAST                       6: prefix
                        596     LOAD_CONST                      21: '/'
                        598     BINARY_ADD                      
                        600     LOAD_FAST                       5: obj
                        602     LOAD_ATTR                       11: name
                        604     BINARY_ADD                      
                        606     LOAD_FAST                       5: obj
                        608     STORE_ATTR                      11: name
                        610     LOAD_FAST                       5: obj
                        612     RETURN_VALUE                    
                'TarInfo.frombuf'
                [Code]
                    File Name: tarfile.py
                    Object Name: fromtarfile
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        'BLOCKSIZE'
                        'frombuf'
                        'encoding'
                        'errors'
                        'tell'
                        'offset'
                        '_proc_member'
                    [Var Names]
                        'cls'
                        'tarfile'
                        'buf'
                        'obj'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the next TarInfo object from TarFile object\n           tarfile.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       1: tarfile
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: read
                        6       LOAD_GLOBAL                     2: BLOCKSIZE
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      2: buf
                        12      LOAD_FAST                       0: cls
                        14      LOAD_METHOD                     3: frombuf
                        16      LOAD_FAST                       2: buf
                        18      LOAD_FAST                       1: tarfile
                        20      LOAD_ATTR                       4: encoding
                        22      LOAD_FAST                       1: tarfile
                        24      LOAD_ATTR                       5: errors
                        26      CALL_METHOD                     3
                        28      STORE_FAST                      3: obj
                        30      LOAD_FAST                       1: tarfile
                        32      LOAD_ATTR                       0: fileobj
                        34      LOAD_METHOD                     6: tell
                        36      CALL_METHOD                     0
                        38      LOAD_GLOBAL                     2: BLOCKSIZE
                        40      BINARY_SUBTRACT                 
                        42      LOAD_FAST                       3: obj
                        44      STORE_ATTR                      7: offset
                        46      LOAD_FAST                       3: obj
                        48      LOAD_METHOD                     8: _proc_member
                        50      LOAD_FAST                       1: tarfile
                        52      CALL_METHOD                     1
                        54      RETURN_VALUE                    
                'TarInfo.fromtarfile'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_member
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'GNUTYPE_LONGNAME'
                        'GNUTYPE_LONGLINK'
                        '_proc_gnulong'
                        'GNUTYPE_SPARSE'
                        '_proc_sparse'
                        'XHDTYPE'
                        'XGLTYPE'
                        'SOLARIS_XHDTYPE'
                        '_proc_pax'
                        '_proc_builtin'
                    [Var Names]
                        'self'
                        'tarfile'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Choose the right processing method depending on\n           the type and call it.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: GNUTYPE_LONGNAME
                        6       LOAD_GLOBAL                     2: GNUTYPE_LONGLINK
                        8       BUILD_TUPLE                     2
                        10      CONTAINS_OP                     0 (in)
                        12      POP_JUMP_IF_FALSE               12 (to 24)
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     3: _proc_gnulong
                        18      LOAD_FAST                       1: tarfile
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       0: type
                        28      LOAD_GLOBAL                     4: GNUTYPE_SPARSE
                        30      COMPARE_OP                      2 (==)
                        32      POP_JUMP_IF_FALSE               22 (to 44)
                        34      LOAD_FAST                       0: self
                        36      LOAD_METHOD                     5: _proc_sparse
                        38      LOAD_FAST                       1: tarfile
                        40      CALL_METHOD                     1
                        42      RETURN_VALUE                    
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       0: type
                        48      LOAD_GLOBAL                     6: XHDTYPE
                        50      LOAD_GLOBAL                     7: XGLTYPE
                        52      LOAD_GLOBAL                     8: SOLARIS_XHDTYPE
                        54      BUILD_TUPLE                     3
                        56      CONTAINS_OP                     0 (in)
                        58      POP_JUMP_IF_FALSE               35 (to 70)
                        60      LOAD_FAST                       0: self
                        62      LOAD_METHOD                     9: _proc_pax
                        64      LOAD_FAST                       1: tarfile
                        66      CALL_METHOD                     1
                        68      RETURN_VALUE                    
                        70      LOAD_FAST                       0: self
                        72      LOAD_METHOD                     10: _proc_builtin
                        74      LOAD_FAST                       1: tarfile
                        76      CALL_METHOD                     1
                        78      RETURN_VALUE                    
                'TarInfo._proc_member'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_builtin
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'tell'
                        'offset_data'
                        'isreg'
                        'type'
                        'SUPPORTED_TYPES'
                        '_block'
                        'size'
                        'offset'
                        '_apply_pax_info'
                        'pax_headers'
                        'encoding'
                        'errors'
                        'isdir'
                        'name'
                        'rstrip'
                    [Var Names]
                        'self'
                        'tarfile'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process a builtin type or an unknown type which\n           will be treated as a regular file.\n        '
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarfile
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: tell
                        6       CALL_METHOD                     0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      2: offset_data
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: offset_data
                        16      STORE_FAST                      2: offset
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     3: isreg
                        22      CALL_METHOD                     0
                        24      POP_JUMP_IF_TRUE                18 (to 36)
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       4: type
                        30      LOAD_GLOBAL                     5: SUPPORTED_TYPES
                        32      CONTAINS_OP                     1 (not in)
                        34      POP_JUMP_IF_FALSE               26 (to 52)
                        36      LOAD_FAST                       2: offset
                        38      LOAD_FAST                       0: self
                        40      LOAD_METHOD                     6: _block
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       7: size
                        46      CALL_METHOD                     1
                        48      INPLACE_ADD                     
                        50      STORE_FAST                      2: offset
                        52      LOAD_FAST                       2: offset
                        54      LOAD_FAST                       1: tarfile
                        56      STORE_ATTR                      8: offset
                        58      LOAD_FAST                       0: self
                        60      LOAD_METHOD                     9: _apply_pax_info
                        62      LOAD_FAST                       1: tarfile
                        64      LOAD_ATTR                       10: pax_headers
                        66      LOAD_FAST                       1: tarfile
                        68      LOAD_ATTR                       11: encoding
                        70      LOAD_FAST                       1: tarfile
                        72      LOAD_ATTR                       12: errors
                        74      CALL_METHOD                     3
                        76      POP_TOP                         
                        78      LOAD_FAST                       0: self
                        80      LOAD_METHOD                     13: isdir
                        82      CALL_METHOD                     0
                        84      POP_JUMP_IF_FALSE               50 (to 100)
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       14: name
                        90      LOAD_METHOD                     15: rstrip
                        92      LOAD_CONST                      1: '/'
                        94      CALL_METHOD                     1
                        96      LOAD_FAST                       0: self
                        98      STORE_ATTR                      14: name
                        100     LOAD_FAST                       0: self
                        102     RETURN_VALUE                    
                'TarInfo._proc_builtin'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_gnulong
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        '_block'
                        'size'
                        'fromtarfile'
                        'HeaderError'
                        'SubsequentHeaderError'
                        'str'
                        'offset'
                        'type'
                        'GNUTYPE_LONGNAME'
                        'nts'
                        'encoding'
                        'errors'
                        'name'
                        'GNUTYPE_LONGLINK'
                        'linkname'
                        'isdir'
                        'removesuffix'
                    [Var Names]
                        'self'
                        'tarfile'
                        'buf'
                        'next'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process the blocks that hold a GNU longname\n           or longlink member.\n        '
                        None
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarfile
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: read
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     2: _block
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: size
                        14      CALL_METHOD                     1
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      2: buf
                        20      SETUP_FINALLY                   7 (to 36)
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     4: fromtarfile
                        26      LOAD_FAST                       1: tarfile
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      3: next
                        32      POP_BLOCK                       
                        34      JUMP_FORWARD                    19 (to 74)
                        36      DUP_TOP                         
                        38      LOAD_GLOBAL                     5: HeaderError
                        40      JUMP_IF_NOT_EXC_MATCH           36 (to 72)
                        42      POP_TOP                         
                        44      STORE_FAST                      4: e
                        46      POP_TOP                         
                        48      SETUP_FINALLY                   7 (to 64)
                        50      LOAD_GLOBAL                     6: SubsequentHeaderError
                        52      LOAD_GLOBAL                     7: str
                        54      LOAD_FAST                       4: e
                        56      CALL_FUNCTION                   1
                        58      CALL_FUNCTION                   1
                        60      LOAD_CONST                      1: None
                        62      RAISE_VARARGS                   2
                        64      LOAD_CONST                      1: None
                        66      STORE_FAST                      4: e
                        68      DELETE_FAST                     4: e
                        70      RERAISE                         1
                        72      RERAISE                         0
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       8: offset
                        78      LOAD_FAST                       3: next
                        80      STORE_ATTR                      8: offset
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       9: type
                        86      LOAD_GLOBAL                     10: GNUTYPE_LONGNAME
                        88      COMPARE_OP                      2 (==)
                        90      POP_JUMP_IF_FALSE               56 (to 112)
                        92      LOAD_GLOBAL                     11: nts
                        94      LOAD_FAST                       2: buf
                        96      LOAD_FAST                       1: tarfile
                        98      LOAD_ATTR                       12: encoding
                        100     LOAD_FAST                       1: tarfile
                        102     LOAD_ATTR                       13: errors
                        104     CALL_FUNCTION                   3
                        106     LOAD_FAST                       3: next
                        108     STORE_ATTR                      14: name
                        110     JUMP_FORWARD                    14 (to 140)
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       9: type
                        116     LOAD_GLOBAL                     15: GNUTYPE_LONGLINK
                        118     COMPARE_OP                      2 (==)
                        120     POP_JUMP_IF_FALSE               70 (to 140)
                        122     LOAD_GLOBAL                     11: nts
                        124     LOAD_FAST                       2: buf
                        126     LOAD_FAST                       1: tarfile
                        128     LOAD_ATTR                       12: encoding
                        130     LOAD_FAST                       1: tarfile
                        132     LOAD_ATTR                       13: errors
                        134     CALL_FUNCTION                   3
                        136     LOAD_FAST                       3: next
                        138     STORE_ATTR                      16: linkname
                        140     LOAD_FAST                       3: next
                        142     LOAD_METHOD                     17: isdir
                        144     CALL_METHOD                     0
                        146     POP_JUMP_IF_FALSE               81 (to 162)
                        148     LOAD_FAST                       3: next
                        150     LOAD_ATTR                       14: name
                        152     LOAD_METHOD                     18: removesuffix
                        154     LOAD_CONST                      2: '/'
                        156     CALL_METHOD                     1
                        158     LOAD_FAST                       3: next
                        160     STORE_ATTR                      14: name
                        162     LOAD_FAST                       3: next
                        164     RETURN_VALUE                    
                'TarInfo._proc_gnulong'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_sparse
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_sparse_structs'
                        'fileobj'
                        'read'
                        'BLOCKSIZE'
                        'range'
                        'nti'
                        'ValueError'
                        'append'
                        'bool'
                        'sparse'
                        'tell'
                        'offset_data'
                        '_block'
                        'size'
                        'offset'
                    [Var Names]
                        'self'
                        'tarfile'
                        'structs'
                        'isextended'
                        'origsize'
                        'buf'
                        'pos'
                        'i'
                        'offset'
                        'numbytes'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process a GNU sparse header plus extra headers.\n        '
                        0
                        21
                        12
                        24
                        504
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _sparse_structs
                        4       UNPACK_SEQUENCE                 3
                        6       STORE_FAST                      2: structs
                        8       STORE_FAST                      3: isextended
                        10      STORE_FAST                      4: origsize
                        12      LOAD_FAST                       0: self
                        14      DELETE_ATTR                     0: _sparse_structs
                        16      LOAD_FAST                       3: isextended
                        18      POP_JUMP_IF_FALSE               83 (to 166)
                        20      LOAD_FAST                       1: tarfile
                        22      LOAD_ATTR                       1: fileobj
                        24      LOAD_METHOD                     2: read
                        26      LOAD_GLOBAL                     3: BLOCKSIZE
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      5: buf
                        32      LOAD_CONST                      1: 0
                        34      STORE_FAST                      6: pos
                        36      LOAD_GLOBAL                     4: range
                        38      LOAD_CONST                      2: 21
                        40      CALL_FUNCTION                   1
                        42      GET_ITER                        
                        44      FOR_ITER                        52 (to 150)
                        46      STORE_FAST                      7: i
                        48      SETUP_FINALLY                   24 (to 98)
                        50      LOAD_GLOBAL                     5: nti
                        52      LOAD_FAST                       5: buf
                        54      LOAD_FAST                       6: pos
                        56      LOAD_FAST                       6: pos
                        58      LOAD_CONST                      3: 12
                        60      BINARY_ADD                      
                        62      BUILD_SLICE                     2
                        64      BINARY_SUBSCR                   
                        66      CALL_FUNCTION                   1
                        68      STORE_FAST                      8: offset
                        70      LOAD_GLOBAL                     5: nti
                        72      LOAD_FAST                       5: buf
                        74      LOAD_FAST                       6: pos
                        76      LOAD_CONST                      3: 12
                        78      BINARY_ADD                      
                        80      LOAD_FAST                       6: pos
                        82      LOAD_CONST                      4: 24
                        84      BINARY_ADD                      
                        86      BUILD_SLICE                     2
                        88      BINARY_SUBSCR                   
                        90      CALL_FUNCTION                   1
                        92      STORE_FAST                      9: numbytes
                        94      POP_BLOCK                       
                        96      JUMP_FORWARD                    10 (to 118)
                        98      DUP_TOP                         
                        100     LOAD_GLOBAL                     6: ValueError
                        102     JUMP_IF_NOT_EXC_MATCH           58 (to 116)
                        104     POP_TOP                         
                        106     POP_TOP                         
                        108     POP_TOP                         
                        110     POP_EXCEPT                      
                        112     POP_TOP                         
                        114     JUMP_FORWARD                    17 (to 150)
                        116     RERAISE                         0
                        118     LOAD_FAST                       8: offset
                        120     POP_JUMP_IF_FALSE               70 (to 140)
                        122     LOAD_FAST                       9: numbytes
                        124     POP_JUMP_IF_FALSE               70 (to 140)
                        126     LOAD_FAST                       2: structs
                        128     LOAD_METHOD                     7: append
                        130     LOAD_FAST                       8: offset
                        132     LOAD_FAST                       9: numbytes
                        134     BUILD_TUPLE                     2
                        136     CALL_METHOD                     1
                        138     POP_TOP                         
                        140     LOAD_FAST                       6: pos
                        142     LOAD_CONST                      4: 24
                        144     INPLACE_ADD                     
                        146     STORE_FAST                      6: pos
                        148     JUMP_ABSOLUTE                   22 (to 44)
                        150     LOAD_GLOBAL                     8: bool
                        152     LOAD_FAST                       5: buf
                        154     LOAD_CONST                      5: 504
                        156     BINARY_SUBSCR                   
                        158     CALL_FUNCTION                   1
                        160     STORE_FAST                      3: isextended
                        162     LOAD_FAST                       3: isextended
                        164     POP_JUMP_IF_TRUE                10 (to 20)
                        166     LOAD_FAST                       2: structs
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      9: sparse
                        172     LOAD_FAST                       1: tarfile
                        174     LOAD_ATTR                       1: fileobj
                        176     LOAD_METHOD                     10: tell
                        178     CALL_METHOD                     0
                        180     LOAD_FAST                       0: self
                        182     STORE_ATTR                      11: offset_data
                        184     LOAD_FAST                       0: self
                        186     LOAD_ATTR                       11: offset_data
                        188     LOAD_FAST                       0: self
                        190     LOAD_METHOD                     12: _block
                        192     LOAD_FAST                       0: self
                        194     LOAD_ATTR                       13: size
                        196     CALL_METHOD                     1
                        198     BINARY_ADD                      
                        200     LOAD_FAST                       1: tarfile
                        202     STORE_ATTR                      14: offset
                        204     LOAD_FAST                       4: origsize
                        206     LOAD_FAST                       0: self
                        208     STORE_ATTR                      13: size
                        210     LOAD_FAST                       0: self
                        212     RETURN_VALUE                    
                'TarInfo._proc_sparse'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_pax
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 19
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        '_block'
                        'size'
                        'type'
                        'XGLTYPE'
                        'pax_headers'
                        'copy'
                        'len'
                        '_header_length_prefix_re'
                        'match'
                        'InvalidHeaderError'
                        'int'
                        'group'
                        'ValueError'
                        'start'
                        'end'
                        'partition'
                        'append'
                        'encoding'
                        '_decode_pax_field'
                        'errors'
                        'PAX_NAME_FIELDS'
                        'fromtarfile'
                        'HeaderError'
                        'SubsequentHeaderError'
                        'str'
                        '_proc_gnusparse_01'
                        '_proc_gnusparse_00'
                        'get'
                        '_proc_gnusparse_10'
                        'XHDTYPE'
                        'SOLARIS_XHDTYPE'
                        '_apply_pax_info'
                        'offset'
                        'offset_data'
                        'isreg'
                        'SUPPORTED_TYPES'
                    [Var Names]
                        'self'
                        'tarfile'
                        'buf'
                        'pax_headers'
                        'pos'
                        'encoding'
                        'raw_headers'
                        'match'
                        'length'
                        'header_value_end_offset'
                        'keyword_and_value'
                        'raw_keyword'
                        'equals'
                        'raw_value'
                        'keyword'
                        'value'
                        'next'
                        'e'
                        'offset'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process an extended or global header as described in\n           POSIX.1-2008.\n        '
                        0
                        None
                        'invalid header'
                        1
                        5
                        b'='
                        10
                        b'hdrcharset'
                        b'BINARY'
                        'utf-8'
                        'GNU.sparse.map'
                        'GNU.sparse.size'
                        'GNU.sparse.major'
                        '1'
                        'GNU.sparse.minor'
                        '0'
                        'size'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarfile
                        2       LOAD_ATTR                       0: fileobj
                        4       LOAD_METHOD                     1: read
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     2: _block
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: size
                        14      CALL_METHOD                     1
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      2: buf
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       4: type
                        24      LOAD_GLOBAL                     5: XGLTYPE
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               19 (to 38)
                        30      LOAD_FAST                       1: tarfile
                        32      LOAD_ATTR                       6: pax_headers
                        34      STORE_FAST                      3: pax_headers
                        36      JUMP_FORWARD                    5 (to 48)
                        38      LOAD_FAST                       1: tarfile
                        40      LOAD_ATTR                       6: pax_headers
                        42      LOAD_METHOD                     7: copy
                        44      CALL_METHOD                     0
                        46      STORE_FAST                      3: pax_headers
                        48      LOAD_CONST                      1: 0
                        50      STORE_FAST                      4: pos
                        52      LOAD_CONST                      2: None
                        54      STORE_FAST                      5: encoding
                        56      BUILD_LIST                      0
                        58      STORE_FAST                      6: raw_headers
                        60      LOAD_GLOBAL                     8: len
                        62      LOAD_FAST                       2: buf
                        64      CALL_FUNCTION                   1
                        66      LOAD_FAST                       4: pos
                        68      COMPARE_OP                      4 (>)
                        70      POP_JUMP_IF_FALSE               181 (to 362)
                        72      LOAD_FAST                       2: buf
                        74      LOAD_FAST                       4: pos
                        76      BINARY_SUBSCR                   
                        78      LOAD_CONST                      1: 0
                        80      COMPARE_OP                      3 (!=)
                        82      POP_JUMP_IF_FALSE               181 (to 362)
                        84      LOAD_GLOBAL                     9: _header_length_prefix_re
                        86      LOAD_METHOD                     10: match
                        88      LOAD_FAST                       2: buf
                        90      LOAD_FAST                       4: pos
                        92      CALL_METHOD                     2
                        94      DUP_TOP                         
                        96      STORE_FAST                      7: match
                        98      POP_JUMP_IF_TRUE                54 (to 108)
                        100     LOAD_GLOBAL                     11: InvalidHeaderError
                        102     LOAD_CONST                      3: 'invalid header'
                        104     CALL_FUNCTION                   1
                        106     RAISE_VARARGS                   1
                        108     SETUP_FINALLY                   9 (to 128)
                        110     LOAD_GLOBAL                     12: int
                        112     LOAD_FAST                       7: match
                        114     LOAD_METHOD                     13: group
                        116     LOAD_CONST                      4: 1
                        118     CALL_METHOD                     1
                        120     CALL_FUNCTION                   1
                        122     STORE_FAST                      8: length
                        124     POP_BLOCK                       
                        126     JUMP_FORWARD                    11 (to 150)
                        128     DUP_TOP                         
                        130     LOAD_GLOBAL                     14: ValueError
                        132     JUMP_IF_NOT_EXC_MATCH           74 (to 148)
                        134     POP_TOP                         
                        136     POP_TOP                         
                        138     POP_TOP                         
                        140     LOAD_GLOBAL                     11: InvalidHeaderError
                        142     LOAD_CONST                      3: 'invalid header'
                        144     CALL_FUNCTION                   1
                        146     RAISE_VARARGS                   1
                        148     RERAISE                         0
                        150     LOAD_FAST                       8: length
                        152     LOAD_CONST                      5: 5
                        154     COMPARE_OP                      0 (<)
                        156     POP_JUMP_IF_FALSE               83 (to 166)
                        158     LOAD_GLOBAL                     11: InvalidHeaderError
                        160     LOAD_CONST                      3: 'invalid header'
                        162     CALL_FUNCTION                   1
                        164     RAISE_VARARGS                   1
                        166     LOAD_FAST                       4: pos
                        168     LOAD_FAST                       8: length
                        170     BINARY_ADD                      
                        172     LOAD_GLOBAL                     8: len
                        174     LOAD_FAST                       2: buf
                        176     CALL_FUNCTION                   1
                        178     COMPARE_OP                      4 (>)
                        180     POP_JUMP_IF_FALSE               95 (to 190)
                        182     LOAD_GLOBAL                     11: InvalidHeaderError
                        184     LOAD_CONST                      3: 'invalid header'
                        186     CALL_FUNCTION                   1
                        188     RAISE_VARARGS                   1
                        190     LOAD_FAST                       7: match
                        192     LOAD_METHOD                     15: start
                        194     LOAD_CONST                      4: 1
                        196     CALL_METHOD                     1
                        198     LOAD_FAST                       8: length
                        200     BINARY_ADD                      
                        202     LOAD_CONST                      4: 1
                        204     BINARY_SUBTRACT                 
                        206     STORE_FAST                      9: header_value_end_offset
                        208     LOAD_FAST                       2: buf
                        210     LOAD_FAST                       7: match
                        212     LOAD_METHOD                     16: end
                        214     LOAD_CONST                      4: 1
                        216     CALL_METHOD                     1
                        218     LOAD_CONST                      4: 1
                        220     BINARY_ADD                      
                        222     LOAD_FAST                       9: header_value_end_offset
                        224     BUILD_SLICE                     2
                        226     BINARY_SUBSCR                   
                        228     STORE_FAST                      10: keyword_and_value
                        230     LOAD_FAST                       10: keyword_and_value
                        232     LOAD_METHOD                     17: partition
                        234     LOAD_CONST                      6: b'='
                        236     CALL_METHOD                     1
                        238     UNPACK_SEQUENCE                 3
                        240     STORE_FAST                      11: raw_keyword
                        242     STORE_FAST                      12: equals
                        244     STORE_FAST                      13: raw_value
                        246     LOAD_FAST                       11: raw_keyword
                        248     POP_JUMP_IF_FALSE               135 (to 270)
                        250     LOAD_FAST                       12: equals
                        252     LOAD_CONST                      6: b'='
                        254     COMPARE_OP                      3 (!=)
                        256     POP_JUMP_IF_TRUE                135 (to 270)
                        258     LOAD_FAST                       2: buf
                        260     LOAD_FAST                       9: header_value_end_offset
                        262     BINARY_SUBSCR                   
                        264     LOAD_CONST                      7: 10
                        266     COMPARE_OP                      3 (!=)
                        268     POP_JUMP_IF_FALSE               139 (to 278)
                        270     LOAD_GLOBAL                     11: InvalidHeaderError
                        272     LOAD_CONST                      3: 'invalid header'
                        274     CALL_FUNCTION                   1
                        276     RAISE_VARARGS                   1
                        278     LOAD_FAST                       6: raw_headers
                        280     LOAD_METHOD                     18: append
                        282     LOAD_FAST                       8: length
                        284     LOAD_FAST                       11: raw_keyword
                        286     LOAD_FAST                       13: raw_value
                        288     BUILD_TUPLE                     3
                        290     CALL_METHOD                     1
                        292     POP_TOP                         
                        294     LOAD_FAST                       11: raw_keyword
                        296     LOAD_CONST                      8: b'hdrcharset'
                        298     COMPARE_OP                      2 (==)
                        300     POP_JUMP_IF_FALSE               165 (to 330)
                        302     LOAD_FAST                       5: encoding
                        304     LOAD_CONST                      2: None
                        306     IS_OP                           0 (is)
                        308     POP_JUMP_IF_FALSE               165 (to 330)
                        310     LOAD_FAST                       13: raw_value
                        312     LOAD_CONST                      9: b'BINARY'
                        314     COMPARE_OP                      2 (==)
                        316     POP_JUMP_IF_FALSE               163 (to 326)
                        318     LOAD_FAST                       1: tarfile
                        320     LOAD_ATTR                       19: encoding
                        322     STORE_FAST                      5: encoding
                        324     JUMP_FORWARD                    2 (to 330)
                        326     LOAD_CONST                      10: 'utf-8'
                        328     STORE_FAST                      5: encoding
                        330     LOAD_FAST                       4: pos
                        332     LOAD_FAST                       8: length
                        334     INPLACE_ADD                     
                        336     STORE_FAST                      4: pos
                        338     LOAD_GLOBAL                     8: len
                        340     LOAD_FAST                       2: buf
                        342     CALL_FUNCTION                   1
                        344     LOAD_FAST                       4: pos
                        346     COMPARE_OP                      4 (>)
                        348     POP_JUMP_IF_FALSE               181 (to 362)
                        350     LOAD_FAST                       2: buf
                        352     LOAD_FAST                       4: pos
                        354     BINARY_SUBSCR                   
                        356     LOAD_CONST                      1: 0
                        358     COMPARE_OP                      3 (!=)
                        360     POP_JUMP_IF_TRUE                42 (to 84)
                        362     LOAD_FAST                       5: encoding
                        364     LOAD_CONST                      2: None
                        366     IS_OP                           0 (is)
                        368     POP_JUMP_IF_FALSE               187 (to 374)
                        370     LOAD_CONST                      10: 'utf-8'
                        372     STORE_FAST                      5: encoding
                        374     LOAD_FAST                       6: raw_headers
                        376     GET_ITER                        
                        378     FOR_ITER                        42 (to 464)
                        380     UNPACK_SEQUENCE                 3
                        382     STORE_FAST                      8: length
                        384     STORE_FAST                      11: raw_keyword
                        386     STORE_FAST                      13: raw_value
                        388     LOAD_FAST                       0: self
                        390     LOAD_METHOD                     20: _decode_pax_field
                        392     LOAD_FAST                       11: raw_keyword
                        394     LOAD_CONST                      10: 'utf-8'
                        396     LOAD_CONST                      10: 'utf-8'
                        398     LOAD_FAST                       1: tarfile
                        400     LOAD_ATTR                       21: errors
                        402     CALL_METHOD                     4
                        404     STORE_FAST                      14: keyword
                        406     LOAD_FAST                       14: keyword
                        408     LOAD_GLOBAL                     22: PAX_NAME_FIELDS
                        410     CONTAINS_OP                     0 (in)
                        412     POP_JUMP_IF_FALSE               218 (to 436)
                        414     LOAD_FAST                       0: self
                        416     LOAD_METHOD                     20: _decode_pax_field
                        418     LOAD_FAST                       13: raw_value
                        420     LOAD_FAST                       5: encoding
                        422     LOAD_FAST                       1: tarfile
                        424     LOAD_ATTR                       19: encoding
                        426     LOAD_FAST                       1: tarfile
                        428     LOAD_ATTR                       21: errors
                        430     CALL_METHOD                     4
                        432     STORE_FAST                      15: value
                        434     JUMP_FORWARD                    9 (to 454)
                        436     LOAD_FAST                       0: self
                        438     LOAD_METHOD                     20: _decode_pax_field
                        440     LOAD_FAST                       13: raw_value
                        442     LOAD_CONST                      10: 'utf-8'
                        444     LOAD_CONST                      10: 'utf-8'
                        446     LOAD_FAST                       1: tarfile
                        448     LOAD_ATTR                       21: errors
                        450     CALL_METHOD                     4
                        452     STORE_FAST                      15: value
                        454     LOAD_FAST                       15: value
                        456     LOAD_FAST                       3: pax_headers
                        458     LOAD_FAST                       14: keyword
                        460     STORE_SUBSCR                    
                        462     JUMP_ABSOLUTE                   189 (to 378)
                        464     SETUP_FINALLY                   7 (to 480)
                        466     LOAD_FAST                       0: self
                        468     LOAD_METHOD                     23: fromtarfile
                        470     LOAD_FAST                       1: tarfile
                        472     CALL_METHOD                     1
                        474     STORE_FAST                      16: next
                        476     POP_BLOCK                       
                        478     JUMP_FORWARD                    20 (to 520)
                        480     DUP_TOP                         
                        482     LOAD_GLOBAL                     24: HeaderError
                        484     JUMP_IF_NOT_EXC_MATCH           259 (to 518)
                        488     POP_TOP                         
                        490     STORE_FAST                      17: e
                        492     POP_TOP                         
                        494     SETUP_FINALLY                   7 (to 510)
                        496     LOAD_GLOBAL                     25: SubsequentHeaderError
                        498     LOAD_GLOBAL                     26: str
                        500     LOAD_FAST                       17: e
                        502     CALL_FUNCTION                   1
                        504     CALL_FUNCTION                   1
                        506     LOAD_CONST                      2: None
                        508     RAISE_VARARGS                   2
                        510     LOAD_CONST                      2: None
                        512     STORE_FAST                      17: e
                        514     DELETE_FAST                     17: e
                        516     RERAISE                         1
                        518     RERAISE                         0
                        520     LOAD_CONST                      11: 'GNU.sparse.map'
                        522     LOAD_FAST                       3: pax_headers
                        524     CONTAINS_OP                     0 (in)
                        526     POP_JUMP_IF_FALSE               272 (to 544)
                        530     LOAD_FAST                       0: self
                        532     LOAD_METHOD                     27: _proc_gnusparse_01
                        534     LOAD_FAST                       16: next
                        536     LOAD_FAST                       3: pax_headers
                        538     CALL_METHOD                     2
                        540     POP_TOP                         
                        542     JUMP_FORWARD                    35 (to 614)
                        544     LOAD_CONST                      12: 'GNU.sparse.size'
                        546     LOAD_FAST                       3: pax_headers
                        548     CONTAINS_OP                     0 (in)
                        550     POP_JUMP_IF_FALSE               284 (to 568)
                        554     LOAD_FAST                       0: self
                        556     LOAD_METHOD                     28: _proc_gnusparse_00
                        558     LOAD_FAST                       16: next
                        560     LOAD_FAST                       6: raw_headers
                        562     CALL_METHOD                     2
                        564     POP_TOP                         
                        566     JUMP_FORWARD                    23 (to 614)
                        568     LOAD_FAST                       3: pax_headers
                        570     LOAD_METHOD                     29: get
                        572     LOAD_CONST                      13: 'GNU.sparse.major'
                        574     CALL_METHOD                     1
                        576     LOAD_CONST                      14: '1'
                        578     COMPARE_OP                      2 (==)
                        580     POP_JUMP_IF_FALSE               307 (to 614)
                        584     LOAD_FAST                       3: pax_headers
                        586     LOAD_METHOD                     29: get
                        588     LOAD_CONST                      15: 'GNU.sparse.minor'
                        590     CALL_METHOD                     1
                        592     LOAD_CONST                      16: '0'
                        594     COMPARE_OP                      2 (==)
                        596     POP_JUMP_IF_FALSE               307 (to 614)
                        600     LOAD_FAST                       0: self
                        602     LOAD_METHOD                     30: _proc_gnusparse_10
                        604     LOAD_FAST                       16: next
                        606     LOAD_FAST                       3: pax_headers
                        608     LOAD_FAST                       1: tarfile
                        610     CALL_METHOD                     3
                        612     POP_TOP                         
                        614     LOAD_FAST                       0: self
                        616     LOAD_ATTR                       4: type
                        618     LOAD_GLOBAL                     31: XHDTYPE
                        620     LOAD_GLOBAL                     32: SOLARIS_XHDTYPE
                        622     BUILD_TUPLE                     2
                        624     CONTAINS_OP                     0 (in)
                        626     POP_JUMP_IF_FALSE               358 (to 716)
                        630     LOAD_FAST                       16: next
                        632     LOAD_METHOD                     33: _apply_pax_info
                        634     LOAD_FAST                       3: pax_headers
                        636     LOAD_FAST                       1: tarfile
                        638     LOAD_ATTR                       19: encoding
                        640     LOAD_FAST                       1: tarfile
                        642     LOAD_ATTR                       21: errors
                        644     CALL_METHOD                     3
                        646     POP_TOP                         
                        648     LOAD_FAST                       0: self
                        650     LOAD_ATTR                       34: offset
                        652     LOAD_FAST                       16: next
                        654     STORE_ATTR                      34: offset
                        656     LOAD_CONST                      17: 'size'
                        658     LOAD_FAST                       3: pax_headers
                        660     CONTAINS_OP                     0 (in)
                        662     POP_JUMP_IF_FALSE               358 (to 716)
                        666     LOAD_FAST                       16: next
                        668     LOAD_ATTR                       35: offset_data
                        670     STORE_FAST                      18: offset
                        672     LOAD_FAST                       16: next
                        674     LOAD_METHOD                     36: isreg
                        676     CALL_METHOD                     0
                        678     POP_JUMP_IF_TRUE                347 (to 694)
                        682     LOAD_FAST                       16: next
                        684     LOAD_ATTR                       4: type
                        686     LOAD_GLOBAL                     37: SUPPORTED_TYPES
                        688     CONTAINS_OP                     1 (not in)
                        690     POP_JUMP_IF_FALSE               355 (to 710)
                        694     LOAD_FAST                       18: offset
                        696     LOAD_FAST                       16: next
                        698     LOAD_METHOD                     2: _block
                        700     LOAD_FAST                       16: next
                        702     LOAD_ATTR                       3: size
                        704     CALL_METHOD                     1
                        706     INPLACE_ADD                     
                        708     STORE_FAST                      18: offset
                        710     LOAD_FAST                       18: offset
                        712     LOAD_FAST                       1: tarfile
                        714     STORE_ATTR                      34: offset
                        716     LOAD_FAST                       16: next
                        718     RETURN_VALUE                    
                'TarInfo._proc_pax'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_gnusparse_00
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'append'
                        'int'
                        'decode'
                        'ValueError'
                        'InvalidHeaderError'
                        'list'
                        'zip'
                        'sparse'
                    [Var Names]
                        'self'
                        'next'
                        'raw_headers'
                        'offsets'
                        'numbytes'
                        '_'
                        'keyword'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process a GNU tar extended sparse header, version 0.0.\n        '
                        b'GNU.sparse.offset'
                        'invalid header'
                        b'GNU.sparse.numbytes'
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      3: offsets
                        4       BUILD_LIST                      0
                        6       STORE_FAST                      4: numbytes
                        8       LOAD_FAST                       2: raw_headers
                        10      GET_ITER                        
                        12      FOR_ITER                        59 (to 132)
                        14      UNPACK_SEQUENCE                 3
                        16      STORE_FAST                      5: _
                        18      STORE_FAST                      6: keyword
                        20      STORE_FAST                      7: value
                        22      LOAD_FAST                       6: keyword
                        24      LOAD_CONST                      1: b'GNU.sparse.offset'
                        26      COMPARE_OP                      2 (==)
                        28      POP_JUMP_IF_FALSE               38 (to 76)
                        30      SETUP_FINALLY                   11 (to 54)
                        32      LOAD_FAST                       3: offsets
                        34      LOAD_METHOD                     0: append
                        36      LOAD_GLOBAL                     1: int
                        38      LOAD_FAST                       7: value
                        40      LOAD_METHOD                     2: decode
                        42      CALL_METHOD                     0
                        44      CALL_FUNCTION                   1
                        46      CALL_METHOD                     1
                        48      POP_TOP                         
                        50      POP_BLOCK                       
                        52      JUMP_ABSOLUTE                   6 (to 12)
                        54      DUP_TOP                         
                        56      LOAD_GLOBAL                     3: ValueError
                        58      JUMP_IF_NOT_EXC_MATCH           37 (to 74)
                        60      POP_TOP                         
                        62      POP_TOP                         
                        64      POP_TOP                         
                        66      LOAD_GLOBAL                     4: InvalidHeaderError
                        68      LOAD_CONST                      2: 'invalid header'
                        70      CALL_FUNCTION                   1
                        72      RAISE_VARARGS                   1
                        74      RERAISE                         0
                        76      LOAD_FAST                       6: keyword
                        78      LOAD_CONST                      3: b'GNU.sparse.numbytes'
                        80      COMPARE_OP                      2 (==)
                        82      POP_JUMP_IF_FALSE               65 (to 130)
                        84      SETUP_FINALLY                   11 (to 108)
                        86      LOAD_FAST                       4: numbytes
                        88      LOAD_METHOD                     0: append
                        90      LOAD_GLOBAL                     1: int
                        92      LOAD_FAST                       7: value
                        94      LOAD_METHOD                     2: decode
                        96      CALL_METHOD                     0
                        98      CALL_FUNCTION                   1
                        100     CALL_METHOD                     1
                        102     POP_TOP                         
                        104     POP_BLOCK                       
                        106     JUMP_ABSOLUTE                   6 (to 12)
                        108     DUP_TOP                         
                        110     LOAD_GLOBAL                     3: ValueError
                        112     JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                        114     POP_TOP                         
                        116     POP_TOP                         
                        118     POP_TOP                         
                        120     LOAD_GLOBAL                     4: InvalidHeaderError
                        122     LOAD_CONST                      2: 'invalid header'
                        124     CALL_FUNCTION                   1
                        126     RAISE_VARARGS                   1
                        128     RERAISE                         0
                        130     JUMP_ABSOLUTE                   6 (to 12)
                        132     LOAD_GLOBAL                     5: list
                        134     LOAD_GLOBAL                     6: zip
                        136     LOAD_FAST                       3: offsets
                        138     LOAD_FAST                       4: numbytes
                        140     CALL_FUNCTION                   2
                        142     CALL_FUNCTION                   1
                        144     LOAD_FAST                       1: next
                        146     STORE_ATTR                      7: sparse
                        148     LOAD_CONST                      4: None
                        150     RETURN_VALUE                    
                'TarInfo._proc_gnusparse_00'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_gnusparse_01
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'split'
                        'list'
                        'zip'
                        'sparse'
                    [Var Names]
                        'self'
                        'next'
                        'pax_headers'
                        'sparse'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process a GNU tar extended sparse header, version 0.1.\n        '
                        [Code]
                            File Name: tarfile.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'int'
                            [Var Names]
                                '.0'
                                'x'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        6 (to 18)
                                6       STORE_FAST                      1: x
                                8       LOAD_GLOBAL                     0: int
                                10      LOAD_FAST                       1: x
                                12      CALL_FUNCTION                   1
                                14      LIST_APPEND                     2
                                16      JUMP_ABSOLUTE                   2 (to 4)
                                18      RETURN_VALUE                    
                        'TarInfo._proc_gnusparse_01.<locals>.<listcomp>'
                        'GNU.sparse.map'
                        ','
                        None
                        2
                        1
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'TarInfo._proc_gnusparse_01.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       2: pax_headers
                        8       LOAD_CONST                      3: 'GNU.sparse.map'
                        10      BINARY_SUBSCR                   
                        12      LOAD_METHOD                     0: split
                        14      LOAD_CONST                      4: ','
                        16      CALL_METHOD                     1
                        18      GET_ITER                        
                        20      CALL_FUNCTION                   1
                        22      STORE_FAST                      3: sparse
                        24      LOAD_GLOBAL                     1: list
                        26      LOAD_GLOBAL                     2: zip
                        28      LOAD_FAST                       3: sparse
                        30      LOAD_CONST                      5: None
                        32      LOAD_CONST                      5: None
                        34      LOAD_CONST                      6: 2
                        36      BUILD_SLICE                     3
                        38      BINARY_SUBSCR                   
                        40      LOAD_FAST                       3: sparse
                        42      LOAD_CONST                      7: 1
                        44      LOAD_CONST                      5: None
                        46      LOAD_CONST                      6: 2
                        48      BUILD_SLICE                     3
                        50      BINARY_SUBSCR                   
                        52      CALL_FUNCTION                   2
                        54      CALL_FUNCTION                   1
                        56      LOAD_FAST                       1: next
                        58      STORE_ATTR                      3: sparse
                        60      LOAD_CONST                      5: None
                        62      RETURN_VALUE                    
                'TarInfo._proc_gnusparse_01'
                [Code]
                    File Name: tarfile.py
                    Object Name: _proc_gnusparse_10
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'read'
                        'BLOCKSIZE'
                        'split'
                        'int'
                        'len'
                        'append'
                        'tell'
                        'offset_data'
                        'list'
                        'zip'
                        'sparse'
                    [Var Names]
                        'self'
                        'next'
                        'pax_headers'
                        'tarfile'
                        'fields'
                        'sparse'
                        'buf'
                        'number'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Process a GNU tar extended sparse header, version 1.0.\n        '
                        None
                        b'\n'
                        1
                        2
                    [Disassembly]
                        0       LOAD_CONST                      1: None
                        2       STORE_FAST                      4: fields
                        4       BUILD_LIST                      0
                        6       STORE_FAST                      5: sparse
                        8       LOAD_FAST                       3: tarfile
                        10      LOAD_ATTR                       0: fileobj
                        12      LOAD_METHOD                     1: read
                        14      LOAD_GLOBAL                     2: BLOCKSIZE
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      6: buf
                        20      LOAD_FAST                       6: buf
                        22      LOAD_METHOD                     3: split
                        24      LOAD_CONST                      2: b'\n'
                        26      LOAD_CONST                      3: 1
                        28      CALL_METHOD                     2
                        30      UNPACK_SEQUENCE                 2
                        32      STORE_FAST                      4: fields
                        34      STORE_FAST                      6: buf
                        36      LOAD_GLOBAL                     4: int
                        38      LOAD_FAST                       4: fields
                        40      CALL_FUNCTION                   1
                        42      STORE_FAST                      4: fields
                        44      LOAD_GLOBAL                     5: len
                        46      LOAD_FAST                       5: sparse
                        48      CALL_FUNCTION                   1
                        50      LOAD_FAST                       4: fields
                        52      LOAD_CONST                      4: 2
                        54      BINARY_MULTIPLY                 
                        56      COMPARE_OP                      0 (<)
                        58      POP_JUMP_IF_FALSE               65 (to 130)
                        60      LOAD_CONST                      2: b'\n'
                        62      LOAD_FAST                       6: buf
                        64      CONTAINS_OP                     1 (not in)
                        66      POP_JUMP_IF_FALSE               42 (to 84)
                        68      LOAD_FAST                       6: buf
                        70      LOAD_FAST                       3: tarfile
                        72      LOAD_ATTR                       0: fileobj
                        74      LOAD_METHOD                     1: read
                        76      LOAD_GLOBAL                     2: BLOCKSIZE
                        78      CALL_METHOD                     1
                        80      INPLACE_ADD                     
                        82      STORE_FAST                      6: buf
                        84      LOAD_FAST                       6: buf
                        86      LOAD_METHOD                     3: split
                        88      LOAD_CONST                      2: b'\n'
                        90      LOAD_CONST                      3: 1
                        92      CALL_METHOD                     2
                        94      UNPACK_SEQUENCE                 2
                        96      STORE_FAST                      7: number
                        98      STORE_FAST                      6: buf
                        100     LOAD_FAST                       5: sparse
                        102     LOAD_METHOD                     6: append
                        104     LOAD_GLOBAL                     4: int
                        106     LOAD_FAST                       7: number
                        108     CALL_FUNCTION                   1
                        110     CALL_METHOD                     1
                        112     POP_TOP                         
                        114     LOAD_GLOBAL                     5: len
                        116     LOAD_FAST                       5: sparse
                        118     CALL_FUNCTION                   1
                        120     LOAD_FAST                       4: fields
                        122     LOAD_CONST                      4: 2
                        124     BINARY_MULTIPLY                 
                        126     COMPARE_OP                      0 (<)
                        128     POP_JUMP_IF_TRUE                30 (to 60)
                        130     LOAD_FAST                       3: tarfile
                        132     LOAD_ATTR                       0: fileobj
                        134     LOAD_METHOD                     7: tell
                        136     CALL_METHOD                     0
                        138     LOAD_FAST                       1: next
                        140     STORE_ATTR                      8: offset_data
                        142     LOAD_GLOBAL                     9: list
                        144     LOAD_GLOBAL                     10: zip
                        146     LOAD_FAST                       5: sparse
                        148     LOAD_CONST                      1: None
                        150     LOAD_CONST                      1: None
                        152     LOAD_CONST                      4: 2
                        154     BUILD_SLICE                     3
                        156     BINARY_SUBSCR                   
                        158     LOAD_FAST                       5: sparse
                        160     LOAD_CONST                      3: 1
                        162     LOAD_CONST                      1: None
                        164     LOAD_CONST                      4: 2
                        166     BUILD_SLICE                     3
                        168     BINARY_SUBSCR                   
                        170     CALL_FUNCTION                   2
                        172     CALL_FUNCTION                   1
                        174     LOAD_FAST                       1: next
                        176     STORE_ATTR                      11: sparse
                        178     LOAD_CONST                      1: None
                        180     RETURN_VALUE                    
                'TarInfo._proc_gnusparse_10'
                [Code]
                    File Name: tarfile.py
                    Object Name: _apply_pax_info
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'items'
                        'setattr'
                        'int'
                        'PAX_FIELDS'
                        'PAX_NUMBER_FIELDS'
                        'ValueError'
                        'rstrip'
                        'copy'
                        'pax_headers'
                    [Var Names]
                        'self'
                        'pax_headers'
                        'encoding'
                        'errors'
                        'keyword'
                        'value'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Replace fields with supplemental information from a previous\n           pax extended or global header.\n        '
                        'GNU.sparse.name'
                        'path'
                        'GNU.sparse.size'
                        'size'
                        'GNU.sparse.realsize'
                        0
                        '/'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: pax_headers
                        2       LOAD_METHOD                     0: items
                        4       CALL_METHOD                     0
                        6       GET_ITER                        
                        8       FOR_ITER                        84 (to 178)
                        10      UNPACK_SEQUENCE                 2
                        12      STORE_FAST                      4: keyword
                        14      STORE_FAST                      5: value
                        16      LOAD_FAST                       4: keyword
                        18      LOAD_CONST                      1: 'GNU.sparse.name'
                        20      COMPARE_OP                      2 (==)
                        22      POP_JUMP_IF_FALSE               19 (to 38)
                        24      LOAD_GLOBAL                     1: setattr
                        26      LOAD_FAST                       0: self
                        28      LOAD_CONST                      2: 'path'
                        30      LOAD_FAST                       5: value
                        32      CALL_FUNCTION                   3
                        34      POP_TOP                         
                        36      JUMP_ABSOLUTE                   4 (to 8)
                        38      LOAD_FAST                       4: keyword
                        40      LOAD_CONST                      3: 'GNU.sparse.size'
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               32 (to 64)
                        46      LOAD_GLOBAL                     1: setattr
                        48      LOAD_FAST                       0: self
                        50      LOAD_CONST                      4: 'size'
                        52      LOAD_GLOBAL                     2: int
                        54      LOAD_FAST                       5: value
                        56      CALL_FUNCTION                   1
                        58      CALL_FUNCTION                   3
                        60      POP_TOP                         
                        62      JUMP_ABSOLUTE                   4 (to 8)
                        64      LOAD_FAST                       4: keyword
                        66      LOAD_CONST                      5: 'GNU.sparse.realsize'
                        68      COMPARE_OP                      2 (==)
                        70      POP_JUMP_IF_FALSE               45 (to 90)
                        72      LOAD_GLOBAL                     1: setattr
                        74      LOAD_FAST                       0: self
                        76      LOAD_CONST                      4: 'size'
                        78      LOAD_GLOBAL                     2: int
                        80      LOAD_FAST                       5: value
                        82      CALL_FUNCTION                   1
                        84      CALL_FUNCTION                   3
                        86      POP_TOP                         
                        88      JUMP_ABSOLUTE                   4 (to 8)
                        90      LOAD_FAST                       4: keyword
                        92      LOAD_GLOBAL                     3: PAX_FIELDS
                        94      CONTAINS_OP                     0 (in)
                        96      POP_JUMP_IF_FALSE               88 (to 176)
                        98      LOAD_FAST                       4: keyword
                        100     LOAD_GLOBAL                     4: PAX_NUMBER_FIELDS
                        102     CONTAINS_OP                     0 (in)
                        104     POP_JUMP_IF_FALSE               73 (to 146)
                        106     SETUP_FINALLY                   8 (to 124)
                        108     LOAD_GLOBAL                     4: PAX_NUMBER_FIELDS
                        110     LOAD_FAST                       4: keyword
                        112     BINARY_SUBSCR                   
                        114     LOAD_FAST                       5: value
                        116     CALL_FUNCTION                   1
                        118     STORE_FAST                      5: value
                        120     POP_BLOCK                       
                        122     JUMP_FORWARD                    11 (to 146)
                        124     DUP_TOP                         
                        126     LOAD_GLOBAL                     5: ValueError
                        128     JUMP_IF_NOT_EXC_MATCH           72 (to 144)
                        130     POP_TOP                         
                        132     POP_TOP                         
                        134     POP_TOP                         
                        136     LOAD_CONST                      6: 0
                        138     STORE_FAST                      5: value
                        140     POP_EXCEPT                      
                        142     JUMP_FORWARD                    1 (to 146)
                        144     RERAISE                         0
                        146     LOAD_FAST                       4: keyword
                        148     LOAD_CONST                      2: 'path'
                        150     COMPARE_OP                      2 (==)
                        152     POP_JUMP_IF_FALSE               82 (to 164)
                        154     LOAD_FAST                       5: value
                        156     LOAD_METHOD                     6: rstrip
                        158     LOAD_CONST                      7: '/'
                        160     CALL_METHOD                     1
                        162     STORE_FAST                      5: value
                        164     LOAD_GLOBAL                     1: setattr
                        166     LOAD_FAST                       0: self
                        168     LOAD_FAST                       4: keyword
                        170     LOAD_FAST                       5: value
                        172     CALL_FUNCTION                   3
                        174     POP_TOP                         
                        176     JUMP_ABSOLUTE                   4 (to 8)
                        178     LOAD_FAST                       1: pax_headers
                        180     LOAD_METHOD                     7: copy
                        182     CALL_METHOD                     0
                        184     LOAD_FAST                       0: self
                        186     STORE_ATTR                      8: pax_headers
                        188     LOAD_CONST                      8: None
                        190     RETURN_VALUE                    
                'TarInfo._apply_pax_info'
                [Code]
                    File Name: tarfile.py
                    Object Name: _decode_pax_field
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'decode'
                        'UnicodeDecodeError'
                    [Var Names]
                        'self'
                        'value'
                        'encoding'
                        'fallback_encoding'
                        'fallback_errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Decode a single field from a pax record.\n        '
                        'strict'
                    [Disassembly]
                        0       SETUP_FINALLY                   7 (to 16)
                        2       LOAD_FAST                       1: value
                        4       LOAD_METHOD                     0: decode
                        6       LOAD_FAST                       2: encoding
                        8       LOAD_CONST                      1: 'strict'
                        10      CALL_METHOD                     2
                        12      POP_BLOCK                       
                        14      RETURN_VALUE                    
                        16      DUP_TOP                         
                        18      LOAD_GLOBAL                     1: UnicodeDecodeError
                        20      JUMP_IF_NOT_EXC_MATCH           22 (to 44)
                        22      POP_TOP                         
                        24      POP_TOP                         
                        26      POP_TOP                         
                        28      LOAD_FAST                       1: value
                        30      LOAD_METHOD                     0: decode
                        32      LOAD_FAST                       3: fallback_encoding
                        34      LOAD_FAST                       4: fallback_errors
                        36      CALL_METHOD                     2
                        38      ROT_FOUR                        
                        40      POP_EXCEPT                      
                        42      RETURN_VALUE                    
                        44      RERAISE                         0
                'TarInfo._decode_pax_field'
                [Code]
                    File Name: tarfile.py
                    Object Name: _block
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'divmod'
                        'BLOCKSIZE'
                    [Var Names]
                        'self'
                        'count'
                        'blocks'
                        'remainder'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Round up a byte count by BLOCKSIZE and return it,\n           e.g. _block(834) => 1024.\n        '
                        1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: divmod
                        2       LOAD_FAST                       1: count
                        4       LOAD_GLOBAL                     1: BLOCKSIZE
                        6       CALL_FUNCTION                   2
                        8       UNPACK_SEQUENCE                 2
                        10      STORE_FAST                      2: blocks
                        12      STORE_FAST                      3: remainder
                        14      LOAD_FAST                       3: remainder
                        16      POP_JUMP_IF_FALSE               13 (to 26)
                        18      LOAD_FAST                       2: blocks
                        20      LOAD_CONST                      1: 1
                        22      INPLACE_ADD                     
                        24      STORE_FAST                      2: blocks
                        26      LOAD_FAST                       2: blocks
                        28      LOAD_GLOBAL                     1: BLOCKSIZE
                        30      BINARY_MULTIPLY                 
                        32      RETURN_VALUE                    
                'TarInfo._block'
                [Code]
                    File Name: tarfile.py
                    Object Name: isreg
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'REGULAR_TYPES'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if the Tarinfo object is a regular file.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: REGULAR_TYPES
                        6       CONTAINS_OP                     0 (in)
                        8       RETURN_VALUE                    
                'TarInfo.isreg'
                [Code]
                    File Name: tarfile.py
                    Object Name: isfile
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isreg'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if the Tarinfo object is a regular file.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: isreg
                        4       CALL_METHOD                     0
                        6       RETURN_VALUE                    
                'TarInfo.isfile'
                [Code]
                    File Name: tarfile.py
                    Object Name: isdir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'DIRTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a directory.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: DIRTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.isdir'
                [Code]
                    File Name: tarfile.py
                    Object Name: issym
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'SYMTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a symbolic link.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: SYMTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.issym'
                [Code]
                    File Name: tarfile.py
                    Object Name: islnk
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'LNKTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a hard link.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: LNKTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.islnk'
                [Code]
                    File Name: tarfile.py
                    Object Name: ischr
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'CHRTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a character device.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: CHRTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.ischr'
                [Code]
                    File Name: tarfile.py
                    Object Name: isblk
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'BLKTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a block device.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: BLKTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.isblk'
                [Code]
                    File Name: tarfile.py
                    Object Name: isfifo
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'FIFOTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is a FIFO.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: FIFOTYPE
                        6       COMPARE_OP                      2 (==)
                        8       RETURN_VALUE                    
                'TarInfo.isfifo'
                [Code]
                    File Name: tarfile.py
                    Object Name: issparse
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'sparse'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: sparse
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           1 (is not)
                        8       RETURN_VALUE                    
                'TarInfo.issparse'
                [Code]
                    File Name: tarfile.py
                    Object Name: isdev
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'type'
                        'CHRTYPE'
                        'BLKTYPE'
                        'FIFOTYPE'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if it is one of character device, block device or FIFO.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: type
                        4       LOAD_GLOBAL                     1: CHRTYPE
                        6       LOAD_GLOBAL                     2: BLKTYPE
                        8       LOAD_GLOBAL                     3: FIFOTYPE
                        10      BUILD_TUPLE                     3
                        12      CONTAINS_OP                     0 (in)
                        14      RETURN_VALUE                    
                'TarInfo.isdev'
                (
                )
                (
                    ''
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TarInfo'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Informational class which holds the details about an\n       archive member given by a tar header block.\n       TarInfo objects are returned by TarFile.getmember(),\n       TarFile.getmembers() and TarFile.gettarinfo() and are\n       usually created internally.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: dict
                14      LOAD_CONST                      124: ()
                16      BUILD_MAP                       0
                18      LOAD_CONST                      2: 'name'
                20      LOAD_CONST                      3: 'Name of the archive member.'
                22      MAP_ADD                         1
                24      LOAD_CONST                      4: 'mode'
                26      LOAD_CONST                      5: 'Permission bits.'
                28      MAP_ADD                         1
                30      LOAD_CONST                      6: 'uid'
                32      LOAD_CONST                      7: 'User ID of the user who originally stored this member.'
                34      MAP_ADD                         1
                36      LOAD_CONST                      8: 'gid'
                38      LOAD_CONST                      9: 'Group ID of the user who originally stored this member.'
                40      MAP_ADD                         1
                42      LOAD_CONST                      10: 'size'
                44      LOAD_CONST                      11: 'Size in bytes.'
                46      MAP_ADD                         1
                48      LOAD_CONST                      12: 'mtime'
                50      LOAD_CONST                      13: 'Time of last modification.'
                52      MAP_ADD                         1
                54      LOAD_CONST                      14: 'chksum'
                56      LOAD_CONST                      15: 'Header checksum.'
                58      MAP_ADD                         1
                60      LOAD_CONST                      16: 'type'
                62      LOAD_CONST                      17: 'File type. type is usually one of these constants: REGTYPE, AREGTYPE, LNKTYPE, SYMTYPE, DIRTYPE, FIFOTYPE, CONTTYPE, CHRTYPE, BLKTYPE, GNUTYPE_SPARSE.'
                64      MAP_ADD                         1
                66      LOAD_CONST                      18: 'linkname'
                68      LOAD_CONST                      19: 'Name of the target file name, which is only present in TarInfo objects of type LNKTYPE and SYMTYPE.'
                70      MAP_ADD                         1
                72      LOAD_CONST                      20: 'uname'
                74      LOAD_CONST                      21: 'User name.'
                76      MAP_ADD                         1
                78      LOAD_CONST                      22: 'gname'
                80      LOAD_CONST                      23: 'Group name.'
                82      MAP_ADD                         1
                84      LOAD_CONST                      24: 'devmajor'
                86      LOAD_CONST                      25: 'Device major number.'
                88      MAP_ADD                         1
                90      LOAD_CONST                      26: 'devminor'
                92      LOAD_CONST                      27: 'Device minor number.'
                94      MAP_ADD                         1
                96      LOAD_CONST                      28: 'offset'
                98      LOAD_CONST                      29: 'The tar header starts here.'
                100     MAP_ADD                         1
                102     LOAD_CONST                      30: 'offset_data'
                104     LOAD_CONST                      31: "The file's data starts here."
                106     MAP_ADD                         1
                108     LOAD_CONST                      32: 'pax_headers'
                110     LOAD_CONST                      33: 'A dictionary containing key-value pairs of an associated pax extended header.'
                112     MAP_ADD                         1
                114     LOAD_CONST                      34: 'sparse'
                116     LOAD_CONST                      35: 'Sparse member information.'
                118     MAP_ADD                         1
                120     LOAD_CONST                      36: 'tarfile'
                122     LOAD_CONST                      37: None
                124     MAP_ADD                         1
                126     LOAD_CONST                      38: '_sparse_structs'
                128     LOAD_CONST                      37: None
                130     MAP_ADD                         1
                132     LOAD_CONST                      39: '_link_target'
                134     LOAD_CONST                      37: None
                136     MAP_ADD                         1
                138     CALL_FUNCTION_EX                1
                140     STORE_NAME                      5: __slots__
                142     LOAD_CONST                      125: ('',)
                144     LOAD_CONST                      41: <CODE> __init__
                146     LOAD_CONST                      42: 'TarInfo.__init__'
                148     MAKE_FUNCTION                   1
                150     STORE_NAME                      6: __init__
                152     LOAD_NAME                       7: property
                154     LOAD_CONST                      43: <CODE> path
                156     LOAD_CONST                      44: 'TarInfo.path'
                158     MAKE_FUNCTION                   0
                160     CALL_FUNCTION                   1
                162     STORE_NAME                      8: path
                164     LOAD_NAME                       8: path
                166     LOAD_ATTR                       9: setter
                168     LOAD_CONST                      45: <CODE> path
                170     LOAD_CONST                      44: 'TarInfo.path'
                172     MAKE_FUNCTION                   0
                174     CALL_FUNCTION                   1
                176     STORE_NAME                      8: path
                178     LOAD_NAME                       7: property
                180     LOAD_CONST                      46: <CODE> linkpath
                182     LOAD_CONST                      47: 'TarInfo.linkpath'
                184     MAKE_FUNCTION                   0
                186     CALL_FUNCTION                   1
                188     STORE_NAME                      10: linkpath
                190     LOAD_NAME                       10: linkpath
                192     LOAD_ATTR                       9: setter
                194     LOAD_CONST                      48: <CODE> linkpath
                196     LOAD_CONST                      47: 'TarInfo.linkpath'
                198     MAKE_FUNCTION                   0
                200     CALL_FUNCTION                   1
                202     STORE_NAME                      10: linkpath
                204     LOAD_CONST                      49: <CODE> __repr__
                206     LOAD_CONST                      50: 'TarInfo.__repr__'
                208     MAKE_FUNCTION                   0
                210     STORE_NAME                      11: __repr__
                212     LOAD_NAME                       12: _KEEP
                214     LOAD_NAME                       12: _KEEP
                216     LOAD_NAME                       12: _KEEP
                218     LOAD_NAME                       12: _KEEP
                220     LOAD_NAME                       12: _KEEP
                222     LOAD_NAME                       12: _KEEP
                224     LOAD_NAME                       12: _KEEP
                226     LOAD_NAME                       12: _KEEP
                228     LOAD_CONST                      51: True
                230     LOAD_NAME                       12: _KEEP
                232     LOAD_CONST                      52: ('name', 'mtime', 'mode', 'linkname', 'uid', 'gid', 'uname', 'gname', 'deep', '_KEEP')
                234     BUILD_CONST_KEY_MAP             10
                236     LOAD_CONST                      53: <CODE> replace
                238     LOAD_CONST                      54: 'TarInfo.replace'
                240     MAKE_FUNCTION                   2
                242     STORE_NAME                      13: replace
                244     LOAD_CONST                      55: <CODE> get_info
                246     LOAD_CONST                      56: 'TarInfo.get_info'
                248     MAKE_FUNCTION                   0
                250     STORE_NAME                      14: get_info
                252     LOAD_NAME                       15: DEFAULT_FORMAT
                254     LOAD_NAME                       16: ENCODING
                256     LOAD_CONST                      57: 'surrogateescape'
                258     BUILD_TUPLE                     3
                260     LOAD_CONST                      58: <CODE> tobuf
                262     LOAD_CONST                      59: 'TarInfo.tobuf'
                264     MAKE_FUNCTION                   1
                266     STORE_NAME                      17: tobuf
                268     LOAD_CONST                      60: <CODE> create_ustar_header
                270     LOAD_CONST                      61: 'TarInfo.create_ustar_header'
                272     MAKE_FUNCTION                   0
                274     STORE_NAME                      18: create_ustar_header
                276     LOAD_CONST                      62: <CODE> create_gnu_header
                278     LOAD_CONST                      63: 'TarInfo.create_gnu_header'
                280     MAKE_FUNCTION                   0
                282     STORE_NAME                      19: create_gnu_header
                284     LOAD_CONST                      64: <CODE> create_pax_header
                286     LOAD_CONST                      65: 'TarInfo.create_pax_header'
                288     MAKE_FUNCTION                   0
                290     STORE_NAME                      20: create_pax_header
                292     LOAD_NAME                       21: classmethod
                294     LOAD_CONST                      66: <CODE> create_pax_global_header
                296     LOAD_CONST                      67: 'TarInfo.create_pax_global_header'
                298     MAKE_FUNCTION                   0
                300     CALL_FUNCTION                   1
                302     STORE_NAME                      22: create_pax_global_header
                304     LOAD_CONST                      68: <CODE> _posix_split_name
                306     LOAD_CONST                      69: 'TarInfo._posix_split_name'
                308     MAKE_FUNCTION                   0
                310     STORE_NAME                      23: _posix_split_name
                312     LOAD_NAME                       24: staticmethod
                314     LOAD_CONST                      70: <CODE> _create_header
                316     LOAD_CONST                      71: 'TarInfo._create_header'
                318     MAKE_FUNCTION                   0
                320     CALL_FUNCTION                   1
                322     STORE_NAME                      25: _create_header
                324     LOAD_NAME                       24: staticmethod
                326     LOAD_CONST                      72: <CODE> _create_payload
                328     LOAD_CONST                      73: 'TarInfo._create_payload'
                330     MAKE_FUNCTION                   0
                332     CALL_FUNCTION                   1
                334     STORE_NAME                      26: _create_payload
                336     LOAD_NAME                       21: classmethod
                338     LOAD_CONST                      74: <CODE> _create_gnu_long_header
                340     LOAD_CONST                      75: 'TarInfo._create_gnu_long_header'
                342     MAKE_FUNCTION                   0
                344     CALL_FUNCTION                   1
                346     STORE_NAME                      27: _create_gnu_long_header
                348     LOAD_NAME                       21: classmethod
                350     LOAD_CONST                      76: <CODE> _create_pax_generic_header
                352     LOAD_CONST                      77: 'TarInfo._create_pax_generic_header'
                354     MAKE_FUNCTION                   0
                356     CALL_FUNCTION                   1
                358     STORE_NAME                      28: _create_pax_generic_header
                360     LOAD_NAME                       21: classmethod
                362     LOAD_CONST                      78: <CODE> frombuf
                364     LOAD_CONST                      79: 'TarInfo.frombuf'
                366     MAKE_FUNCTION                   0
                368     CALL_FUNCTION                   1
                370     STORE_NAME                      29: frombuf
                372     LOAD_NAME                       21: classmethod
                374     LOAD_CONST                      80: <CODE> fromtarfile
                376     LOAD_CONST                      81: 'TarInfo.fromtarfile'
                378     MAKE_FUNCTION                   0
                380     CALL_FUNCTION                   1
                382     STORE_NAME                      30: fromtarfile
                384     LOAD_CONST                      82: <CODE> _proc_member
                386     LOAD_CONST                      83: 'TarInfo._proc_member'
                388     MAKE_FUNCTION                   0
                390     STORE_NAME                      31: _proc_member
                392     LOAD_CONST                      84: <CODE> _proc_builtin
                394     LOAD_CONST                      85: 'TarInfo._proc_builtin'
                396     MAKE_FUNCTION                   0
                398     STORE_NAME                      32: _proc_builtin
                400     LOAD_CONST                      86: <CODE> _proc_gnulong
                402     LOAD_CONST                      87: 'TarInfo._proc_gnulong'
                404     MAKE_FUNCTION                   0
                406     STORE_NAME                      33: _proc_gnulong
                408     LOAD_CONST                      88: <CODE> _proc_sparse
                410     LOAD_CONST                      89: 'TarInfo._proc_sparse'
                412     MAKE_FUNCTION                   0
                414     STORE_NAME                      34: _proc_sparse
                416     LOAD_CONST                      90: <CODE> _proc_pax
                418     LOAD_CONST                      91: 'TarInfo._proc_pax'
                420     MAKE_FUNCTION                   0
                422     STORE_NAME                      35: _proc_pax
                424     LOAD_CONST                      92: <CODE> _proc_gnusparse_00
                426     LOAD_CONST                      93: 'TarInfo._proc_gnusparse_00'
                428     MAKE_FUNCTION                   0
                430     STORE_NAME                      36: _proc_gnusparse_00
                432     LOAD_CONST                      94: <CODE> _proc_gnusparse_01
                434     LOAD_CONST                      95: 'TarInfo._proc_gnusparse_01'
                436     MAKE_FUNCTION                   0
                438     STORE_NAME                      37: _proc_gnusparse_01
                440     LOAD_CONST                      96: <CODE> _proc_gnusparse_10
                442     LOAD_CONST                      97: 'TarInfo._proc_gnusparse_10'
                444     MAKE_FUNCTION                   0
                446     STORE_NAME                      38: _proc_gnusparse_10
                448     LOAD_CONST                      98: <CODE> _apply_pax_info
                450     LOAD_CONST                      99: 'TarInfo._apply_pax_info'
                452     MAKE_FUNCTION                   0
                454     STORE_NAME                      39: _apply_pax_info
                456     LOAD_CONST                      100: <CODE> _decode_pax_field
                458     LOAD_CONST                      101: 'TarInfo._decode_pax_field'
                460     MAKE_FUNCTION                   0
                462     STORE_NAME                      40: _decode_pax_field
                464     LOAD_CONST                      102: <CODE> _block
                466     LOAD_CONST                      103: 'TarInfo._block'
                468     MAKE_FUNCTION                   0
                470     STORE_NAME                      41: _block
                472     LOAD_CONST                      104: <CODE> isreg
                474     LOAD_CONST                      105: 'TarInfo.isreg'
                476     MAKE_FUNCTION                   0
                478     STORE_NAME                      42: isreg
                480     LOAD_CONST                      106: <CODE> isfile
                482     LOAD_CONST                      107: 'TarInfo.isfile'
                484     MAKE_FUNCTION                   0
                486     STORE_NAME                      43: isfile
                488     LOAD_CONST                      108: <CODE> isdir
                490     LOAD_CONST                      109: 'TarInfo.isdir'
                492     MAKE_FUNCTION                   0
                494     STORE_NAME                      44: isdir
                496     LOAD_CONST                      110: <CODE> issym
                498     LOAD_CONST                      111: 'TarInfo.issym'
                500     MAKE_FUNCTION                   0
                502     STORE_NAME                      45: issym
                504     LOAD_CONST                      112: <CODE> islnk
                506     LOAD_CONST                      113: 'TarInfo.islnk'
                508     MAKE_FUNCTION                   0
                510     STORE_NAME                      46: islnk
                512     LOAD_CONST                      114: <CODE> ischr
                514     LOAD_CONST                      115: 'TarInfo.ischr'
                516     MAKE_FUNCTION                   0
                518     STORE_NAME                      47: ischr
                520     LOAD_CONST                      116: <CODE> isblk
                522     LOAD_CONST                      117: 'TarInfo.isblk'
                524     MAKE_FUNCTION                   0
                526     STORE_NAME                      48: isblk
                528     LOAD_CONST                      118: <CODE> isfifo
                530     LOAD_CONST                      119: 'TarInfo.isfifo'
                532     MAKE_FUNCTION                   0
                534     STORE_NAME                      49: isfifo
                536     LOAD_CONST                      120: <CODE> issparse
                538     LOAD_CONST                      121: 'TarInfo.issparse'
                540     MAKE_FUNCTION                   0
                542     STORE_NAME                      50: issparse
                544     LOAD_CONST                      122: <CODE> isdev
                546     LOAD_CONST                      123: 'TarInfo.isdev'
                548     MAKE_FUNCTION                   0
                550     STORE_NAME                      51: isdev
                552     LOAD_CONST                      37: None
                554     RETURN_VALUE                    
        'TarInfo'
        [Code]
            File Name: tarfile.py
            Object Name: TarFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 5
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'debug'
                'dereference'
                'ignore_zeros'
                'errorlevel'
                'DEFAULT_FORMAT'
                'format'
                'ENCODING'
                'encoding'
                'errors'
                'TarInfo'
                'tarinfo'
                'ExFileObject'
                'fileobject'
                'extraction_filter'
                '__init__'
                'classmethod'
                'RECORDSIZE'
                'open'
                'taropen'
                'gzopen'
                'bz2open'
                'xzopen'
                'OPEN_METH'
                'close'
                'getmember'
                'getmembers'
                'getnames'
                'gettarinfo'
                'list'
                'add'
                'addfile'
                '_get_filter_function'
                'extractall'
                'extract'
                '_get_extract_tarinfo'
                '_extract_one'
                '_handle_nonfatal_error'
                '_handle_fatal_error'
                'extractfile'
                '_extract_member'
                'makedir'
                'makefile'
                'makeunknown'
                'makefifo'
                'makedev'
                'makelink'
                'chown'
                'chmod'
                'utime'
                'next'
                '_getmember'
                '_load'
                '_check'
                '_find_link_target'
                '__iter__'
                '_dbg'
                '__enter__'
                '__exit__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TarFile'
                'The TarFile Class provides an interface to tar archives.\n    '
                0
                False
                1
                None
                'r'
                'surrogateescape'
                [Code]
                    File Name: tarfile.py
                    Object Name: __init__
                    Arg Count: 14
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 17
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        'mode'
                        '_mode'
                        'os'
                        'path'
                        'exists'
                        'bltn_open'
                        '_extfileobj'
                        'hasattr'
                        'isinstance'
                        'name'
                        'str'
                        'bytes'
                        'abspath'
                        'fileobj'
                        'format'
                        'tarinfo'
                        'dereference'
                        'ignore_zeros'
                        'encoding'
                        'errors'
                        'PAX_FORMAT'
                        'pax_headers'
                        'debug'
                        'errorlevel'
                        'copybufsize'
                        'closed'
                        'members'
                        '_loaded'
                        'tell'
                        'offset'
                        'inodes'
                        'firstmember'
                        'next'
                        'seek'
                        'fromtarfile'
                        'append'
                        'EOFHeaderError'
                        'HeaderError'
                        'ReadError'
                        'create_pax_global_header'
                        'copy'
                        'write'
                        'len'
                        'close'
                    [Var Names]
                        'self'
                        'name'
                        'mode'
                        'fileobj'
                        'format'
                        'tarinfo'
                        'dereference'
                        'ignore_zeros'
                        'encoding'
                        'errors'
                        'pax_headers'
                        'debug'
                        'errorlevel'
                        'copybufsize'
                        'modes'
                        'e'
                        'buf'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Open an (uncompressed) tar archive `name'. `mode' is either 'r' to\n           read from an existing archive, 'a' to append data to an existing\n           file or 'w' to create a new file overwriting an existing one. `mode'\n           defaults to 'r'.\n           If `fileobj' is given, it is used for reading or writing data. If it\n           can be determined, `mode' is overridden by `fileobj's mode.\n           `fileobj' is not closed, when TarFile is closed.\n        "
                        'rb'
                        'r+b'
                        'wb'
                        'xb'
                        (
                            'r'
                            'a'
                            'w'
                            'x'
                        )
                        "mode must be 'r', 'a', 'w' or 'x'"
                        'a'
                        'w'
                        False
                        None
                        'name'
                        'mode'
                        True
                        'r'
                        (
                            'a'
                            'w'
                            'x'
                        )
                    [Disassembly]
                        0       LOAD_CONST                      1: 'rb'
                        2       LOAD_CONST                      2: 'r+b'
                        4       LOAD_CONST                      3: 'wb'
                        6       LOAD_CONST                      4: 'xb'
                        8       LOAD_CONST                      5: ('r', 'a', 'w', 'x')
                        10      BUILD_CONST_KEY_MAP             4
                        12      STORE_FAST                      14: modes
                        14      LOAD_FAST                       2: mode
                        16      LOAD_FAST                       14: modes
                        18      CONTAINS_OP                     1 (not in)
                        20      POP_JUMP_IF_FALSE               15 (to 30)
                        22      LOAD_GLOBAL                     0: ValueError
                        24      LOAD_CONST                      6: "mode must be 'r', 'a', 'w' or 'x'"
                        26      CALL_FUNCTION                   1
                        28      RAISE_VARARGS                   1
                        30      LOAD_FAST                       2: mode
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      1: mode
                        36      LOAD_FAST                       14: modes
                        38      LOAD_FAST                       2: mode
                        40      BINARY_SUBSCR                   
                        42      LOAD_FAST                       0: self
                        44      STORE_ATTR                      2: _mode
                        46      LOAD_FAST                       3: fileobj
                        48      POP_JUMP_IF_TRUE                52 (to 104)
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       1: mode
                        54      LOAD_CONST                      7: 'a'
                        56      COMPARE_OP                      2 (==)
                        58      POP_JUMP_IF_FALSE               42 (to 84)
                        60      LOAD_GLOBAL                     3: os
                        62      LOAD_ATTR                       4: path
                        64      LOAD_METHOD                     5: exists
                        66      LOAD_FAST                       1: name
                        68      CALL_METHOD                     1
                        70      POP_JUMP_IF_TRUE                42 (to 84)
                        72      LOAD_CONST                      8: 'w'
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      1: mode
                        78      LOAD_CONST                      3: 'wb'
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      2: _mode
                        84      LOAD_GLOBAL                     6: bltn_open
                        86      LOAD_FAST                       1: name
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       2: _mode
                        92      CALL_FUNCTION                   2
                        94      STORE_FAST                      3: fileobj
                        96      LOAD_CONST                      9: False
                        98      LOAD_FAST                       0: self
                        100     STORE_ATTR                      7: _extfileobj
                        102     JUMP_FORWARD                    32 (to 168)
                        104     LOAD_FAST                       1: name
                        106     LOAD_CONST                      10: None
                        108     IS_OP                           0 (is)
                        110     POP_JUMP_IF_FALSE               72 (to 144)
                        112     LOAD_GLOBAL                     8: hasattr
                        114     LOAD_FAST                       3: fileobj
                        116     LOAD_CONST                      11: 'name'
                        118     CALL_FUNCTION                   2
                        120     POP_JUMP_IF_FALSE               72 (to 144)
                        122     LOAD_GLOBAL                     9: isinstance
                        124     LOAD_FAST                       3: fileobj
                        126     LOAD_ATTR                       10: name
                        128     LOAD_GLOBAL                     11: str
                        130     LOAD_GLOBAL                     12: bytes
                        132     BUILD_TUPLE                     2
                        134     CALL_FUNCTION                   2
                        136     POP_JUMP_IF_FALSE               72 (to 144)
                        138     LOAD_FAST                       3: fileobj
                        140     LOAD_ATTR                       10: name
                        142     STORE_FAST                      1: name
                        144     LOAD_GLOBAL                     8: hasattr
                        146     LOAD_FAST                       3: fileobj
                        148     LOAD_CONST                      12: 'mode'
                        150     CALL_FUNCTION                   2
                        152     POP_JUMP_IF_FALSE               81 (to 162)
                        154     LOAD_FAST                       3: fileobj
                        156     LOAD_ATTR                       1: mode
                        158     LOAD_FAST                       0: self
                        160     STORE_ATTR                      2: _mode
                        162     LOAD_CONST                      13: True
                        164     LOAD_FAST                       0: self
                        166     STORE_ATTR                      7: _extfileobj
                        168     LOAD_FAST                       1: name
                        170     POP_JUMP_IF_FALSE               92 (to 184)
                        172     LOAD_GLOBAL                     3: os
                        174     LOAD_ATTR                       4: path
                        176     LOAD_METHOD                     13: abspath
                        178     LOAD_FAST                       1: name
                        180     CALL_METHOD                     1
                        182     JUMP_FORWARD                    1 (to 186)
                        184     LOAD_CONST                      10: None
                        186     LOAD_FAST                       0: self
                        188     STORE_ATTR                      10: name
                        190     LOAD_FAST                       3: fileobj
                        192     LOAD_FAST                       0: self
                        194     STORE_ATTR                      14: fileobj
                        196     LOAD_FAST                       4: format
                        198     LOAD_CONST                      10: None
                        200     IS_OP                           1 (is not)
                        202     POP_JUMP_IF_FALSE               105 (to 210)
                        204     LOAD_FAST                       4: format
                        206     LOAD_FAST                       0: self
                        208     STORE_ATTR                      15: format
                        210     LOAD_FAST                       5: tarinfo
                        212     LOAD_CONST                      10: None
                        214     IS_OP                           1 (is not)
                        216     POP_JUMP_IF_FALSE               112 (to 224)
                        218     LOAD_FAST                       5: tarinfo
                        220     LOAD_FAST                       0: self
                        222     STORE_ATTR                      16: tarinfo
                        224     LOAD_FAST                       6: dereference
                        226     LOAD_CONST                      10: None
                        228     IS_OP                           1 (is not)
                        230     POP_JUMP_IF_FALSE               119 (to 238)
                        232     LOAD_FAST                       6: dereference
                        234     LOAD_FAST                       0: self
                        236     STORE_ATTR                      17: dereference
                        238     LOAD_FAST                       7: ignore_zeros
                        240     LOAD_CONST                      10: None
                        242     IS_OP                           1 (is not)
                        244     POP_JUMP_IF_FALSE               126 (to 252)
                        246     LOAD_FAST                       7: ignore_zeros
                        248     LOAD_FAST                       0: self
                        250     STORE_ATTR                      18: ignore_zeros
                        252     LOAD_FAST                       8: encoding
                        254     LOAD_CONST                      10: None
                        256     IS_OP                           1 (is not)
                        258     POP_JUMP_IF_FALSE               133 (to 266)
                        260     LOAD_FAST                       8: encoding
                        262     LOAD_FAST                       0: self
                        264     STORE_ATTR                      19: encoding
                        266     LOAD_FAST                       9: errors
                        268     LOAD_FAST                       0: self
                        270     STORE_ATTR                      20: errors
                        272     LOAD_FAST                       10: pax_headers
                        274     LOAD_CONST                      10: None
                        276     IS_OP                           1 (is not)
                        278     POP_JUMP_IF_FALSE               149 (to 298)
                        280     LOAD_FAST                       0: self
                        282     LOAD_ATTR                       15: format
                        284     LOAD_GLOBAL                     21: PAX_FORMAT
                        286     COMPARE_OP                      2 (==)
                        288     POP_JUMP_IF_FALSE               149 (to 298)
                        290     LOAD_FAST                       10: pax_headers
                        292     LOAD_FAST                       0: self
                        294     STORE_ATTR                      22: pax_headers
                        296     JUMP_FORWARD                    3 (to 304)
                        298     BUILD_MAP                       0
                        300     LOAD_FAST                       0: self
                        302     STORE_ATTR                      22: pax_headers
                        304     LOAD_FAST                       11: debug
                        306     LOAD_CONST                      10: None
                        308     IS_OP                           1 (is not)
                        310     POP_JUMP_IF_FALSE               159 (to 318)
                        312     LOAD_FAST                       11: debug
                        314     LOAD_FAST                       0: self
                        316     STORE_ATTR                      23: debug
                        318     LOAD_FAST                       12: errorlevel
                        320     LOAD_CONST                      10: None
                        322     IS_OP                           1 (is not)
                        324     POP_JUMP_IF_FALSE               166 (to 332)
                        326     LOAD_FAST                       12: errorlevel
                        328     LOAD_FAST                       0: self
                        330     STORE_ATTR                      24: errorlevel
                        332     LOAD_FAST                       13: copybufsize
                        334     LOAD_FAST                       0: self
                        336     STORE_ATTR                      25: copybufsize
                        338     LOAD_CONST                      9: False
                        340     LOAD_FAST                       0: self
                        342     STORE_ATTR                      26: closed
                        344     BUILD_LIST                      0
                        346     LOAD_FAST                       0: self
                        348     STORE_ATTR                      27: members
                        350     LOAD_CONST                      9: False
                        352     LOAD_FAST                       0: self
                        354     STORE_ATTR                      28: _loaded
                        356     LOAD_FAST                       0: self
                        358     LOAD_ATTR                       14: fileobj
                        360     LOAD_METHOD                     29: tell
                        362     CALL_METHOD                     0
                        364     LOAD_FAST                       0: self
                        366     STORE_ATTR                      30: offset
                        368     BUILD_MAP                       0
                        370     LOAD_FAST                       0: self
                        372     STORE_ATTR                      31: inodes
                        374     SETUP_FINALLY                   124 (to 624)
                        376     LOAD_FAST                       0: self
                        378     LOAD_ATTR                       1: mode
                        380     LOAD_CONST                      14: 'r'
                        382     COMPARE_OP                      2 (==)
                        384     POP_JUMP_IF_FALSE               201 (to 402)
                        386     LOAD_CONST                      10: None
                        388     LOAD_FAST                       0: self
                        390     STORE_ATTR                      32: firstmember
                        392     LOAD_FAST                       0: self
                        394     LOAD_METHOD                     33: next
                        396     CALL_METHOD                     0
                        398     LOAD_FAST                       0: self
                        400     STORE_ATTR                      32: firstmember
                        402     LOAD_FAST                       0: self
                        404     LOAD_ATTR                       1: mode
                        406     LOAD_CONST                      7: 'a'
                        408     COMPARE_OP                      2 (==)
                        410     POP_JUMP_IF_FALSE               266 (to 532)
                        414     NOP                             
                        416     LOAD_FAST                       0: self
                        418     LOAD_ATTR                       14: fileobj
                        420     LOAD_METHOD                     34: seek
                        422     LOAD_FAST                       0: self
                        424     LOAD_ATTR                       30: offset
                        426     CALL_METHOD                     1
                        428     POP_TOP                         
                        430     SETUP_FINALLY                   14 (to 460)
                        432     LOAD_FAST                       0: self
                        434     LOAD_ATTR                       16: tarinfo
                        436     LOAD_METHOD                     35: fromtarfile
                        438     LOAD_FAST                       0: self
                        440     CALL_METHOD                     1
                        442     STORE_FAST                      5: tarinfo
                        444     LOAD_FAST                       0: self
                        446     LOAD_ATTR                       27: members
                        448     LOAD_METHOD                     36: append
                        450     LOAD_FAST                       5: tarinfo
                        452     CALL_METHOD                     1
                        454     POP_TOP                         
                        456     POP_BLOCK                       
                        458     JUMP_FORWARD                    35 (to 530)
                        460     DUP_TOP                         
                        462     LOAD_GLOBAL                     37: EOFHeaderError
                        464     JUMP_IF_NOT_EXC_MATCH           245 (to 490)
                        466     POP_TOP                         
                        468     POP_TOP                         
                        470     POP_TOP                         
                        472     LOAD_FAST                       0: self
                        474     LOAD_ATTR                       14: fileobj
                        476     LOAD_METHOD                     34: seek
                        478     LOAD_FAST                       0: self
                        480     LOAD_ATTR                       30: offset
                        482     CALL_METHOD                     1
                        484     POP_TOP                         
                        486     POP_EXCEPT                      
                        488     JUMP_FORWARD                    21 (to 532)
                        490     DUP_TOP                         
                        492     LOAD_GLOBAL                     38: HeaderError
                        494     JUMP_IF_NOT_EXC_MATCH           264 (to 528)
                        498     POP_TOP                         
                        500     STORE_FAST                      15: e
                        502     POP_TOP                         
                        504     SETUP_FINALLY                   7 (to 520)
                        506     LOAD_GLOBAL                     39: ReadError
                        508     LOAD_GLOBAL                     11: str
                        510     LOAD_FAST                       15: e
                        512     CALL_FUNCTION                   1
                        514     CALL_FUNCTION                   1
                        516     LOAD_CONST                      10: None
                        518     RAISE_VARARGS                   2
                        520     LOAD_CONST                      10: None
                        522     STORE_FAST                      15: e
                        524     DELETE_FAST                     15: e
                        526     RERAISE                         1
                        528     RERAISE                         0
                        530     JUMP_ABSOLUTE                   208 (to 416)
                        532     LOAD_FAST                       0: self
                        534     LOAD_ATTR                       1: mode
                        536     LOAD_CONST                      15: ('a', 'w', 'x')
                        538     CONTAINS_OP                     0 (in)
                        540     POP_JUMP_IF_FALSE               306 (to 612)
                        544     LOAD_CONST                      13: True
                        546     LOAD_FAST                       0: self
                        548     STORE_ATTR                      28: _loaded
                        550     LOAD_FAST                       0: self
                        552     LOAD_ATTR                       22: pax_headers
                        554     POP_JUMP_IF_FALSE               309 (to 618)
                        558     LOAD_FAST                       0: self
                        560     LOAD_ATTR                       16: tarinfo
                        562     LOAD_METHOD                     40: create_pax_global_header
                        564     LOAD_FAST                       0: self
                        566     LOAD_ATTR                       22: pax_headers
                        568     LOAD_METHOD                     41: copy
                        570     CALL_METHOD                     0
                        572     CALL_METHOD                     1
                        574     STORE_FAST                      16: buf
                        576     LOAD_FAST                       0: self
                        578     LOAD_ATTR                       14: fileobj
                        580     LOAD_METHOD                     42: write
                        582     LOAD_FAST                       16: buf
                        584     CALL_METHOD                     1
                        586     POP_TOP                         
                        588     LOAD_FAST                       0: self
                        590     DUP_TOP                         
                        592     LOAD_ATTR                       30: offset
                        594     LOAD_GLOBAL                     43: len
                        596     LOAD_FAST                       16: buf
                        598     CALL_FUNCTION                   1
                        600     INPLACE_ADD                     
                        602     ROT_TWO                         
                        604     STORE_ATTR                      30: offset
                        606     POP_BLOCK                       
                        608     LOAD_CONST                      10: None
                        610     RETURN_VALUE                    
                        612     POP_BLOCK                       
                        614     LOAD_CONST                      10: None
                        616     RETURN_VALUE                    
                        618     POP_BLOCK                       
                        620     LOAD_CONST                      10: None
                        622     RETURN_VALUE                    
                        624     POP_TOP                         
                        626     POP_TOP                         
                        628     POP_TOP                         
                        630     LOAD_FAST                       0: self
                        632     LOAD_ATTR                       7: _extfileobj
                        634     POP_JUMP_IF_TRUE                324 (to 648)
                        638     LOAD_FAST                       0: self
                        640     LOAD_ATTR                       14: fileobj
                        642     LOAD_METHOD                     44: close
                        644     CALL_METHOD                     0
                        646     POP_TOP                         
                        648     LOAD_CONST                      13: True
                        650     LOAD_FAST                       0: self
                        652     STORE_ATTR                      26: closed
                        654     RAISE_VARARGS                   0
                'TarFile.__init__'
                [Code]
                    File Name: tarfile.py
                    Object Name: open
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 16
                    Stack Size: 11
                    Flags: 0x0000000B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS)
                    [Names]
                        'ValueError'
                        'sorted'
                        'OPEN_METH'
                        'getattr'
                        'tell'
                        'ReadError'
                        'CompressionError'
                        'append'
                        'seek'
                        'join'
                        'split'
                        '_Stream'
                        'close'
                        '_extfileobj'
                        'taropen'
                    [Var Names]
                        'cls'
                        'name'
                        'mode'
                        'fileobj'
                        'bufsize'
                        'kwargs'
                        'not_compressed'
                        'error_msgs'
                        'comptype'
                        'func'
                        'saved_pos'
                        'e'
                        'error_msgs_summary'
                        'filemode'
                        'stream'
                        't'
                    [Free Vars]
                    [Cell Vars]
                        'cls'
                    [Constants]
                        "Open a tar archive for reading, writing or appending. Return\n           an appropriate TarFile class.\n\n           mode:\n           'r' or 'r:*' open for reading with transparent compression\n           'r:'         open for reading exclusively uncompressed\n           'r:gz'       open for reading with gzip compression\n           'r:bz2'      open for reading with bzip2 compression\n           'r:xz'       open for reading with lzma compression\n           'a' or 'a:'  open for appending, creating the file if necessary\n           'w' or 'w:'  open for writing without compression\n           'w:gz'       open for writing with gzip compression\n           'w:bz2'      open for writing with bzip2 compression\n           'w:xz'       open for writing with lzma compression\n\n           'x' or 'x:'  create a tarfile exclusively without compression, raise\n                        an exception if the file is already created\n           'x:gz'       create a gzip compressed tarfile, raise an exception\n                        if the file is already created\n           'x:bz2'      create a bzip2 compressed tarfile, raise an exception\n                        if the file is already created\n           'x:xz'       create an lzma compressed tarfile, raise an exception\n                        if the file is already created\n\n           'r|*'        open a stream of tar blocks with transparent compression\n           'r|'         open an uncompressed stream of tar blocks for reading\n           'r|gz'       open a gzip compressed stream of tar blocks\n           'r|bz2'      open a bzip2 compressed stream of tar blocks\n           'r|xz'       open an lzma compressed stream of tar blocks\n           'w|'         open an uncompressed stream for writing\n           'w|gz'       open a gzip compressed stream for writing\n           'w|bz2'      open a bzip2 compressed stream for writing\n           'w|xz'       open an lzma compressed stream for writing\n        "
                        'nothing to open'
                        (
                            'r'
                            'r:*'
                        )
                        [Code]
                            File Name: tarfile.py
                            Object Name: not_compressed
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 1
                            Stack Size: 2
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'OPEN_METH'
                            [Var Names]
                                'comptype'
                            [Free Vars]
                                'cls'
                            [Cell Vars]
                            [Constants]
                                None
                                'taropen'
                            [Disassembly]
                                0       LOAD_DEREF                      0: cls
                                2       LOAD_ATTR                       0: OPEN_METH
                                4       LOAD_FAST                       0: comptype
                                6       BINARY_SUBSCR                   
                                8       LOAD_CONST                      1: 'taropen'
                                10      COMPARE_OP                      2 (==)
                                12      RETURN_VALUE                    
                        'TarFile.open.<locals>.not_compressed'
                        (
                            'key'
                        )
                        None
                        'r'
                        '- method '
                        ': '
                        '\n'
                        'file could not be opened successfully:\n'
                        ':'
                        1
                        'tar'
                        'unknown compression type %r'
                        '|'
                        (
                            'r'
                            'w'
                        )
                        "mode must be 'r' or 'w'"
                        False
                        (
                            'a'
                            'w'
                            'x'
                        )
                        'undiscernible mode'
                    [Disassembly]
                        0       LOAD_FAST                       1: name
                        2       POP_JUMP_IF_TRUE                8 (to 16)
                        4       LOAD_FAST                       3: fileobj
                        6       POP_JUMP_IF_TRUE                8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      1: 'nothing to open'
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       2: mode
                        18      LOAD_CONST                      2: ('r', 'r:*')
                        20      CONTAINS_OP                     0 (in)
                        22      POP_JUMP_IF_FALSE               111 (to 222)
                        24      LOAD_CLOSURE                    0: cls
                        26      BUILD_TUPLE                     1
                        28      LOAD_CONST                      3: <CODE> not_compressed
                        30      LOAD_CONST                      4: 'TarFile.open.<locals>.not_compressed'
                        32      MAKE_FUNCTION                   8
                        34      STORE_FAST                      6: not_compressed
                        36      BUILD_LIST                      0
                        38      STORE_FAST                      7: error_msgs
                        40      LOAD_GLOBAL                     1: sorted
                        42      LOAD_DEREF                      0: cls
                        44      LOAD_ATTR                       2: OPEN_METH
                        46      LOAD_FAST                       6: not_compressed
                        48      LOAD_CONST                      5: ('key',)
                        50      CALL_FUNCTION_KW                2
                        52      GET_ITER                        
                        54      FOR_ITER                        71 (to 198)
                        56      STORE_FAST                      8: comptype
                        58      LOAD_GLOBAL                     3: getattr
                        60      LOAD_DEREF                      0: cls
                        62      LOAD_DEREF                      0: cls
                        64      LOAD_ATTR                       2: OPEN_METH
                        66      LOAD_FAST                       8: comptype
                        68      BINARY_SUBSCR                   
                        70      CALL_FUNCTION                   2
                        72      STORE_FAST                      9: func
                        74      LOAD_FAST                       3: fileobj
                        76      LOAD_CONST                      6: None
                        78      IS_OP                           1 (is not)
                        80      POP_JUMP_IF_FALSE               45 (to 90)
                        82      LOAD_FAST                       3: fileobj
                        84      LOAD_METHOD                     4: tell
                        86      CALL_METHOD                     0
                        88      STORE_FAST                      10: saved_pos
                        90      SETUP_FINALLY                   13 (to 118)
                        92      LOAD_FAST                       9: func
                        94      LOAD_FAST                       1: name
                        96      LOAD_CONST                      7: 'r'
                        98      LOAD_FAST                       3: fileobj
                        100     BUILD_TUPLE                     3
                        102     BUILD_MAP                       0
                        104     LOAD_FAST                       5: kwargs
                        106     DICT_MERGE                      1
                        108     CALL_FUNCTION_EX                1
                        110     POP_BLOCK                       
                        112     ROT_TWO                         
                        114     POP_TOP                         
                        116     RETURN_VALUE                    
                        118     DUP_TOP                         
                        120     LOAD_GLOBAL                     5: ReadError
                        122     LOAD_GLOBAL                     6: CompressionError
                        124     BUILD_TUPLE                     2
                        126     JUMP_IF_NOT_EXC_MATCH           98 (to 196)
                        128     POP_TOP                         
                        130     STORE_FAST                      11: e
                        132     POP_TOP                         
                        134     SETUP_FINALLY                   26 (to 188)
                        136     LOAD_FAST                       7: error_msgs
                        138     LOAD_METHOD                     7: append
                        140     LOAD_CONST                      8: '- method '
                        142     LOAD_FAST                       8: comptype
                        144     FORMAT_VALUE                    0 (FVC_NONE)
                        146     LOAD_CONST                      9: ': '
                        148     LOAD_FAST                       11: e
                        150     FORMAT_VALUE                    2 (FVC_REPR)
                        152     BUILD_STRING                    4
                        154     CALL_METHOD                     1
                        156     POP_TOP                         
                        158     LOAD_FAST                       3: fileobj
                        160     LOAD_CONST                      6: None
                        162     IS_OP                           1 (is not)
                        164     POP_JUMP_IF_FALSE               88 (to 176)
                        166     LOAD_FAST                       3: fileobj
                        168     LOAD_METHOD                     8: seek
                        170     LOAD_FAST                       10: saved_pos
                        172     CALL_METHOD                     1
                        174     POP_TOP                         
                        176     POP_BLOCK                       
                        178     POP_EXCEPT                      
                        180     LOAD_CONST                      6: None
                        182     STORE_FAST                      11: e
                        184     DELETE_FAST                     11: e
                        186     JUMP_ABSOLUTE                   27 (to 54)
                        188     LOAD_CONST                      6: None
                        190     STORE_FAST                      11: e
                        192     DELETE_FAST                     11: e
                        194     RERAISE                         1
                        196     RERAISE                         0
                        198     LOAD_CONST                      10: '\n'
                        200     LOAD_METHOD                     9: join
                        202     LOAD_FAST                       7: error_msgs
                        204     CALL_METHOD                     1
                        206     STORE_FAST                      12: error_msgs_summary
                        208     LOAD_GLOBAL                     5: ReadError
                        210     LOAD_CONST                      11: 'file could not be opened successfully:\n'
                        212     LOAD_FAST                       12: error_msgs_summary
                        214     FORMAT_VALUE                    0 (FVC_NONE)
                        216     BUILD_STRING                    2
                        218     CALL_FUNCTION                   1
                        220     RAISE_VARARGS                   1
                        222     LOAD_CONST                      12: ':'
                        224     LOAD_FAST                       2: mode
                        226     CONTAINS_OP                     0 (in)
                        228     POP_JUMP_IF_FALSE               161 (to 322)
                        230     LOAD_FAST                       2: mode
                        232     LOAD_METHOD                     10: split
                        234     LOAD_CONST                      12: ':'
                        236     LOAD_CONST                      13: 1
                        238     CALL_METHOD                     2
                        240     UNPACK_SEQUENCE                 2
                        242     STORE_FAST                      13: filemode
                        244     STORE_FAST                      8: comptype
                        246     LOAD_FAST                       13: filemode
                        248     JUMP_IF_TRUE_OR_POP             126 (to 252)
                        250     LOAD_CONST                      7: 'r'
                        252     STORE_FAST                      13: filemode
                        254     LOAD_FAST                       8: comptype
                        256     JUMP_IF_TRUE_OR_POP             130 (to 260)
                        258     LOAD_CONST                      14: 'tar'
                        260     STORE_FAST                      8: comptype
                        262     LOAD_FAST                       8: comptype
                        264     LOAD_DEREF                      0: cls
                        266     LOAD_ATTR                       2: OPEN_METH
                        268     CONTAINS_OP                     0 (in)
                        270     POP_JUMP_IF_FALSE               145 (to 290)
                        272     LOAD_GLOBAL                     3: getattr
                        274     LOAD_DEREF                      0: cls
                        276     LOAD_DEREF                      0: cls
                        278     LOAD_ATTR                       2: OPEN_METH
                        280     LOAD_FAST                       8: comptype
                        282     BINARY_SUBSCR                   
                        284     CALL_FUNCTION                   2
                        286     STORE_FAST                      9: func
                        288     JUMP_FORWARD                    6 (to 302)
                        290     LOAD_GLOBAL                     6: CompressionError
                        292     LOAD_CONST                      15: 'unknown compression type %r'
                        294     LOAD_FAST                       8: comptype
                        296     BINARY_MODULO                   
                        298     CALL_FUNCTION                   1
                        300     RAISE_VARARGS                   1
                        302     LOAD_FAST                       9: func
                        304     LOAD_FAST                       1: name
                        306     LOAD_FAST                       13: filemode
                        308     LOAD_FAST                       3: fileobj
                        310     BUILD_TUPLE                     3
                        312     BUILD_MAP                       0
                        314     LOAD_FAST                       5: kwargs
                        316     DICT_MERGE                      1
                        318     CALL_FUNCTION_EX                1
                        320     RETURN_VALUE                    
                        322     LOAD_CONST                      16: '|'
                        324     LOAD_FAST                       2: mode
                        326     CONTAINS_OP                     0 (in)
                        328     POP_JUMP_IF_FALSE               223 (to 446)
                        330     LOAD_FAST                       2: mode
                        332     LOAD_METHOD                     10: split
                        334     LOAD_CONST                      16: '|'
                        336     LOAD_CONST                      13: 1
                        338     CALL_METHOD                     2
                        340     UNPACK_SEQUENCE                 2
                        342     STORE_FAST                      13: filemode
                        344     STORE_FAST                      8: comptype
                        346     LOAD_FAST                       13: filemode
                        348     JUMP_IF_TRUE_OR_POP             176 (to 352)
                        350     LOAD_CONST                      7: 'r'
                        352     STORE_FAST                      13: filemode
                        354     LOAD_FAST                       8: comptype
                        356     JUMP_IF_TRUE_OR_POP             180 (to 360)
                        358     LOAD_CONST                      14: 'tar'
                        360     STORE_FAST                      8: comptype
                        362     LOAD_FAST                       13: filemode
                        364     LOAD_CONST                      17: ('r', 'w')
                        366     CONTAINS_OP                     1 (not in)
                        368     POP_JUMP_IF_FALSE               189 (to 378)
                        370     LOAD_GLOBAL                     0: ValueError
                        372     LOAD_CONST                      18: "mode must be 'r' or 'w'"
                        374     CALL_FUNCTION                   1
                        376     RAISE_VARARGS                   1
                        378     LOAD_GLOBAL                     11: _Stream
                        380     LOAD_FAST                       1: name
                        382     LOAD_FAST                       13: filemode
                        384     LOAD_FAST                       8: comptype
                        386     LOAD_FAST                       3: fileobj
                        388     LOAD_FAST                       4: bufsize
                        390     CALL_FUNCTION                   5
                        392     STORE_FAST                      14: stream
                        394     SETUP_FINALLY                   12 (to 420)
                        396     LOAD_DEREF                      0: cls
                        398     LOAD_FAST                       1: name
                        400     LOAD_FAST                       13: filemode
                        402     LOAD_FAST                       14: stream
                        404     BUILD_TUPLE                     3
                        406     BUILD_MAP                       0
                        408     LOAD_FAST                       5: kwargs
                        410     DICT_MERGE                      1
                        412     CALL_FUNCTION_EX                1
                        414     STORE_FAST                      15: t
                        416     POP_BLOCK                       
                        418     JUMP_FORWARD                    8 (to 436)
                        420     POP_TOP                         
                        422     POP_TOP                         
                        424     POP_TOP                         
                        426     LOAD_FAST                       14: stream
                        428     LOAD_METHOD                     12: close
                        430     CALL_METHOD                     0
                        432     POP_TOP                         
                        434     RAISE_VARARGS                   0
                        436     LOAD_CONST                      19: False
                        438     LOAD_FAST                       15: t
                        440     STORE_ATTR                      13: _extfileobj
                        442     LOAD_FAST                       15: t
                        444     RETURN_VALUE                    
                        446     LOAD_FAST                       2: mode
                        448     LOAD_CONST                      20: ('a', 'w', 'x')
                        450     CONTAINS_OP                     0 (in)
                        452     POP_JUMP_IF_FALSE               238 (to 476)
                        454     LOAD_DEREF                      0: cls
                        456     LOAD_ATTR                       14: taropen
                        458     LOAD_FAST                       1: name
                        460     LOAD_FAST                       2: mode
                        462     LOAD_FAST                       3: fileobj
                        464     BUILD_TUPLE                     3
                        466     BUILD_MAP                       0
                        468     LOAD_FAST                       5: kwargs
                        470     DICT_MERGE                      1
                        472     CALL_FUNCTION_EX                1
                        474     RETURN_VALUE                    
                        476     LOAD_GLOBAL                     0: ValueError
                        478     LOAD_CONST                      21: 'undiscernible mode'
                        480     CALL_FUNCTION                   1
                        482     RAISE_VARARGS                   1
                'TarFile.open'
                [Code]
                    File Name: tarfile.py
                    Object Name: taropen
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'ValueError'
                    [Var Names]
                        'cls'
                        'name'
                        'mode'
                        'fileobj'
                        'kwargs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Open uncompressed tar archive name for reading or writing.\n        '
                        (
                            'r'
                            'a'
                            'w'
                            'x'
                        )
                        "mode must be 'r', 'a', 'w' or 'x'"
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: ('r', 'a', 'w', 'x')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: "mode must be 'r', 'a', 'w' or 'x'"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       0: cls
                        18      LOAD_FAST                       1: name
                        20      LOAD_FAST                       2: mode
                        22      LOAD_FAST                       3: fileobj
                        24      BUILD_TUPLE                     3
                        26      BUILD_MAP                       0
                        28      LOAD_FAST                       4: kwargs
                        30      DICT_MERGE                      1
                        32      CALL_FUNCTION_EX                1
                        34      RETURN_VALUE                    
                'TarFile.taropen'
                9
                [Code]
                    File Name: tarfile.py
                    Object Name: gzopen
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 10
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        'gzip'
                        'GzipFile'
                        'ImportError'
                        'CompressionError'
                        'OSError'
                        'ReadError'
                        'taropen'
                        'close'
                        '_extfileobj'
                    [Var Names]
                        'cls'
                        'name'
                        'mode'
                        'fileobj'
                        'compresslevel'
                        'kwargs'
                        'GzipFile'
                        'e'
                        't'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Open gzip compressed tar archive name for reading or writing.\n           Appending is not allowed.\n        '
                        (
                            'r'
                            'w'
                            'x'
                        )
                        "mode must be 'r', 'w' or 'x'"
                        0
                        (
                            'GzipFile'
                        )
                        'gzip module is not available'
                        None
                        'b'
                        'r'
                        'not a gzip file'
                        False
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: ('r', 'w', 'x')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: "mode must be 'r', 'w' or 'x'"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      SETUP_FINALLY                   8 (to 34)
                        18      LOAD_CONST                      3: 0
                        20      LOAD_CONST                      4: ('GzipFile',)
                        22      IMPORT_NAME                     1: gzip
                        24      IMPORT_FROM                     2: GzipFile
                        26      STORE_FAST                      6: GzipFile
                        28      POP_TOP                         
                        30      POP_BLOCK                       
                        32      JUMP_FORWARD                    12 (to 58)
                        34      DUP_TOP                         
                        36      LOAD_GLOBAL                     3: ImportError
                        38      JUMP_IF_NOT_EXC_MATCH           28 (to 56)
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      LOAD_GLOBAL                     4: CompressionError
                        48      LOAD_CONST                      5: 'gzip module is not available'
                        50      CALL_FUNCTION                   1
                        52      LOAD_CONST                      6: None
                        54      RAISE_VARARGS                   2
                        56      RERAISE                         0
                        58      SETUP_FINALLY                   11 (to 82)
                        60      LOAD_FAST                       6: GzipFile
                        62      LOAD_FAST                       1: name
                        64      LOAD_FAST                       2: mode
                        66      LOAD_CONST                      7: 'b'
                        68      BINARY_ADD                      
                        70      LOAD_FAST                       4: compresslevel
                        72      LOAD_FAST                       3: fileobj
                        74      CALL_FUNCTION                   4
                        76      STORE_FAST                      3: fileobj
                        78      POP_BLOCK                       
                        80      JUMP_FORWARD                    26 (to 134)
                        82      DUP_TOP                         
                        84      LOAD_GLOBAL                     5: OSError
                        86      JUMP_IF_NOT_EXC_MATCH           66 (to 132)
                        88      POP_TOP                         
                        90      STORE_FAST                      7: e
                        92      POP_TOP                         
                        94      SETUP_FINALLY                   14 (to 124)
                        96      LOAD_FAST                       3: fileobj
                        98      LOAD_CONST                      6: None
                        100     IS_OP                           1 (is not)
                        102     POP_JUMP_IF_FALSE               61 (to 122)
                        104     LOAD_FAST                       2: mode
                        106     LOAD_CONST                      8: 'r'
                        108     COMPARE_OP                      2 (==)
                        110     POP_JUMP_IF_FALSE               61 (to 122)
                        112     LOAD_GLOBAL                     6: ReadError
                        114     LOAD_CONST                      9: 'not a gzip file'
                        116     CALL_FUNCTION                   1
                        118     LOAD_FAST                       7: e
                        120     RAISE_VARARGS                   2
                        122     RAISE_VARARGS                   0
                        124     LOAD_CONST                      6: None
                        126     STORE_FAST                      7: e
                        128     DELETE_FAST                     7: e
                        130     RERAISE                         1
                        132     RERAISE                         0
                        134     SETUP_FINALLY                   13 (to 162)
                        136     LOAD_FAST                       0: cls
                        138     LOAD_ATTR                       7: taropen
                        140     LOAD_FAST                       1: name
                        142     LOAD_FAST                       2: mode
                        144     LOAD_FAST                       3: fileobj
                        146     BUILD_TUPLE                     3
                        148     BUILD_MAP                       0
                        150     LOAD_FAST                       5: kwargs
                        152     DICT_MERGE                      1
                        154     CALL_FUNCTION_EX                1
                        156     STORE_FAST                      8: t
                        158     POP_BLOCK                       
                        160     JUMP_FORWARD                    33 (to 228)
                        162     DUP_TOP                         
                        164     LOAD_GLOBAL                     5: OSError
                        166     JUMP_IF_NOT_EXC_MATCH           106 (to 212)
                        168     POP_TOP                         
                        170     STORE_FAST                      7: e
                        172     POP_TOP                         
                        174     SETUP_FINALLY                   14 (to 204)
                        176     LOAD_FAST                       3: fileobj
                        178     LOAD_METHOD                     8: close
                        180     CALL_METHOD                     0
                        182     POP_TOP                         
                        184     LOAD_FAST                       2: mode
                        186     LOAD_CONST                      8: 'r'
                        188     COMPARE_OP                      2 (==)
                        190     POP_JUMP_IF_FALSE               101 (to 202)
                        192     LOAD_GLOBAL                     6: ReadError
                        194     LOAD_CONST                      9: 'not a gzip file'
                        196     CALL_FUNCTION                   1
                        198     LOAD_FAST                       7: e
                        200     RAISE_VARARGS                   2
                        202     RAISE_VARARGS                   0
                        204     LOAD_CONST                      6: None
                        206     STORE_FAST                      7: e
                        208     DELETE_FAST                     7: e
                        210     RERAISE                         1
                        212     POP_TOP                         
                        214     POP_TOP                         
                        216     POP_TOP                         
                        218     LOAD_FAST                       3: fileobj
                        220     LOAD_METHOD                     8: close
                        222     CALL_METHOD                     0
                        224     POP_TOP                         
                        226     RAISE_VARARGS                   0
                        228     LOAD_CONST                      10: False
                        230     LOAD_FAST                       8: t
                        232     STORE_ATTR                      9: _extfileobj
                        234     LOAD_FAST                       8: t
                        236     RETURN_VALUE                    
                'TarFile.gzopen'
                [Code]
                    File Name: tarfile.py
                    Object Name: bz2open
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 10
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        'bz2'
                        'BZ2File'
                        'ImportError'
                        'CompressionError'
                        'taropen'
                        'OSError'
                        'EOFError'
                        'close'
                        'ReadError'
                        '_extfileobj'
                    [Var Names]
                        'cls'
                        'name'
                        'mode'
                        'fileobj'
                        'compresslevel'
                        'kwargs'
                        'BZ2File'
                        't'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Open bzip2 compressed tar archive name for reading or writing.\n           Appending is not allowed.\n        '
                        (
                            'r'
                            'w'
                            'x'
                        )
                        "mode must be 'r', 'w' or 'x'"
                        0
                        (
                            'BZ2File'
                        )
                        'bz2 module is not available'
                        None
                        (
                            'compresslevel'
                        )
                        'r'
                        'not a bzip2 file'
                        False
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: ('r', 'w', 'x')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: "mode must be 'r', 'w' or 'x'"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      SETUP_FINALLY                   8 (to 34)
                        18      LOAD_CONST                      3: 0
                        20      LOAD_CONST                      4: ('BZ2File',)
                        22      IMPORT_NAME                     1: bz2
                        24      IMPORT_FROM                     2: BZ2File
                        26      STORE_FAST                      6: BZ2File
                        28      POP_TOP                         
                        30      POP_BLOCK                       
                        32      JUMP_FORWARD                    12 (to 58)
                        34      DUP_TOP                         
                        36      LOAD_GLOBAL                     3: ImportError
                        38      JUMP_IF_NOT_EXC_MATCH           28 (to 56)
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      LOAD_GLOBAL                     4: CompressionError
                        48      LOAD_CONST                      5: 'bz2 module is not available'
                        50      CALL_FUNCTION                   1
                        52      LOAD_CONST                      6: None
                        54      RAISE_VARARGS                   2
                        56      RERAISE                         0
                        58      LOAD_FAST                       6: BZ2File
                        60      LOAD_FAST                       3: fileobj
                        62      JUMP_IF_TRUE_OR_POP             33 (to 66)
                        64      LOAD_FAST                       1: name
                        66      LOAD_FAST                       2: mode
                        68      LOAD_FAST                       4: compresslevel
                        70      LOAD_CONST                      7: ('compresslevel',)
                        72      CALL_FUNCTION_KW                3
                        74      STORE_FAST                      3: fileobj
                        76      SETUP_FINALLY                   13 (to 104)
                        78      LOAD_FAST                       0: cls
                        80      LOAD_ATTR                       5: taropen
                        82      LOAD_FAST                       1: name
                        84      LOAD_FAST                       2: mode
                        86      LOAD_FAST                       3: fileobj
                        88      BUILD_TUPLE                     3
                        90      BUILD_MAP                       0
                        92      LOAD_FAST                       5: kwargs
                        94      DICT_MERGE                      1
                        96      CALL_FUNCTION_EX                1
                        98      STORE_FAST                      7: t
                        100     POP_BLOCK                       
                        102     JUMP_FORWARD                    35 (to 174)
                        104     DUP_TOP                         
                        106     LOAD_GLOBAL                     6: OSError
                        108     LOAD_GLOBAL                     7: EOFError
                        110     BUILD_TUPLE                     2
                        112     JUMP_IF_NOT_EXC_MATCH           79 (to 158)
                        114     POP_TOP                         
                        116     STORE_FAST                      8: e
                        118     POP_TOP                         
                        120     SETUP_FINALLY                   14 (to 150)
                        122     LOAD_FAST                       3: fileobj
                        124     LOAD_METHOD                     8: close
                        126     CALL_METHOD                     0
                        128     POP_TOP                         
                        130     LOAD_FAST                       2: mode
                        132     LOAD_CONST                      8: 'r'
                        134     COMPARE_OP                      2 (==)
                        136     POP_JUMP_IF_FALSE               74 (to 148)
                        138     LOAD_GLOBAL                     9: ReadError
                        140     LOAD_CONST                      9: 'not a bzip2 file'
                        142     CALL_FUNCTION                   1
                        144     LOAD_FAST                       8: e
                        146     RAISE_VARARGS                   2
                        148     RAISE_VARARGS                   0
                        150     LOAD_CONST                      6: None
                        152     STORE_FAST                      8: e
                        154     DELETE_FAST                     8: e
                        156     RERAISE                         1
                        158     POP_TOP                         
                        160     POP_TOP                         
                        162     POP_TOP                         
                        164     LOAD_FAST                       3: fileobj
                        166     LOAD_METHOD                     8: close
                        168     CALL_METHOD                     0
                        170     POP_TOP                         
                        172     RAISE_VARARGS                   0
                        174     LOAD_CONST                      10: False
                        176     LOAD_FAST                       7: t
                        178     STORE_ATTR                      10: _extfileobj
                        180     LOAD_FAST                       7: t
                        182     RETURN_VALUE                    
                'TarFile.bz2open'
                [Code]
                    File Name: tarfile.py
                    Object Name: xzopen
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 10
                    Stack Size: 10
                    Flags: 0x0000004B (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        'lzma'
                        'LZMAFile'
                        'LZMAError'
                        'ImportError'
                        'CompressionError'
                        'taropen'
                        'EOFError'
                        'close'
                        'ReadError'
                        '_extfileobj'
                    [Var Names]
                        'cls'
                        'name'
                        'mode'
                        'fileobj'
                        'preset'
                        'kwargs'
                        'LZMAFile'
                        'LZMAError'
                        't'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Open lzma compressed tar archive name for reading or writing.\n           Appending is not allowed.\n        '
                        (
                            'r'
                            'w'
                            'x'
                        )
                        "mode must be 'r', 'w' or 'x'"
                        0
                        (
                            'LZMAFile'
                            'LZMAError'
                        )
                        'lzma module is not available'
                        None
                        (
                            'preset'
                        )
                        'r'
                        'not an lzma file'
                        False
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: ('r', 'w', 'x')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: "mode must be 'r', 'w' or 'x'"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      SETUP_FINALLY                   10 (to 38)
                        18      LOAD_CONST                      3: 0
                        20      LOAD_CONST                      4: ('LZMAFile', 'LZMAError')
                        22      IMPORT_NAME                     1: lzma
                        24      IMPORT_FROM                     2: LZMAFile
                        26      STORE_FAST                      6: LZMAFile
                        28      IMPORT_FROM                     3: LZMAError
                        30      STORE_FAST                      7: LZMAError
                        32      POP_TOP                         
                        34      POP_BLOCK                       
                        36      JUMP_FORWARD                    12 (to 62)
                        38      DUP_TOP                         
                        40      LOAD_GLOBAL                     4: ImportError
                        42      JUMP_IF_NOT_EXC_MATCH           30 (to 60)
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_TOP                         
                        50      LOAD_GLOBAL                     5: CompressionError
                        52      LOAD_CONST                      5: 'lzma module is not available'
                        54      CALL_FUNCTION                   1
                        56      LOAD_CONST                      6: None
                        58      RAISE_VARARGS                   2
                        60      RERAISE                         0
                        62      LOAD_FAST                       6: LZMAFile
                        64      LOAD_FAST                       3: fileobj
                        66      JUMP_IF_TRUE_OR_POP             35 (to 70)
                        68      LOAD_FAST                       1: name
                        70      LOAD_FAST                       2: mode
                        72      LOAD_FAST                       4: preset
                        74      LOAD_CONST                      7: ('preset',)
                        76      CALL_FUNCTION_KW                3
                        78      STORE_FAST                      3: fileobj
                        80      SETUP_FINALLY                   13 (to 108)
                        82      LOAD_FAST                       0: cls
                        84      LOAD_ATTR                       6: taropen
                        86      LOAD_FAST                       1: name
                        88      LOAD_FAST                       2: mode
                        90      LOAD_FAST                       3: fileobj
                        92      BUILD_TUPLE                     3
                        94      BUILD_MAP                       0
                        96      LOAD_FAST                       5: kwargs
                        98      DICT_MERGE                      1
                        100     CALL_FUNCTION_EX                1
                        102     STORE_FAST                      8: t
                        104     POP_BLOCK                       
                        106     JUMP_FORWARD                    35 (to 178)
                        108     DUP_TOP                         
                        110     LOAD_FAST                       7: LZMAError
                        112     LOAD_GLOBAL                     7: EOFError
                        114     BUILD_TUPLE                     2
                        116     JUMP_IF_NOT_EXC_MATCH           81 (to 162)
                        118     POP_TOP                         
                        120     STORE_FAST                      9: e
                        122     POP_TOP                         
                        124     SETUP_FINALLY                   14 (to 154)
                        126     LOAD_FAST                       3: fileobj
                        128     LOAD_METHOD                     8: close
                        130     CALL_METHOD                     0
                        132     POP_TOP                         
                        134     LOAD_FAST                       2: mode
                        136     LOAD_CONST                      8: 'r'
                        138     COMPARE_OP                      2 (==)
                        140     POP_JUMP_IF_FALSE               76 (to 152)
                        142     LOAD_GLOBAL                     9: ReadError
                        144     LOAD_CONST                      9: 'not an lzma file'
                        146     CALL_FUNCTION                   1
                        148     LOAD_FAST                       9: e
                        150     RAISE_VARARGS                   2
                        152     RAISE_VARARGS                   0
                        154     LOAD_CONST                      6: None
                        156     STORE_FAST                      9: e
                        158     DELETE_FAST                     9: e
                        160     RERAISE                         1
                        162     POP_TOP                         
                        164     POP_TOP                         
                        166     POP_TOP                         
                        168     LOAD_FAST                       3: fileobj
                        170     LOAD_METHOD                     8: close
                        172     CALL_METHOD                     0
                        174     POP_TOP                         
                        176     RAISE_VARARGS                   0
                        178     LOAD_CONST                      10: False
                        180     LOAD_FAST                       8: t
                        182     STORE_ATTR                      10: _extfileobj
                        184     LOAD_FAST                       8: t
                        186     RETURN_VALUE                    
                'TarFile.xzopen'
                'taropen'
                'gzopen'
                'bz2open'
                'xzopen'
                (
                    'tar'
                    'gz'
                    'bz2'
                    'xz'
                )
                [Code]
                    File Name: tarfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'mode'
                        'fileobj'
                        'write'
                        'NUL'
                        'BLOCKSIZE'
                        'offset'
                        'divmod'
                        'RECORDSIZE'
                        '_extfileobj'
                        'close'
                    [Var Names]
                        'self'
                        'blocks'
                        'remainder'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Close the TarFile. In write-mode, two finishing zero blocks are\n           appended to the archive.\n        '
                        None
                        True
                        (
                            'a'
                            'w'
                            'x'
                        )
                        2
                        0
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               5 (to 10)
                        6       LOAD_CONST                      1: None
                        8       RETURN_VALUE                    
                        10      LOAD_CONST                      2: True
                        12      LOAD_FAST                       0: self
                        14      STORE_ATTR                      0: closed
                        16      SETUP_FINALLY                   59 (to 136)
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       1: mode
                        22      LOAD_CONST                      3: ('a', 'w', 'x')
                        24      CONTAINS_OP                     0 (in)
                        26      POP_JUMP_IF_FALSE               55 (to 110)
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       2: fileobj
                        32      LOAD_METHOD                     3: write
                        34      LOAD_GLOBAL                     4: NUL
                        36      LOAD_GLOBAL                     5: BLOCKSIZE
                        38      LOAD_CONST                      4: 2
                        40      BINARY_MULTIPLY                 
                        42      BINARY_MULTIPLY                 
                        44      CALL_METHOD                     1
                        46      POP_TOP                         
                        48      LOAD_FAST                       0: self
                        50      DUP_TOP                         
                        52      LOAD_ATTR                       6: offset
                        54      LOAD_GLOBAL                     5: BLOCKSIZE
                        56      LOAD_CONST                      4: 2
                        58      BINARY_MULTIPLY                 
                        60      INPLACE_ADD                     
                        62      ROT_TWO                         
                        64      STORE_ATTR                      6: offset
                        66      LOAD_GLOBAL                     7: divmod
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       6: offset
                        72      LOAD_GLOBAL                     8: RECORDSIZE
                        74      CALL_FUNCTION                   2
                        76      UNPACK_SEQUENCE                 2
                        78      STORE_FAST                      1: blocks
                        80      STORE_FAST                      2: remainder
                        82      LOAD_FAST                       2: remainder
                        84      LOAD_CONST                      5: 0
                        86      COMPARE_OP                      4 (>)
                        88      POP_JUMP_IF_FALSE               55 (to 110)
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       2: fileobj
                        94      LOAD_METHOD                     3: write
                        96      LOAD_GLOBAL                     4: NUL
                        98      LOAD_GLOBAL                     8: RECORDSIZE
                        100     LOAD_FAST                       2: remainder
                        102     BINARY_SUBTRACT                 
                        104     BINARY_MULTIPLY                 
                        106     CALL_METHOD                     1
                        108     POP_TOP                         
                        110     POP_BLOCK                       
                        112     LOAD_FAST                       0: self
                        114     LOAD_ATTR                       9: _extfileobj
                        116     POP_JUMP_IF_TRUE                66 (to 132)
                        118     LOAD_FAST                       0: self
                        120     LOAD_ATTR                       2: fileobj
                        122     LOAD_METHOD                     10: close
                        124     CALL_METHOD                     0
                        126     POP_TOP                         
                        128     LOAD_CONST                      1: None
                        130     RETURN_VALUE                    
                        132     LOAD_CONST                      1: None
                        134     RETURN_VALUE                    
                        136     LOAD_FAST                       0: self
                        138     LOAD_ATTR                       9: _extfileobj
                        140     POP_JUMP_IF_TRUE                77 (to 154)
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       2: fileobj
                        146     LOAD_METHOD                     10: close
                        148     CALL_METHOD                     0
                        150     POP_TOP                         
                        152     RERAISE                         0
                        154     RERAISE                         0
                'TarFile.close'
                [Code]
                    File Name: tarfile.py
                    Object Name: getmember
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_getmember'
                        'rstrip'
                        'KeyError'
                    [Var Names]
                        'self'
                        'name'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return a TarInfo object for member `name'. If `name' can not be\n           found in the archive, KeyError is raised. If a member occurs more\n           than once in the archive, its last occurrence is assumed to be the\n           most up-to-date version.\n        "
                        '/'
                        None
                        'filename %r not found'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _getmember
                        4       LOAD_FAST                       1: name
                        6       LOAD_METHOD                     1: rstrip
                        8       LOAD_CONST                      1: '/'
                        10      CALL_METHOD                     1
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      2: tarinfo
                        16      LOAD_FAST                       2: tarinfo
                        18      LOAD_CONST                      2: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               18 (to 36)
                        24      LOAD_GLOBAL                     2: KeyError
                        26      LOAD_CONST                      3: 'filename %r not found'
                        28      LOAD_FAST                       1: name
                        30      BINARY_MODULO                   
                        32      CALL_FUNCTION                   1
                        34      RAISE_VARARGS                   1
                        36      LOAD_FAST                       2: tarinfo
                        38      RETURN_VALUE                    
                'TarFile.getmember'
                [Code]
                    File Name: tarfile.py
                    Object Name: getmembers
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        '_loaded'
                        '_load'
                        'members'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the members of the archive as a list of TarInfo objects. The\n           list has the same order as the members in the archive.\n        '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: _loaded
                        12      POP_JUMP_IF_TRUE                11 (to 22)
                        14      LOAD_FAST                       0: self
                        16      LOAD_METHOD                     2: _load
                        18      CALL_METHOD                     0
                        20      POP_TOP                         
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: members
                        26      RETURN_VALUE                    
                'TarFile.getmembers'
                [Code]
                    File Name: tarfile.py
                    Object Name: getnames
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'getmembers'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the members of the archive as a list of their names. It has\n           the same order as the list returned by getmembers().\n        '
                        [Code]
                            File Name: tarfile.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'name'
                            [Var Names]
                                '.0'
                                'tarinfo'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        5 (to 16)
                                6       STORE_FAST                      1: tarinfo
                                8       LOAD_FAST                       1: tarinfo
                                10      LOAD_ATTR                       0: name
                                12      LIST_APPEND                     2
                                14      JUMP_ABSOLUTE                   2 (to 4)
                                16      RETURN_VALUE                    
                        'TarFile.getnames.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'TarFile.getnames.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       0: self
                        8       LOAD_METHOD                     0: getmembers
                        10      CALL_METHOD                     0
                        12      GET_ITER                        
                        14      CALL_FUNCTION                   1
                        16      RETURN_VALUE                    
                'TarFile.getnames'
                [Code]
                    File Name: tarfile.py
                    Object Name: gettarinfo
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 11
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'name'
                        'os'
                        'path'
                        'splitdrive'
                        'replace'
                        'sep'
                        'lstrip'
                        'tarinfo'
                        'tarfile'
                        'dereference'
                        'lstat'
                        'stat'
                        'fstat'
                        'fileno'
                        'st_mode'
                        'S_ISREG'
                        'st_ino'
                        'st_dev'
                        'st_nlink'
                        'inodes'
                        'LNKTYPE'
                        'REGTYPE'
                        'S_ISDIR'
                        'DIRTYPE'
                        'S_ISFIFO'
                        'FIFOTYPE'
                        'S_ISLNK'
                        'SYMTYPE'
                        'readlink'
                        'S_ISCHR'
                        'CHRTYPE'
                        'S_ISBLK'
                        'BLKTYPE'
                        'mode'
                        'st_uid'
                        'uid'
                        'st_gid'
                        'gid'
                        'st_size'
                        'size'
                        'st_mtime'
                        'mtime'
                        'type'
                        'linkname'
                        'pwd'
                        'getpwuid'
                        'uname'
                        'KeyError'
                        'grp'
                        'getgrgid'
                        'gname'
                        'hasattr'
                        'major'
                        'st_rdev'
                        'devmajor'
                        'minor'
                        'devminor'
                    [Var Names]
                        'self'
                        'name'
                        'arcname'
                        'fileobj'
                        'drv'
                        'tarinfo'
                        'statres'
                        'linkname'
                        'stmd'
                        'inode'
                        'type'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Create a TarInfo object from the result of os.stat or equivalent\n           on an existing file. The file is either named by `name', or\n           specified as a file object `fileobj' with a file descriptor. If\n           given, `arcname' specifies an alternative name for the file in the\n           archive, otherwise, the name is taken from the 'name' attribute of\n           'fileobj', or the 'name' argument. The name should be a text\n           string.\n        "
                        'awx'
                        None
                        '/'
                        ''
                        1
                        0
                        'major'
                        'minor'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'awx'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_FAST                       3: fileobj
                        12      LOAD_CONST                      2: None
                        14      IS_OP                           1 (is not)
                        16      POP_JUMP_IF_FALSE               12 (to 24)
                        18      LOAD_FAST                       3: fileobj
                        20      LOAD_ATTR                       1: name
                        22      STORE_FAST                      1: name
                        24      LOAD_FAST                       2: arcname
                        26      LOAD_CONST                      2: None
                        28      IS_OP                           0 (is)
                        30      POP_JUMP_IF_FALSE               18 (to 36)
                        32      LOAD_FAST                       1: name
                        34      STORE_FAST                      2: arcname
                        36      LOAD_GLOBAL                     2: os
                        38      LOAD_ATTR                       3: path
                        40      LOAD_METHOD                     4: splitdrive
                        42      LOAD_FAST                       2: arcname
                        44      CALL_METHOD                     1
                        46      UNPACK_SEQUENCE                 2
                        48      STORE_FAST                      4: drv
                        50      STORE_FAST                      2: arcname
                        52      LOAD_FAST                       2: arcname
                        54      LOAD_METHOD                     5: replace
                        56      LOAD_GLOBAL                     2: os
                        58      LOAD_ATTR                       6: sep
                        60      LOAD_CONST                      3: '/'
                        62      CALL_METHOD                     2
                        64      STORE_FAST                      2: arcname
                        66      LOAD_FAST                       2: arcname
                        68      LOAD_METHOD                     7: lstrip
                        70      LOAD_CONST                      3: '/'
                        72      CALL_METHOD                     1
                        74      STORE_FAST                      2: arcname
                        76      LOAD_FAST                       0: self
                        78      LOAD_METHOD                     8: tarinfo
                        80      CALL_METHOD                     0
                        82      STORE_FAST                      5: tarinfo
                        84      LOAD_FAST                       0: self
                        86      LOAD_FAST                       5: tarinfo
                        88      STORE_ATTR                      9: tarfile
                        90      LOAD_FAST                       3: fileobj
                        92      LOAD_CONST                      2: None
                        94      IS_OP                           0 (is)
                        96      POP_JUMP_IF_FALSE               64 (to 128)
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       10: dereference
                        102     POP_JUMP_IF_TRUE                58 (to 116)
                        104     LOAD_GLOBAL                     2: os
                        106     LOAD_METHOD                     11: lstat
                        108     LOAD_FAST                       1: name
                        110     CALL_METHOD                     1
                        112     STORE_FAST                      6: statres
                        114     JUMP_FORWARD                    13 (to 142)
                        116     LOAD_GLOBAL                     2: os
                        118     LOAD_METHOD                     12: stat
                        120     LOAD_FAST                       1: name
                        122     CALL_METHOD                     1
                        124     STORE_FAST                      6: statres
                        126     JUMP_FORWARD                    7 (to 142)
                        128     LOAD_GLOBAL                     2: os
                        130     LOAD_METHOD                     13: fstat
                        132     LOAD_FAST                       3: fileobj
                        134     LOAD_METHOD                     14: fileno
                        136     CALL_METHOD                     0
                        138     CALL_METHOD                     1
                        140     STORE_FAST                      6: statres
                        142     LOAD_CONST                      4: ''
                        144     STORE_FAST                      7: linkname
                        146     LOAD_FAST                       6: statres
                        148     LOAD_ATTR                       15: st_mode
                        150     STORE_FAST                      8: stmd
                        152     LOAD_GLOBAL                     12: stat
                        154     LOAD_METHOD                     16: S_ISREG
                        156     LOAD_FAST                       8: stmd
                        158     CALL_METHOD                     1
                        160     POP_JUMP_IF_FALSE               127 (to 254)
                        162     LOAD_FAST                       6: statres
                        164     LOAD_ATTR                       17: st_ino
                        166     LOAD_FAST                       6: statres
                        168     LOAD_ATTR                       18: st_dev
                        170     BUILD_TUPLE                     2
                        172     STORE_FAST                      9: inode
                        174     LOAD_FAST                       0: self
                        176     LOAD_ATTR                       10: dereference
                        178     POP_JUMP_IF_TRUE                115 (to 230)
                        180     LOAD_FAST                       6: statres
                        182     LOAD_ATTR                       19: st_nlink
                        184     LOAD_CONST                      5: 1
                        186     COMPARE_OP                      4 (>)
                        188     POP_JUMP_IF_FALSE               115 (to 230)
                        190     LOAD_FAST                       9: inode
                        192     LOAD_FAST                       0: self
                        194     LOAD_ATTR                       20: inodes
                        196     CONTAINS_OP                     0 (in)
                        198     POP_JUMP_IF_FALSE               115 (to 230)
                        200     LOAD_FAST                       2: arcname
                        202     LOAD_FAST                       0: self
                        204     LOAD_ATTR                       20: inodes
                        206     LOAD_FAST                       9: inode
                        208     BINARY_SUBSCR                   
                        210     COMPARE_OP                      3 (!=)
                        212     POP_JUMP_IF_FALSE               115 (to 230)
                        214     LOAD_GLOBAL                     21: LNKTYPE
                        216     STORE_FAST                      10: type
                        218     LOAD_FAST                       0: self
                        220     LOAD_ATTR                       20: inodes
                        222     LOAD_FAST                       9: inode
                        224     BINARY_SUBSCR                   
                        226     STORE_FAST                      7: linkname
                        228     JUMP_FORWARD                    59 (to 348)
                        230     LOAD_GLOBAL                     22: REGTYPE
                        232     STORE_FAST                      10: type
                        234     LOAD_FAST                       9: inode
                        236     LOAD_CONST                      6: 0
                        238     BINARY_SUBSCR                   
                        240     POP_JUMP_IF_FALSE               126 (to 252)
                        242     LOAD_FAST                       2: arcname
                        244     LOAD_FAST                       0: self
                        246     LOAD_ATTR                       20: inodes
                        248     LOAD_FAST                       9: inode
                        250     STORE_SUBSCR                    
                        252     JUMP_FORWARD                    47 (to 348)
                        254     LOAD_GLOBAL                     12: stat
                        256     LOAD_METHOD                     23: S_ISDIR
                        258     LOAD_FAST                       8: stmd
                        260     CALL_METHOD                     1
                        262     POP_JUMP_IF_FALSE               135 (to 270)
                        264     LOAD_GLOBAL                     24: DIRTYPE
                        266     STORE_FAST                      10: type
                        268     JUMP_FORWARD                    39 (to 348)
                        270     LOAD_GLOBAL                     12: stat
                        272     LOAD_METHOD                     25: S_ISFIFO
                        274     LOAD_FAST                       8: stmd
                        276     CALL_METHOD                     1
                        278     POP_JUMP_IF_FALSE               143 (to 286)
                        280     LOAD_GLOBAL                     26: FIFOTYPE
                        282     STORE_FAST                      10: type
                        284     JUMP_FORWARD                    31 (to 348)
                        286     LOAD_GLOBAL                     12: stat
                        288     LOAD_METHOD                     27: S_ISLNK
                        290     LOAD_FAST                       8: stmd
                        292     CALL_METHOD                     1
                        294     POP_JUMP_IF_FALSE               156 (to 312)
                        296     LOAD_GLOBAL                     28: SYMTYPE
                        298     STORE_FAST                      10: type
                        300     LOAD_GLOBAL                     2: os
                        302     LOAD_METHOD                     29: readlink
                        304     LOAD_FAST                       1: name
                        306     CALL_METHOD                     1
                        308     STORE_FAST                      7: linkname
                        310     JUMP_FORWARD                    18 (to 348)
                        312     LOAD_GLOBAL                     12: stat
                        314     LOAD_METHOD                     30: S_ISCHR
                        316     LOAD_FAST                       8: stmd
                        318     CALL_METHOD                     1
                        320     POP_JUMP_IF_FALSE               164 (to 328)
                        322     LOAD_GLOBAL                     31: CHRTYPE
                        324     STORE_FAST                      10: type
                        326     JUMP_FORWARD                    10 (to 348)
                        328     LOAD_GLOBAL                     12: stat
                        330     LOAD_METHOD                     32: S_ISBLK
                        332     LOAD_FAST                       8: stmd
                        334     CALL_METHOD                     1
                        336     POP_JUMP_IF_FALSE               172 (to 344)
                        338     LOAD_GLOBAL                     33: BLKTYPE
                        340     STORE_FAST                      10: type
                        342     JUMP_FORWARD                    2 (to 348)
                        344     LOAD_CONST                      2: None
                        346     RETURN_VALUE                    
                        348     LOAD_FAST                       2: arcname
                        350     LOAD_FAST                       5: tarinfo
                        352     STORE_ATTR                      1: name
                        354     LOAD_FAST                       8: stmd
                        356     LOAD_FAST                       5: tarinfo
                        358     STORE_ATTR                      34: mode
                        360     LOAD_FAST                       6: statres
                        362     LOAD_ATTR                       35: st_uid
                        364     LOAD_FAST                       5: tarinfo
                        366     STORE_ATTR                      36: uid
                        368     LOAD_FAST                       6: statres
                        370     LOAD_ATTR                       37: st_gid
                        372     LOAD_FAST                       5: tarinfo
                        374     STORE_ATTR                      38: gid
                        376     LOAD_FAST                       10: type
                        378     LOAD_GLOBAL                     22: REGTYPE
                        380     COMPARE_OP                      2 (==)
                        382     POP_JUMP_IF_FALSE               197 (to 394)
                        384     LOAD_FAST                       6: statres
                        386     LOAD_ATTR                       39: st_size
                        388     LOAD_FAST                       5: tarinfo
                        390     STORE_ATTR                      40: size
                        392     JUMP_FORWARD                    3 (to 400)
                        394     LOAD_CONST                      6: 0
                        396     LOAD_FAST                       5: tarinfo
                        398     STORE_ATTR                      40: size
                        400     LOAD_FAST                       6: statres
                        402     LOAD_ATTR                       41: st_mtime
                        404     LOAD_FAST                       5: tarinfo
                        406     STORE_ATTR                      42: mtime
                        408     LOAD_FAST                       10: type
                        410     LOAD_FAST                       5: tarinfo
                        412     STORE_ATTR                      43: type
                        414     LOAD_FAST                       7: linkname
                        416     LOAD_FAST                       5: tarinfo
                        418     STORE_ATTR                      44: linkname
                        420     LOAD_GLOBAL                     45: pwd
                        422     POP_JUMP_IF_FALSE               233 (to 466)
                        424     SETUP_FINALLY                   11 (to 448)
                        426     LOAD_GLOBAL                     45: pwd
                        428     LOAD_METHOD                     46: getpwuid
                        430     LOAD_FAST                       5: tarinfo
                        432     LOAD_ATTR                       36: uid
                        434     CALL_METHOD                     1
                        436     LOAD_CONST                      6: 0
                        438     BINARY_SUBSCR                   
                        440     LOAD_FAST                       5: tarinfo
                        442     STORE_ATTR                      47: uname
                        444     POP_BLOCK                       
                        446     JUMP_FORWARD                    9 (to 466)
                        448     DUP_TOP                         
                        450     LOAD_GLOBAL                     48: KeyError
                        452     JUMP_IF_NOT_EXC_MATCH           232 (to 464)
                        454     POP_TOP                         
                        456     POP_TOP                         
                        458     POP_TOP                         
                        460     POP_EXCEPT                      
                        462     JUMP_FORWARD                    1 (to 466)
                        464     RERAISE                         0
                        466     LOAD_GLOBAL                     49: grp
                        468     POP_JUMP_IF_FALSE               258 (to 516)
                        472     SETUP_FINALLY                   11 (to 496)
                        474     LOAD_GLOBAL                     49: grp
                        476     LOAD_METHOD                     50: getgrgid
                        478     LOAD_FAST                       5: tarinfo
                        480     LOAD_ATTR                       38: gid
                        482     CALL_METHOD                     1
                        484     LOAD_CONST                      6: 0
                        486     BINARY_SUBSCR                   
                        488     LOAD_FAST                       5: tarinfo
                        490     STORE_ATTR                      51: gname
                        492     POP_BLOCK                       
                        494     JUMP_FORWARD                    10 (to 516)
                        496     DUP_TOP                         
                        498     LOAD_GLOBAL                     48: KeyError
                        500     JUMP_IF_NOT_EXC_MATCH           257 (to 514)
                        504     POP_TOP                         
                        506     POP_TOP                         
                        508     POP_TOP                         
                        510     POP_EXCEPT                      
                        512     JUMP_FORWARD                    1 (to 516)
                        514     RERAISE                         0
                        516     LOAD_FAST                       10: type
                        518     LOAD_GLOBAL                     31: CHRTYPE
                        520     LOAD_GLOBAL                     33: BLKTYPE
                        522     BUILD_TUPLE                     2
                        524     CONTAINS_OP                     0 (in)
                        526     POP_JUMP_IF_FALSE               291 (to 582)
                        530     LOAD_GLOBAL                     52: hasattr
                        532     LOAD_GLOBAL                     2: os
                        534     LOAD_CONST                      7: 'major'
                        536     CALL_FUNCTION                   2
                        538     POP_JUMP_IF_FALSE               291 (to 582)
                        542     LOAD_GLOBAL                     52: hasattr
                        544     LOAD_GLOBAL                     2: os
                        546     LOAD_CONST                      8: 'minor'
                        548     CALL_FUNCTION                   2
                        550     POP_JUMP_IF_FALSE               291 (to 582)
                        554     LOAD_GLOBAL                     2: os
                        556     LOAD_METHOD                     53: major
                        558     LOAD_FAST                       6: statres
                        560     LOAD_ATTR                       54: st_rdev
                        562     CALL_METHOD                     1
                        564     LOAD_FAST                       5: tarinfo
                        566     STORE_ATTR                      55: devmajor
                        568     LOAD_GLOBAL                     2: os
                        570     LOAD_METHOD                     56: minor
                        572     LOAD_FAST                       6: statres
                        574     LOAD_ATTR                       54: st_rdev
                        576     CALL_METHOD                     1
                        578     LOAD_FAST                       5: tarinfo
                        580     STORE_ATTR                      57: devminor
                        582     LOAD_FAST                       5: tarinfo
                        584     RETURN_VALUE                    
                'TarFile.gettarinfo'
                True
                (
                    'members'
                )
                [Code]
                    File Name: tarfile.py
                    Object Name: list
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'mode'
                        '_safe_print'
                        'stat'
                        'filemode'
                        'uname'
                        'uid'
                        'gname'
                        'gid'
                        'ischr'
                        'isblk'
                        'devmajor'
                        'devminor'
                        'size'
                        'mtime'
                        'time'
                        'localtime'
                        'name'
                        'isdir'
                        'issym'
                        'linkname'
                        'islnk'
                        'print'
                    [Var Names]
                        'self'
                        'verbose'
                        'members'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Print a table of contents to sys.stdout. If `verbose' is False, only\n           the names of the members are printed. If it is True, an `ls -l'-like\n           output is produced. `members' is optional and must be a subset of the\n           list returned by getmembers().\n        "
                        None
                        '??????????'
                        '%s/%s'
                        '%10s'
                        '%d,%d'
                        '%10d'
                        '????-??-?? ??:??:??'
                        '%d-%02d-%02d %02d:%02d:%02d'
                        6
                        '/'
                        ''
                        '-> '
                        'link to '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       2: members
                        10      LOAD_CONST                      1: None
                        12      IS_OP                           0 (is)
                        14      POP_JUMP_IF_FALSE               10 (to 20)
                        16      LOAD_FAST                       0: self
                        18      STORE_FAST                      2: members
                        20      LOAD_FAST                       2: members
                        22      GET_ITER                        
                        24      FOR_ITER                        130 (to 286)
                        26      STORE_FAST                      3: tarinfo
                        28      LOAD_FAST                       1: verbose
                        30      POP_JUMP_IF_FALSE               102 (to 204)
                        32      LOAD_FAST                       3: tarinfo
                        34      LOAD_ATTR                       1: mode
                        36      LOAD_CONST                      1: None
                        38      IS_OP                           0 (is)
                        40      POP_JUMP_IF_FALSE               26 (to 52)
                        42      LOAD_GLOBAL                     2: _safe_print
                        44      LOAD_CONST                      2: '??????????'
                        46      CALL_FUNCTION                   1
                        48      POP_TOP                         
                        50      JUMP_FORWARD                    8 (to 68)
                        52      LOAD_GLOBAL                     2: _safe_print
                        54      LOAD_GLOBAL                     3: stat
                        56      LOAD_METHOD                     4: filemode
                        58      LOAD_FAST                       3: tarinfo
                        60      LOAD_ATTR                       1: mode
                        62      CALL_METHOD                     1
                        64      CALL_FUNCTION                   1
                        66      POP_TOP                         
                        68      LOAD_GLOBAL                     2: _safe_print
                        70      LOAD_CONST                      3: '%s/%s'
                        72      LOAD_FAST                       3: tarinfo
                        74      LOAD_ATTR                       5: uname
                        76      JUMP_IF_TRUE_OR_POP             41 (to 82)
                        78      LOAD_FAST                       3: tarinfo
                        80      LOAD_ATTR                       6: uid
                        82      LOAD_FAST                       3: tarinfo
                        84      LOAD_ATTR                       7: gname
                        86      JUMP_IF_TRUE_OR_POP             46 (to 92)
                        88      LOAD_FAST                       3: tarinfo
                        90      LOAD_ATTR                       8: gid
                        92      BUILD_TUPLE                     2
                        94      BINARY_MODULO                   
                        96      CALL_FUNCTION                   1
                        98      POP_TOP                         
                        100     LOAD_FAST                       3: tarinfo
                        102     LOAD_METHOD                     9: ischr
                        104     CALL_METHOD                     0
                        106     POP_JUMP_IF_TRUE                58 (to 116)
                        108     LOAD_FAST                       3: tarinfo
                        110     LOAD_METHOD                     10: isblk
                        112     CALL_METHOD                     0
                        114     POP_JUMP_IF_FALSE               71 (to 142)
                        116     LOAD_GLOBAL                     2: _safe_print
                        118     LOAD_CONST                      4: '%10s'
                        120     LOAD_CONST                      5: '%d,%d'
                        122     LOAD_FAST                       3: tarinfo
                        124     LOAD_ATTR                       11: devmajor
                        126     LOAD_FAST                       3: tarinfo
                        128     LOAD_ATTR                       12: devminor
                        130     BUILD_TUPLE                     2
                        132     BINARY_MODULO                   
                        134     BINARY_MODULO                   
                        136     CALL_FUNCTION                   1
                        138     POP_TOP                         
                        140     JUMP_FORWARD                    7 (to 156)
                        142     LOAD_GLOBAL                     2: _safe_print
                        144     LOAD_CONST                      6: '%10d'
                        146     LOAD_FAST                       3: tarinfo
                        148     LOAD_ATTR                       13: size
                        150     BINARY_MODULO                   
                        152     CALL_FUNCTION                   1
                        154     POP_TOP                         
                        156     LOAD_FAST                       3: tarinfo
                        158     LOAD_ATTR                       14: mtime
                        160     LOAD_CONST                      1: None
                        162     IS_OP                           0 (is)
                        164     POP_JUMP_IF_FALSE               88 (to 176)
                        166     LOAD_GLOBAL                     2: _safe_print
                        168     LOAD_CONST                      7: '????-??-?? ??:??:??'
                        170     CALL_FUNCTION                   1
                        172     POP_TOP                         
                        174     JUMP_FORWARD                    14 (to 204)
                        176     LOAD_GLOBAL                     2: _safe_print
                        178     LOAD_CONST                      8: '%d-%02d-%02d %02d:%02d:%02d'
                        180     LOAD_GLOBAL                     15: time
                        182     LOAD_METHOD                     16: localtime
                        184     LOAD_FAST                       3: tarinfo
                        186     LOAD_ATTR                       14: mtime
                        188     CALL_METHOD                     1
                        190     LOAD_CONST                      1: None
                        192     LOAD_CONST                      9: 6
                        194     BUILD_SLICE                     2
                        196     BINARY_SUBSCR                   
                        198     BINARY_MODULO                   
                        200     CALL_FUNCTION                   1
                        202     POP_TOP                         
                        204     LOAD_GLOBAL                     2: _safe_print
                        206     LOAD_FAST                       3: tarinfo
                        208     LOAD_ATTR                       17: name
                        210     LOAD_FAST                       3: tarinfo
                        212     LOAD_METHOD                     18: isdir
                        214     CALL_METHOD                     0
                        216     POP_JUMP_IF_FALSE               111 (to 222)
                        218     LOAD_CONST                      10: '/'
                        220     JUMP_FORWARD                    1 (to 224)
                        222     LOAD_CONST                      11: ''
                        224     BINARY_ADD                      
                        226     CALL_FUNCTION                   1
                        228     POP_TOP                         
                        230     LOAD_FAST                       1: verbose
                        232     POP_JUMP_IF_FALSE               139 (to 278)
                        234     LOAD_FAST                       3: tarinfo
                        236     LOAD_METHOD                     19: issym
                        238     CALL_METHOD                     0
                        240     POP_JUMP_IF_FALSE               128 (to 256)
                        242     LOAD_GLOBAL                     2: _safe_print
                        244     LOAD_CONST                      12: '-> '
                        246     LOAD_FAST                       3: tarinfo
                        248     LOAD_ATTR                       20: linkname
                        250     BINARY_ADD                      
                        252     CALL_FUNCTION                   1
                        254     POP_TOP                         
                        256     LOAD_FAST                       3: tarinfo
                        258     LOAD_METHOD                     21: islnk
                        260     CALL_METHOD                     0
                        262     POP_JUMP_IF_FALSE               139 (to 278)
                        264     LOAD_GLOBAL                     2: _safe_print
                        266     LOAD_CONST                      13: 'link to '
                        268     LOAD_FAST                       3: tarinfo
                        270     LOAD_ATTR                       20: linkname
                        272     BINARY_ADD                      
                        274     CALL_FUNCTION                   1
                        276     POP_TOP                         
                        278     LOAD_GLOBAL                     22: print
                        280     CALL_FUNCTION                   0
                        282     POP_TOP                         
                        284     JUMP_ABSOLUTE                   12 (to 24)
                        286     LOAD_CONST                      1: None
                        288     RETURN_VALUE                    
                'TarFile.list'
                (
                    'filter'
                )
                [Code]
                    File Name: tarfile.py
                    Object Name: add
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'name'
                        'os'
                        'path'
                        'abspath'
                        '_dbg'
                        'gettarinfo'
                        'isreg'
                        'bltn_open'
                        'addfile'
                        'isdir'
                        'sorted'
                        'listdir'
                        'add'
                        'join'
                    [Var Names]
                        'self'
                        'name'
                        'arcname'
                        'recursive'
                        'filter'
                        'tarinfo'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Add the file `name' to the archive. `name' may be any type of file\n           (directory, fifo, symbolic link, etc.). If given, `arcname'\n           specifies an alternative name for the file in the archive.\n           Directories are added recursively by default. This can be avoided by\n           setting `recursive' to False. `filter' is a function\n           that expects a TarInfo object argument and returns the changed\n           TarInfo object, if it returns None the TarInfo object will be\n           excluded from the archive.\n        "
                        'awx'
                        None
                        2
                        'tarfile: Skipped %r'
                        1
                        'tarfile: Unsupported type %r'
                        'tarfile: Excluded %r'
                        'rb'
                        (
                            'filter'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'awx'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_FAST                       2: arcname
                        12      LOAD_CONST                      2: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               11 (to 22)
                        18      LOAD_FAST                       1: name
                        20      STORE_FAST                      2: arcname
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       1: name
                        26      LOAD_CONST                      2: None
                        28      IS_OP                           1 (is not)
                        30      POP_JUMP_IF_FALSE               35 (to 70)
                        32      LOAD_GLOBAL                     2: os
                        34      LOAD_ATTR                       3: path
                        36      LOAD_METHOD                     4: abspath
                        38      LOAD_FAST                       1: name
                        40      CALL_METHOD                     1
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       1: name
                        46      COMPARE_OP                      2 (==)
                        48      POP_JUMP_IF_FALSE               35 (to 70)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     5: _dbg
                        54      LOAD_CONST                      3: 2
                        56      LOAD_CONST                      4: 'tarfile: Skipped %r'
                        58      LOAD_FAST                       1: name
                        60      BINARY_MODULO                   
                        62      CALL_METHOD                     2
                        64      POP_TOP                         
                        66      LOAD_CONST                      2: None
                        68      RETURN_VALUE                    
                        70      LOAD_FAST                       0: self
                        72      LOAD_METHOD                     5: _dbg
                        74      LOAD_CONST                      5: 1
                        76      LOAD_FAST                       1: name
                        78      CALL_METHOD                     2
                        80      POP_TOP                         
                        82      LOAD_FAST                       0: self
                        84      LOAD_METHOD                     6: gettarinfo
                        86      LOAD_FAST                       1: name
                        88      LOAD_FAST                       2: arcname
                        90      CALL_METHOD                     2
                        92      STORE_FAST                      5: tarinfo
                        94      LOAD_FAST                       5: tarinfo
                        96      LOAD_CONST                      2: None
                        98      IS_OP                           0 (is)
                        100     POP_JUMP_IF_FALSE               61 (to 122)
                        102     LOAD_FAST                       0: self
                        104     LOAD_METHOD                     5: _dbg
                        106     LOAD_CONST                      5: 1
                        108     LOAD_CONST                      6: 'tarfile: Unsupported type %r'
                        110     LOAD_FAST                       1: name
                        112     BINARY_MODULO                   
                        114     CALL_METHOD                     2
                        116     POP_TOP                         
                        118     LOAD_CONST                      2: None
                        120     RETURN_VALUE                    
                        122     LOAD_FAST                       4: filter
                        124     LOAD_CONST                      2: None
                        126     IS_OP                           1 (is not)
                        128     POP_JUMP_IF_FALSE               83 (to 166)
                        130     LOAD_FAST                       4: filter
                        132     LOAD_FAST                       5: tarinfo
                        134     CALL_FUNCTION                   1
                        136     STORE_FAST                      5: tarinfo
                        138     LOAD_FAST                       5: tarinfo
                        140     LOAD_CONST                      2: None
                        142     IS_OP                           0 (is)
                        144     POP_JUMP_IF_FALSE               83 (to 166)
                        146     LOAD_FAST                       0: self
                        148     LOAD_METHOD                     5: _dbg
                        150     LOAD_CONST                      3: 2
                        152     LOAD_CONST                      7: 'tarfile: Excluded %r'
                        154     LOAD_FAST                       1: name
                        156     BINARY_MODULO                   
                        158     CALL_METHOD                     2
                        160     POP_TOP                         
                        162     LOAD_CONST                      2: None
                        164     RETURN_VALUE                    
                        166     LOAD_FAST                       5: tarinfo
                        168     LOAD_METHOD                     7: isreg
                        170     CALL_METHOD                     0
                        172     POP_JUMP_IF_FALSE               117 (to 234)
                        174     LOAD_GLOBAL                     8: bltn_open
                        176     LOAD_FAST                       1: name
                        178     LOAD_CONST                      8: 'rb'
                        180     CALL_FUNCTION                   2
                        182     SETUP_WITH                      15 (to 214)
                        184     STORE_FAST                      6: f
                        186     LOAD_FAST                       0: self
                        188     LOAD_METHOD                     9: addfile
                        190     LOAD_FAST                       5: tarinfo
                        192     LOAD_FAST                       6: f
                        194     CALL_METHOD                     2
                        196     POP_TOP                         
                        198     POP_BLOCK                       
                        200     LOAD_CONST                      2: None
                        202     DUP_TOP                         
                        204     DUP_TOP                         
                        206     CALL_FUNCTION                   3
                        208     POP_TOP                         
                        210     LOAD_CONST                      2: None
                        212     RETURN_VALUE                    
                        214     WITH_EXCEPT_START               
                        216     POP_JUMP_IF_TRUE                110 (to 220)
                        218     RERAISE                         1
                        220     POP_TOP                         
                        222     POP_TOP                         
                        224     POP_TOP                         
                        226     POP_EXCEPT                      
                        228     POP_TOP                         
                        230     LOAD_CONST                      2: None
                        232     RETURN_VALUE                    
                        234     LOAD_FAST                       5: tarinfo
                        236     LOAD_METHOD                     10: isdir
                        238     CALL_METHOD                     0
                        240     POP_JUMP_IF_FALSE               161 (to 322)
                        242     LOAD_FAST                       0: self
                        244     LOAD_METHOD                     9: addfile
                        246     LOAD_FAST                       5: tarinfo
                        248     CALL_METHOD                     1
                        250     POP_TOP                         
                        252     LOAD_FAST                       3: recursive
                        254     POP_JUMP_IF_FALSE               157 (to 314)
                        256     LOAD_GLOBAL                     11: sorted
                        258     LOAD_GLOBAL                     2: os
                        260     LOAD_METHOD                     12: listdir
                        262     LOAD_FAST                       1: name
                        264     CALL_METHOD                     1
                        266     CALL_FUNCTION                   1
                        268     GET_ITER                        
                        270     FOR_ITER                        23 (to 318)
                        272     STORE_FAST                      6: f
                        274     LOAD_FAST                       0: self
                        276     LOAD_ATTR                       13: add
                        278     LOAD_GLOBAL                     2: os
                        280     LOAD_ATTR                       3: path
                        282     LOAD_METHOD                     14: join
                        284     LOAD_FAST                       1: name
                        286     LOAD_FAST                       6: f
                        288     CALL_METHOD                     2
                        290     LOAD_GLOBAL                     2: os
                        292     LOAD_ATTR                       3: path
                        294     LOAD_METHOD                     14: join
                        296     LOAD_FAST                       2: arcname
                        298     LOAD_FAST                       6: f
                        300     CALL_METHOD                     2
                        302     LOAD_FAST                       3: recursive
                        304     LOAD_FAST                       4: filter
                        306     LOAD_CONST                      9: ('filter',)
                        308     CALL_FUNCTION_KW                4
                        310     POP_TOP                         
                        312     JUMP_ABSOLUTE                   135 (to 270)
                        314     LOAD_CONST                      2: None
                        316     RETURN_VALUE                    
                        318     LOAD_CONST                      2: None
                        320     RETURN_VALUE                    
                        322     LOAD_FAST                       0: self
                        324     LOAD_METHOD                     9: addfile
                        326     LOAD_FAST                       5: tarinfo
                        328     CALL_METHOD                     1
                        330     POP_TOP                         
                        332     LOAD_CONST                      2: None
                        334     RETURN_VALUE                    
                'TarFile.add'
                [Code]
                    File Name: tarfile.py
                    Object Name: addfile
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'copy'
                        'tobuf'
                        'format'
                        'encoding'
                        'errors'
                        'fileobj'
                        'write'
                        'offset'
                        'len'
                        'copybufsize'
                        'copyfileobj'
                        'size'
                        'divmod'
                        'BLOCKSIZE'
                        'NUL'
                        'members'
                        'append'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'fileobj'
                        'buf'
                        'bufsize'
                        'blocks'
                        'remainder'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Add the TarInfo object `tarinfo' to the archive. If `fileobj' is\n           given, it should be a binary file, and tarinfo.size bytes are read\n           from it and added to the archive. You can create TarInfo objects\n           directly, or by using gettarinfo().\n        "
                        'awx'
                        None
                        (
                            'bufsize'
                        )
                        0
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'awx'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_GLOBAL                     1: copy
                        12      LOAD_METHOD                     1: copy
                        14      LOAD_FAST                       1: tarinfo
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      1: tarinfo
                        20      LOAD_FAST                       1: tarinfo
                        22      LOAD_METHOD                     2: tobuf
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: format
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       4: encoding
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       5: errors
                        36      CALL_METHOD                     3
                        38      STORE_FAST                      3: buf
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       6: fileobj
                        44      LOAD_METHOD                     7: write
                        46      LOAD_FAST                       3: buf
                        48      CALL_METHOD                     1
                        50      POP_TOP                         
                        52      LOAD_FAST                       0: self
                        54      DUP_TOP                         
                        56      LOAD_ATTR                       8: offset
                        58      LOAD_GLOBAL                     9: len
                        60      LOAD_FAST                       3: buf
                        62      CALL_FUNCTION                   1
                        64      INPLACE_ADD                     
                        66      ROT_TWO                         
                        68      STORE_ATTR                      8: offset
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       10: copybufsize
                        74      STORE_FAST                      4: bufsize
                        76      LOAD_FAST                       2: fileobj
                        78      LOAD_CONST                      2: None
                        80      IS_OP                           1 (is not)
                        82      POP_JUMP_IF_FALSE               87 (to 174)
                        84      LOAD_GLOBAL                     11: copyfileobj
                        86      LOAD_FAST                       2: fileobj
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       6: fileobj
                        92      LOAD_FAST                       1: tarinfo
                        94      LOAD_ATTR                       12: size
                        96      LOAD_FAST                       4: bufsize
                        98      LOAD_CONST                      3: ('bufsize',)
                        100     CALL_FUNCTION_KW                4
                        102     POP_TOP                         
                        104     LOAD_GLOBAL                     13: divmod
                        106     LOAD_FAST                       1: tarinfo
                        108     LOAD_ATTR                       12: size
                        110     LOAD_GLOBAL                     14: BLOCKSIZE
                        112     CALL_FUNCTION                   2
                        114     UNPACK_SEQUENCE                 2
                        116     STORE_FAST                      5: blocks
                        118     STORE_FAST                      6: remainder
                        120     LOAD_FAST                       6: remainder
                        122     LOAD_CONST                      4: 0
                        124     COMPARE_OP                      4 (>)
                        126     POP_JUMP_IF_FALSE               78 (to 156)
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       6: fileobj
                        132     LOAD_METHOD                     7: write
                        134     LOAD_GLOBAL                     15: NUL
                        136     LOAD_GLOBAL                     14: BLOCKSIZE
                        138     LOAD_FAST                       6: remainder
                        140     BINARY_SUBTRACT                 
                        142     BINARY_MULTIPLY                 
                        144     CALL_METHOD                     1
                        146     POP_TOP                         
                        148     LOAD_FAST                       5: blocks
                        150     LOAD_CONST                      5: 1
                        152     INPLACE_ADD                     
                        154     STORE_FAST                      5: blocks
                        156     LOAD_FAST                       0: self
                        158     DUP_TOP                         
                        160     LOAD_ATTR                       8: offset
                        162     LOAD_FAST                       5: blocks
                        164     LOAD_GLOBAL                     14: BLOCKSIZE
                        166     BINARY_MULTIPLY                 
                        168     INPLACE_ADD                     
                        170     ROT_TWO                         
                        172     STORE_ATTR                      8: offset
                        174     LOAD_FAST                       0: self
                        176     LOAD_ATTR                       16: members
                        178     LOAD_METHOD                     17: append
                        180     LOAD_FAST                       1: tarinfo
                        182     CALL_METHOD                     1
                        184     POP_TOP                         
                        186     LOAD_CONST                      2: None
                        188     RETURN_VALUE                    
                'TarFile.addfile'
                [Code]
                    File Name: tarfile.py
                    Object Name: _get_filter_function
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'extraction_filter'
                        'fully_trusted_filter'
                        'isinstance'
                        'str'
                        'TypeError'
                        'callable'
                        '_NAMED_FILTERS'
                        'KeyError'
                        'ValueError'
                    [Var Names]
                        'self'
                        'filter'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'String names are not supported for TarFile.extraction_filter. Use a function such as tarfile.data_filter directly.'
                        'filter '
                        ' not found'
                    [Disassembly]
                        0       LOAD_FAST                       1: filter
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               24 (to 48)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: extraction_filter
                        12      STORE_FAST                      1: filter
                        14      LOAD_FAST                       1: filter
                        16      LOAD_CONST                      0: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_GLOBAL                     1: fully_trusted_filter
                        24      RETURN_VALUE                    
                        26      LOAD_GLOBAL                     2: isinstance
                        28      LOAD_FAST                       1: filter
                        30      LOAD_GLOBAL                     3: str
                        32      CALL_FUNCTION                   2
                        34      POP_JUMP_IF_FALSE               22 (to 44)
                        36      LOAD_GLOBAL                     4: TypeError
                        38      LOAD_CONST                      1: 'String names are not supported for TarFile.extraction_filter. Use a function such as tarfile.data_filter directly.'
                        40      CALL_FUNCTION                   1
                        42      RAISE_VARARGS                   1
                        44      LOAD_FAST                       1: filter
                        46      RETURN_VALUE                    
                        48      LOAD_GLOBAL                     5: callable
                        50      LOAD_FAST                       1: filter
                        52      CALL_FUNCTION                   1
                        54      POP_JUMP_IF_FALSE               30 (to 60)
                        56      LOAD_FAST                       1: filter
                        58      RETURN_VALUE                    
                        60      SETUP_FINALLY                   5 (to 72)
                        62      LOAD_GLOBAL                     6: _NAMED_FILTERS
                        64      LOAD_FAST                       1: filter
                        66      BINARY_SUBSCR                   
                        68      POP_BLOCK                       
                        70      RETURN_VALUE                    
                        72      DUP_TOP                         
                        74      LOAD_GLOBAL                     7: KeyError
                        76      JUMP_IF_NOT_EXC_MATCH           51 (to 102)
                        78      POP_TOP                         
                        80      POP_TOP                         
                        82      POP_TOP                         
                        84      LOAD_GLOBAL                     8: ValueError
                        86      LOAD_CONST                      2: 'filter '
                        88      LOAD_FAST                       1: filter
                        90      FORMAT_VALUE                    2 (FVC_REPR)
                        92      LOAD_CONST                      3: ' not found'
                        94      BUILD_STRING                    3
                        96      CALL_FUNCTION                   1
                        98      LOAD_CONST                      0: None
                        100     RAISE_VARARGS                   2
                        102     RERAISE                         0
                'TarFile._get_filter_function'
                '.'
                (
                    'numeric_owner'
                    'filter'
                )
                [Code]
                    File Name: tarfile.py
                    Object Name: extractall
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 2
                    Locals: 11
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_get_filter_function'
                        '_get_extract_tarinfo'
                        'isdir'
                        'append'
                        '_extract_one'
                        'sort'
                        'os'
                        'path'
                        'join'
                        'name'
                        'chown'
                        'utime'
                        'chmod'
                        'ExtractError'
                        '_handle_nonfatal_error'
                    [Var Names]
                        'self'
                        'path'
                        'members'
                        'numeric_owner'
                        'filter'
                        'directories'
                        'filter_function'
                        'member'
                        'tarinfo'
                        'dirpath'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Extract all members from the archive to the current working\n           directory and set owner, modification time and permissions on\n           directories afterwards. `path' specifies a different directory\n           to extract to. `members' is optional and must be a subset of the\n           list returned by getmembers(). If `numeric_owner` is True, only\n           the numbers for user/group names are used and not the names.\n\n           The `filter` function will be called on each member just\n           before extraction.\n           It can return a changed TarInfo or None to skip the member.\n           String names of common filters are accepted.\n        "
                        None
                        (
                            'set_attrs'
                            'numeric_owner'
                        )
                        [Code]
                            File Name: tarfile.py
                            Object Name: <lambda>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 1
                            Stack Size: 1
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'name'
                            [Var Names]
                                'a'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       LOAD_FAST                       0: a
                                2       LOAD_ATTR                       0: name
                                4       RETURN_VALUE                    
                        'TarFile.extractall.<locals>.<lambda>'
                        True
                        (
                            'key'
                            'reverse'
                        )
                        (
                            'numeric_owner'
                        )
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      5: directories
                        4       LOAD_FAST                       0: self
                        6       LOAD_METHOD                     0: _get_filter_function
                        8       LOAD_FAST                       4: filter
                        10      CALL_METHOD                     1
                        12      STORE_FAST                      6: filter_function
                        14      LOAD_FAST                       2: members
                        16      LOAD_CONST                      1: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_FAST                       0: self
                        24      STORE_FAST                      2: members
                        26      LOAD_FAST                       2: members
                        28      GET_ITER                        
                        30      FOR_ITER                        35 (to 102)
                        32      STORE_FAST                      7: member
                        34      LOAD_FAST                       0: self
                        36      LOAD_METHOD                     1: _get_extract_tarinfo
                        38      LOAD_FAST                       7: member
                        40      LOAD_FAST                       6: filter_function
                        42      LOAD_FAST                       1: path
                        44      CALL_METHOD                     3
                        46      STORE_FAST                      8: tarinfo
                        48      LOAD_FAST                       8: tarinfo
                        50      LOAD_CONST                      1: None
                        52      IS_OP                           0 (is)
                        54      POP_JUMP_IF_FALSE               29 (to 58)
                        56      JUMP_ABSOLUTE                   15 (to 30)
                        58      LOAD_FAST                       8: tarinfo
                        60      LOAD_METHOD                     2: isdir
                        62      CALL_METHOD                     0
                        64      POP_JUMP_IF_FALSE               38 (to 76)
                        66      LOAD_FAST                       5: directories
                        68      LOAD_METHOD                     3: append
                        70      LOAD_FAST                       8: tarinfo
                        72      CALL_METHOD                     1
                        74      POP_TOP                         
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       4: _extract_one
                        80      LOAD_FAST                       8: tarinfo
                        82      LOAD_FAST                       1: path
                        84      LOAD_FAST                       8: tarinfo
                        86      LOAD_METHOD                     2: isdir
                        88      CALL_METHOD                     0
                        90      UNARY_NOT                       
                        92      LOAD_FAST                       3: numeric_owner
                        94      LOAD_CONST                      2: ('set_attrs', 'numeric_owner')
                        96      CALL_FUNCTION_KW                4
                        98      POP_TOP                         
                        100     JUMP_ABSOLUTE                   15 (to 30)
                        102     LOAD_FAST                       5: directories
                        104     LOAD_ATTR                       5: sort
                        106     LOAD_CONST                      3: <CODE> <lambda>
                        108     LOAD_CONST                      4: 'TarFile.extractall.<locals>.<lambda>'
                        110     MAKE_FUNCTION                   0
                        112     LOAD_CONST                      5: True
                        114     LOAD_CONST                      6: ('key', 'reverse')
                        116     CALL_FUNCTION_KW                2
                        118     POP_TOP                         
                        120     LOAD_FAST                       5: directories
                        122     GET_ITER                        
                        124     FOR_ITER                        55 (to 236)
                        126     STORE_FAST                      8: tarinfo
                        128     LOAD_GLOBAL                     6: os
                        130     LOAD_ATTR                       7: path
                        132     LOAD_METHOD                     8: join
                        134     LOAD_FAST                       1: path
                        136     LOAD_FAST                       8: tarinfo
                        138     LOAD_ATTR                       9: name
                        140     CALL_METHOD                     2
                        142     STORE_FAST                      9: dirpath
                        144     SETUP_FINALLY                   22 (to 190)
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       10: chown
                        150     LOAD_FAST                       8: tarinfo
                        152     LOAD_FAST                       9: dirpath
                        154     LOAD_FAST                       3: numeric_owner
                        156     LOAD_CONST                      7: ('numeric_owner',)
                        158     CALL_FUNCTION_KW                3
                        160     POP_TOP                         
                        162     LOAD_FAST                       0: self
                        164     LOAD_METHOD                     11: utime
                        166     LOAD_FAST                       8: tarinfo
                        168     LOAD_FAST                       9: dirpath
                        170     CALL_METHOD                     2
                        172     POP_TOP                         
                        174     LOAD_FAST                       0: self
                        176     LOAD_METHOD                     12: chmod
                        178     LOAD_FAST                       8: tarinfo
                        180     LOAD_FAST                       9: dirpath
                        182     CALL_METHOD                     2
                        184     POP_TOP                         
                        186     POP_BLOCK                       
                        188     JUMP_ABSOLUTE                   62 (to 124)
                        190     DUP_TOP                         
                        192     LOAD_GLOBAL                     13: ExtractError
                        194     JUMP_IF_NOT_EXC_MATCH           117 (to 234)
                        196     POP_TOP                         
                        198     STORE_FAST                      10: e
                        200     POP_TOP                         
                        202     SETUP_FINALLY                   11 (to 226)
                        204     LOAD_FAST                       0: self
                        206     LOAD_METHOD                     14: _handle_nonfatal_error
                        208     LOAD_FAST                       10: e
                        210     CALL_METHOD                     1
                        212     POP_TOP                         
                        214     POP_BLOCK                       
                        216     POP_EXCEPT                      
                        218     LOAD_CONST                      1: None
                        220     STORE_FAST                      10: e
                        222     DELETE_FAST                     10: e
                        224     JUMP_ABSOLUTE                   62 (to 124)
                        226     LOAD_CONST                      1: None
                        228     STORE_FAST                      10: e
                        230     DELETE_FAST                     10: e
                        232     RERAISE                         1
                        234     RERAISE                         0
                        236     LOAD_CONST                      1: None
                        238     RETURN_VALUE                    
                'TarFile.extractall'
                ''
                [Code]
                    File Name: tarfile.py
                    Object Name: extract
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 2
                    Locals: 8
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_get_filter_function'
                        '_get_extract_tarinfo'
                        '_extract_one'
                    [Var Names]
                        'self'
                        'member'
                        'path'
                        'set_attrs'
                        'numeric_owner'
                        'filter'
                        'filter_function'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Extract a member from the archive to the current working directory,\n           using its full name. Its file information is extracted as accurately\n           as possible. `member' may be a filename or a TarInfo object. You can\n           specify a different directory using `path'. File attributes (owner,\n           mtime, mode) are set unless `set_attrs' is False. If `numeric_owner`\n           is True, only the numbers for user/group names are used and not\n           the names.\n\n           The `filter` function will be called before extraction.\n           It can return a changed TarInfo or None to skip the member.\n           String names of common filters are accepted.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _get_filter_function
                        4       LOAD_FAST                       5: filter
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      6: filter_function
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _get_extract_tarinfo
                        14      LOAD_FAST                       1: member
                        16      LOAD_FAST                       6: filter_function
                        18      LOAD_FAST                       2: path
                        20      CALL_METHOD                     3
                        22      STORE_FAST                      7: tarinfo
                        24      LOAD_FAST                       7: tarinfo
                        26      LOAD_CONST                      1: None
                        28      IS_OP                           1 (is not)
                        30      POP_JUMP_IF_FALSE               26 (to 52)
                        32      LOAD_FAST                       0: self
                        34      LOAD_METHOD                     2: _extract_one
                        36      LOAD_FAST                       7: tarinfo
                        38      LOAD_FAST                       2: path
                        40      LOAD_FAST                       3: set_attrs
                        42      LOAD_FAST                       4: numeric_owner
                        44      CALL_METHOD                     4
                        46      POP_TOP                         
                        48      LOAD_CONST                      1: None
                        50      RETURN_VALUE                    
                        52      LOAD_CONST                      1: None
                        54      RETURN_VALUE                    
                'TarFile.extract'
                [Code]
                    File Name: tarfile.py
                    Object Name: _get_extract_tarinfo
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'getmember'
                        'OSError'
                        'FilterError'
                        '_handle_fatal_error'
                        'ExtractError'
                        '_handle_nonfatal_error'
                        '_dbg'
                        'name'
                        'islnk'
                        'copy'
                        'os'
                        'path'
                        'join'
                        'linkname'
                        '_link_target'
                    [Var Names]
                        'self'
                        'member'
                        'filter_function'
                        'path'
                        'tarinfo'
                        'unfiltered'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Get filtered TarInfo (or None) from member, which might be a str'
                        None
                        2
                        'tarfile: Excluded %r'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: member
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               11 (to 22)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: getmember
                        14      LOAD_FAST                       1: member
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      4: tarinfo
                        20      JUMP_FORWARD                    2 (to 26)
                        22      LOAD_FAST                       1: member
                        24      STORE_FAST                      4: tarinfo
                        26      LOAD_FAST                       4: tarinfo
                        28      STORE_FAST                      5: unfiltered
                        30      SETUP_FINALLY                   7 (to 46)
                        32      LOAD_FAST                       2: filter_function
                        34      LOAD_FAST                       4: tarinfo
                        36      LOAD_FAST                       3: path
                        38      CALL_FUNCTION                   2
                        40      STORE_FAST                      4: tarinfo
                        42      POP_BLOCK                       
                        44      JUMP_FORWARD                    47 (to 140)
                        46      DUP_TOP                         
                        48      LOAD_GLOBAL                     3: OSError
                        50      LOAD_GLOBAL                     4: FilterError
                        52      BUILD_TUPLE                     2
                        54      JUMP_IF_NOT_EXC_MATCH           47 (to 94)
                        56      POP_TOP                         
                        58      STORE_FAST                      6: e
                        60      POP_TOP                         
                        62      SETUP_FINALLY                   11 (to 86)
                        64      LOAD_FAST                       0: self
                        66      LOAD_METHOD                     5: _handle_fatal_error
                        68      LOAD_FAST                       6: e
                        70      CALL_METHOD                     1
                        72      POP_TOP                         
                        74      POP_BLOCK                       
                        76      POP_EXCEPT                      
                        78      LOAD_CONST                      1: None
                        80      STORE_FAST                      6: e
                        82      DELETE_FAST                     6: e
                        84      JUMP_FORWARD                    27 (to 140)
                        86      LOAD_CONST                      1: None
                        88      STORE_FAST                      6: e
                        90      DELETE_FAST                     6: e
                        92      RERAISE                         1
                        94      DUP_TOP                         
                        96      LOAD_GLOBAL                     6: ExtractError
                        98      JUMP_IF_NOT_EXC_MATCH           69 (to 138)
                        100     POP_TOP                         
                        102     STORE_FAST                      6: e
                        104     POP_TOP                         
                        106     SETUP_FINALLY                   11 (to 130)
                        108     LOAD_FAST                       0: self
                        110     LOAD_METHOD                     7: _handle_nonfatal_error
                        112     LOAD_FAST                       6: e
                        114     CALL_METHOD                     1
                        116     POP_TOP                         
                        118     POP_BLOCK                       
                        120     POP_EXCEPT                      
                        122     LOAD_CONST                      1: None
                        124     STORE_FAST                      6: e
                        126     DELETE_FAST                     6: e
                        128     JUMP_FORWARD                    5 (to 140)
                        130     LOAD_CONST                      1: None
                        132     STORE_FAST                      6: e
                        134     DELETE_FAST                     6: e
                        136     RERAISE                         1
                        138     RERAISE                         0
                        140     LOAD_FAST                       4: tarinfo
                        142     LOAD_CONST                      1: None
                        144     IS_OP                           0 (is)
                        146     POP_JUMP_IF_FALSE               85 (to 170)
                        148     LOAD_FAST                       0: self
                        150     LOAD_METHOD                     8: _dbg
                        152     LOAD_CONST                      2: 2
                        154     LOAD_CONST                      3: 'tarfile: Excluded %r'
                        156     LOAD_FAST                       5: unfiltered
                        158     LOAD_ATTR                       9: name
                        160     BINARY_MODULO                   
                        162     CALL_METHOD                     2
                        164     POP_TOP                         
                        166     LOAD_CONST                      1: None
                        168     RETURN_VALUE                    
                        170     LOAD_FAST                       4: tarinfo
                        172     LOAD_METHOD                     10: islnk
                        174     CALL_METHOD                     0
                        176     POP_JUMP_IF_FALSE               103 (to 206)
                        178     LOAD_GLOBAL                     11: copy
                        180     LOAD_METHOD                     11: copy
                        182     LOAD_FAST                       4: tarinfo
                        184     CALL_METHOD                     1
                        186     STORE_FAST                      4: tarinfo
                        188     LOAD_GLOBAL                     12: os
                        190     LOAD_ATTR                       13: path
                        192     LOAD_METHOD                     14: join
                        194     LOAD_FAST                       3: path
                        196     LOAD_FAST                       4: tarinfo
                        198     LOAD_ATTR                       15: linkname
                        200     CALL_METHOD                     2
                        202     LOAD_FAST                       4: tarinfo
                        204     STORE_ATTR                      16: _link_target
                        206     LOAD_FAST                       4: tarinfo
                        208     RETURN_VALUE                    
                'TarFile._get_extract_tarinfo'
                [Code]
                    File Name: tarfile.py
                    Object Name: _extract_one
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        '_extract_member'
                        'os'
                        'path'
                        'join'
                        'name'
                        'OSError'
                        '_handle_fatal_error'
                        'ExtractError'
                        '_handle_nonfatal_error'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'path'
                        'set_attrs'
                        'numeric_owner'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Extract from filtered tarinfo to disk'
                        'r'
                        (
                            'set_attrs'
                            'numeric_owner'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'r'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      SETUP_FINALLY                   18 (to 48)
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: _extract_member
                        16      LOAD_FAST                       1: tarinfo
                        18      LOAD_GLOBAL                     2: os
                        20      LOAD_ATTR                       3: path
                        22      LOAD_METHOD                     4: join
                        24      LOAD_FAST                       2: path
                        26      LOAD_FAST                       1: tarinfo
                        28      LOAD_ATTR                       5: name
                        30      CALL_METHOD                     2
                        32      LOAD_FAST                       3: set_attrs
                        34      LOAD_FAST                       4: numeric_owner
                        36      LOAD_CONST                      2: ('set_attrs', 'numeric_owner')
                        38      CALL_FUNCTION_KW                4
                        40      POP_TOP                         
                        42      POP_BLOCK                       
                        44      LOAD_CONST                      3: None
                        46      RETURN_VALUE                    
                        48      DUP_TOP                         
                        50      LOAD_GLOBAL                     6: OSError
                        52      JUMP_IF_NOT_EXC_MATCH           47 (to 94)
                        54      POP_TOP                         
                        56      STORE_FAST                      5: e
                        58      POP_TOP                         
                        60      SETUP_FINALLY                   12 (to 86)
                        62      LOAD_FAST                       0: self
                        64      LOAD_METHOD                     7: _handle_fatal_error
                        66      LOAD_FAST                       5: e
                        68      CALL_METHOD                     1
                        70      POP_TOP                         
                        72      POP_BLOCK                       
                        74      POP_EXCEPT                      
                        76      LOAD_CONST                      3: None
                        78      STORE_FAST                      5: e
                        80      DELETE_FAST                     5: e
                        82      LOAD_CONST                      3: None
                        84      RETURN_VALUE                    
                        86      LOAD_CONST                      3: None
                        88      STORE_FAST                      5: e
                        90      DELETE_FAST                     5: e
                        92      RERAISE                         1
                        94      DUP_TOP                         
                        96      LOAD_GLOBAL                     8: ExtractError
                        98      JUMP_IF_NOT_EXC_MATCH           70 (to 140)
                        100     POP_TOP                         
                        102     STORE_FAST                      5: e
                        104     POP_TOP                         
                        106     SETUP_FINALLY                   12 (to 132)
                        108     LOAD_FAST                       0: self
                        110     LOAD_METHOD                     9: _handle_nonfatal_error
                        112     LOAD_FAST                       5: e
                        114     CALL_METHOD                     1
                        116     POP_TOP                         
                        118     POP_BLOCK                       
                        120     POP_EXCEPT                      
                        122     LOAD_CONST                      3: None
                        124     STORE_FAST                      5: e
                        126     DELETE_FAST                     5: e
                        128     LOAD_CONST                      3: None
                        130     RETURN_VALUE                    
                        132     LOAD_CONST                      3: None
                        134     STORE_FAST                      5: e
                        136     DELETE_FAST                     5: e
                        138     RERAISE                         1
                        140     RERAISE                         0
                'TarFile._extract_one'
                [Code]
                    File Name: tarfile.py
                    Object Name: _handle_nonfatal_error
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'errorlevel'
                        '_dbg'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Handle non-fatal error (ExtractError) according to errorlevel'
                        1
                        'tarfile: %s'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: errorlevel
                        4       LOAD_CONST                      1: 1
                        6       COMPARE_OP                      4 (>)
                        8       POP_JUMP_IF_FALSE               6 (to 12)
                        10      RAISE_VARARGS                   0
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: _dbg
                        16      LOAD_CONST                      1: 1
                        18      LOAD_CONST                      2: 'tarfile: %s'
                        20      LOAD_FAST                       1: e
                        22      BINARY_MODULO                   
                        24      CALL_METHOD                     2
                        26      POP_TOP                         
                        28      LOAD_CONST                      3: None
                        30      RETURN_VALUE                    
                'TarFile._handle_nonfatal_error'
                [Code]
                    File Name: tarfile.py
                    Object Name: _handle_fatal_error
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'errorlevel'
                        'isinstance'
                        'OSError'
                        'filename'
                        '_dbg'
                        'strerror'
                        'type'
                        '__name__'
                    [Var Names]
                        'self'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Handle "fatal" error according to self.errorlevel'
                        0
                        None
                        1
                        'tarfile: %s'
                        'tarfile: %s %r'
                        'tarfile: %s %s'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: errorlevel
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      4 (>)
                        8       POP_JUMP_IF_FALSE               6 (to 12)
                        10      RAISE_VARARGS                   0
                        12      LOAD_GLOBAL                     1: isinstance
                        14      LOAD_FAST                       1: e
                        16      LOAD_GLOBAL                     2: OSError
                        18      CALL_FUNCTION                   2
                        20      POP_JUMP_IF_FALSE               41 (to 82)
                        22      LOAD_FAST                       1: e
                        24      LOAD_ATTR                       3: filename
                        26      LOAD_CONST                      2: None
                        28      IS_OP                           0 (is)
                        30      POP_JUMP_IF_FALSE               27 (to 54)
                        32      LOAD_FAST                       0: self
                        34      LOAD_METHOD                     4: _dbg
                        36      LOAD_CONST                      3: 1
                        38      LOAD_CONST                      4: 'tarfile: %s'
                        40      LOAD_FAST                       1: e
                        42      LOAD_ATTR                       5: strerror
                        44      BINARY_MODULO                   
                        46      CALL_METHOD                     2
                        48      POP_TOP                         
                        50      LOAD_CONST                      2: None
                        52      RETURN_VALUE                    
                        54      LOAD_FAST                       0: self
                        56      LOAD_METHOD                     4: _dbg
                        58      LOAD_CONST                      3: 1
                        60      LOAD_CONST                      5: 'tarfile: %s %r'
                        62      LOAD_FAST                       1: e
                        64      LOAD_ATTR                       5: strerror
                        66      LOAD_FAST                       1: e
                        68      LOAD_ATTR                       3: filename
                        70      BUILD_TUPLE                     2
                        72      BINARY_MODULO                   
                        74      CALL_METHOD                     2
                        76      POP_TOP                         
                        78      LOAD_CONST                      2: None
                        80      RETURN_VALUE                    
                        82      LOAD_FAST                       0: self
                        84      LOAD_METHOD                     4: _dbg
                        86      LOAD_CONST                      3: 1
                        88      LOAD_CONST                      6: 'tarfile: %s %s'
                        90      LOAD_GLOBAL                     6: type
                        92      LOAD_FAST                       1: e
                        94      CALL_FUNCTION                   1
                        96      LOAD_ATTR                       7: __name__
                        98      LOAD_FAST                       1: e
                        100     BUILD_TUPLE                     2
                        102     BINARY_MODULO                   
                        104     CALL_METHOD                     2
                        106     POP_TOP                         
                        108     LOAD_CONST                      2: None
                        110     RETURN_VALUE                    
                'TarFile._handle_fatal_error'
                [Code]
                    File Name: tarfile.py
                    Object Name: extractfile
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'isinstance'
                        'str'
                        'getmember'
                        'isreg'
                        'type'
                        'SUPPORTED_TYPES'
                        'fileobject'
                        'islnk'
                        'issym'
                        'fileobj'
                        '_Stream'
                        'StreamError'
                        'extractfile'
                        '_find_link_target'
                    [Var Names]
                        'self'
                        'member'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Extract a member from the archive as a file object. `member' may be\n           a filename or a TarInfo object. If `member' is a regular file or\n           a link, an io.BufferedReader object is returned. For all other\n           existing members, None is returned. If `member' does not appear\n           in the archive, KeyError is raised.\n        "
                        'r'
                        'cannot extract (sym)link as file object'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'r'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_GLOBAL                     1: isinstance
                        12      LOAD_FAST                       1: member
                        14      LOAD_GLOBAL                     2: str
                        16      CALL_FUNCTION                   2
                        18      POP_JUMP_IF_FALSE               16 (to 32)
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     3: getmember
                        24      LOAD_FAST                       1: member
                        26      CALL_METHOD                     1
                        28      STORE_FAST                      2: tarinfo
                        30      JUMP_FORWARD                    2 (to 36)
                        32      LOAD_FAST                       1: member
                        34      STORE_FAST                      2: tarinfo
                        36      LOAD_FAST                       2: tarinfo
                        38      LOAD_METHOD                     4: isreg
                        40      CALL_METHOD                     0
                        42      POP_JUMP_IF_TRUE                27 (to 54)
                        44      LOAD_FAST                       2: tarinfo
                        46      LOAD_ATTR                       5: type
                        48      LOAD_GLOBAL                     6: SUPPORTED_TYPES
                        50      CONTAINS_OP                     1 (not in)
                        52      POP_JUMP_IF_FALSE               33 (to 66)
                        54      LOAD_FAST                       0: self
                        56      LOAD_METHOD                     7: fileobject
                        58      LOAD_FAST                       0: self
                        60      LOAD_FAST                       2: tarinfo
                        62      CALL_METHOD                     2
                        64      RETURN_VALUE                    
                        66      LOAD_FAST                       2: tarinfo
                        68      LOAD_METHOD                     8: islnk
                        70      CALL_METHOD                     0
                        72      POP_JUMP_IF_TRUE                41 (to 82)
                        74      LOAD_FAST                       2: tarinfo
                        76      LOAD_METHOD                     9: issym
                        78      CALL_METHOD                     0
                        80      POP_JUMP_IF_FALSE               59 (to 118)
                        82      LOAD_GLOBAL                     1: isinstance
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       10: fileobj
                        88      LOAD_GLOBAL                     11: _Stream
                        90      CALL_FUNCTION                   2
                        92      POP_JUMP_IF_FALSE               51 (to 102)
                        94      LOAD_GLOBAL                     12: StreamError
                        96      LOAD_CONST                      2: 'cannot extract (sym)link as file object'
                        98      CALL_FUNCTION                   1
                        100     RAISE_VARARGS                   1
                        102     LOAD_FAST                       0: self
                        104     LOAD_METHOD                     13: extractfile
                        106     LOAD_FAST                       0: self
                        108     LOAD_METHOD                     14: _find_link_target
                        110     LOAD_FAST                       2: tarinfo
                        112     CALL_METHOD                     1
                        114     CALL_METHOD                     1
                        116     RETURN_VALUE                    
                        118     LOAD_CONST                      3: None
                        120     RETURN_VALUE                    
                'TarFile.extractfile'
                [Code]
                    File Name: tarfile.py
                    Object Name: _extract_member
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'rstrip'
                        'replace'
                        'os'
                        'sep'
                        'path'
                        'dirname'
                        'exists'
                        'makedirs'
                        'islnk'
                        'issym'
                        '_dbg'
                        'name'
                        'linkname'
                        'isreg'
                        'makefile'
                        'isdir'
                        'makedir'
                        'isfifo'
                        'makefifo'
                        'ischr'
                        'isblk'
                        'makedev'
                        'makelink'
                        'type'
                        'SUPPORTED_TYPES'
                        'makeunknown'
                        'chown'
                        'chmod'
                        'utime'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'set_attrs'
                        'numeric_owner'
                        'upperdirs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Extract the TarInfo object tarinfo to a physical\n           file called targetpath.\n        '
                        '/'
                        1
                        '%s -> %s'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: targetpath
                        2       LOAD_METHOD                     0: rstrip
                        4       LOAD_CONST                      1: '/'
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      2: targetpath
                        10      LOAD_FAST                       2: targetpath
                        12      LOAD_METHOD                     1: replace
                        14      LOAD_CONST                      1: '/'
                        16      LOAD_GLOBAL                     2: os
                        18      LOAD_ATTR                       3: sep
                        20      CALL_METHOD                     2
                        22      STORE_FAST                      2: targetpath
                        24      LOAD_GLOBAL                     2: os
                        26      LOAD_ATTR                       4: path
                        28      LOAD_METHOD                     5: dirname
                        30      LOAD_FAST                       2: targetpath
                        32      CALL_METHOD                     1
                        34      STORE_FAST                      5: upperdirs
                        36      LOAD_FAST                       5: upperdirs
                        38      POP_JUMP_IF_FALSE               31 (to 62)
                        40      LOAD_GLOBAL                     2: os
                        42      LOAD_ATTR                       4: path
                        44      LOAD_METHOD                     6: exists
                        46      LOAD_FAST                       5: upperdirs
                        48      CALL_METHOD                     1
                        50      POP_JUMP_IF_TRUE                31 (to 62)
                        52      LOAD_GLOBAL                     2: os
                        54      LOAD_METHOD                     7: makedirs
                        56      LOAD_FAST                       5: upperdirs
                        58      CALL_METHOD                     1
                        60      POP_TOP                         
                        62      LOAD_FAST                       1: tarinfo
                        64      LOAD_METHOD                     8: islnk
                        66      CALL_METHOD                     0
                        68      POP_JUMP_IF_TRUE                39 (to 78)
                        70      LOAD_FAST                       1: tarinfo
                        72      LOAD_METHOD                     9: issym
                        74      CALL_METHOD                     0
                        76      POP_JUMP_IF_FALSE               52 (to 104)
                        78      LOAD_FAST                       0: self
                        80      LOAD_METHOD                     10: _dbg
                        82      LOAD_CONST                      2: 1
                        84      LOAD_CONST                      3: '%s -> %s'
                        86      LOAD_FAST                       1: tarinfo
                        88      LOAD_ATTR                       11: name
                        90      LOAD_FAST                       1: tarinfo
                        92      LOAD_ATTR                       12: linkname
                        94      BUILD_TUPLE                     2
                        96      BINARY_MODULO                   
                        98      CALL_METHOD                     2
                        100     POP_TOP                         
                        102     JUMP_FORWARD                    7 (to 118)
                        104     LOAD_FAST                       0: self
                        106     LOAD_METHOD                     10: _dbg
                        108     LOAD_CONST                      2: 1
                        110     LOAD_FAST                       1: tarinfo
                        112     LOAD_ATTR                       11: name
                        114     CALL_METHOD                     2
                        116     POP_TOP                         
                        118     LOAD_FAST                       1: tarinfo
                        120     LOAD_METHOD                     13: isreg
                        122     CALL_METHOD                     0
                        124     POP_JUMP_IF_FALSE               70 (to 140)
                        126     LOAD_FAST                       0: self
                        128     LOAD_METHOD                     14: makefile
                        130     LOAD_FAST                       1: tarinfo
                        132     LOAD_FAST                       2: targetpath
                        134     CALL_METHOD                     2
                        136     POP_TOP                         
                        138     JUMP_FORWARD                    70 (to 280)
                        140     LOAD_FAST                       1: tarinfo
                        142     LOAD_METHOD                     15: isdir
                        144     CALL_METHOD                     0
                        146     POP_JUMP_IF_FALSE               81 (to 162)
                        148     LOAD_FAST                       0: self
                        150     LOAD_METHOD                     16: makedir
                        152     LOAD_FAST                       1: tarinfo
                        154     LOAD_FAST                       2: targetpath
                        156     CALL_METHOD                     2
                        158     POP_TOP                         
                        160     JUMP_FORWARD                    59 (to 280)
                        162     LOAD_FAST                       1: tarinfo
                        164     LOAD_METHOD                     17: isfifo
                        166     CALL_METHOD                     0
                        168     POP_JUMP_IF_FALSE               92 (to 184)
                        170     LOAD_FAST                       0: self
                        172     LOAD_METHOD                     18: makefifo
                        174     LOAD_FAST                       1: tarinfo
                        176     LOAD_FAST                       2: targetpath
                        178     CALL_METHOD                     2
                        180     POP_TOP                         
                        182     JUMP_FORWARD                    48 (to 280)
                        184     LOAD_FAST                       1: tarinfo
                        186     LOAD_METHOD                     19: ischr
                        188     CALL_METHOD                     0
                        190     POP_JUMP_IF_TRUE                100 (to 200)
                        192     LOAD_FAST                       1: tarinfo
                        194     LOAD_METHOD                     20: isblk
                        196     CALL_METHOD                     0
                        198     POP_JUMP_IF_FALSE               107 (to 214)
                        200     LOAD_FAST                       0: self
                        202     LOAD_METHOD                     21: makedev
                        204     LOAD_FAST                       1: tarinfo
                        206     LOAD_FAST                       2: targetpath
                        208     CALL_METHOD                     2
                        210     POP_TOP                         
                        212     JUMP_FORWARD                    33 (to 280)
                        214     LOAD_FAST                       1: tarinfo
                        216     LOAD_METHOD                     8: islnk
                        218     CALL_METHOD                     0
                        220     POP_JUMP_IF_TRUE                115 (to 230)
                        222     LOAD_FAST                       1: tarinfo
                        224     LOAD_METHOD                     9: issym
                        226     CALL_METHOD                     0
                        228     POP_JUMP_IF_FALSE               122 (to 244)
                        230     LOAD_FAST                       0: self
                        232     LOAD_METHOD                     22: makelink
                        234     LOAD_FAST                       1: tarinfo
                        236     LOAD_FAST                       2: targetpath
                        238     CALL_METHOD                     2
                        240     POP_TOP                         
                        242     JUMP_FORWARD                    18 (to 280)
                        244     LOAD_FAST                       1: tarinfo
                        246     LOAD_ATTR                       23: type
                        248     LOAD_GLOBAL                     24: SUPPORTED_TYPES
                        250     CONTAINS_OP                     1 (not in)
                        252     POP_JUMP_IF_FALSE               134 (to 268)
                        254     LOAD_FAST                       0: self
                        256     LOAD_METHOD                     25: makeunknown
                        258     LOAD_FAST                       1: tarinfo
                        260     LOAD_FAST                       2: targetpath
                        262     CALL_METHOD                     2
                        264     POP_TOP                         
                        266     JUMP_FORWARD                    6 (to 280)
                        268     LOAD_FAST                       0: self
                        270     LOAD_METHOD                     14: makefile
                        272     LOAD_FAST                       1: tarinfo
                        274     LOAD_FAST                       2: targetpath
                        276     CALL_METHOD                     2
                        278     POP_TOP                         
                        280     LOAD_FAST                       3: set_attrs
                        282     POP_JUMP_IF_FALSE               167 (to 334)
                        284     LOAD_FAST                       0: self
                        286     LOAD_METHOD                     26: chown
                        288     LOAD_FAST                       1: tarinfo
                        290     LOAD_FAST                       2: targetpath
                        292     LOAD_FAST                       4: numeric_owner
                        294     CALL_METHOD                     3
                        296     POP_TOP                         
                        298     LOAD_FAST                       1: tarinfo
                        300     LOAD_METHOD                     9: issym
                        302     CALL_METHOD                     0
                        304     POP_JUMP_IF_TRUE                169 (to 338)
                        306     LOAD_FAST                       0: self
                        308     LOAD_METHOD                     27: chmod
                        310     LOAD_FAST                       1: tarinfo
                        312     LOAD_FAST                       2: targetpath
                        314     CALL_METHOD                     2
                        316     POP_TOP                         
                        318     LOAD_FAST                       0: self
                        320     LOAD_METHOD                     28: utime
                        322     LOAD_FAST                       1: tarinfo
                        324     LOAD_FAST                       2: targetpath
                        326     CALL_METHOD                     2
                        328     POP_TOP                         
                        330     LOAD_CONST                      4: None
                        332     RETURN_VALUE                    
                        334     LOAD_CONST                      4: None
                        336     RETURN_VALUE                    
                        338     LOAD_CONST                      4: None
                        340     RETURN_VALUE                    
                'TarFile._extract_member'
                [Code]
                    File Name: tarfile.py
                    Object Name: makedir
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'mode'
                        'os'
                        'mkdir'
                        'FileExistsError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a directory called targetpath.\n        '
                        None
                        448
                    [Disassembly]
                        0       SETUP_FINALLY                   22 (to 46)
                        2       LOAD_FAST                       1: tarinfo
                        4       LOAD_ATTR                       0: mode
                        6       LOAD_CONST                      1: None
                        8       IS_OP                           0 (is)
                        10      POP_JUMP_IF_FALSE               14 (to 28)
                        12      LOAD_GLOBAL                     1: os
                        14      LOAD_METHOD                     2: mkdir
                        16      LOAD_FAST                       2: targetpath
                        18      CALL_METHOD                     1
                        20      POP_TOP                         
                        22      POP_BLOCK                       
                        24      LOAD_CONST                      1: None
                        26      RETURN_VALUE                    
                        28      LOAD_GLOBAL                     1: os
                        30      LOAD_METHOD                     2: mkdir
                        32      LOAD_FAST                       2: targetpath
                        34      LOAD_CONST                      2: 448
                        36      CALL_METHOD                     2
                        38      POP_TOP                         
                        40      POP_BLOCK                       
                        42      LOAD_CONST                      1: None
                        44      RETURN_VALUE                    
                        46      DUP_TOP                         
                        48      LOAD_GLOBAL                     3: FileExistsError
                        50      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                        52      POP_TOP                         
                        54      POP_TOP                         
                        56      POP_TOP                         
                        58      POP_EXCEPT                      
                        60      LOAD_CONST                      1: None
                        62      RETURN_VALUE                    
                        64      RERAISE                         0
                'TarFile.makedir'
                [Code]
                    File Name: tarfile.py
                    Object Name: makefile
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fileobj'
                        'seek'
                        'offset_data'
                        'copybufsize'
                        'bltn_open'
                        'sparse'
                        'copyfileobj'
                        'ReadError'
                        'size'
                        'truncate'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'source'
                        'bufsize'
                        'target'
                        'offset'
                        'size'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a file called targetpath.\n        '
                        'wb'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fileobj
                        4       STORE_FAST                      3: source
                        6       LOAD_FAST                       3: source
                        8       LOAD_METHOD                     1: seek
                        10      LOAD_FAST                       1: tarinfo
                        12      LOAD_ATTR                       2: offset_data
                        14      CALL_METHOD                     1
                        16      POP_TOP                         
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       3: copybufsize
                        22      STORE_FAST                      4: bufsize
                        24      LOAD_GLOBAL                     4: bltn_open
                        26      LOAD_FAST                       2: targetpath
                        28      LOAD_CONST                      1: 'wb'
                        30      CALL_FUNCTION                   2
                        32      SETUP_WITH                      63 (to 160)
                        34      STORE_FAST                      5: target
                        36      LOAD_FAST                       1: tarinfo
                        38      LOAD_ATTR                       5: sparse
                        40      LOAD_CONST                      2: None
                        42      IS_OP                           1 (is not)
                        44      POP_JUMP_IF_FALSE               55 (to 110)
                        46      LOAD_FAST                       1: tarinfo
                        48      LOAD_ATTR                       5: sparse
                        50      GET_ITER                        
                        52      FOR_ITER                        17 (to 88)
                        54      UNPACK_SEQUENCE                 2
                        56      STORE_FAST                      6: offset
                        58      STORE_FAST                      7: size
                        60      LOAD_FAST                       5: target
                        62      LOAD_METHOD                     1: seek
                        64      LOAD_FAST                       6: offset
                        66      CALL_METHOD                     1
                        68      POP_TOP                         
                        70      LOAD_GLOBAL                     6: copyfileobj
                        72      LOAD_FAST                       3: source
                        74      LOAD_FAST                       5: target
                        76      LOAD_FAST                       7: size
                        78      LOAD_GLOBAL                     7: ReadError
                        80      LOAD_FAST                       4: bufsize
                        82      CALL_FUNCTION                   5
                        84      POP_TOP                         
                        86      JUMP_ABSOLUTE                   26 (to 52)
                        88      LOAD_FAST                       5: target
                        90      LOAD_METHOD                     1: seek
                        92      LOAD_FAST                       1: tarinfo
                        94      LOAD_ATTR                       8: size
                        96      CALL_METHOD                     1
                        98      POP_TOP                         
                        100     LOAD_FAST                       5: target
                        102     LOAD_METHOD                     9: truncate
                        104     CALL_METHOD                     0
                        106     POP_TOP                         
                        108     JUMP_FORWARD                    17 (to 144)
                        110     LOAD_GLOBAL                     6: copyfileobj
                        112     LOAD_FAST                       3: source
                        114     LOAD_FAST                       5: target
                        116     LOAD_FAST                       1: tarinfo
                        118     LOAD_ATTR                       8: size
                        120     LOAD_GLOBAL                     7: ReadError
                        122     LOAD_FAST                       4: bufsize
                        124     CALL_FUNCTION                   5
                        126     POP_TOP                         
                        128     POP_BLOCK                       
                        130     LOAD_CONST                      2: None
                        132     DUP_TOP                         
                        134     DUP_TOP                         
                        136     CALL_FUNCTION                   3
                        138     POP_TOP                         
                        140     LOAD_CONST                      2: None
                        142     RETURN_VALUE                    
                        144     POP_BLOCK                       
                        146     LOAD_CONST                      2: None
                        148     DUP_TOP                         
                        150     DUP_TOP                         
                        152     CALL_FUNCTION                   3
                        154     POP_TOP                         
                        156     LOAD_CONST                      2: None
                        158     RETURN_VALUE                    
                        160     WITH_EXCEPT_START               
                        162     POP_JUMP_IF_TRUE                83 (to 166)
                        164     RERAISE                         1
                        166     POP_TOP                         
                        168     POP_TOP                         
                        170     POP_TOP                         
                        172     POP_EXCEPT                      
                        174     POP_TOP                         
                        176     LOAD_CONST                      2: None
                        178     RETURN_VALUE                    
                'TarFile.makefile'
                [Code]
                    File Name: tarfile.py
                    Object Name: makeunknown
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'makefile'
                        '_dbg'
                        'type'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a file from a TarInfo object with an unknown type\n           at targetpath.\n        '
                        1
                        'tarfile: Unknown file type %r, extracted as regular file.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: makefile
                        4       LOAD_FAST                       1: tarinfo
                        6       LOAD_FAST                       2: targetpath
                        8       CALL_METHOD                     2
                        10      POP_TOP                         
                        12      LOAD_FAST                       0: self
                        14      LOAD_METHOD                     1: _dbg
                        16      LOAD_CONST                      1: 1
                        18      LOAD_CONST                      2: 'tarfile: Unknown file type %r, extracted as regular file.'
                        20      LOAD_FAST                       1: tarinfo
                        22      LOAD_ATTR                       2: type
                        24      BINARY_MODULO                   
                        26      CALL_METHOD                     2
                        28      POP_TOP                         
                        30      LOAD_CONST                      3: None
                        32      RETURN_VALUE                    
                'TarFile.makeunknown'
                [Code]
                    File Name: tarfile.py
                    Object Name: makefifo
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'os'
                        'mkfifo'
                        'ExtractError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a fifo called targetpath.\n        '
                        'mkfifo'
                        'fifo not supported by system'
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_GLOBAL                     1: os
                        4       LOAD_CONST                      1: 'mkfifo'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               12 (to 24)
                        10      LOAD_GLOBAL                     1: os
                        12      LOAD_METHOD                     2: mkfifo
                        14      LOAD_FAST                       2: targetpath
                        16      CALL_METHOD                     1
                        18      POP_TOP                         
                        20      LOAD_CONST                      3: None
                        22      RETURN_VALUE                    
                        24      LOAD_GLOBAL                     3: ExtractError
                        26      LOAD_CONST                      2: 'fifo not supported by system'
                        28      CALL_FUNCTION                   1
                        30      RAISE_VARARGS                   1
                'TarFile.makefifo'
                [Code]
                    File Name: tarfile.py
                    Object Name: makedev
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'os'
                        'ExtractError'
                        'mode'
                        'isblk'
                        'stat'
                        'S_IFBLK'
                        'S_IFCHR'
                        'mknod'
                        'makedev'
                        'devmajor'
                        'devminor'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'mode'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a character or block device called targetpath.\n        '
                        'mknod'
                        'makedev'
                        'special devices not supported by system'
                        None
                        384
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_GLOBAL                     1: os
                        4       LOAD_CONST                      1: 'mknod'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_GLOBAL                     0: hasattr
                        12      LOAD_GLOBAL                     1: os
                        14      LOAD_CONST                      2: 'makedev'
                        16      CALL_FUNCTION                   2
                        18      POP_JUMP_IF_TRUE                14 (to 28)
                        20      LOAD_GLOBAL                     2: ExtractError
                        22      LOAD_CONST                      3: 'special devices not supported by system'
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_FAST                       1: tarinfo
                        30      LOAD_ATTR                       3: mode
                        32      STORE_FAST                      3: mode
                        34      LOAD_FAST                       3: mode
                        36      LOAD_CONST                      4: None
                        38      IS_OP                           0 (is)
                        40      POP_JUMP_IF_FALSE               23 (to 46)
                        42      LOAD_CONST                      5: 384
                        44      STORE_FAST                      3: mode
                        46      LOAD_FAST                       1: tarinfo
                        48      LOAD_METHOD                     4: isblk
                        50      CALL_METHOD                     0
                        52      POP_JUMP_IF_FALSE               33 (to 66)
                        54      LOAD_FAST                       3: mode
                        56      LOAD_GLOBAL                     5: stat
                        58      LOAD_ATTR                       6: S_IFBLK
                        60      INPLACE_OR                      
                        62      STORE_FAST                      3: mode
                        64      JUMP_FORWARD                    5 (to 76)
                        66      LOAD_FAST                       3: mode
                        68      LOAD_GLOBAL                     5: stat
                        70      LOAD_ATTR                       7: S_IFCHR
                        72      INPLACE_OR                      
                        74      STORE_FAST                      3: mode
                        76      LOAD_GLOBAL                     1: os
                        78      LOAD_METHOD                     8: mknod
                        80      LOAD_FAST                       2: targetpath
                        82      LOAD_FAST                       3: mode
                        84      LOAD_GLOBAL                     1: os
                        86      LOAD_METHOD                     9: makedev
                        88      LOAD_FAST                       1: tarinfo
                        90      LOAD_ATTR                       10: devmajor
                        92      LOAD_FAST                       1: tarinfo
                        94      LOAD_ATTR                       11: devminor
                        96      CALL_METHOD                     2
                        98      CALL_METHOD                     3
                        100     POP_TOP                         
                        102     LOAD_CONST                      4: None
                        104     RETURN_VALUE                    
                'TarFile.makedev'
                [Code]
                    File Name: tarfile.py
                    Object Name: makelink
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'issym'
                        'os'
                        'path'
                        'lexists'
                        'unlink'
                        'symlink'
                        'linkname'
                        'exists'
                        '_link_target'
                        'link'
                        '_extract_member'
                        '_find_link_target'
                        'symlink_exception'
                        'KeyError'
                        'ExtractError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Make a (symbolic) link called targetpath. If it cannot be created\n          (platform limitation), we try to make a copy of the referenced file\n          instead of a link.\n        '
                        'unable to resolve link inside archive'
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   54 (to 110)
                        2       LOAD_FAST                       1: tarinfo
                        4       LOAD_METHOD                     0: issym
                        6       CALL_METHOD                     0
                        8       POP_JUMP_IF_FALSE               26 (to 52)
                        10      LOAD_GLOBAL                     1: os
                        12      LOAD_ATTR                       2: path
                        14      LOAD_METHOD                     3: lexists
                        16      LOAD_FAST                       2: targetpath
                        18      CALL_METHOD                     1
                        20      POP_JUMP_IF_FALSE               16 (to 32)
                        22      LOAD_GLOBAL                     1: os
                        24      LOAD_METHOD                     4: unlink
                        26      LOAD_FAST                       2: targetpath
                        28      CALL_METHOD                     1
                        30      POP_TOP                         
                        32      LOAD_GLOBAL                     1: os
                        34      LOAD_METHOD                     5: symlink
                        36      LOAD_FAST                       1: tarinfo
                        38      LOAD_ATTR                       6: linkname
                        40      LOAD_FAST                       2: targetpath
                        42      CALL_METHOD                     2
                        44      POP_TOP                         
                        46      POP_BLOCK                       
                        48      LOAD_CONST                      2: None
                        50      RETURN_VALUE                    
                        52      LOAD_GLOBAL                     1: os
                        54      LOAD_ATTR                       2: path
                        56      LOAD_METHOD                     7: exists
                        58      LOAD_FAST                       1: tarinfo
                        60      LOAD_ATTR                       8: _link_target
                        62      CALL_METHOD                     1
                        64      POP_JUMP_IF_FALSE               43 (to 86)
                        66      LOAD_GLOBAL                     1: os
                        68      LOAD_METHOD                     9: link
                        70      LOAD_FAST                       1: tarinfo
                        72      LOAD_ATTR                       8: _link_target
                        74      LOAD_FAST                       2: targetpath
                        76      CALL_METHOD                     2
                        78      POP_TOP                         
                        80      POP_BLOCK                       
                        82      LOAD_CONST                      2: None
                        84      RETURN_VALUE                    
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     10: _extract_member
                        90      LOAD_FAST                       0: self
                        92      LOAD_METHOD                     11: _find_link_target
                        94      LOAD_FAST                       1: tarinfo
                        96      CALL_METHOD                     1
                        98      LOAD_FAST                       2: targetpath
                        100     CALL_METHOD                     2
                        102     POP_TOP                         
                        104     POP_BLOCK                       
                        106     LOAD_CONST                      2: None
                        108     RETURN_VALUE                    
                        110     DUP_TOP                         
                        112     LOAD_GLOBAL                     12: symlink_exception
                        114     JUMP_IF_NOT_EXC_MATCH           87 (to 174)
                        116     POP_TOP                         
                        118     POP_TOP                         
                        120     POP_TOP                         
                        122     SETUP_FINALLY                   13 (to 150)
                        124     LOAD_FAST                       0: self
                        126     LOAD_METHOD                     10: _extract_member
                        128     LOAD_FAST                       0: self
                        130     LOAD_METHOD                     11: _find_link_target
                        132     LOAD_FAST                       1: tarinfo
                        134     CALL_METHOD                     1
                        136     LOAD_FAST                       2: targetpath
                        138     CALL_METHOD                     2
                        140     POP_TOP                         
                        142     POP_BLOCK                       
                        144     POP_EXCEPT                      
                        146     LOAD_CONST                      2: None
                        148     RETURN_VALUE                    
                        150     DUP_TOP                         
                        152     LOAD_GLOBAL                     13: KeyError
                        154     JUMP_IF_NOT_EXC_MATCH           86 (to 172)
                        156     POP_TOP                         
                        158     POP_TOP                         
                        160     POP_TOP                         
                        162     LOAD_GLOBAL                     14: ExtractError
                        164     LOAD_CONST                      1: 'unable to resolve link inside archive'
                        166     CALL_FUNCTION                   1
                        168     LOAD_CONST                      2: None
                        170     RAISE_VARARGS                   2
                        172     RERAISE                         0
                        174     RERAISE                         0
                'TarFile.makelink'
                [Code]
                    File Name: tarfile.py
                    Object Name: chown
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'hasattr'
                        'os'
                        'geteuid'
                        'gid'
                        'uid'
                        'grp'
                        'gname'
                        'getgrnam'
                        'KeyError'
                        'pwd'
                        'uname'
                        'getpwnam'
                        'issym'
                        'lchown'
                        'chown'
                        'OSError'
                        'ExtractError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'numeric_owner'
                        'g'
                        'u'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set owner of targetpath according to tarinfo. If numeric_owner\n           is True, use .gid/.uid instead of .gname/.uname. If numeric_owner\n           is False, fall back to .gid/.uid when the search based on name\n           fails.\n        '
                        'geteuid'
                        0
                        2
                        None
                        -1
                        'lchown'
                        'could not change owner'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: hasattr
                        2       LOAD_GLOBAL                     1: os
                        4       LOAD_CONST                      1: 'geteuid'
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               128 (to 256)
                        10      LOAD_GLOBAL                     1: os
                        12      LOAD_METHOD                     2: geteuid
                        14      CALL_METHOD                     0
                        16      LOAD_CONST                      2: 0
                        18      COMPARE_OP                      2 (==)
                        20      POP_JUMP_IF_FALSE               130 (to 260)
                        22      LOAD_FAST                       1: tarinfo
                        24      LOAD_ATTR                       3: gid
                        26      STORE_FAST                      4: g
                        28      LOAD_FAST                       1: tarinfo
                        30      LOAD_ATTR                       4: uid
                        32      STORE_FAST                      5: u
                        34      LOAD_FAST                       3: numeric_owner
                        36      POP_JUMP_IF_TRUE                69 (to 138)
                        38      SETUP_FINALLY                   15 (to 70)
                        40      LOAD_GLOBAL                     5: grp
                        42      POP_JUMP_IF_FALSE               33 (to 66)
                        44      LOAD_FAST                       1: tarinfo
                        46      LOAD_ATTR                       6: gname
                        48      POP_JUMP_IF_FALSE               33 (to 66)
                        50      LOAD_GLOBAL                     5: grp
                        52      LOAD_METHOD                     7: getgrnam
                        54      LOAD_FAST                       1: tarinfo
                        56      LOAD_ATTR                       6: gname
                        58      CALL_METHOD                     1
                        60      LOAD_CONST                      3: 2
                        62      BINARY_SUBSCR                   
                        64      STORE_FAST                      4: g
                        66      POP_BLOCK                       
                        68      JUMP_FORWARD                    9 (to 88)
                        70      DUP_TOP                         
                        72      LOAD_GLOBAL                     8: KeyError
                        74      JUMP_IF_NOT_EXC_MATCH           43 (to 86)
                        76      POP_TOP                         
                        78      POP_TOP                         
                        80      POP_TOP                         
                        82      POP_EXCEPT                      
                        84      JUMP_FORWARD                    1 (to 88)
                        86      RERAISE                         0
                        88      SETUP_FINALLY                   15 (to 120)
                        90      LOAD_GLOBAL                     9: pwd
                        92      POP_JUMP_IF_FALSE               58 (to 116)
                        94      LOAD_FAST                       1: tarinfo
                        96      LOAD_ATTR                       10: uname
                        98      POP_JUMP_IF_FALSE               58 (to 116)
                        100     LOAD_GLOBAL                     9: pwd
                        102     LOAD_METHOD                     11: getpwnam
                        104     LOAD_FAST                       1: tarinfo
                        106     LOAD_ATTR                       10: uname
                        108     CALL_METHOD                     1
                        110     LOAD_CONST                      3: 2
                        112     BINARY_SUBSCR                   
                        114     STORE_FAST                      5: u
                        116     POP_BLOCK                       
                        118     JUMP_FORWARD                    9 (to 138)
                        120     DUP_TOP                         
                        122     LOAD_GLOBAL                     8: KeyError
                        124     JUMP_IF_NOT_EXC_MATCH           68 (to 136)
                        126     POP_TOP                         
                        128     POP_TOP                         
                        130     POP_TOP                         
                        132     POP_EXCEPT                      
                        134     JUMP_FORWARD                    1 (to 138)
                        136     RERAISE                         0
                        138     LOAD_FAST                       4: g
                        140     LOAD_CONST                      4: None
                        142     IS_OP                           0 (is)
                        144     POP_JUMP_IF_FALSE               75 (to 150)
                        146     LOAD_CONST                      5: -1
                        148     STORE_FAST                      4: g
                        150     LOAD_FAST                       5: u
                        152     LOAD_CONST                      4: None
                        154     IS_OP                           0 (is)
                        156     POP_JUMP_IF_FALSE               81 (to 162)
                        158     LOAD_CONST                      5: -1
                        160     STORE_FAST                      5: u
                        162     SETUP_FINALLY                   29 (to 222)
                        164     LOAD_FAST                       1: tarinfo
                        166     LOAD_METHOD                     12: issym
                        168     CALL_METHOD                     0
                        170     POP_JUMP_IF_FALSE               101 (to 202)
                        172     LOAD_GLOBAL                     0: hasattr
                        174     LOAD_GLOBAL                     1: os
                        176     LOAD_CONST                      6: 'lchown'
                        178     CALL_FUNCTION                   2
                        180     POP_JUMP_IF_FALSE               101 (to 202)
                        182     LOAD_GLOBAL                     1: os
                        184     LOAD_METHOD                     13: lchown
                        186     LOAD_FAST                       2: targetpath
                        188     LOAD_FAST                       5: u
                        190     LOAD_FAST                       4: g
                        192     CALL_METHOD                     3
                        194     POP_TOP                         
                        196     POP_BLOCK                       
                        198     LOAD_CONST                      4: None
                        200     RETURN_VALUE                    
                        202     LOAD_GLOBAL                     1: os
                        204     LOAD_METHOD                     14: chown
                        206     LOAD_FAST                       2: targetpath
                        208     LOAD_FAST                       5: u
                        210     LOAD_FAST                       4: g
                        212     CALL_METHOD                     3
                        214     POP_TOP                         
                        216     POP_BLOCK                       
                        218     LOAD_CONST                      4: None
                        220     RETURN_VALUE                    
                        222     DUP_TOP                         
                        224     LOAD_GLOBAL                     15: OSError
                        226     JUMP_IF_NOT_EXC_MATCH           127 (to 254)
                        228     POP_TOP                         
                        230     STORE_FAST                      6: e
                        232     POP_TOP                         
                        234     SETUP_FINALLY                   5 (to 246)
                        236     LOAD_GLOBAL                     16: ExtractError
                        238     LOAD_CONST                      7: 'could not change owner'
                        240     CALL_FUNCTION                   1
                        242     LOAD_FAST                       6: e
                        244     RAISE_VARARGS                   2
                        246     LOAD_CONST                      4: None
                        248     STORE_FAST                      6: e
                        250     DELETE_FAST                     6: e
                        252     RERAISE                         1
                        254     RERAISE                         0
                        256     LOAD_CONST                      4: None
                        258     RETURN_VALUE                    
                        260     LOAD_CONST                      4: None
                        262     RETURN_VALUE                    
                'TarFile.chown'
                [Code]
                    File Name: tarfile.py
                    Object Name: chmod
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'mode'
                        'os'
                        'chmod'
                        'OSError'
                        'ExtractError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set file permissions of targetpath according to tarinfo.\n        '
                        None
                        'could not change mode'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_ATTR                       0: mode
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      SETUP_FINALLY                   10 (to 36)
                        16      LOAD_GLOBAL                     1: os
                        18      LOAD_METHOD                     2: chmod
                        20      LOAD_FAST                       2: targetpath
                        22      LOAD_FAST                       1: tarinfo
                        24      LOAD_ATTR                       0: mode
                        26      CALL_METHOD                     2
                        28      POP_TOP                         
                        30      POP_BLOCK                       
                        32      LOAD_CONST                      1: None
                        34      RETURN_VALUE                    
                        36      DUP_TOP                         
                        38      LOAD_GLOBAL                     3: OSError
                        40      JUMP_IF_NOT_EXC_MATCH           34 (to 68)
                        42      POP_TOP                         
                        44      STORE_FAST                      3: e
                        46      POP_TOP                         
                        48      SETUP_FINALLY                   5 (to 60)
                        50      LOAD_GLOBAL                     4: ExtractError
                        52      LOAD_CONST                      2: 'could not change mode'
                        54      CALL_FUNCTION                   1
                        56      LOAD_FAST                       3: e
                        58      RAISE_VARARGS                   2
                        60      LOAD_CONST                      1: None
                        62      STORE_FAST                      3: e
                        64      DELETE_FAST                     3: e
                        66      RERAISE                         1
                        68      RERAISE                         0
                'TarFile.chmod'
                [Code]
                    File Name: tarfile.py
                    Object Name: utime
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 10
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'mtime'
                        'hasattr'
                        'os'
                        'utime'
                        'OSError'
                        'ExtractError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'targetpath'
                        'mtime'
                        'e'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set modification time of targetpath according to tarinfo.\n        '
                        None
                        'utime'
                        'could not change modification time'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_ATTR                       0: mtime
                        4       STORE_FAST                      3: mtime
                        6       LOAD_FAST                       3: mtime
                        8       LOAD_CONST                      1: None
                        10      IS_OP                           0 (is)
                        12      POP_JUMP_IF_FALSE               9 (to 18)
                        14      LOAD_CONST                      1: None
                        16      RETURN_VALUE                    
                        18      LOAD_GLOBAL                     1: hasattr
                        20      LOAD_GLOBAL                     2: os
                        22      LOAD_CONST                      2: 'utime'
                        24      CALL_FUNCTION                   2
                        26      POP_JUMP_IF_TRUE                16 (to 32)
                        28      LOAD_CONST                      1: None
                        30      RETURN_VALUE                    
                        32      SETUP_FINALLY                   11 (to 56)
                        34      LOAD_GLOBAL                     2: os
                        36      LOAD_METHOD                     3: utime
                        38      LOAD_FAST                       2: targetpath
                        40      LOAD_FAST                       3: mtime
                        42      LOAD_FAST                       3: mtime
                        44      BUILD_TUPLE                     2
                        46      CALL_METHOD                     2
                        48      POP_TOP                         
                        50      POP_BLOCK                       
                        52      LOAD_CONST                      1: None
                        54      RETURN_VALUE                    
                        56      DUP_TOP                         
                        58      LOAD_GLOBAL                     4: OSError
                        60      JUMP_IF_NOT_EXC_MATCH           44 (to 88)
                        62      POP_TOP                         
                        64      STORE_FAST                      4: e
                        66      POP_TOP                         
                        68      SETUP_FINALLY                   5 (to 80)
                        70      LOAD_GLOBAL                     5: ExtractError
                        72      LOAD_CONST                      3: 'could not change modification time'
                        74      CALL_FUNCTION                   1
                        76      LOAD_FAST                       4: e
                        78      RAISE_VARARGS                   2
                        80      LOAD_CONST                      1: None
                        82      STORE_FAST                      4: e
                        84      DELETE_FAST                     4: e
                        86      RERAISE                         1
                        88      RERAISE                         0
                'TarFile.utime'
                [Code]
                    File Name: tarfile.py
                    Object Name: next
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 11
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                        'firstmember'
                        'offset'
                        'fileobj'
                        'tell'
                        'seek'
                        'read'
                        'ReadError'
                        'tarinfo'
                        'fromtarfile'
                        'EOFHeaderError'
                        'ignore_zeros'
                        '_dbg'
                        'BLOCKSIZE'
                        'InvalidHeaderError'
                        'str'
                        'EmptyHeaderError'
                        'TruncatedHeaderError'
                        'SubsequentHeaderError'
                        'Exception'
                        'zlib'
                        'isinstance'
                        'error'
                        'ImportError'
                        'members'
                        'append'
                        '_loaded'
                    [Var Names]
                        'self'
                        'm'
                        'tarinfo'
                        'e'
                        'zlib'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the next member of the archive as a TarInfo object, when\n           TarFile is opened for reading. Return None if there is no more\n           available.\n        '
                        'ra'
                        None
                        1
                        'unexpected end of data'
                        True
                        2
                        '0x%X: %s'
                        0
                        'empty file'
                        'zlib error: '
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       LOAD_CONST                      1: 'ra'
                        6       CALL_METHOD                     1
                        8       POP_TOP                         
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: firstmember
                        14      LOAD_CONST                      2: None
                        16      IS_OP                           1 (is not)
                        18      POP_JUMP_IF_FALSE               18 (to 36)
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: firstmember
                        24      STORE_FAST                      1: m
                        26      LOAD_CONST                      2: None
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      1: firstmember
                        32      LOAD_FAST                       1: m
                        34      RETURN_VALUE                    
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: offset
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       3: fileobj
                        44      LOAD_METHOD                     4: tell
                        46      CALL_METHOD                     0
                        48      COMPARE_OP                      3 (!=)
                        50      POP_JUMP_IF_FALSE               45 (to 90)
                        52      LOAD_FAST                       0: self
                        54      LOAD_ATTR                       3: fileobj
                        56      LOAD_METHOD                     5: seek
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       2: offset
                        62      LOAD_CONST                      3: 1
                        64      BINARY_SUBTRACT                 
                        66      CALL_METHOD                     1
                        68      POP_TOP                         
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       3: fileobj
                        74      LOAD_METHOD                     6: read
                        76      LOAD_CONST                      3: 1
                        78      CALL_METHOD                     1
                        80      POP_JUMP_IF_TRUE                45 (to 90)
                        82      LOAD_GLOBAL                     7: ReadError
                        84      LOAD_CONST                      4: 'unexpected end of data'
                        86      CALL_FUNCTION                   1
                        88      RAISE_VARARGS                   1
                        90      LOAD_CONST                      2: None
                        92      STORE_FAST                      2: tarinfo
                        94      NOP                             
                        96      SETUP_FINALLY                   8 (to 114)
                        98      LOAD_FAST                       0: self
                        100     LOAD_ATTR                       8: tarinfo
                        102     LOAD_METHOD                     9: fromtarfile
                        104     LOAD_FAST                       0: self
                        106     CALL_METHOD                     1
                        108     STORE_FAST                      2: tarinfo
                        110     POP_BLOCK                       
                        112     JUMP_FORWARD                    209 (to 532)
                        114     DUP_TOP                         
                        116     LOAD_GLOBAL                     10: EOFHeaderError
                        118     JUMP_IF_NOT_EXC_MATCH           101 (to 202)
                        120     POP_TOP                         
                        122     STORE_FAST                      3: e
                        124     POP_TOP                         
                        126     SETUP_FINALLY                   33 (to 194)
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       11: ignore_zeros
                        132     POP_JUMP_IF_FALSE               91 (to 182)
                        134     LOAD_FAST                       0: self
                        136     LOAD_METHOD                     12: _dbg
                        138     LOAD_CONST                      6: 2
                        140     LOAD_CONST                      7: '0x%X: %s'
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       2: offset
                        146     LOAD_FAST                       3: e
                        148     BUILD_TUPLE                     2
                        150     BINARY_MODULO                   
                        152     CALL_METHOD                     2
                        154     POP_TOP                         
                        156     LOAD_FAST                       0: self
                        158     DUP_TOP                         
                        160     LOAD_ATTR                       2: offset
                        162     LOAD_GLOBAL                     13: BLOCKSIZE
                        164     INPLACE_ADD                     
                        166     ROT_TWO                         
                        168     STORE_ATTR                      2: offset
                        170     POP_BLOCK                       
                        172     POP_EXCEPT                      
                        174     LOAD_CONST                      2: None
                        176     STORE_FAST                      3: e
                        178     DELETE_FAST                     3: e
                        180     JUMP_ABSOLUTE                   47 (to 94)
                        182     POP_BLOCK                       
                        184     POP_EXCEPT                      
                        186     LOAD_CONST                      2: None
                        188     STORE_FAST                      3: e
                        190     DELETE_FAST                     3: e
                        192     JUMP_FORWARD                    169 (to 532)
                        194     LOAD_CONST                      2: None
                        196     STORE_FAST                      3: e
                        198     DELETE_FAST                     3: e
                        200     RERAISE                         1
                        202     DUP_TOP                         
                        204     LOAD_GLOBAL                     14: InvalidHeaderError
                        206     JUMP_IF_NOT_EXC_MATCH           157 (to 314)
                        208     POP_TOP                         
                        210     STORE_FAST                      3: e
                        212     POP_TOP                         
                        214     SETUP_FINALLY                   45 (to 306)
                        216     LOAD_FAST                       0: self
                        218     LOAD_ATTR                       11: ignore_zeros
                        220     POP_JUMP_IF_FALSE               135 (to 270)
                        222     LOAD_FAST                       0: self
                        224     LOAD_METHOD                     12: _dbg
                        226     LOAD_CONST                      6: 2
                        228     LOAD_CONST                      7: '0x%X: %s'
                        230     LOAD_FAST                       0: self
                        232     LOAD_ATTR                       2: offset
                        234     LOAD_FAST                       3: e
                        236     BUILD_TUPLE                     2
                        238     BINARY_MODULO                   
                        240     CALL_METHOD                     2
                        242     POP_TOP                         
                        244     LOAD_FAST                       0: self
                        246     DUP_TOP                         
                        248     LOAD_ATTR                       2: offset
                        250     LOAD_GLOBAL                     13: BLOCKSIZE
                        252     INPLACE_ADD                     
                        254     ROT_TWO                         
                        256     STORE_ATTR                      2: offset
                        258     POP_BLOCK                       
                        260     POP_EXCEPT                      
                        262     LOAD_CONST                      2: None
                        264     STORE_FAST                      3: e
                        266     DELETE_FAST                     3: e
                        268     JUMP_ABSOLUTE                   47 (to 94)
                        270     LOAD_FAST                       0: self
                        272     LOAD_ATTR                       2: offset
                        274     LOAD_CONST                      8: 0
                        276     COMPARE_OP                      2 (==)
                        278     POP_JUMP_IF_FALSE               147 (to 294)
                        280     LOAD_GLOBAL                     7: ReadError
                        282     LOAD_GLOBAL                     15: str
                        284     LOAD_FAST                       3: e
                        286     CALL_FUNCTION                   1
                        288     CALL_FUNCTION                   1
                        290     LOAD_CONST                      2: None
                        292     RAISE_VARARGS                   2
                        294     POP_BLOCK                       
                        296     POP_EXCEPT                      
                        298     LOAD_CONST                      2: None
                        300     STORE_FAST                      3: e
                        302     DELETE_FAST                     3: e
                        304     JUMP_FORWARD                    113 (to 532)
                        306     LOAD_CONST                      2: None
                        308     STORE_FAST                      3: e
                        310     DELETE_FAST                     3: e
                        312     RERAISE                         1
                        314     DUP_TOP                         
                        316     LOAD_GLOBAL                     16: EmptyHeaderError
                        318     JUMP_IF_NOT_EXC_MATCH           175 (to 350)
                        320     POP_TOP                         
                        322     POP_TOP                         
                        324     POP_TOP                         
                        326     LOAD_FAST                       0: self
                        328     LOAD_ATTR                       2: offset
                        330     LOAD_CONST                      8: 0
                        332     COMPARE_OP                      2 (==)
                        334     POP_JUMP_IF_FALSE               173 (to 346)
                        336     LOAD_GLOBAL                     7: ReadError
                        338     LOAD_CONST                      9: 'empty file'
                        340     CALL_FUNCTION                   1
                        342     LOAD_CONST                      2: None
                        344     RAISE_VARARGS                   2
                        346     POP_EXCEPT                      
                        348     JUMP_FORWARD                    91 (to 532)
                        350     DUP_TOP                         
                        352     LOAD_GLOBAL                     17: TruncatedHeaderError
                        354     JUMP_IF_NOT_EXC_MATCH           204 (to 408)
                        356     POP_TOP                         
                        358     STORE_FAST                      3: e
                        360     POP_TOP                         
                        362     SETUP_FINALLY                   18 (to 400)
                        364     LOAD_FAST                       0: self
                        366     LOAD_ATTR                       2: offset
                        368     LOAD_CONST                      8: 0
                        370     COMPARE_OP                      2 (==)
                        372     POP_JUMP_IF_FALSE               194 (to 388)
                        374     LOAD_GLOBAL                     7: ReadError
                        376     LOAD_GLOBAL                     15: str
                        378     LOAD_FAST                       3: e
                        380     CALL_FUNCTION                   1
                        382     CALL_FUNCTION                   1
                        384     LOAD_CONST                      2: None
                        386     RAISE_VARARGS                   2
                        388     POP_BLOCK                       
                        390     POP_EXCEPT                      
                        392     LOAD_CONST                      2: None
                        394     STORE_FAST                      3: e
                        396     DELETE_FAST                     3: e
                        398     JUMP_FORWARD                    66 (to 532)
                        400     LOAD_CONST                      2: None
                        402     STORE_FAST                      3: e
                        404     DELETE_FAST                     3: e
                        406     RERAISE                         1
                        408     DUP_TOP                         
                        410     LOAD_GLOBAL                     18: SubsequentHeaderError
                        412     JUMP_IF_NOT_EXC_MATCH           222 (to 444)
                        414     POP_TOP                         
                        416     STORE_FAST                      3: e
                        418     POP_TOP                         
                        420     SETUP_FINALLY                   7 (to 436)
                        422     LOAD_GLOBAL                     7: ReadError
                        424     LOAD_GLOBAL                     15: str
                        426     LOAD_FAST                       3: e
                        428     CALL_FUNCTION                   1
                        430     CALL_FUNCTION                   1
                        432     LOAD_CONST                      2: None
                        434     RAISE_VARARGS                   2
                        436     LOAD_CONST                      2: None
                        438     STORE_FAST                      3: e
                        440     DELETE_FAST                     3: e
                        442     RERAISE                         1
                        444     DUP_TOP                         
                        446     LOAD_GLOBAL                     19: Exception
                        448     JUMP_IF_NOT_EXC_MATCH           265 (to 530)
                        452     POP_TOP                         
                        454     STORE_FAST                      3: e
                        456     POP_TOP                         
                        458     SETUP_FINALLY                   31 (to 522)
                        460     SETUP_FINALLY                   20 (to 502)
                        462     LOAD_CONST                      8: 0
                        464     LOAD_CONST                      2: None
                        466     IMPORT_NAME                     20: zlib
                        468     STORE_FAST                      4: zlib
                        470     LOAD_GLOBAL                     21: isinstance
                        472     LOAD_FAST                       3: e
                        474     LOAD_FAST                       4: zlib
                        476     LOAD_ATTR                       22: error
                        478     CALL_FUNCTION                   2
                        480     POP_JUMP_IF_FALSE               249 (to 498)
                        482     LOAD_GLOBAL                     7: ReadError
                        484     LOAD_CONST                      10: 'zlib error: '
                        486     LOAD_FAST                       3: e
                        488     FORMAT_VALUE                    0 (FVC_NONE)
                        490     BUILD_STRING                    2
                        492     CALL_FUNCTION                   1
                        494     LOAD_CONST                      2: None
                        496     RAISE_VARARGS                   2
                        498     LOAD_FAST                       3: e
                        500     RAISE_VARARGS                   1
                        502     DUP_TOP                         
                        504     LOAD_GLOBAL                     23: ImportError
                        506     JUMP_IF_NOT_EXC_MATCH           260 (to 520)
                        510     POP_TOP                         
                        512     POP_TOP                         
                        514     POP_TOP                         
                        516     LOAD_FAST                       3: e
                        518     RAISE_VARARGS                   1
                        520     RERAISE                         0
                        522     LOAD_CONST                      2: None
                        524     STORE_FAST                      3: e
                        526     DELETE_FAST                     3: e
                        528     RERAISE                         1
                        530     RERAISE                         0
                        532     NOP                             
                        534     LOAD_FAST                       2: tarinfo
                        536     LOAD_CONST                      2: None
                        538     IS_OP                           1 (is not)
                        540     POP_JUMP_IF_FALSE               280 (to 560)
                        544     LOAD_FAST                       0: self
                        546     LOAD_ATTR                       24: members
                        548     LOAD_METHOD                     25: append
                        550     LOAD_FAST                       2: tarinfo
                        552     CALL_METHOD                     1
                        554     POP_TOP                         
                        556     LOAD_FAST                       2: tarinfo
                        558     RETURN_VALUE                    
                        560     LOAD_CONST                      5: True
                        562     LOAD_FAST                       0: self
                        564     STORE_ATTR                      26: _loaded
                        566     LOAD_FAST                       2: tarinfo
                        568     RETURN_VALUE                    
                'TarFile.next'
                [Code]
                    File Name: tarfile.py
                    Object Name: _getmember
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 9
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'getmembers'
                        'index'
                        'ValueError'
                        'os'
                        'path'
                        'normpath'
                        'reversed'
                        'offset'
                        'name'
                    [Var Names]
                        'self'
                        'name'
                        'tarinfo'
                        'normalize'
                        'members'
                        'skipping'
                        'index'
                        'member'
                        'member_name'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Find an archive member by name from bottom to top.\n           If tarinfo is given, it is used as the starting point.\n        '
                        False
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: getmembers
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      4: members
                        8       LOAD_CONST                      1: False
                        10      STORE_FAST                      5: skipping
                        12      LOAD_FAST                       2: tarinfo
                        14      LOAD_CONST                      2: None
                        16      IS_OP                           1 (is not)
                        18      POP_JUMP_IF_FALSE               35 (to 70)
                        20      SETUP_FINALLY                   7 (to 36)
                        22      LOAD_FAST                       4: members
                        24      LOAD_METHOD                     1: index
                        26      LOAD_FAST                       2: tarinfo
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      6: index
                        32      POP_BLOCK                       
                        34      JUMP_FORWARD                    11 (to 58)
                        36      DUP_TOP                         
                        38      LOAD_GLOBAL                     2: ValueError
                        40      JUMP_IF_NOT_EXC_MATCH           28 (to 56)
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      LOAD_CONST                      3: True
                        50      STORE_FAST                      5: skipping
                        52      POP_EXCEPT                      
                        54      JUMP_FORWARD                    7 (to 70)
                        56      RERAISE                         0
                        58      LOAD_FAST                       4: members
                        60      LOAD_CONST                      2: None
                        62      LOAD_FAST                       6: index
                        64      BUILD_SLICE                     2
                        66      BINARY_SUBSCR                   
                        68      STORE_FAST                      4: members
                        70      LOAD_FAST                       3: normalize
                        72      POP_JUMP_IF_FALSE               43 (to 86)
                        74      LOAD_GLOBAL                     3: os
                        76      LOAD_ATTR                       4: path
                        78      LOAD_METHOD                     5: normpath
                        80      LOAD_FAST                       1: name
                        82      CALL_METHOD                     1
                        84      STORE_FAST                      1: name
                        86      LOAD_GLOBAL                     6: reversed
                        88      LOAD_FAST                       4: members
                        90      CALL_FUNCTION                   1
                        92      GET_ITER                        
                        94      FOR_ITER                        34 (to 164)
                        96      STORE_FAST                      7: member
                        98      LOAD_FAST                       5: skipping
                        100     POP_JUMP_IF_FALSE               60 (to 120)
                        102     LOAD_FAST                       2: tarinfo
                        104     LOAD_ATTR                       7: offset
                        106     LOAD_FAST                       7: member
                        108     LOAD_ATTR                       7: offset
                        110     COMPARE_OP                      2 (==)
                        112     POP_JUMP_IF_FALSE               59 (to 118)
                        114     LOAD_CONST                      1: False
                        116     STORE_FAST                      5: skipping
                        118     JUMP_ABSOLUTE                   47 (to 94)
                        120     LOAD_FAST                       3: normalize
                        122     POP_JUMP_IF_FALSE               70 (to 140)
                        124     LOAD_GLOBAL                     3: os
                        126     LOAD_ATTR                       4: path
                        128     LOAD_METHOD                     5: normpath
                        130     LOAD_FAST                       7: member
                        132     LOAD_ATTR                       8: name
                        134     CALL_METHOD                     1
                        136     STORE_FAST                      8: member_name
                        138     JUMP_FORWARD                    3 (to 146)
                        140     LOAD_FAST                       7: member
                        142     LOAD_ATTR                       8: name
                        144     STORE_FAST                      8: member_name
                        146     LOAD_FAST                       1: name
                        148     LOAD_FAST                       8: member_name
                        150     COMPARE_OP                      2 (==)
                        152     POP_JUMP_IF_FALSE               81 (to 162)
                        154     LOAD_FAST                       7: member
                        156     ROT_TWO                         
                        158     POP_TOP                         
                        160     RETURN_VALUE                    
                        162     JUMP_ABSOLUTE                   47 (to 94)
                        164     LOAD_FAST                       5: skipping
                        166     POP_JUMP_IF_FALSE               88 (to 176)
                        168     LOAD_GLOBAL                     2: ValueError
                        170     LOAD_FAST                       2: tarinfo
                        172     CALL_FUNCTION                   1
                        174     RAISE_VARARGS                   1
                        176     LOAD_CONST                      2: None
                        178     RETURN_VALUE                    
                'TarFile._getmember'
                [Code]
                    File Name: tarfile.py
                    Object Name: _load
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'next'
                        '_loaded'
                    [Var Names]
                        'self'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read through the entire archive file and look for readable\n           members.\n        '
                        True
                        None
                    [Disassembly]
                        0       NOP                             
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     0: next
                        6       CALL_METHOD                     0
                        8       STORE_FAST                      1: tarinfo
                        10      LOAD_FAST                       1: tarinfo
                        12      LOAD_CONST                      2: None
                        14      IS_OP                           0 (is)
                        16      POP_JUMP_IF_FALSE               10 (to 20)
                        18      JUMP_FORWARD                    1 (to 22)
                        20      JUMP_ABSOLUTE                   1 (to 2)
                        22      LOAD_CONST                      1: True
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      1: _loaded
                        28      LOAD_CONST                      2: None
                        30      RETURN_VALUE                    
                'TarFile._load'
                [Code]
                    File Name: tarfile.py
                    Object Name: _check
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'OSError'
                        '__class__'
                        '__name__'
                        'mode'
                    [Var Names]
                        'self'
                        'mode'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Check if TarFile is still open, and if the operation's mode\n           corresponds to TarFile's mode.\n        "
                        '%s is closed'
                        None
                        'bad operation for mode %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               11 (to 22)
                        6       LOAD_GLOBAL                     1: OSError
                        8       LOAD_CONST                      1: '%s is closed'
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: __class__
                        14      LOAD_ATTR                       3: __name__
                        16      BINARY_MODULO                   
                        18      CALL_FUNCTION                   1
                        20      RAISE_VARARGS                   1
                        22      LOAD_FAST                       1: mode
                        24      LOAD_CONST                      2: None
                        26      IS_OP                           1 (is not)
                        28      POP_JUMP_IF_FALSE               27 (to 54)
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       4: mode
                        34      LOAD_FAST                       1: mode
                        36      CONTAINS_OP                     1 (not in)
                        38      POP_JUMP_IF_FALSE               29 (to 58)
                        40      LOAD_GLOBAL                     1: OSError
                        42      LOAD_CONST                      3: 'bad operation for mode %r'
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       4: mode
                        48      BINARY_MODULO                   
                        50      CALL_FUNCTION                   1
                        52      RAISE_VARARGS                   1
                        54      LOAD_CONST                      2: None
                        56      RETURN_VALUE                    
                        58      LOAD_CONST                      2: None
                        60      RETURN_VALUE                    
                'TarFile._check'
                [Code]
                    File Name: tarfile.py
                    Object Name: _find_link_target
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'issym'
                        'join'
                        'filter'
                        'os'
                        'path'
                        'dirname'
                        'name'
                        'linkname'
                        '_getmember'
                        'KeyError'
                    [Var Names]
                        'self'
                        'tarinfo'
                        'linkname'
                        'limit'
                        'member'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Find the target member of a symlink or hardlink member in the\n           archive.\n        '
                        '/'
                        None
                        True
                        (
                            'tarinfo'
                            'normalize'
                        )
                        'linkname %r not found'
                    [Disassembly]
                        0       LOAD_FAST                       1: tarinfo
                        2       LOAD_METHOD                     0: issym
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               23 (to 46)
                        8       LOAD_CONST                      1: '/'
                        10      LOAD_METHOD                     1: join
                        12      LOAD_GLOBAL                     2: filter
                        14      LOAD_CONST                      2: None
                        16      LOAD_GLOBAL                     3: os
                        18      LOAD_ATTR                       4: path
                        20      LOAD_METHOD                     5: dirname
                        22      LOAD_FAST                       1: tarinfo
                        24      LOAD_ATTR                       6: name
                        26      CALL_METHOD                     1
                        28      LOAD_FAST                       1: tarinfo
                        30      LOAD_ATTR                       7: linkname
                        32      BUILD_TUPLE                     2
                        34      CALL_FUNCTION                   2
                        36      CALL_METHOD                     1
                        38      STORE_FAST                      2: linkname
                        40      LOAD_CONST                      2: None
                        42      STORE_FAST                      3: limit
                        44      JUMP_FORWARD                    5 (to 56)
                        46      LOAD_FAST                       1: tarinfo
                        48      LOAD_ATTR                       7: linkname
                        50      STORE_FAST                      2: linkname
                        52      LOAD_FAST                       1: tarinfo
                        54      STORE_FAST                      3: limit
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       8: _getmember
                        60      LOAD_FAST                       2: linkname
                        62      LOAD_FAST                       3: limit
                        64      LOAD_CONST                      3: True
                        66      LOAD_CONST                      4: ('tarinfo', 'normalize')
                        68      CALL_FUNCTION_KW                3
                        70      STORE_FAST                      4: member
                        72      LOAD_FAST                       4: member
                        74      LOAD_CONST                      2: None
                        76      IS_OP                           0 (is)
                        78      POP_JUMP_IF_FALSE               46 (to 92)
                        80      LOAD_GLOBAL                     9: KeyError
                        82      LOAD_CONST                      5: 'linkname %r not found'
                        84      LOAD_FAST                       2: linkname
                        86      BINARY_MODULO                   
                        88      CALL_FUNCTION                   1
                        90      RAISE_VARARGS                   1
                        92      LOAD_FAST                       4: member
                        94      RETURN_VALUE                    
                'TarFile._find_link_target'
                [Code]
                    File Name: tarfile.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        '_loaded'
                        'members'
                        'firstmember'
                        'next'
                        'len'
                    [Var Names]
                        'self'
                        'index'
                        'tarinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Provide an iterator object.\n        '
                        None
                        0
                        1
                        True
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _loaded
                        6       POP_JUMP_IF_FALSE               12 (to 24)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: members
                        12      GET_YIELD_FROM_ITER             
                        14      LOAD_CONST                      1: None
                        16      YIELD_FROM                      
                        18      POP_TOP                         
                        20      LOAD_CONST                      1: None
                        22      RETURN_VALUE                    
                        24      LOAD_CONST                      2: 0
                        26      STORE_FAST                      1: index
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       2: firstmember
                        32      LOAD_CONST                      1: None
                        34      IS_OP                           1 (is not)
                        36      POP_JUMP_IF_FALSE               30 (to 60)
                        38      LOAD_FAST                       0: self
                        40      LOAD_METHOD                     3: next
                        42      CALL_METHOD                     0
                        44      STORE_FAST                      2: tarinfo
                        46      LOAD_FAST                       1: index
                        48      LOAD_CONST                      3: 1
                        50      INPLACE_ADD                     
                        52      STORE_FAST                      1: index
                        54      LOAD_FAST                       2: tarinfo
                        56      YIELD_VALUE                     
                        58      POP_TOP                         
                        60      NOP                             
                        62      LOAD_FAST                       1: index
                        64      LOAD_GLOBAL                     4: len
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       1: members
                        70      CALL_FUNCTION                   1
                        72      COMPARE_OP                      0 (<)
                        74      POP_JUMP_IF_FALSE               44 (to 88)
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       1: members
                        80      LOAD_FAST                       1: index
                        82      BINARY_SUBSCR                   
                        84      STORE_FAST                      2: tarinfo
                        86      JUMP_FORWARD                    17 (to 122)
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       0: _loaded
                        92      POP_JUMP_IF_TRUE                59 (to 118)
                        94      LOAD_FAST                       0: self
                        96      LOAD_METHOD                     3: next
                        98      CALL_METHOD                     0
                        100     STORE_FAST                      2: tarinfo
                        102     LOAD_FAST                       2: tarinfo
                        104     POP_JUMP_IF_TRUE                58 (to 116)
                        106     LOAD_CONST                      4: True
                        108     LOAD_FAST                       0: self
                        110     STORE_ATTR                      0: _loaded
                        112     LOAD_CONST                      1: None
                        114     RETURN_VALUE                    
                        116     JUMP_FORWARD                    2 (to 122)
                        118     LOAD_CONST                      1: None
                        120     RETURN_VALUE                    
                        122     LOAD_FAST                       1: index
                        124     LOAD_CONST                      3: 1
                        126     INPLACE_ADD                     
                        128     STORE_FAST                      1: index
                        130     LOAD_FAST                       2: tarinfo
                        132     YIELD_VALUE                     
                        134     POP_TOP                         
                        136     JUMP_ABSOLUTE                   31 (to 62)
                'TarFile.__iter__'
                [Code]
                    File Name: tarfile.py
                    Object Name: _dbg
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'debug'
                        'print'
                        'sys'
                        'stderr'
                    [Var Names]
                        'self'
                        'level'
                        'msg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Write debugging output to sys.stderr.\n        '
                        (
                            'file'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: level
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: debug
                        6       COMPARE_OP                      1 (<=)
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_GLOBAL                     1: print
                        12      LOAD_FAST                       2: msg
                        14      LOAD_GLOBAL                     2: sys
                        16      LOAD_ATTR                       3: stderr
                        18      LOAD_CONST                      1: ('file',)
                        20      CALL_FUNCTION_KW                2
                        22      POP_TOP                         
                        24      LOAD_CONST                      2: None
                        26      RETURN_VALUE                    
                        28      LOAD_CONST                      2: None
                        30      RETURN_VALUE                    
                'TarFile._dbg'
                [Code]
                    File Name: tarfile.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_check'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _check
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      RETURN_VALUE                    
                'TarFile.__enter__'
                [Code]
                    File Name: tarfile.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close'
                        '_extfileobj'
                        'fileobj'
                        'closed'
                    [Var Names]
                        'self'
                        'type'
                        'value'
                        'traceback'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       1: type
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: close
                        12      CALL_METHOD                     0
                        14      POP_TOP                         
                        16      LOAD_CONST                      0: None
                        18      RETURN_VALUE                    
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: _extfileobj
                        24      POP_JUMP_IF_TRUE                18 (to 36)
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       2: fileobj
                        30      LOAD_METHOD                     0: close
                        32      CALL_METHOD                     0
                        34      POP_TOP                         
                        36      LOAD_CONST                      1: True
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      3: closed
                        42      LOAD_CONST                      0: None
                        44      RETURN_VALUE                    
                'TarFile.__exit__'
                (
                    None
                    'r'
                    None
                    None
                    None
                    None
                    None
                    None
                    'surrogateescape'
                    None
                    None
                    None
                    None
                )
                (
                    'r'
                    None
                )
                (
                    'r'
                    None
                    9
                )
                (
                    'r'
                    None
                    None
                )
                (
                    None
                    None
                    None
                )
                (
                    True
                )
                (
                    None
                    True
                )
                (
                    None
                )
                (
                    '.'
                    None
                )
                (
                    ''
                    True
                )
                (
                    True
                    False
                )
                (
                    None
                    False
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TarFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'The TarFile Class provides an interface to tar archives.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: 0
                14      STORE_NAME                      4: debug
                16      LOAD_CONST                      3: False
                18      STORE_NAME                      5: dereference
                20      LOAD_CONST                      3: False
                22      STORE_NAME                      6: ignore_zeros
                24      LOAD_CONST                      4: 1
                26      STORE_NAME                      7: errorlevel
                28      LOAD_NAME                       8: DEFAULT_FORMAT
                30      STORE_NAME                      9: format
                32      LOAD_NAME                       10: ENCODING
                34      STORE_NAME                      11: encoding
                36      LOAD_CONST                      5: None
                38      STORE_NAME                      12: errors
                40      LOAD_NAME                       13: TarInfo
                42      STORE_NAME                      14: tarinfo
                44      LOAD_NAME                       15: ExFileObject
                46      STORE_NAME                      16: fileobject
                48      LOAD_CONST                      5: None
                50      STORE_NAME                      17: extraction_filter
                52      NOP                             
                54      NOP                             
                56      NOP                             
                58      NOP                             
                60      LOAD_CONST                      102: (None, 'r', None, None, None, None, None, None, 'surrogateescape', None, None, None, None)
                62      LOAD_CONST                      8: <CODE> __init__
                64      LOAD_CONST                      9: 'TarFile.__init__'
                66      MAKE_FUNCTION                   1
                68      STORE_NAME                      18: __init__
                70      LOAD_NAME                       19: classmethod
                72      LOAD_CONST                      5: None
                74      LOAD_CONST                      6: 'r'
                76      LOAD_CONST                      5: None
                78      LOAD_NAME                       20: RECORDSIZE
                80      BUILD_TUPLE                     4
                82      LOAD_CONST                      10: <CODE> open
                84      LOAD_CONST                      11: 'TarFile.open'
                86      MAKE_FUNCTION                   1
                88      CALL_FUNCTION                   1
                90      STORE_NAME                      21: open
                92      LOAD_NAME                       19: classmethod
                94      LOAD_CONST                      103: ('r', None)
                96      LOAD_CONST                      12: <CODE> taropen
                98      LOAD_CONST                      13: 'TarFile.taropen'
                100     MAKE_FUNCTION                   1
                102     CALL_FUNCTION                   1
                104     STORE_NAME                      22: taropen
                106     LOAD_NAME                       19: classmethod
                108     LOAD_CONST                      104: ('r', None, 9)
                110     LOAD_CONST                      15: <CODE> gzopen
                112     LOAD_CONST                      16: 'TarFile.gzopen'
                114     MAKE_FUNCTION                   1
                116     CALL_FUNCTION                   1
                118     STORE_NAME                      23: gzopen
                120     LOAD_NAME                       19: classmethod
                122     LOAD_CONST                      104: ('r', None, 9)
                124     LOAD_CONST                      17: <CODE> bz2open
                126     LOAD_CONST                      18: 'TarFile.bz2open'
                128     MAKE_FUNCTION                   1
                130     CALL_FUNCTION                   1
                132     STORE_NAME                      24: bz2open
                134     LOAD_NAME                       19: classmethod
                136     LOAD_CONST                      105: ('r', None, None)
                138     LOAD_CONST                      19: <CODE> xzopen
                140     LOAD_CONST                      20: 'TarFile.xzopen'
                142     MAKE_FUNCTION                   1
                144     CALL_FUNCTION                   1
                146     STORE_NAME                      25: xzopen
                148     LOAD_CONST                      21: 'taropen'
                150     LOAD_CONST                      22: 'gzopen'
                152     LOAD_CONST                      23: 'bz2open'
                154     LOAD_CONST                      24: 'xzopen'
                156     LOAD_CONST                      25: ('tar', 'gz', 'bz2', 'xz')
                158     BUILD_CONST_KEY_MAP             4
                160     STORE_NAME                      26: OPEN_METH
                162     LOAD_CONST                      26: <CODE> close
                164     LOAD_CONST                      27: 'TarFile.close'
                166     MAKE_FUNCTION                   0
                168     STORE_NAME                      27: close
                170     LOAD_CONST                      28: <CODE> getmember
                172     LOAD_CONST                      29: 'TarFile.getmember'
                174     MAKE_FUNCTION                   0
                176     STORE_NAME                      28: getmember
                178     LOAD_CONST                      30: <CODE> getmembers
                180     LOAD_CONST                      31: 'TarFile.getmembers'
                182     MAKE_FUNCTION                   0
                184     STORE_NAME                      29: getmembers
                186     LOAD_CONST                      32: <CODE> getnames
                188     LOAD_CONST                      33: 'TarFile.getnames'
                190     MAKE_FUNCTION                   0
                192     STORE_NAME                      30: getnames
                194     LOAD_CONST                      106: (None, None, None)
                196     LOAD_CONST                      34: <CODE> gettarinfo
                198     LOAD_CONST                      35: 'TarFile.gettarinfo'
                200     MAKE_FUNCTION                   1
                202     STORE_NAME                      31: gettarinfo
                204     LOAD_CONST                      107: (True,)
                206     LOAD_CONST                      5: None
                208     LOAD_CONST                      37: ('members',)
                210     BUILD_CONST_KEY_MAP             1
                212     LOAD_CONST                      38: <CODE> list
                214     LOAD_CONST                      39: 'TarFile.list'
                216     MAKE_FUNCTION                   3
                218     STORE_NAME                      32: list
                220     LOAD_CONST                      108: (None, True)
                222     LOAD_CONST                      5: None
                224     LOAD_CONST                      40: ('filter',)
                226     BUILD_CONST_KEY_MAP             1
                228     LOAD_CONST                      41: <CODE> add
                230     LOAD_CONST                      42: 'TarFile.add'
                232     MAKE_FUNCTION                   3
                234     STORE_NAME                      33: add
                236     LOAD_CONST                      109: (None,)
                238     LOAD_CONST                      43: <CODE> addfile
                240     LOAD_CONST                      44: 'TarFile.addfile'
                242     MAKE_FUNCTION                   1
                244     STORE_NAME                      34: addfile
                246     LOAD_CONST                      45: <CODE> _get_filter_function
                248     LOAD_CONST                      46: 'TarFile._get_filter_function'
                250     MAKE_FUNCTION                   0
                252     STORE_NAME                      35: _get_filter_function
                254     LOAD_CONST                      110: ('.', None)
                256     LOAD_CONST                      3: False
                258     LOAD_CONST                      5: None
                260     LOAD_CONST                      48: ('numeric_owner', 'filter')
                262     BUILD_CONST_KEY_MAP             2
                264     LOAD_CONST                      49: <CODE> extractall
                266     LOAD_CONST                      50: 'TarFile.extractall'
                268     MAKE_FUNCTION                   3
                270     STORE_NAME                      36: extractall
                272     LOAD_CONST                      111: ('', True)
                274     LOAD_CONST                      3: False
                276     LOAD_CONST                      5: None
                278     LOAD_CONST                      48: ('numeric_owner', 'filter')
                280     BUILD_CONST_KEY_MAP             2
                282     LOAD_CONST                      52: <CODE> extract
                284     LOAD_CONST                      53: 'TarFile.extract'
                286     MAKE_FUNCTION                   3
                288     STORE_NAME                      37: extract
                290     LOAD_CONST                      54: <CODE> _get_extract_tarinfo
                292     LOAD_CONST                      55: 'TarFile._get_extract_tarinfo'
                294     MAKE_FUNCTION                   0
                296     STORE_NAME                      38: _get_extract_tarinfo
                298     LOAD_CONST                      56: <CODE> _extract_one
                300     LOAD_CONST                      57: 'TarFile._extract_one'
                302     MAKE_FUNCTION                   0
                304     STORE_NAME                      39: _extract_one
                306     LOAD_CONST                      58: <CODE> _handle_nonfatal_error
                308     LOAD_CONST                      59: 'TarFile._handle_nonfatal_error'
                310     MAKE_FUNCTION                   0
                312     STORE_NAME                      40: _handle_nonfatal_error
                314     LOAD_CONST                      60: <CODE> _handle_fatal_error
                316     LOAD_CONST                      61: 'TarFile._handle_fatal_error'
                318     MAKE_FUNCTION                   0
                320     STORE_NAME                      41: _handle_fatal_error
                322     LOAD_CONST                      62: <CODE> extractfile
                324     LOAD_CONST                      63: 'TarFile.extractfile'
                326     MAKE_FUNCTION                   0
                328     STORE_NAME                      42: extractfile
                330     NOP                             
                332     NOP                             
                334     LOAD_CONST                      112: (True, False)
                336     LOAD_CONST                      64: <CODE> _extract_member
                338     LOAD_CONST                      65: 'TarFile._extract_member'
                340     MAKE_FUNCTION                   1
                342     STORE_NAME                      43: _extract_member
                344     LOAD_CONST                      66: <CODE> makedir
                346     LOAD_CONST                      67: 'TarFile.makedir'
                348     MAKE_FUNCTION                   0
                350     STORE_NAME                      44: makedir
                352     LOAD_CONST                      68: <CODE> makefile
                354     LOAD_CONST                      69: 'TarFile.makefile'
                356     MAKE_FUNCTION                   0
                358     STORE_NAME                      45: makefile
                360     LOAD_CONST                      70: <CODE> makeunknown
                362     LOAD_CONST                      71: 'TarFile.makeunknown'
                364     MAKE_FUNCTION                   0
                366     STORE_NAME                      46: makeunknown
                368     LOAD_CONST                      72: <CODE> makefifo
                370     LOAD_CONST                      73: 'TarFile.makefifo'
                372     MAKE_FUNCTION                   0
                374     STORE_NAME                      47: makefifo
                376     LOAD_CONST                      74: <CODE> makedev
                378     LOAD_CONST                      75: 'TarFile.makedev'
                380     MAKE_FUNCTION                   0
                382     STORE_NAME                      48: makedev
                384     LOAD_CONST                      76: <CODE> makelink
                386     LOAD_CONST                      77: 'TarFile.makelink'
                388     MAKE_FUNCTION                   0
                390     STORE_NAME                      49: makelink
                392     LOAD_CONST                      78: <CODE> chown
                394     LOAD_CONST                      79: 'TarFile.chown'
                396     MAKE_FUNCTION                   0
                398     STORE_NAME                      50: chown
                400     LOAD_CONST                      80: <CODE> chmod
                402     LOAD_CONST                      81: 'TarFile.chmod'
                404     MAKE_FUNCTION                   0
                406     STORE_NAME                      51: chmod
                408     LOAD_CONST                      82: <CODE> utime
                410     LOAD_CONST                      83: 'TarFile.utime'
                412     MAKE_FUNCTION                   0
                414     STORE_NAME                      52: utime
                416     LOAD_CONST                      84: <CODE> next
                418     LOAD_CONST                      85: 'TarFile.next'
                420     MAKE_FUNCTION                   0
                422     STORE_NAME                      53: next
                424     LOAD_CONST                      113: (None, False)
                426     LOAD_CONST                      86: <CODE> _getmember
                428     LOAD_CONST                      87: 'TarFile._getmember'
                430     MAKE_FUNCTION                   1
                432     STORE_NAME                      54: _getmember
                434     LOAD_CONST                      88: <CODE> _load
                436     LOAD_CONST                      89: 'TarFile._load'
                438     MAKE_FUNCTION                   0
                440     STORE_NAME                      55: _load
                442     LOAD_CONST                      109: (None,)
                444     LOAD_CONST                      90: <CODE> _check
                446     LOAD_CONST                      91: 'TarFile._check'
                448     MAKE_FUNCTION                   1
                450     STORE_NAME                      56: _check
                452     LOAD_CONST                      92: <CODE> _find_link_target
                454     LOAD_CONST                      93: 'TarFile._find_link_target'
                456     MAKE_FUNCTION                   0
                458     STORE_NAME                      57: _find_link_target
                460     LOAD_CONST                      94: <CODE> __iter__
                462     LOAD_CONST                      95: 'TarFile.__iter__'
                464     MAKE_FUNCTION                   0
                466     STORE_NAME                      58: __iter__
                468     LOAD_CONST                      96: <CODE> _dbg
                470     LOAD_CONST                      97: 'TarFile._dbg'
                472     MAKE_FUNCTION                   0
                474     STORE_NAME                      59: _dbg
                476     LOAD_CONST                      98: <CODE> __enter__
                478     LOAD_CONST                      99: 'TarFile.__enter__'
                480     MAKE_FUNCTION                   0
                482     STORE_NAME                      60: __enter__
                484     LOAD_CONST                      100: <CODE> __exit__
                486     LOAD_CONST                      101: 'TarFile.__exit__'
                488     MAKE_FUNCTION                   0
                490     STORE_NAME                      61: __exit__
                492     LOAD_CONST                      5: None
                494     RETURN_VALUE                    
        'TarFile'
        [Code]
            File Name: tarfile.py
            Object Name: is_tarfile
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'hasattr'
                'open'
                'close'
                'TarError'
            [Var Names]
                'name'
                't'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Return True if name points to a tar archive that we\n       are able to handle, else return False.\n\n       'name' should be a string, file, or file-like object.\n    "
                'read'
                (
                    'fileobj'
                )
                True
                False
            [Disassembly]
                0       SETUP_FINALLY                   22 (to 46)
                2       LOAD_GLOBAL                     0: hasattr
                4       LOAD_FAST                       0: name
                6       LOAD_CONST                      1: 'read'
                8       CALL_FUNCTION                   2
                10      POP_JUMP_IF_FALSE               12 (to 24)
                12      LOAD_GLOBAL                     1: open
                14      LOAD_FAST                       0: name
                16      LOAD_CONST                      2: ('fileobj',)
                18      CALL_FUNCTION_KW                1
                20      STORE_FAST                      1: t
                22      JUMP_FORWARD                    4 (to 32)
                24      LOAD_GLOBAL                     1: open
                26      LOAD_FAST                       0: name
                28      CALL_FUNCTION                   1
                30      STORE_FAST                      1: t
                32      LOAD_FAST                       1: t
                34      LOAD_METHOD                     2: close
                36      CALL_METHOD                     0
                38      POP_TOP                         
                40      POP_BLOCK                       
                42      LOAD_CONST                      3: True
                44      RETURN_VALUE                    
                46      DUP_TOP                         
                48      LOAD_GLOBAL                     3: TarError
                50      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                52      POP_TOP                         
                54      POP_TOP                         
                56      POP_TOP                         
                58      POP_EXCEPT                      
                60      LOAD_CONST                      4: False
                62      RETURN_VALUE                    
                64      RERAISE                         0
        'is_tarfile'
        [Code]
            File Name: tarfile.py
            Object Name: main
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 17
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'argparse'
                'ArgumentParser'
                'add_argument'
                '_NAMED_FILTERS'
                'add_mutually_exclusive_group'
                'parse_args'
                'filter'
                'extract'
                'exit'
                'test'
                'is_tarfile'
                'open'
                'getmembers'
                'print'
                'sys'
                'stderr'
                'verbose'
                'format'
                'list'
                'TarFile'
                'len'
                'os'
                'curdir'
                'format_help'
                'extractall'
                'create'
                'pop'
                'path'
                'splitext'
                'add'
            [Var Names]
                'argparse'
                'description'
                'parser'
                'group'
                'args'
                'src'
                'tar'
                'tf'
                'curdir'
                'msg'
                'tar_name'
                '_'
                'ext'
                'compressions'
                'tar_mode'
                'tar_files'
                'file_name'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                'A simple command-line interface for tarfile module.'
                (
                    'description'
                )
                '-v'
                '--verbose'
                'store_true'
                False
                'Verbose output'
                (
                    'action'
                    'default'
                    'help'
                )
                '--filter'
                '<filtername>'
                'Filter for extraction'
                (
                    'metavar'
                    'choices'
                    'help'
                )
                True
                (
                    'required'
                )
                '-l'
                '--list'
                '<tarfile>'
                'Show listing of a tarfile'
                (
                    'metavar'
                    'help'
                )
                '-e'
                '--extract'
                '+'
                (
                    '<tarfile>'
                    '<output_dir>'
                )
                'Extract tarfile into target dir'
                (
                    'nargs'
                    'metavar'
                    'help'
                )
                '-c'
                '--create'
                (
                    '<name>'
                    '<file>'
                )
                'Create tarfile from sources'
                '-t'
                '--test'
                'Test if a tarfile is valid'
                1
                '--filter is only valid for extraction\n'
                'r'
                (
                    'file'
                )
                '{!r} is a tar archive.'
                '{!r} is not a tar archive.\n'
                'r:*'
                (
                    'verbose'
                )
                2
                (
                    'path'
                    'filter'
                )
                '.'
                '{!r} file is extracted.'
                '{!r} file is extracted into {!r} directory.'
                'gz'
                'xz'
                'bz2'
                (
                    '.gz'
                    '.tgz'
                    '.xz'
                    '.txz'
                    '.bz2'
                    '.tbz'
                    '.tbz2'
                    '.tb2'
                )
                'w:'
                'w'
                '{!r} file created.'
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      0: None
                4       IMPORT_NAME                     0: argparse
                6       STORE_FAST                      0: argparse
                8       LOAD_CONST                      2: 'A simple command-line interface for tarfile module.'
                10      STORE_FAST                      1: description
                12      LOAD_FAST                       0: argparse
                14      LOAD_ATTR                       1: ArgumentParser
                16      LOAD_FAST                       1: description
                18      LOAD_CONST                      3: ('description',)
                20      CALL_FUNCTION_KW                1
                22      STORE_FAST                      2: parser
                24      LOAD_FAST                       2: parser
                26      LOAD_ATTR                       2: add_argument
                28      LOAD_CONST                      4: '-v'
                30      LOAD_CONST                      5: '--verbose'
                32      LOAD_CONST                      6: 'store_true'
                34      LOAD_CONST                      7: False
                36      LOAD_CONST                      8: 'Verbose output'
                38      LOAD_CONST                      9: ('action', 'default', 'help')
                40      CALL_FUNCTION_KW                5
                42      POP_TOP                         
                44      LOAD_FAST                       2: parser
                46      LOAD_ATTR                       2: add_argument
                48      LOAD_CONST                      10: '--filter'
                50      LOAD_CONST                      11: '<filtername>'
                52      LOAD_GLOBAL                     3: _NAMED_FILTERS
                54      LOAD_CONST                      12: 'Filter for extraction'
                56      LOAD_CONST                      13: ('metavar', 'choices', 'help')
                58      CALL_FUNCTION_KW                4
                60      POP_TOP                         
                62      LOAD_FAST                       2: parser
                64      LOAD_ATTR                       4: add_mutually_exclusive_group
                66      LOAD_CONST                      14: True
                68      LOAD_CONST                      15: ('required',)
                70      CALL_FUNCTION_KW                1
                72      STORE_FAST                      3: group
                74      LOAD_FAST                       3: group
                76      LOAD_ATTR                       2: add_argument
                78      LOAD_CONST                      16: '-l'
                80      LOAD_CONST                      17: '--list'
                82      LOAD_CONST                      18: '<tarfile>'
                84      LOAD_CONST                      19: 'Show listing of a tarfile'
                86      LOAD_CONST                      20: ('metavar', 'help')
                88      CALL_FUNCTION_KW                4
                90      POP_TOP                         
                92      LOAD_FAST                       3: group
                94      LOAD_ATTR                       2: add_argument
                96      LOAD_CONST                      21: '-e'
                98      LOAD_CONST                      22: '--extract'
                100     LOAD_CONST                      23: '+'
                102     LOAD_CONST                      24: ('<tarfile>', '<output_dir>')
                104     LOAD_CONST                      25: 'Extract tarfile into target dir'
                106     LOAD_CONST                      26: ('nargs', 'metavar', 'help')
                108     CALL_FUNCTION_KW                5
                110     POP_TOP                         
                112     LOAD_FAST                       3: group
                114     LOAD_ATTR                       2: add_argument
                116     LOAD_CONST                      27: '-c'
                118     LOAD_CONST                      28: '--create'
                120     LOAD_CONST                      23: '+'
                122     LOAD_CONST                      29: ('<name>', '<file>')
                124     LOAD_CONST                      30: 'Create tarfile from sources'
                126     LOAD_CONST                      26: ('nargs', 'metavar', 'help')
                128     CALL_FUNCTION_KW                5
                130     POP_TOP                         
                132     LOAD_FAST                       3: group
                134     LOAD_ATTR                       2: add_argument
                136     LOAD_CONST                      31: '-t'
                138     LOAD_CONST                      32: '--test'
                140     LOAD_CONST                      18: '<tarfile>'
                142     LOAD_CONST                      33: 'Test if a tarfile is valid'
                144     LOAD_CONST                      20: ('metavar', 'help')
                146     CALL_FUNCTION_KW                4
                148     POP_TOP                         
                150     LOAD_FAST                       2: parser
                152     LOAD_METHOD                     5: parse_args
                154     CALL_METHOD                     0
                156     STORE_FAST                      4: args
                158     LOAD_FAST                       4: args
                160     LOAD_ATTR                       6: filter
                162     POP_JUMP_IF_FALSE               93 (to 186)
                164     LOAD_FAST                       4: args
                166     LOAD_ATTR                       7: extract
                168     LOAD_CONST                      0: None
                170     IS_OP                           0 (is)
                172     POP_JUMP_IF_FALSE               93 (to 186)
                174     LOAD_FAST                       2: parser
                176     LOAD_METHOD                     8: exit
                178     LOAD_CONST                      34: 1
                180     LOAD_CONST                      35: '--filter is only valid for extraction\n'
                182     CALL_METHOD                     2
                184     POP_TOP                         
                186     LOAD_FAST                       4: args
                188     LOAD_ATTR                       9: test
                190     LOAD_CONST                      0: None
                192     IS_OP                           1 (is not)
                194     POP_JUMP_IF_FALSE               164 (to 328)
                196     LOAD_FAST                       4: args
                198     LOAD_ATTR                       9: test
                200     STORE_FAST                      5: src
                202     LOAD_GLOBAL                     10: is_tarfile
                204     LOAD_FAST                       5: src
                206     CALL_FUNCTION                   1
                208     POP_JUMP_IF_FALSE               153 (to 306)
                210     LOAD_GLOBAL                     11: open
                212     LOAD_FAST                       5: src
                214     LOAD_CONST                      36: 'r'
                216     CALL_FUNCTION                   2
                218     SETUP_WITH                      21 (to 262)
                220     STORE_FAST                      6: tar
                222     LOAD_FAST                       6: tar
                224     LOAD_METHOD                     12: getmembers
                226     CALL_METHOD                     0
                228     POP_TOP                         
                230     LOAD_GLOBAL                     13: print
                232     LOAD_FAST                       6: tar
                234     LOAD_METHOD                     12: getmembers
                236     CALL_METHOD                     0
                238     LOAD_GLOBAL                     14: sys
                240     LOAD_ATTR                       15: stderr
                242     LOAD_CONST                      37: ('file',)
                244     CALL_FUNCTION_KW                2
                246     POP_TOP                         
                248     POP_BLOCK                       
                250     LOAD_CONST                      0: None
                252     DUP_TOP                         
                254     DUP_TOP                         
                256     CALL_FUNCTION                   3
                258     POP_TOP                         
                260     JUMP_FORWARD                    8 (to 278)
                262     WITH_EXCEPT_START               
                264     POP_JUMP_IF_TRUE                134 (to 268)
                266     RERAISE                         1
                268     POP_TOP                         
                270     POP_TOP                         
                272     POP_TOP                         
                274     POP_EXCEPT                      
                276     POP_TOP                         
                278     LOAD_FAST                       4: args
                280     LOAD_ATTR                       16: verbose
                282     POP_JUMP_IF_FALSE               151 (to 302)
                284     LOAD_GLOBAL                     13: print
                286     LOAD_CONST                      38: '{!r} is a tar archive.'
                288     LOAD_METHOD                     17: format
                290     LOAD_FAST                       5: src
                292     CALL_METHOD                     1
                294     CALL_FUNCTION                   1
                296     POP_TOP                         
                298     LOAD_CONST                      0: None
                300     RETURN_VALUE                    
                302     LOAD_CONST                      0: None
                304     RETURN_VALUE                    
                306     LOAD_FAST                       2: parser
                308     LOAD_METHOD                     8: exit
                310     LOAD_CONST                      34: 1
                312     LOAD_CONST                      39: '{!r} is not a tar archive.\n'
                314     LOAD_METHOD                     17: format
                316     LOAD_FAST                       5: src
                318     CALL_METHOD                     1
                320     CALL_METHOD                     2
                322     POP_TOP                         
                324     LOAD_CONST                      0: None
                326     RETURN_VALUE                    
                328     LOAD_FAST                       4: args
                330     LOAD_ATTR                       18: list
                332     LOAD_CONST                      0: None
                334     IS_OP                           1 (is not)
                336     POP_JUMP_IF_FALSE               219 (to 438)
                338     LOAD_FAST                       4: args
                340     LOAD_ATTR                       18: list
                342     STORE_FAST                      5: src
                344     LOAD_GLOBAL                     10: is_tarfile
                346     LOAD_FAST                       5: src
                348     CALL_FUNCTION                   1
                350     POP_JUMP_IF_FALSE               208 (to 416)
                352     LOAD_GLOBAL                     19: TarFile
                354     LOAD_METHOD                     11: open
                356     LOAD_FAST                       5: src
                358     LOAD_CONST                      40: 'r:*'
                360     CALL_METHOD                     2
                362     SETUP_WITH                      16 (to 396)
                364     STORE_FAST                      7: tf
                366     LOAD_FAST                       7: tf
                368     LOAD_ATTR                       18: list
                370     LOAD_FAST                       4: args
                372     LOAD_ATTR                       16: verbose
                374     LOAD_CONST                      41: ('verbose',)
                376     CALL_FUNCTION_KW                1
                378     POP_TOP                         
                380     POP_BLOCK                       
                382     LOAD_CONST                      0: None
                384     DUP_TOP                         
                386     DUP_TOP                         
                388     CALL_FUNCTION                   3
                390     POP_TOP                         
                392     LOAD_CONST                      0: None
                394     RETURN_VALUE                    
                396     WITH_EXCEPT_START               
                398     POP_JUMP_IF_TRUE                201 (to 402)
                400     RERAISE                         1
                402     POP_TOP                         
                404     POP_TOP                         
                406     POP_TOP                         
                408     POP_EXCEPT                      
                410     POP_TOP                         
                412     LOAD_CONST                      0: None
                414     RETURN_VALUE                    
                416     LOAD_FAST                       2: parser
                418     LOAD_METHOD                     8: exit
                420     LOAD_CONST                      34: 1
                422     LOAD_CONST                      39: '{!r} is not a tar archive.\n'
                424     LOAD_METHOD                     17: format
                426     LOAD_FAST                       5: src
                428     CALL_METHOD                     1
                430     CALL_METHOD                     2
                432     POP_TOP                         
                434     LOAD_CONST                      0: None
                436     RETURN_VALUE                    
                438     LOAD_FAST                       4: args
                440     LOAD_ATTR                       7: extract
                442     LOAD_CONST                      0: None
                444     IS_OP                           1 (is not)
                446     POP_JUMP_IF_FALSE               338 (to 676)
                450     LOAD_GLOBAL                     20: len
                452     LOAD_FAST                       4: args
                454     LOAD_ATTR                       7: extract
                456     CALL_FUNCTION                   1
                458     LOAD_CONST                      34: 1
                460     COMPARE_OP                      2 (==)
                462     POP_JUMP_IF_FALSE               241 (to 482)
                464     LOAD_FAST                       4: args
                466     LOAD_ATTR                       7: extract
                468     LOAD_CONST                      1: 0
                470     BINARY_SUBSCR                   
                472     STORE_FAST                      5: src
                474     LOAD_GLOBAL                     21: os
                476     LOAD_ATTR                       22: curdir
                478     STORE_FAST                      8: curdir
                480     JUMP_FORWARD                    21 (to 524)
                482     LOAD_GLOBAL                     20: len
                484     LOAD_FAST                       4: args
                486     LOAD_ATTR                       7: extract
                488     CALL_FUNCTION                   1
                490     LOAD_CONST                      42: 2
                492     COMPARE_OP                      2 (==)
                494     POP_JUMP_IF_FALSE               254 (to 508)
                496     LOAD_FAST                       4: args
                498     LOAD_ATTR                       7: extract
                500     UNPACK_SEQUENCE                 2
                502     STORE_FAST                      5: src
                504     STORE_FAST                      8: curdir
                506     JUMP_FORWARD                    8 (to 524)
                508     LOAD_FAST                       2: parser
                510     LOAD_METHOD                     8: exit
                512     LOAD_CONST                      34: 1
                514     LOAD_FAST                       2: parser
                516     LOAD_METHOD                     23: format_help
                518     CALL_METHOD                     0
                520     CALL_METHOD                     2
                522     POP_TOP                         
                524     LOAD_GLOBAL                     10: is_tarfile
                526     LOAD_FAST                       5: src
                528     CALL_FUNCTION                   1
                530     POP_JUMP_IF_FALSE               327 (to 654)
                534     LOAD_GLOBAL                     19: TarFile
                536     LOAD_METHOD                     11: open
                538     LOAD_FAST                       5: src
                540     LOAD_CONST                      40: 'r:*'
                542     CALL_METHOD                     2
                544     SETUP_WITH                      16 (to 578)
                546     STORE_FAST                      7: tf
                548     LOAD_FAST                       7: tf
                550     LOAD_ATTR                       24: extractall
                552     LOAD_FAST                       8: curdir
                554     LOAD_FAST                       4: args
                556     LOAD_ATTR                       6: filter
                558     LOAD_CONST                      43: ('path', 'filter')
                560     CALL_FUNCTION_KW                2
                562     POP_TOP                         
                564     POP_BLOCK                       
                566     LOAD_CONST                      0: None
                568     DUP_TOP                         
                570     DUP_TOP                         
                572     CALL_FUNCTION                   3
                574     POP_TOP                         
                576     JUMP_FORWARD                    9 (to 596)
                578     WITH_EXCEPT_START               
                580     POP_JUMP_IF_TRUE                293 (to 586)
                584     RERAISE                         1
                586     POP_TOP                         
                588     POP_TOP                         
                590     POP_TOP                         
                592     POP_EXCEPT                      
                594     POP_TOP                         
                596     LOAD_FAST                       4: args
                598     LOAD_ATTR                       16: verbose
                600     POP_JUMP_IF_FALSE               325 (to 650)
                604     LOAD_FAST                       8: curdir
                606     LOAD_CONST                      44: '.'
                608     COMPARE_OP                      2 (==)
                610     POP_JUMP_IF_FALSE               313 (to 626)
                614     LOAD_CONST                      45: '{!r} file is extracted.'
                616     LOAD_METHOD                     17: format
                618     LOAD_FAST                       5: src
                620     CALL_METHOD                     1
                622     STORE_FAST                      9: msg
                624     JUMP_FORWARD                    6 (to 638)
                626     LOAD_CONST                      46: '{!r} file is extracted into {!r} directory.'
                628     LOAD_METHOD                     17: format
                630     LOAD_FAST                       5: src
                632     LOAD_FAST                       8: curdir
                634     CALL_METHOD                     2
                636     STORE_FAST                      9: msg
                638     LOAD_GLOBAL                     13: print
                640     LOAD_FAST                       9: msg
                642     CALL_FUNCTION                   1
                644     POP_TOP                         
                646     LOAD_CONST                      0: None
                648     RETURN_VALUE                    
                650     LOAD_CONST                      0: None
                652     RETURN_VALUE                    
                654     LOAD_FAST                       2: parser
                656     LOAD_METHOD                     8: exit
                658     LOAD_CONST                      34: 1
                660     LOAD_CONST                      39: '{!r} is not a tar archive.\n'
                662     LOAD_METHOD                     17: format
                664     LOAD_FAST                       5: src
                666     CALL_METHOD                     1
                668     CALL_METHOD                     2
                670     POP_TOP                         
                672     LOAD_CONST                      0: None
                674     RETURN_VALUE                    
                676     LOAD_FAST                       4: args
                678     LOAD_ATTR                       25: create
                680     LOAD_CONST                      0: None
                682     IS_OP                           1 (is not)
                684     POP_JUMP_IF_FALSE               432 (to 864)
                688     LOAD_FAST                       4: args
                690     LOAD_ATTR                       25: create
                692     LOAD_METHOD                     26: pop
                694     LOAD_CONST                      1: 0
                696     CALL_METHOD                     1
                698     STORE_FAST                      10: tar_name
                700     LOAD_GLOBAL                     21: os
                702     LOAD_ATTR                       27: path
                704     LOAD_METHOD                     28: splitext
                706     LOAD_FAST                       10: tar_name
                708     CALL_METHOD                     1
                710     UNPACK_SEQUENCE                 2
                712     STORE_FAST                      11: _
                714     STORE_FAST                      12: ext
                716     LOAD_CONST                      47: 'gz'
                718     LOAD_CONST                      47: 'gz'
                720     LOAD_CONST                      48: 'xz'
                722     LOAD_CONST                      48: 'xz'
                724     LOAD_CONST                      49: 'bz2'
                726     LOAD_CONST                      49: 'bz2'
                728     LOAD_CONST                      49: 'bz2'
                730     LOAD_CONST                      49: 'bz2'
                732     LOAD_CONST                      50: ('.gz', '.tgz', '.xz', '.txz', '.bz2', '.tbz', '.tbz2', '.tb2')
                734     BUILD_CONST_KEY_MAP             8
                736     STORE_FAST                      13: compressions
                738     LOAD_FAST                       12: ext
                740     LOAD_FAST                       13: compressions
                742     CONTAINS_OP                     0 (in)
                744     POP_JUMP_IF_FALSE               380 (to 760)
                748     LOAD_CONST                      51: 'w:'
                750     LOAD_FAST                       13: compressions
                752     LOAD_FAST                       12: ext
                754     BINARY_SUBSCR                   
                756     BINARY_ADD                      
                758     JUMP_FORWARD                    1 (to 762)
                760     LOAD_CONST                      52: 'w'
                762     STORE_FAST                      14: tar_mode
                764     LOAD_FAST                       4: args
                766     LOAD_ATTR                       25: create
                768     STORE_FAST                      15: tar_files
                770     LOAD_GLOBAL                     19: TarFile
                772     LOAD_METHOD                     11: open
                774     LOAD_FAST                       10: tar_name
                776     LOAD_FAST                       14: tar_mode
                778     CALL_METHOD                     2
                780     SETUP_WITH                      19 (to 820)
                782     STORE_FAST                      7: tf
                784     LOAD_FAST                       15: tar_files
                786     GET_ITER                        
                788     FOR_ITER                        8 (to 806)
                790     STORE_FAST                      16: file_name
                792     LOAD_FAST                       7: tf
                794     LOAD_METHOD                     29: add
                796     LOAD_FAST                       16: file_name
                798     CALL_METHOD                     1
                800     POP_TOP                         
                802     JUMP_ABSOLUTE                   394 (to 788)
                806     POP_BLOCK                       
                808     LOAD_CONST                      0: None
                810     DUP_TOP                         
                812     DUP_TOP                         
                814     CALL_FUNCTION                   3
                816     POP_TOP                         
                818     JUMP_FORWARD                    9 (to 838)
                820     WITH_EXCEPT_START               
                822     POP_JUMP_IF_TRUE                414 (to 828)
                826     RERAISE                         1
                828     POP_TOP                         
                830     POP_TOP                         
                832     POP_TOP                         
                834     POP_EXCEPT                      
                836     POP_TOP                         
                838     LOAD_FAST                       4: args
                840     LOAD_ATTR                       16: verbose
                842     POP_JUMP_IF_FALSE               434 (to 868)
                846     LOAD_GLOBAL                     13: print
                848     LOAD_CONST                      53: '{!r} file created.'
                850     LOAD_METHOD                     17: format
                852     LOAD_FAST                       10: tar_name
                854     CALL_METHOD                     1
                856     CALL_FUNCTION                   1
                858     POP_TOP                         
                860     LOAD_CONST                      0: None
                862     RETURN_VALUE                    
                864     LOAD_CONST                      0: None
                866     RETURN_VALUE                    
                868     LOAD_CONST                      0: None
                870     RETURN_VALUE                    
        'main'
        '__main__'
        (
            True
        )
    [Disassembly]
        0       LOAD_CONST                      0: 'Read from and write to tar format archives.\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: '0.9.0'
        6       STORE_NAME                      1: version
        8       LOAD_CONST                      2: 'Lars Gustäbel (lars@gustaebel.de)'
        10      STORE_NAME                      2: __author__
        12      LOAD_CONST                      3: 'Gustavo Niemeyer, Niels Gustäbel, Richard Townsend.'
        14      STORE_NAME                      3: __credits__
        16      LOAD_CONST                      4: 0
        18      LOAD_CONST                      5: ('open',)
        20      IMPORT_NAME                     4: builtins
        22      IMPORT_FROM                     5: open
        24      STORE_NAME                      6: bltn_open
        26      POP_TOP                         
        28      LOAD_CONST                      4: 0
        30      LOAD_CONST                      6: None
        32      IMPORT_NAME                     7: sys
        34      STORE_NAME                      7: sys
        36      LOAD_CONST                      4: 0
        38      LOAD_CONST                      6: None
        40      IMPORT_NAME                     8: os
        42      STORE_NAME                      8: os
        44      LOAD_CONST                      4: 0
        46      LOAD_CONST                      6: None
        48      IMPORT_NAME                     9: io
        50      STORE_NAME                      9: io
        52      LOAD_CONST                      4: 0
        54      LOAD_CONST                      6: None
        56      IMPORT_NAME                     10: shutil
        58      STORE_NAME                      10: shutil
        60      LOAD_CONST                      4: 0
        62      LOAD_CONST                      6: None
        64      IMPORT_NAME                     11: stat
        66      STORE_NAME                      11: stat
        68      LOAD_CONST                      4: 0
        70      LOAD_CONST                      6: None
        72      IMPORT_NAME                     12: time
        74      STORE_NAME                      12: time
        76      LOAD_CONST                      4: 0
        78      LOAD_CONST                      6: None
        80      IMPORT_NAME                     13: struct
        82      STORE_NAME                      13: struct
        84      LOAD_CONST                      4: 0
        86      LOAD_CONST                      6: None
        88      IMPORT_NAME                     14: copy
        90      STORE_NAME                      14: copy
        92      LOAD_CONST                      4: 0
        94      LOAD_CONST                      6: None
        96      IMPORT_NAME                     15: re
        98      STORE_NAME                      15: re
        100     LOAD_CONST                      4: 0
        102     LOAD_CONST                      6: None
        104     IMPORT_NAME                     16: warnings
        106     STORE_NAME                      16: warnings
        108     SETUP_FINALLY                   6 (to 122)
        110     LOAD_CONST                      4: 0
        112     LOAD_CONST                      6: None
        114     IMPORT_NAME                     17: pwd
        116     STORE_NAME                      17: pwd
        118     POP_BLOCK                       
        120     JUMP_FORWARD                    11 (to 144)
        122     DUP_TOP                         
        124     LOAD_NAME                       18: ImportError
        126     JUMP_IF_NOT_EXC_MATCH           71 (to 142)
        128     POP_TOP                         
        130     POP_TOP                         
        132     POP_TOP                         
        134     LOAD_CONST                      6: None
        136     STORE_NAME                      17: pwd
        138     POP_EXCEPT                      
        140     JUMP_FORWARD                    1 (to 144)
        142     RERAISE                         0
        144     SETUP_FINALLY                   6 (to 158)
        146     LOAD_CONST                      4: 0
        148     LOAD_CONST                      6: None
        150     IMPORT_NAME                     19: grp
        152     STORE_NAME                      19: grp
        154     POP_BLOCK                       
        156     JUMP_FORWARD                    11 (to 180)
        158     DUP_TOP                         
        160     LOAD_NAME                       18: ImportError
        162     JUMP_IF_NOT_EXC_MATCH           89 (to 178)
        164     POP_TOP                         
        166     POP_TOP                         
        168     POP_TOP                         
        170     LOAD_CONST                      6: None
        172     STORE_NAME                      19: grp
        174     POP_EXCEPT                      
        176     JUMP_FORWARD                    1 (to 180)
        178     RERAISE                         0
        180     LOAD_NAME                       20: AttributeError
        182     LOAD_NAME                       21: NotImplementedError
        184     BUILD_TUPLE                     2
        186     STORE_NAME                      22: symlink_exception
        188     SETUP_FINALLY                   7 (to 204)
        190     LOAD_NAME                       22: symlink_exception
        192     LOAD_NAME                       23: OSError
        194     BUILD_TUPLE                     1
        196     INPLACE_ADD                     
        198     STORE_NAME                      22: symlink_exception
        200     POP_BLOCK                       
        202     JUMP_FORWARD                    9 (to 222)
        204     DUP_TOP                         
        206     LOAD_NAME                       24: NameError
        208     JUMP_IF_NOT_EXC_MATCH           110 (to 220)
        210     POP_TOP                         
        212     POP_TOP                         
        214     POP_TOP                         
        216     POP_EXCEPT                      
        218     JUMP_FORWARD                    1 (to 222)
        220     RERAISE                         0
        222     BUILD_LIST                      0
        224     LOAD_CONST                      7: ('TarFile', 'TarInfo', 'is_tarfile', 'TarError', 'ReadError', 'CompressionError', 'StreamError', 'ExtractError', 'HeaderError', 'ENCODING', 'USTAR_FORMAT', 'GNU_FORMAT', 'PAX_FORMAT', 'DEFAULT_FORMAT', 'open')
        226     LIST_EXTEND                     1
        228     STORE_NAME                      25: __all__
        230     LOAD_CONST                      8: b'\x00'
        232     STORE_NAME                      26: NUL
        234     LOAD_CONST                      9: 512
        236     STORE_NAME                      27: BLOCKSIZE
        238     LOAD_NAME                       27: BLOCKSIZE
        240     LOAD_CONST                      10: 20
        242     BINARY_MULTIPLY                 
        244     STORE_NAME                      28: RECORDSIZE
        246     LOAD_CONST                      11: b'ustar  \x00'
        248     STORE_NAME                      29: GNU_MAGIC
        250     LOAD_CONST                      12: b'ustar\x0000'
        252     STORE_NAME                      30: POSIX_MAGIC
        254     LOAD_CONST                      13: 100
        256     STORE_NAME                      31: LENGTH_NAME
        258     LOAD_CONST                      13: 100
        260     STORE_NAME                      32: LENGTH_LINK
        262     LOAD_CONST                      14: 155
        264     STORE_NAME                      33: LENGTH_PREFIX
        266     LOAD_CONST                      15: b'0'
        268     STORE_NAME                      34: REGTYPE
        270     LOAD_CONST                      8: b'\x00'
        272     STORE_NAME                      35: AREGTYPE
        274     LOAD_CONST                      16: b'1'
        276     STORE_NAME                      36: LNKTYPE
        278     LOAD_CONST                      17: b'2'
        280     STORE_NAME                      37: SYMTYPE
        282     LOAD_CONST                      18: b'3'
        284     STORE_NAME                      38: CHRTYPE
        286     LOAD_CONST                      19: b'4'
        288     STORE_NAME                      39: BLKTYPE
        290     LOAD_CONST                      20: b'5'
        292     STORE_NAME                      40: DIRTYPE
        294     LOAD_CONST                      21: b'6'
        296     STORE_NAME                      41: FIFOTYPE
        298     LOAD_CONST                      22: b'7'
        300     STORE_NAME                      42: CONTTYPE
        302     LOAD_CONST                      23: b'L'
        304     STORE_NAME                      43: GNUTYPE_LONGNAME
        306     LOAD_CONST                      24: b'K'
        308     STORE_NAME                      44: GNUTYPE_LONGLINK
        310     LOAD_CONST                      25: b'S'
        312     STORE_NAME                      45: GNUTYPE_SPARSE
        314     LOAD_CONST                      26: b'x'
        316     STORE_NAME                      46: XHDTYPE
        318     LOAD_CONST                      27: b'g'
        320     STORE_NAME                      47: XGLTYPE
        322     LOAD_CONST                      28: b'X'
        324     STORE_NAME                      48: SOLARIS_XHDTYPE
        326     LOAD_CONST                      4: 0
        328     STORE_NAME                      49: USTAR_FORMAT
        330     LOAD_CONST                      29: 1
        332     STORE_NAME                      50: GNU_FORMAT
        334     LOAD_CONST                      30: 2
        336     STORE_NAME                      51: PAX_FORMAT
        338     LOAD_NAME                       51: PAX_FORMAT
        340     STORE_NAME                      52: DEFAULT_FORMAT
        342     LOAD_NAME                       34: REGTYPE
        344     LOAD_NAME                       35: AREGTYPE
        346     LOAD_NAME                       36: LNKTYPE
        348     LOAD_NAME                       37: SYMTYPE
        350     LOAD_NAME                       40: DIRTYPE
        352     LOAD_NAME                       41: FIFOTYPE
        354     LOAD_NAME                       42: CONTTYPE
        356     LOAD_NAME                       38: CHRTYPE
        358     LOAD_NAME                       39: BLKTYPE
        360     LOAD_NAME                       43: GNUTYPE_LONGNAME
        362     LOAD_NAME                       44: GNUTYPE_LONGLINK
        364     LOAD_NAME                       45: GNUTYPE_SPARSE
        366     BUILD_TUPLE                     12
        368     STORE_NAME                      53: SUPPORTED_TYPES
        370     LOAD_NAME                       34: REGTYPE
        372     LOAD_NAME                       35: AREGTYPE
        374     LOAD_NAME                       42: CONTTYPE
        376     LOAD_NAME                       45: GNUTYPE_SPARSE
        378     BUILD_TUPLE                     4
        380     STORE_NAME                      54: REGULAR_TYPES
        382     LOAD_NAME                       43: GNUTYPE_LONGNAME
        384     LOAD_NAME                       44: GNUTYPE_LONGLINK
        386     LOAD_NAME                       45: GNUTYPE_SPARSE
        388     BUILD_TUPLE                     3
        390     STORE_NAME                      55: GNU_TYPES
        392     LOAD_CONST                      31: ('path', 'linkpath', 'size', 'mtime', 'uid', 'gid', 'uname', 'gname')
        394     STORE_NAME                      56: PAX_FIELDS
        396     BUILD_SET                       0
        398     LOAD_CONST                      32: frozenset({'path', 'gname', 'uname', 'linkpath'})
        400     SET_UPDATE                      1
        402     STORE_NAME                      57: PAX_NAME_FIELDS
        404     LOAD_NAME                       58: float
        406     LOAD_NAME                       58: float
        408     LOAD_NAME                       58: float
        410     LOAD_NAME                       59: int
        412     LOAD_NAME                       59: int
        414     LOAD_NAME                       59: int
        416     LOAD_CONST                      33: ('atime', 'ctime', 'mtime', 'uid', 'gid', 'size')
        418     BUILD_CONST_KEY_MAP             6
        420     STORE_NAME                      60: PAX_NUMBER_FIELDS
        422     LOAD_NAME                       8: os
        424     LOAD_ATTR                       61: name
        426     LOAD_CONST                      34: 'nt'
        428     COMPARE_OP                      2 (==)
        430     POP_JUMP_IF_FALSE               219 (to 438)
        432     LOAD_CONST                      35: 'utf-8'
        434     STORE_NAME                      62: ENCODING
        436     JUMP_FORWARD                    4 (to 446)
        438     LOAD_NAME                       7: sys
        440     LOAD_METHOD                     63: getfilesystemencoding
        442     CALL_METHOD                     0
        444     STORE_NAME                      62: ENCODING
        446     LOAD_CONST                      36: <CODE> stn
        448     LOAD_CONST                      37: 'stn'
        450     MAKE_FUNCTION                   0
        452     STORE_NAME                      64: stn
        454     LOAD_CONST                      38: <CODE> nts
        456     LOAD_CONST                      39: 'nts'
        458     MAKE_FUNCTION                   0
        460     STORE_NAME                      65: nts
        462     LOAD_CONST                      40: <CODE> nti
        464     LOAD_CONST                      41: 'nti'
        466     MAKE_FUNCTION                   0
        468     STORE_NAME                      66: nti
        470     LOAD_CONST                      42: 8
        472     LOAD_NAME                       52: DEFAULT_FORMAT
        474     BUILD_TUPLE                     2
        476     LOAD_CONST                      43: <CODE> itn
        478     LOAD_CONST                      44: 'itn'
        480     MAKE_FUNCTION                   1
        482     STORE_NAME                      67: itn
        484     LOAD_CONST                      45: <CODE> calc_chksums
        486     LOAD_CONST                      46: 'calc_chksums'
        488     MAKE_FUNCTION                   0
        490     STORE_NAME                      68: calc_chksums
        492     LOAD_CONST                      6: None
        494     LOAD_NAME                       23: OSError
        496     LOAD_CONST                      6: None
        498     BUILD_TUPLE                     3
        500     LOAD_CONST                      47: <CODE> copyfileobj
        502     LOAD_CONST                      48: 'copyfileobj'
        504     MAKE_FUNCTION                   1
        506     STORE_NAME                      69: copyfileobj
        508     LOAD_CONST                      49: <CODE> _safe_print
        510     LOAD_CONST                      50: '_safe_print'
        512     MAKE_FUNCTION                   0
        514     STORE_NAME                      70: _safe_print
        516     LOAD_BUILD_CLASS                
        518     LOAD_CONST                      51: <CODE> TarError
        520     LOAD_CONST                      52: 'TarError'
        522     MAKE_FUNCTION                   0
        524     LOAD_CONST                      52: 'TarError'
        526     LOAD_NAME                       71: Exception
        528     CALL_FUNCTION                   3
        530     STORE_NAME                      72: TarError
        532     LOAD_BUILD_CLASS                
        534     LOAD_CONST                      53: <CODE> ExtractError
        536     LOAD_CONST                      54: 'ExtractError'
        538     MAKE_FUNCTION                   0
        540     LOAD_CONST                      54: 'ExtractError'
        542     LOAD_NAME                       72: TarError
        544     CALL_FUNCTION                   3
        546     STORE_NAME                      73: ExtractError
        548     LOAD_BUILD_CLASS                
        550     LOAD_CONST                      55: <CODE> ReadError
        552     LOAD_CONST                      56: 'ReadError'
        554     MAKE_FUNCTION                   0
        556     LOAD_CONST                      56: 'ReadError'
        558     LOAD_NAME                       72: TarError
        560     CALL_FUNCTION                   3
        562     STORE_NAME                      74: ReadError
        564     LOAD_BUILD_CLASS                
        566     LOAD_CONST                      57: <CODE> CompressionError
        568     LOAD_CONST                      58: 'CompressionError'
        570     MAKE_FUNCTION                   0
        572     LOAD_CONST                      58: 'CompressionError'
        574     LOAD_NAME                       72: TarError
        576     CALL_FUNCTION                   3
        578     STORE_NAME                      75: CompressionError
        580     LOAD_BUILD_CLASS                
        582     LOAD_CONST                      59: <CODE> StreamError
        584     LOAD_CONST                      60: 'StreamError'
        586     MAKE_FUNCTION                   0
        588     LOAD_CONST                      60: 'StreamError'
        590     LOAD_NAME                       72: TarError
        592     CALL_FUNCTION                   3
        594     STORE_NAME                      76: StreamError
        596     LOAD_BUILD_CLASS                
        598     LOAD_CONST                      61: <CODE> HeaderError
        600     LOAD_CONST                      62: 'HeaderError'
        602     MAKE_FUNCTION                   0
        604     LOAD_CONST                      62: 'HeaderError'
        606     LOAD_NAME                       72: TarError
        608     CALL_FUNCTION                   3
        610     STORE_NAME                      77: HeaderError
        612     LOAD_BUILD_CLASS                
        614     LOAD_CONST                      63: <CODE> EmptyHeaderError
        616     LOAD_CONST                      64: 'EmptyHeaderError'
        618     MAKE_FUNCTION                   0
        620     LOAD_CONST                      64: 'EmptyHeaderError'
        622     LOAD_NAME                       77: HeaderError
        624     CALL_FUNCTION                   3
        626     STORE_NAME                      78: EmptyHeaderError
        628     LOAD_BUILD_CLASS                
        630     LOAD_CONST                      65: <CODE> TruncatedHeaderError
        632     LOAD_CONST                      66: 'TruncatedHeaderError'
        634     MAKE_FUNCTION                   0
        636     LOAD_CONST                      66: 'TruncatedHeaderError'
        638     LOAD_NAME                       77: HeaderError
        640     CALL_FUNCTION                   3
        642     STORE_NAME                      79: TruncatedHeaderError
        644     LOAD_BUILD_CLASS                
        646     LOAD_CONST                      67: <CODE> EOFHeaderError
        648     LOAD_CONST                      68: 'EOFHeaderError'
        650     MAKE_FUNCTION                   0
        652     LOAD_CONST                      68: 'EOFHeaderError'
        654     LOAD_NAME                       77: HeaderError
        656     CALL_FUNCTION                   3
        658     STORE_NAME                      80: EOFHeaderError
        660     LOAD_BUILD_CLASS                
        662     LOAD_CONST                      69: <CODE> InvalidHeaderError
        664     LOAD_CONST                      70: 'InvalidHeaderError'
        666     MAKE_FUNCTION                   0
        668     LOAD_CONST                      70: 'InvalidHeaderError'
        670     LOAD_NAME                       77: HeaderError
        672     CALL_FUNCTION                   3
        674     STORE_NAME                      81: InvalidHeaderError
        676     LOAD_BUILD_CLASS                
        678     LOAD_CONST                      71: <CODE> SubsequentHeaderError
        680     LOAD_CONST                      72: 'SubsequentHeaderError'
        682     MAKE_FUNCTION                   0
        684     LOAD_CONST                      72: 'SubsequentHeaderError'
        686     LOAD_NAME                       77: HeaderError
        688     CALL_FUNCTION                   3
        690     STORE_NAME                      82: SubsequentHeaderError
        692     LOAD_BUILD_CLASS                
        694     LOAD_CONST                      73: <CODE> _LowLevelFile
        696     LOAD_CONST                      74: '_LowLevelFile'
        698     MAKE_FUNCTION                   0
        700     LOAD_CONST                      74: '_LowLevelFile'
        702     CALL_FUNCTION                   2
        704     STORE_NAME                      83: _LowLevelFile
        706     LOAD_BUILD_CLASS                
        708     LOAD_CONST                      75: <CODE> _Stream
        710     LOAD_CONST                      76: '_Stream'
        712     MAKE_FUNCTION                   0
        714     LOAD_CONST                      76: '_Stream'
        716     CALL_FUNCTION                   2
        718     STORE_NAME                      84: _Stream
        720     LOAD_BUILD_CLASS                
        722     LOAD_CONST                      77: <CODE> _StreamProxy
        724     LOAD_CONST                      78: '_StreamProxy'
        726     MAKE_FUNCTION                   0
        728     LOAD_CONST                      78: '_StreamProxy'
        730     LOAD_NAME                       85: object
        732     CALL_FUNCTION                   3
        734     STORE_NAME                      86: _StreamProxy
        736     LOAD_BUILD_CLASS                
        738     LOAD_CONST                      79: <CODE> _FileInFile
        740     LOAD_CONST                      80: '_FileInFile'
        742     MAKE_FUNCTION                   0
        744     LOAD_CONST                      80: '_FileInFile'
        746     LOAD_NAME                       85: object
        748     CALL_FUNCTION                   3
        750     STORE_NAME                      87: _FileInFile
        752     LOAD_BUILD_CLASS                
        754     LOAD_CONST                      81: <CODE> ExFileObject
        756     LOAD_CONST                      82: 'ExFileObject'
        758     MAKE_FUNCTION                   0
        760     LOAD_CONST                      82: 'ExFileObject'
        762     LOAD_NAME                       9: io
        764     LOAD_ATTR                       88: BufferedReader
        766     CALL_FUNCTION                   3
        768     STORE_NAME                      89: ExFileObject
        770     LOAD_BUILD_CLASS                
        772     LOAD_CONST                      83: <CODE> FilterError
        774     LOAD_CONST                      84: 'FilterError'
        776     MAKE_FUNCTION                   0
        778     LOAD_CONST                      84: 'FilterError'
        780     LOAD_NAME                       72: TarError
        782     CALL_FUNCTION                   3
        784     STORE_NAME                      90: FilterError
        786     LOAD_BUILD_CLASS                
        788     LOAD_CONST                      85: <CODE> AbsolutePathError
        790     LOAD_CONST                      86: 'AbsolutePathError'
        792     MAKE_FUNCTION                   0
        794     LOAD_CONST                      86: 'AbsolutePathError'
        796     LOAD_NAME                       90: FilterError
        798     CALL_FUNCTION                   3
        800     STORE_NAME                      91: AbsolutePathError
        802     LOAD_BUILD_CLASS                
        804     LOAD_CONST                      87: <CODE> OutsideDestinationError
        806     LOAD_CONST                      88: 'OutsideDestinationError'
        808     MAKE_FUNCTION                   0
        810     LOAD_CONST                      88: 'OutsideDestinationError'
        812     LOAD_NAME                       90: FilterError
        814     CALL_FUNCTION                   3
        816     STORE_NAME                      92: OutsideDestinationError
        818     LOAD_BUILD_CLASS                
        820     LOAD_CONST                      89: <CODE> SpecialFileError
        822     LOAD_CONST                      90: 'SpecialFileError'
        824     MAKE_FUNCTION                   0
        826     LOAD_CONST                      90: 'SpecialFileError'
        828     LOAD_NAME                       90: FilterError
        830     CALL_FUNCTION                   3
        832     STORE_NAME                      93: SpecialFileError
        834     LOAD_BUILD_CLASS                
        836     LOAD_CONST                      91: <CODE> AbsoluteLinkError
        838     LOAD_CONST                      92: 'AbsoluteLinkError'
        840     MAKE_FUNCTION                   0
        842     LOAD_CONST                      92: 'AbsoluteLinkError'
        844     LOAD_NAME                       90: FilterError
        846     CALL_FUNCTION                   3
        848     STORE_NAME                      94: AbsoluteLinkError
        850     LOAD_BUILD_CLASS                
        852     LOAD_CONST                      93: <CODE> LinkOutsideDestinationError
        854     LOAD_CONST                      94: 'LinkOutsideDestinationError'
        856     MAKE_FUNCTION                   0
        858     LOAD_CONST                      94: 'LinkOutsideDestinationError'
        860     LOAD_NAME                       90: FilterError
        862     CALL_FUNCTION                   3
        864     STORE_NAME                      95: LinkOutsideDestinationError
        866     LOAD_CONST                      115: (True,)
        868     LOAD_CONST                      96: <CODE> _get_filtered_attrs
        870     LOAD_CONST                      97: '_get_filtered_attrs'
        872     MAKE_FUNCTION                   1
        874     STORE_NAME                      96: _get_filtered_attrs
        876     LOAD_CONST                      98: <CODE> fully_trusted_filter
        878     LOAD_CONST                      99: 'fully_trusted_filter'
        880     MAKE_FUNCTION                   0
        882     STORE_NAME                      97: fully_trusted_filter
        884     LOAD_CONST                      100: <CODE> tar_filter
        886     LOAD_CONST                      101: 'tar_filter'
        888     MAKE_FUNCTION                   0
        890     STORE_NAME                      98: tar_filter
        892     LOAD_CONST                      102: <CODE> data_filter
        894     LOAD_CONST                      103: 'data_filter'
        896     MAKE_FUNCTION                   0
        898     STORE_NAME                      99: data_filter
        900     LOAD_NAME                       97: fully_trusted_filter
        902     LOAD_NAME                       98: tar_filter
        904     LOAD_NAME                       99: data_filter
        906     LOAD_CONST                      104: ('fully_trusted', 'tar', 'data')
        908     BUILD_CONST_KEY_MAP             3
        910     STORE_NAME                      100: _NAMED_FILTERS
        912     LOAD_NAME                       85: object
        914     CALL_FUNCTION                   0
        916     STORE_NAME                      101: _KEEP
        918     LOAD_NAME                       15: re
        920     LOAD_METHOD                     102: compile
        922     LOAD_CONST                      105: b'([0-9]{1,20}) '
        924     CALL_METHOD                     1
        926     STORE_NAME                      103: _header_length_prefix_re
        928     LOAD_BUILD_CLASS                
        930     LOAD_CONST                      106: <CODE> TarInfo
        932     LOAD_CONST                      107: 'TarInfo'
        934     MAKE_FUNCTION                   0
        936     LOAD_CONST                      107: 'TarInfo'
        938     LOAD_NAME                       85: object
        940     CALL_FUNCTION                   3
        942     STORE_NAME                      104: TarInfo
        944     LOAD_BUILD_CLASS                
        946     LOAD_CONST                      108: <CODE> TarFile
        948     LOAD_CONST                      109: 'TarFile'
        950     MAKE_FUNCTION                   0
        952     LOAD_CONST                      109: 'TarFile'
        954     LOAD_NAME                       85: object
        956     CALL_FUNCTION                   3
        958     STORE_NAME                      105: TarFile
        960     LOAD_CONST                      110: <CODE> is_tarfile
        962     LOAD_CONST                      111: 'is_tarfile'
        964     MAKE_FUNCTION                   0
        966     STORE_NAME                      106: is_tarfile
        968     LOAD_NAME                       105: TarFile
        970     LOAD_ATTR                       5: open
        972     STORE_NAME                      5: open
        974     LOAD_CONST                      112: <CODE> main
        976     LOAD_CONST                      113: 'main'
        978     MAKE_FUNCTION                   0
        980     STORE_NAME                      107: main
        982     LOAD_NAME                       108: __name__
        984     LOAD_CONST                      114: '__main__'
        986     COMPARE_OP                      2 (==)
        988     POP_JUMP_IF_FALSE               501 (to 1002)
        992     LOAD_NAME                       107: main
        994     CALL_FUNCTION                   0
        996     POP_TOP                         
        998     LOAD_CONST                      6: None
        1000    RETURN_VALUE                    
        1002    LOAD_CONST                      6: None
        1004    RETURN_VALUE                    
