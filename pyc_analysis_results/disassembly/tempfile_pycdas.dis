tempfile.pyc (Python 3.10)
[Code]
    File Name: tempfile.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        '__all__'
        'functools'
        '_functools'
        'warnings'
        '_warnings'
        'io'
        '_io'
        'os'
        '_os'
        'shutil'
        '_shutil'
        'rmtree'
        '_rmtree'
        'ImportError'
        'sys'
        '_sys'
        'stat'
        '_stat'
        '_rmtree_unsafe'
        '_rmtree_safe_fd'
        'open'
        'unlink'
        'rmdir'
        'supports_dir_fd'
        'listdir'
        'supports_fd'
        'supports_follow_symlinks'
        '_use_fd_functions'
        'errno'
        '_errno'
        'random'
        'Random'
        '_Random'
        'types'
        '_types'
        'weakref'
        '_weakref'
        '_thread'
        'allocate_lock'
        '_allocate_lock'
        'O_RDWR'
        'O_CREAT'
        'O_EXCL'
        '_text_openflags'
        'hasattr'
        'O_NOFOLLOW'
        '_bin_openflags'
        'O_BINARY'
        'TMP_MAX'
        'template'
        '_once_lock'
        '_exists'
        '_infer_return_type'
        '_sanitize_params'
        '_RandomNameSequence'
        '_candidate_tempdir_list'
        '_get_default_tempdir'
        '_name_sequence'
        '_get_candidate_names'
        '_mkstemp_inner'
        '_dont_follow_symlinks'
        '_resetperms'
        'gettempprefix'
        'gettempprefixb'
        'tempdir'
        '_gettempdir'
        'gettempdir'
        'gettempdirb'
        'mkstemp'
        'mkdtemp'
        'mktemp'
        '_TemporaryFileCloser'
        '_TemporaryFileWrapper'
        'NamedTemporaryFile'
        'name'
        'platform'
        'TemporaryFile'
        '_O_TMPFILE_WORKS'
        'SpooledTemporaryFile'
        'TemporaryDirectory'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        "Temporary files.\n\nThis module provides generic, low- and high-level interfaces for\ncreating temporary files and directories.  All of the interfaces\nprovided by this module can be used without fear of race conditions\nexcept for 'mktemp'.  'mktemp' is subject to race conditions and\nshould not be used; it is provided for backward compatibility only.\n\nThe default path names are returned as str.  If you supply bytes as\ninput, all return values will be in bytes.  Ex:\n\n    >>> tempfile.mkstemp()\n    (4, '/tmp/tmptpu9nin8')\n    >>> tempfile.mkdtemp(suffix=b'')\n    b'/tmp/tmppbi8f0hy'\n\nThis module also provides some data items to the user:\n\n  TMP_MAX  - maximum number of names that will be tried before\n             giving up.\n  tempdir  - If this is set to a string before the first use of\n             any routine from this module, it will be considered as\n             another candidate location to store temporary files.\n"
        (
            'NamedTemporaryFile'
            'TemporaryFile'
            'SpooledTemporaryFile'
            'TemporaryDirectory'
            'mkstemp'
            'mkdtemp'
            'mktemp'
            'TMP_MAX'
            'gettempprefix'
            'tempdir'
            'gettempdir'
            'gettempprefixb'
            'gettempdirb'
        )
        0
        None
        [Code]
            File Name: tempfile.py
            Object Name: _rmtree_unsafe
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'path'
                'islink'
                'OSError'
                '_sys'
                'exc_info'
                'listdir'
                'join'
                'lstat'
                'st_mode'
                '_stat'
                'S_ISDIR'
                '_rmtree_unsafe'
                'unlink'
                'rmdir'
            [Var Names]
                'path'
                'onerror'
                'names'
                'name'
                'fullname'
                'mode'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'Cannot call rmtree on a symbolic link'
                0
            [Disassembly]
                0       SETUP_FINALLY                   12 (to 26)
                2       LOAD_GLOBAL                     0: _os
                4       LOAD_ATTR                       1: path
                6       LOAD_METHOD                     2: islink
                8       LOAD_FAST                       0: path
                10      CALL_METHOD                     1
                12      POP_JUMP_IF_FALSE               11 (to 22)
                14      LOAD_GLOBAL                     3: OSError
                16      LOAD_CONST                      1: 'Cannot call rmtree on a symbolic link'
                18      CALL_FUNCTION                   1
                20      RAISE_VARARGS                   1
                22      POP_BLOCK                       
                24      JUMP_FORWARD                    20 (to 66)
                26      DUP_TOP                         
                28      LOAD_GLOBAL                     3: OSError
                30      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                32      POP_TOP                         
                34      POP_TOP                         
                36      POP_TOP                         
                38      LOAD_FAST                       1: onerror
                40      LOAD_GLOBAL                     0: _os
                42      LOAD_ATTR                       1: path
                44      LOAD_ATTR                       2: islink
                46      LOAD_FAST                       0: path
                48      LOAD_GLOBAL                     4: _sys
                50      LOAD_METHOD                     5: exc_info
                52      CALL_METHOD                     0
                54      CALL_FUNCTION                   3
                56      POP_TOP                         
                58      POP_EXCEPT                      
                60      LOAD_CONST                      0: None
                62      RETURN_VALUE                    
                64      RERAISE                         0
                66      BUILD_LIST                      0
                68      STORE_FAST                      2: names
                70      SETUP_FINALLY                   7 (to 86)
                72      LOAD_GLOBAL                     0: _os
                74      LOAD_METHOD                     6: listdir
                76      LOAD_FAST                       0: path
                78      CALL_METHOD                     1
                80      STORE_FAST                      2: names
                82      POP_BLOCK                       
                84      JUMP_FORWARD                    18 (to 122)
                86      DUP_TOP                         
                88      LOAD_GLOBAL                     3: OSError
                90      JUMP_IF_NOT_EXC_MATCH           60 (to 120)
                92      POP_TOP                         
                94      POP_TOP                         
                96      POP_TOP                         
                98      LOAD_FAST                       1: onerror
                100     LOAD_GLOBAL                     0: _os
                102     LOAD_ATTR                       6: listdir
                104     LOAD_FAST                       0: path
                106     LOAD_GLOBAL                     4: _sys
                108     LOAD_METHOD                     5: exc_info
                110     CALL_METHOD                     0
                112     CALL_FUNCTION                   3
                114     POP_TOP                         
                116     POP_EXCEPT                      
                118     JUMP_FORWARD                    1 (to 122)
                120     RERAISE                         0
                122     LOAD_FAST                       2: names
                124     GET_ITER                        
                126     FOR_ITER                        65 (to 258)
                128     STORE_FAST                      3: name
                130     LOAD_GLOBAL                     0: _os
                132     LOAD_ATTR                       1: path
                134     LOAD_METHOD                     7: join
                136     LOAD_FAST                       0: path
                138     LOAD_FAST                       3: name
                140     CALL_METHOD                     2
                142     STORE_FAST                      4: fullname
                144     SETUP_FINALLY                   8 (to 162)
                146     LOAD_GLOBAL                     0: _os
                148     LOAD_METHOD                     8: lstat
                150     LOAD_FAST                       4: fullname
                152     CALL_METHOD                     1
                154     LOAD_ATTR                       9: st_mode
                156     STORE_FAST                      5: mode
                158     POP_BLOCK                       
                160     JUMP_FORWARD                    11 (to 184)
                162     DUP_TOP                         
                164     LOAD_GLOBAL                     3: OSError
                166     JUMP_IF_NOT_EXC_MATCH           91 (to 182)
                168     POP_TOP                         
                170     POP_TOP                         
                172     POP_TOP                         
                174     LOAD_CONST                      2: 0
                176     STORE_FAST                      5: mode
                178     POP_EXCEPT                      
                180     JUMP_FORWARD                    1 (to 184)
                182     RERAISE                         0
                184     LOAD_GLOBAL                     10: _stat
                186     LOAD_METHOD                     11: S_ISDIR
                188     LOAD_FAST                       5: mode
                190     CALL_METHOD                     1
                192     POP_JUMP_IF_FALSE               103 (to 206)
                194     LOAD_GLOBAL                     12: _rmtree_unsafe
                196     LOAD_FAST                       4: fullname
                198     LOAD_FAST                       1: onerror
                200     CALL_FUNCTION                   2
                202     POP_TOP                         
                204     JUMP_ABSOLUTE                   63 (to 126)
                206     SETUP_FINALLY                   7 (to 222)
                208     LOAD_GLOBAL                     0: _os
                210     LOAD_METHOD                     13: unlink
                212     LOAD_FAST                       4: fullname
                214     CALL_METHOD                     1
                216     POP_TOP                         
                218     POP_BLOCK                       
                220     JUMP_ABSOLUTE                   63 (to 126)
                222     DUP_TOP                         
                224     LOAD_GLOBAL                     3: OSError
                226     JUMP_IF_NOT_EXC_MATCH           128 (to 256)
                228     POP_TOP                         
                230     POP_TOP                         
                232     POP_TOP                         
                234     LOAD_FAST                       1: onerror
                236     LOAD_GLOBAL                     0: _os
                238     LOAD_ATTR                       13: unlink
                240     LOAD_FAST                       4: fullname
                242     LOAD_GLOBAL                     4: _sys
                244     LOAD_METHOD                     5: exc_info
                246     CALL_METHOD                     0
                248     CALL_FUNCTION                   3
                250     POP_TOP                         
                252     POP_EXCEPT                      
                254     JUMP_ABSOLUTE                   63 (to 126)
                256     RERAISE                         0
                258     SETUP_FINALLY                   8 (to 276)
                260     LOAD_GLOBAL                     0: _os
                262     LOAD_METHOD                     14: rmdir
                264     LOAD_FAST                       0: path
                266     CALL_METHOD                     1
                268     POP_TOP                         
                270     POP_BLOCK                       
                272     LOAD_CONST                      0: None
                274     RETURN_VALUE                    
                276     DUP_TOP                         
                278     LOAD_GLOBAL                     3: OSError
                280     JUMP_IF_NOT_EXC_MATCH           156 (to 312)
                282     POP_TOP                         
                284     POP_TOP                         
                286     POP_TOP                         
                288     LOAD_FAST                       1: onerror
                290     LOAD_GLOBAL                     0: _os
                292     LOAD_ATTR                       14: rmdir
                294     LOAD_FAST                       0: path
                296     LOAD_GLOBAL                     4: _sys
                298     LOAD_METHOD                     5: exc_info
                300     CALL_METHOD                     0
                302     CALL_FUNCTION                   3
                304     POP_TOP                         
                306     POP_EXCEPT                      
                308     LOAD_CONST                      0: None
                310     RETURN_VALUE                    
                312     RERAISE                         0
        '_rmtree_unsafe'
        [Code]
            File Name: tempfile.py
            Object Name: _rmtree_safe_fd
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 10
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'listdir'
                'OSError'
                'filename'
                '_sys'
                'exc_info'
                'path'
                'join'
                'stat'
                'st_mode'
                '_stat'
                'S_ISDIR'
                'open'
                'O_RDONLY'
                'samestat'
                'fstat'
                '_rmtree_safe_fd'
                'rmdir'
                'islink'
                'close'
                'unlink'
            [Var Names]
                'topfd'
                'path'
                'onerror'
                'names'
                'err'
                'name'
                'fullname'
                'orig_st'
                'mode'
                'dirfd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                (
                    'dir_fd'
                    'follow_symlinks'
                )
                0
                (
                    'dir_fd'
                )
                'Cannot call rmtree on a symbolic link'
            [Disassembly]
                0       BUILD_LIST                      0
                2       STORE_FAST                      3: names
                4       SETUP_FINALLY                   7 (to 20)
                6       LOAD_GLOBAL                     0: _os
                8       LOAD_METHOD                     1: listdir
                10      LOAD_FAST                       0: topfd
                12      CALL_METHOD                     1
                14      STORE_FAST                      3: names
                16      POP_BLOCK                       
                18      JUMP_FORWARD                    30 (to 80)
                20      DUP_TOP                         
                22      LOAD_GLOBAL                     2: OSError
                24      JUMP_IF_NOT_EXC_MATCH           39 (to 78)
                26      POP_TOP                         
                28      STORE_FAST                      4: err
                30      POP_TOP                         
                32      SETUP_FINALLY                   18 (to 70)
                34      LOAD_FAST                       1: path
                36      LOAD_FAST                       4: err
                38      STORE_ATTR                      3: filename
                40      LOAD_FAST                       2: onerror
                42      LOAD_GLOBAL                     0: _os
                44      LOAD_ATTR                       1: listdir
                46      LOAD_FAST                       1: path
                48      LOAD_GLOBAL                     4: _sys
                50      LOAD_METHOD                     5: exc_info
                52      CALL_METHOD                     0
                54      CALL_FUNCTION                   3
                56      POP_TOP                         
                58      POP_BLOCK                       
                60      POP_EXCEPT                      
                62      LOAD_CONST                      0: None
                64      STORE_FAST                      4: err
                66      DELETE_FAST                     4: err
                68      JUMP_FORWARD                    5 (to 80)
                70      LOAD_CONST                      0: None
                72      STORE_FAST                      4: err
                74      DELETE_FAST                     4: err
                76      RERAISE                         1
                78      RERAISE                         0
                80      LOAD_FAST                       3: names
                82      GET_ITER                        
                84      FOR_ITER                        178 (to 442)
                86      STORE_FAST                      5: name
                88      LOAD_GLOBAL                     0: _os
                90      LOAD_ATTR                       6: path
                92      LOAD_METHOD                     7: join
                94      LOAD_FAST                       1: path
                96      LOAD_FAST                       5: name
                98      CALL_METHOD                     2
                100     STORE_FAST                      6: fullname
                102     SETUP_FINALLY                   13 (to 130)
                104     LOAD_GLOBAL                     0: _os
                106     LOAD_ATTR                       8: stat
                108     LOAD_FAST                       5: name
                110     LOAD_FAST                       0: topfd
                112     LOAD_CONST                      1: False
                114     LOAD_CONST                      2: ('dir_fd', 'follow_symlinks')
                116     CALL_FUNCTION_KW                3
                118     STORE_FAST                      7: orig_st
                120     LOAD_FAST                       7: orig_st
                122     LOAD_ATTR                       9: st_mode
                124     STORE_FAST                      8: mode
                126     POP_BLOCK                       
                128     JUMP_FORWARD                    11 (to 152)
                130     DUP_TOP                         
                132     LOAD_GLOBAL                     2: OSError
                134     JUMP_IF_NOT_EXC_MATCH           75 (to 150)
                136     POP_TOP                         
                138     POP_TOP                         
                140     POP_TOP                         
                142     LOAD_CONST                      3: 0
                144     STORE_FAST                      8: mode
                146     POP_EXCEPT                      
                148     JUMP_FORWARD                    1 (to 152)
                150     RERAISE                         0
                152     LOAD_GLOBAL                     10: _stat
                154     LOAD_METHOD                     11: S_ISDIR
                156     LOAD_FAST                       8: mode
                158     CALL_METHOD                     1
                160     POP_JUMP_IF_FALSE               193 (to 386)
                162     SETUP_FINALLY                   11 (to 186)
                164     LOAD_GLOBAL                     0: _os
                166     LOAD_ATTR                       12: open
                168     LOAD_FAST                       5: name
                170     LOAD_GLOBAL                     0: _os
                172     LOAD_ATTR                       13: O_RDONLY
                174     LOAD_FAST                       0: topfd
                176     LOAD_CONST                      4: ('dir_fd',)
                178     CALL_FUNCTION_KW                3
                180     STORE_FAST                      9: dirfd
                182     POP_BLOCK                       
                184     JUMP_FORWARD                    18 (to 222)
                186     DUP_TOP                         
                188     LOAD_GLOBAL                     2: OSError
                190     JUMP_IF_NOT_EXC_MATCH           110 (to 220)
                192     POP_TOP                         
                194     POP_TOP                         
                196     POP_TOP                         
                198     LOAD_FAST                       2: onerror
                200     LOAD_GLOBAL                     0: _os
                202     LOAD_ATTR                       12: open
                204     LOAD_FAST                       6: fullname
                206     LOAD_GLOBAL                     4: _sys
                208     LOAD_METHOD                     5: exc_info
                210     CALL_METHOD                     0
                212     CALL_FUNCTION                   3
                214     POP_TOP                         
                216     POP_EXCEPT                      
                218     JUMP_ABSOLUTE                   42 (to 84)
                220     RERAISE                         0
                222     SETUP_FINALLY                   75 (to 374)
                224     LOAD_GLOBAL                     0: _os
                226     LOAD_ATTR                       6: path
                228     LOAD_METHOD                     14: samestat
                230     LOAD_FAST                       7: orig_st
                232     LOAD_GLOBAL                     0: _os
                234     LOAD_METHOD                     15: fstat
                236     LOAD_FAST                       9: dirfd
                238     CALL_METHOD                     1
                240     CALL_METHOD                     2
                242     POP_JUMP_IF_FALSE               156 (to 312)
                244     LOAD_GLOBAL                     16: _rmtree_safe_fd
                246     LOAD_FAST                       9: dirfd
                248     LOAD_FAST                       6: fullname
                250     LOAD_FAST                       2: onerror
                252     CALL_FUNCTION                   3
                254     POP_TOP                         
                256     SETUP_FINALLY                   9 (to 276)
                258     LOAD_GLOBAL                     0: _os
                260     LOAD_ATTR                       17: rmdir
                262     LOAD_FAST                       5: name
                264     LOAD_FAST                       0: topfd
                266     LOAD_CONST                      4: ('dir_fd',)
                268     CALL_FUNCTION_KW                2
                270     POP_TOP                         
                272     POP_BLOCK                       
                274     JUMP_FORWARD                    42 (to 360)
                276     DUP_TOP                         
                278     LOAD_GLOBAL                     2: OSError
                280     JUMP_IF_NOT_EXC_MATCH           155 (to 310)
                282     POP_TOP                         
                284     POP_TOP                         
                286     POP_TOP                         
                288     LOAD_FAST                       2: onerror
                290     LOAD_GLOBAL                     0: _os
                292     LOAD_ATTR                       17: rmdir
                294     LOAD_FAST                       6: fullname
                296     LOAD_GLOBAL                     4: _sys
                298     LOAD_METHOD                     5: exc_info
                300     CALL_METHOD                     0
                302     CALL_FUNCTION                   3
                304     POP_TOP                         
                306     POP_EXCEPT                      
                308     JUMP_FORWARD                    25 (to 360)
                310     RERAISE                         0
                312     SETUP_FINALLY                   4 (to 322)
                314     LOAD_GLOBAL                     2: OSError
                316     LOAD_CONST                      5: 'Cannot call rmtree on a symbolic link'
                318     CALL_FUNCTION                   1
                320     RAISE_VARARGS                   1
                322     DUP_TOP                         
                324     LOAD_GLOBAL                     2: OSError
                326     JUMP_IF_NOT_EXC_MATCH           179 (to 358)
                328     POP_TOP                         
                330     POP_TOP                         
                332     POP_TOP                         
                334     LOAD_FAST                       2: onerror
                336     LOAD_GLOBAL                     0: _os
                338     LOAD_ATTR                       6: path
                340     LOAD_ATTR                       18: islink
                342     LOAD_FAST                       6: fullname
                344     LOAD_GLOBAL                     4: _sys
                346     LOAD_METHOD                     5: exc_info
                348     CALL_METHOD                     0
                350     CALL_FUNCTION                   3
                352     POP_TOP                         
                354     POP_EXCEPT                      
                356     JUMP_FORWARD                    1 (to 360)
                358     RERAISE                         0
                360     POP_BLOCK                       
                362     LOAD_GLOBAL                     0: _os
                364     LOAD_METHOD                     19: close
                366     LOAD_FAST                       9: dirfd
                368     CALL_METHOD                     1
                370     POP_TOP                         
                372     JUMP_ABSOLUTE                   42 (to 84)
                374     LOAD_GLOBAL                     0: _os
                376     LOAD_METHOD                     19: close
                378     LOAD_FAST                       9: dirfd
                380     CALL_METHOD                     1
                382     POP_TOP                         
                384     RERAISE                         0
                386     SETUP_FINALLY                   9 (to 406)
                388     LOAD_GLOBAL                     0: _os
                390     LOAD_ATTR                       20: unlink
                392     LOAD_FAST                       5: name
                394     LOAD_FAST                       0: topfd
                396     LOAD_CONST                      4: ('dir_fd',)
                398     CALL_FUNCTION_KW                2
                400     POP_TOP                         
                402     POP_BLOCK                       
                404     JUMP_ABSOLUTE                   42 (to 84)
                406     DUP_TOP                         
                408     LOAD_GLOBAL                     2: OSError
                410     JUMP_IF_NOT_EXC_MATCH           220 (to 440)
                412     POP_TOP                         
                414     POP_TOP                         
                416     POP_TOP                         
                418     LOAD_FAST                       2: onerror
                420     LOAD_GLOBAL                     0: _os
                422     LOAD_ATTR                       20: unlink
                424     LOAD_FAST                       6: fullname
                426     LOAD_GLOBAL                     4: _sys
                428     LOAD_METHOD                     5: exc_info
                430     CALL_METHOD                     0
                432     CALL_FUNCTION                   3
                434     POP_TOP                         
                436     POP_EXCEPT                      
                438     JUMP_ABSOLUTE                   42 (to 84)
                440     RERAISE                         0
                442     LOAD_CONST                      0: None
                444     RETURN_VALUE                    
        '_rmtree_safe_fd'
        False
        [Code]
            File Name: tempfile.py
            Object Name: _rmtree
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_use_fd_functions'
                'isinstance'
                'bytes'
                '_os'
                'fsdecode'
                'lstat'
                'Exception'
                '_sys'
                'exc_info'
                'open'
                'O_RDONLY'
                'path'
                'samestat'
                'fstat'
                '_rmtree_safe_fd'
                'rmdir'
                'OSError'
                'islink'
                'close'
                '_rmtree_unsafe'
            [Var Names]
                'path'
                'ignore_errors'
                'onerror'
                'orig_st'
                'fd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Recursively delete a directory tree.\n\n    If ignore_errors is set, errors are ignored; otherwise, if onerror\n    is set, it is called to handle the error with arguments (func,\n    path, exc_info) where func is platform and implementation dependent;\n    path is the argument to that function that caused it to fail; and\n    exc_info is a tuple returned by sys.exc_info().  If ignore_errors\n    is false and onerror is None, an exception is raised.\n\n    '
                [Code]
                    File Name: tempfile.py
                    Object Name: onerror
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000057 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       RETURN_VALUE                    
                '_rmtree.<locals>.onerror'
                None
                [Code]
                    File Name: tempfile.py
                    Object Name: onerror
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 0
                    Flags: 0x00000057 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       RAISE_VARARGS                   0
                'Cannot call rmtree on a symbolic link'
            [Disassembly]
                0       LOAD_FAST                       1: ignore_errors
                2       POP_JUMP_IF_FALSE               7 (to 14)
                4       LOAD_CONST                      1: <CODE> onerror
                6       LOAD_CONST                      2: '_rmtree.<locals>.onerror'
                8       MAKE_FUNCTION                   0
                10      STORE_FAST                      2: onerror
                12      JUMP_FORWARD                    8 (to 30)
                14      LOAD_FAST                       2: onerror
                16      LOAD_CONST                      3: None
                18      IS_OP                           0 (is)
                20      POP_JUMP_IF_FALSE               15 (to 30)
                22      LOAD_CONST                      4: <CODE> onerror
                24      LOAD_CONST                      2: '_rmtree.<locals>.onerror'
                26      MAKE_FUNCTION                   0
                28      STORE_FAST                      2: onerror
                30      LOAD_GLOBAL                     0: _use_fd_functions
                32      POP_JUMP_IF_FALSE               180 (to 360)
                34      LOAD_GLOBAL                     1: isinstance
                36      LOAD_FAST                       0: path
                38      LOAD_GLOBAL                     2: bytes
                40      CALL_FUNCTION                   2
                42      POP_JUMP_IF_FALSE               27 (to 54)
                44      LOAD_GLOBAL                     3: _os
                46      LOAD_METHOD                     4: fsdecode
                48      LOAD_FAST                       0: path
                50      CALL_METHOD                     1
                52      STORE_FAST                      0: path
                54      SETUP_FINALLY                   7 (to 70)
                56      LOAD_GLOBAL                     3: _os
                58      LOAD_METHOD                     5: lstat
                60      LOAD_FAST                       0: path
                62      CALL_METHOD                     1
                64      STORE_FAST                      3: orig_st
                66      POP_BLOCK                       
                68      JUMP_FORWARD                    19 (to 108)
                70      DUP_TOP                         
                72      LOAD_GLOBAL                     6: Exception
                74      JUMP_IF_NOT_EXC_MATCH           53 (to 106)
                76      POP_TOP                         
                78      POP_TOP                         
                80      POP_TOP                         
                82      LOAD_FAST                       2: onerror
                84      LOAD_GLOBAL                     3: _os
                86      LOAD_ATTR                       5: lstat
                88      LOAD_FAST                       0: path
                90      LOAD_GLOBAL                     7: _sys
                92      LOAD_METHOD                     8: exc_info
                94      CALL_METHOD                     0
                96      CALL_FUNCTION                   3
                98      POP_TOP                         
                100     POP_EXCEPT                      
                102     LOAD_CONST                      3: None
                104     RETURN_VALUE                    
                106     RERAISE                         0
                108     SETUP_FINALLY                   9 (to 128)
                110     LOAD_GLOBAL                     3: _os
                112     LOAD_METHOD                     9: open
                114     LOAD_FAST                       0: path
                116     LOAD_GLOBAL                     3: _os
                118     LOAD_ATTR                       10: O_RDONLY
                120     CALL_METHOD                     2
                122     STORE_FAST                      4: fd
                124     POP_BLOCK                       
                126     JUMP_FORWARD                    19 (to 166)
                128     DUP_TOP                         
                130     LOAD_GLOBAL                     6: Exception
                132     JUMP_IF_NOT_EXC_MATCH           82 (to 164)
                134     POP_TOP                         
                136     POP_TOP                         
                138     POP_TOP                         
                140     LOAD_FAST                       2: onerror
                142     LOAD_GLOBAL                     3: _os
                144     LOAD_ATTR                       5: lstat
                146     LOAD_FAST                       0: path
                148     LOAD_GLOBAL                     7: _sys
                150     LOAD_METHOD                     8: exc_info
                152     CALL_METHOD                     0
                154     CALL_FUNCTION                   3
                156     POP_TOP                         
                158     POP_EXCEPT                      
                160     LOAD_CONST                      3: None
                162     RETURN_VALUE                    
                164     RERAISE                         0
                166     SETUP_FINALLY                   90 (to 348)
                168     LOAD_GLOBAL                     3: _os
                170     LOAD_ATTR                       11: path
                172     LOAD_METHOD                     12: samestat
                174     LOAD_FAST                       3: orig_st
                176     LOAD_GLOBAL                     3: _os
                178     LOAD_METHOD                     13: fstat
                180     LOAD_FAST                       4: fd
                182     CALL_METHOD                     1
                184     CALL_METHOD                     2
                186     POP_JUMP_IF_FALSE               126 (to 252)
                188     LOAD_GLOBAL                     14: _rmtree_safe_fd
                190     LOAD_FAST                       4: fd
                192     LOAD_FAST                       0: path
                194     LOAD_FAST                       2: onerror
                196     CALL_FUNCTION                   3
                198     POP_TOP                         
                200     SETUP_FINALLY                   7 (to 216)
                202     LOAD_GLOBAL                     3: _os
                204     LOAD_METHOD                     15: rmdir
                206     LOAD_FAST                       0: path
                208     CALL_METHOD                     1
                210     POP_TOP                         
                212     POP_BLOCK                       
                214     JUMP_FORWARD                    42 (to 300)
                216     DUP_TOP                         
                218     LOAD_GLOBAL                     16: OSError
                220     JUMP_IF_NOT_EXC_MATCH           125 (to 250)
                222     POP_TOP                         
                224     POP_TOP                         
                226     POP_TOP                         
                228     LOAD_FAST                       2: onerror
                230     LOAD_GLOBAL                     3: _os
                232     LOAD_ATTR                       15: rmdir
                234     LOAD_FAST                       0: path
                236     LOAD_GLOBAL                     7: _sys
                238     LOAD_METHOD                     8: exc_info
                240     CALL_METHOD                     0
                242     CALL_FUNCTION                   3
                244     POP_TOP                         
                246     POP_EXCEPT                      
                248     JUMP_FORWARD                    33 (to 316)
                250     RERAISE                         0
                252     SETUP_FINALLY                   4 (to 262)
                254     LOAD_GLOBAL                     16: OSError
                256     LOAD_CONST                      5: 'Cannot call rmtree on a symbolic link'
                258     CALL_FUNCTION                   1
                260     RAISE_VARARGS                   1
                262     DUP_TOP                         
                264     LOAD_GLOBAL                     16: OSError
                266     JUMP_IF_NOT_EXC_MATCH           149 (to 298)
                268     POP_TOP                         
                270     POP_TOP                         
                272     POP_TOP                         
                274     LOAD_FAST                       2: onerror
                276     LOAD_GLOBAL                     3: _os
                278     LOAD_ATTR                       11: path
                280     LOAD_ATTR                       17: islink
                282     LOAD_FAST                       0: path
                284     LOAD_GLOBAL                     7: _sys
                286     LOAD_METHOD                     8: exc_info
                288     CALL_METHOD                     0
                290     CALL_FUNCTION                   3
                292     POP_TOP                         
                294     POP_EXCEPT                      
                296     JUMP_FORWARD                    17 (to 332)
                298     RERAISE                         0
                300     POP_BLOCK                       
                302     LOAD_GLOBAL                     3: _os
                304     LOAD_METHOD                     18: close
                306     LOAD_FAST                       4: fd
                308     CALL_METHOD                     1
                310     POP_TOP                         
                312     LOAD_CONST                      3: None
                314     RETURN_VALUE                    
                316     POP_BLOCK                       
                318     LOAD_GLOBAL                     3: _os
                320     LOAD_METHOD                     18: close
                322     LOAD_FAST                       4: fd
                324     CALL_METHOD                     1
                326     POP_TOP                         
                328     LOAD_CONST                      3: None
                330     RETURN_VALUE                    
                332     POP_BLOCK                       
                334     LOAD_GLOBAL                     3: _os
                336     LOAD_METHOD                     18: close
                338     LOAD_FAST                       4: fd
                340     CALL_METHOD                     1
                342     POP_TOP                         
                344     LOAD_CONST                      3: None
                346     RETURN_VALUE                    
                348     LOAD_GLOBAL                     3: _os
                350     LOAD_METHOD                     18: close
                352     LOAD_FAST                       4: fd
                354     CALL_METHOD                     1
                356     POP_TOP                         
                358     RERAISE                         0
                360     LOAD_GLOBAL                     19: _rmtree_unsafe
                362     LOAD_FAST                       0: path
                364     LOAD_FAST                       2: onerror
                366     CALL_FUNCTION                   2
                368     RETURN_VALUE                    
        '_rmtree'
        (
            'Random'
        )
        'O_NOFOLLOW'
        'O_BINARY'
        'TMP_MAX'
        10000
        'tmp'
        [Code]
            File Name: tempfile.py
            Object Name: _exists
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'lstat'
                'OSError'
            [Var Names]
                'fn'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                True
            [Disassembly]
                0       SETUP_FINALLY                   8 (to 18)
                2       LOAD_GLOBAL                     0: _os
                4       LOAD_METHOD                     1: lstat
                6       LOAD_FAST                       0: fn
                8       CALL_METHOD                     1
                10      POP_TOP                         
                12      POP_BLOCK                       
                14      LOAD_CONST                      2: True
                16      RETURN_VALUE                    
                18      DUP_TOP                         
                20      LOAD_GLOBAL                     2: OSError
                22      JUMP_IF_NOT_EXC_MATCH           18 (to 36)
                24      POP_TOP                         
                26      POP_TOP                         
                28      POP_TOP                         
                30      POP_EXCEPT                      
                32      LOAD_CONST                      1: False
                34      RETURN_VALUE                    
                36      RERAISE                         0
        '_exists'
        [Code]
            File Name: tempfile.py
            Object Name: _infer_return_type
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 4
            Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
            [Names]
                'isinstance'
                '_os'
                'PathLike'
                'fspath'
                'bytes'
                'str'
                'TypeError'
                'tempdir'
            [Var Names]
                'args'
                'return_type'
                'arg'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Look at the type of all args and divine their implied return type.'
                None
                "Can't mix bytes and non-bytes in path components."
            [Disassembly]
                0       LOAD_CONST                      1: None
                2       STORE_FAST                      1: return_type
                4       LOAD_FAST                       0: args
                6       GET_ITER                        
                8       FOR_ITER                        44 (to 98)
                10      STORE_FAST                      2: arg
                12      LOAD_FAST                       2: arg
                14      LOAD_CONST                      1: None
                16      IS_OP                           0 (is)
                18      POP_JUMP_IF_FALSE               11 (to 22)
                20      JUMP_ABSOLUTE                   4 (to 8)
                22      LOAD_GLOBAL                     0: isinstance
                24      LOAD_FAST                       2: arg
                26      LOAD_GLOBAL                     1: _os
                28      LOAD_ATTR                       2: PathLike
                30      CALL_FUNCTION                   2
                32      POP_JUMP_IF_FALSE               22 (to 44)
                34      LOAD_GLOBAL                     1: _os
                36      LOAD_METHOD                     3: fspath
                38      LOAD_FAST                       2: arg
                40      CALL_METHOD                     1
                42      STORE_FAST                      2: arg
                44      LOAD_GLOBAL                     0: isinstance
                46      LOAD_FAST                       2: arg
                48      LOAD_GLOBAL                     4: bytes
                50      CALL_FUNCTION                   2
                52      POP_JUMP_IF_FALSE               38 (to 76)
                54      LOAD_FAST                       1: return_type
                56      LOAD_GLOBAL                     5: str
                58      IS_OP                           0 (is)
                60      POP_JUMP_IF_FALSE               35 (to 70)
                62      LOAD_GLOBAL                     6: TypeError
                64      LOAD_CONST                      2: "Can't mix bytes and non-bytes in path components."
                66      CALL_FUNCTION                   1
                68      RAISE_VARARGS                   1
                70      LOAD_GLOBAL                     4: bytes
                72      STORE_FAST                      1: return_type
                74      JUMP_ABSOLUTE                   4 (to 8)
                76      LOAD_FAST                       1: return_type
                78      LOAD_GLOBAL                     4: bytes
                80      IS_OP                           0 (is)
                82      POP_JUMP_IF_FALSE               46 (to 92)
                84      LOAD_GLOBAL                     6: TypeError
                86      LOAD_CONST                      2: "Can't mix bytes and non-bytes in path components."
                88      CALL_FUNCTION                   1
                90      RAISE_VARARGS                   1
                92      LOAD_GLOBAL                     5: str
                94      STORE_FAST                      1: return_type
                96      JUMP_ABSOLUTE                   4 (to 8)
                98      LOAD_FAST                       1: return_type
                100     LOAD_CONST                      1: None
                102     IS_OP                           0 (is)
                104     POP_JUMP_IF_FALSE               66 (to 132)
                106     LOAD_GLOBAL                     7: tempdir
                108     LOAD_CONST                      1: None
                110     IS_OP                           0 (is)
                112     POP_JUMP_IF_TRUE                62 (to 124)
                114     LOAD_GLOBAL                     0: isinstance
                116     LOAD_GLOBAL                     7: tempdir
                118     LOAD_GLOBAL                     5: str
                120     CALL_FUNCTION                   2
                122     POP_JUMP_IF_FALSE               64 (to 128)
                124     LOAD_GLOBAL                     5: str
                126     RETURN_VALUE                    
                128     LOAD_GLOBAL                     4: bytes
                130     RETURN_VALUE                    
                132     LOAD_FAST                       1: return_type
                134     RETURN_VALUE                    
        '_infer_return_type'
        [Code]
            File Name: tempfile.py
            Object Name: _sanitize_params
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_infer_return_type'
                'str'
                'template'
                '_os'
                'fsencode'
                'gettempdir'
                'gettempdirb'
            [Var Names]
                'prefix'
                'suffix'
                'dir'
                'output_type'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Common parameter processing for most APIs in this module.'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _infer_return_type
                2       LOAD_FAST                       0: prefix
                4       LOAD_FAST                       1: suffix
                6       LOAD_FAST                       2: dir
                8       CALL_FUNCTION                   3
                10      STORE_FAST                      3: output_type
                12      LOAD_FAST                       1: suffix
                14      LOAD_CONST                      1: None
                16      IS_OP                           0 (is)
                18      POP_JUMP_IF_FALSE               13 (to 26)
                20      LOAD_FAST                       3: output_type
                22      CALL_FUNCTION                   0
                24      STORE_FAST                      1: suffix
                26      LOAD_FAST                       0: prefix
                28      LOAD_CONST                      1: None
                30      IS_OP                           0 (is)
                32      POP_JUMP_IF_FALSE               29 (to 58)
                34      LOAD_FAST                       3: output_type
                36      LOAD_GLOBAL                     1: str
                38      IS_OP                           0 (is)
                40      POP_JUMP_IF_FALSE               24 (to 48)
                42      LOAD_GLOBAL                     2: template
                44      STORE_FAST                      0: prefix
                46      JUMP_FORWARD                    5 (to 58)
                48      LOAD_GLOBAL                     3: _os
                50      LOAD_METHOD                     4: fsencode
                52      LOAD_GLOBAL                     2: template
                54      CALL_METHOD                     1
                56      STORE_FAST                      0: prefix
                58      LOAD_FAST                       2: dir
                60      LOAD_CONST                      1: None
                62      IS_OP                           0 (is)
                64      POP_JUMP_IF_FALSE               44 (to 88)
                66      LOAD_FAST                       3: output_type
                68      LOAD_GLOBAL                     1: str
                70      IS_OP                           0 (is)
                72      POP_JUMP_IF_FALSE               41 (to 82)
                74      LOAD_GLOBAL                     5: gettempdir
                76      CALL_FUNCTION                   0
                78      STORE_FAST                      2: dir
                80      JUMP_FORWARD                    3 (to 88)
                82      LOAD_GLOBAL                     6: gettempdirb
                84      CALL_FUNCTION                   0
                86      STORE_FAST                      2: dir
                88      LOAD_FAST                       0: prefix
                90      LOAD_FAST                       1: suffix
                92      LOAD_FAST                       2: dir
                94      LOAD_FAST                       3: output_type
                96      BUILD_TUPLE                     4
                98      RETURN_VALUE                    
        '_sanitize_params'
        [Code]
            File Name: tempfile.py
            Object Name: _RandomNameSequence
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'characters'
                'property'
                'rng'
                '__iter__'
                '__next__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_RandomNameSequence'
                'An instance of _RandomNameSequence generates an endless\n    sequence of unpredictable strings which can safely be incorporated\n    into file names.  Each string is eight characters long.  Multiple\n    threads can safely use the same instance at the same time.\n\n    _RandomNameSequence is an iterator.'
                'abcdefghijklmnopqrstuvwxyz0123456789_'
                [Code]
                    File Name: tempfile.py
                    Object Name: rng
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_os'
                        'getpid'
                        'getattr'
                        '_Random'
                        '_rng'
                        '_rng_pid'
                    [Var Names]
                        'self'
                        'cur_pid'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '_rng_pid'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _os
                        2       LOAD_METHOD                     1: getpid
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      1: cur_pid
                        8       LOAD_FAST                       1: cur_pid
                        10      LOAD_GLOBAL                     2: getattr
                        12      LOAD_FAST                       0: self
                        14      LOAD_CONST                      1: '_rng_pid'
                        16      LOAD_CONST                      0: None
                        18      CALL_FUNCTION                   3
                        20      COMPARE_OP                      3 (!=)
                        22      POP_JUMP_IF_FALSE               19 (to 38)
                        24      LOAD_GLOBAL                     3: _Random
                        26      CALL_FUNCTION                   0
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      4: _rng
                        32      LOAD_FAST                       1: cur_pid
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      5: _rng_pid
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       4: _rng
                        42      RETURN_VALUE                    
                '_RandomNameSequence.rng'
                [Code]
                    File Name: tempfile.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       RETURN_VALUE                    
                '_RandomNameSequence.__iter__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __next__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'join'
                        'rng'
                        'choices'
                        'characters'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        ''
                        8
                        (
                            'k'
                        )
                    [Disassembly]
                        0       LOAD_CONST                      1: ''
                        2       LOAD_METHOD                     0: join
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: rng
                        8       LOAD_ATTR                       2: choices
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: characters
                        14      LOAD_CONST                      2: 8
                        16      LOAD_CONST                      3: ('k',)
                        18      CALL_FUNCTION_KW                2
                        20      CALL_METHOD                     1
                        22      RETURN_VALUE                    
                '_RandomNameSequence.__next__'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_RandomNameSequence'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'An instance of _RandomNameSequence generates an endless\n    sequence of unpredictable strings which can safely be incorporated\n    into file names.  Each string is eight characters long.  Multiple\n    threads can safely use the same instance at the same time.\n\n    _RandomNameSequence is an iterator.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: 'abcdefghijklmnopqrstuvwxyz0123456789_'
                14      STORE_NAME                      4: characters
                16      LOAD_NAME                       5: property
                18      LOAD_CONST                      3: <CODE> rng
                20      LOAD_CONST                      4: '_RandomNameSequence.rng'
                22      MAKE_FUNCTION                   0
                24      CALL_FUNCTION                   1
                26      STORE_NAME                      6: rng
                28      LOAD_CONST                      5: <CODE> __iter__
                30      LOAD_CONST                      6: '_RandomNameSequence.__iter__'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      7: __iter__
                36      LOAD_CONST                      7: <CODE> __next__
                38      LOAD_CONST                      8: '_RandomNameSequence.__next__'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      8: __next__
                44      LOAD_CONST                      9: None
                46      RETURN_VALUE                    
        '_RandomNameSequence'
        [Code]
            File Name: tempfile.py
            Object Name: _candidate_tempdir_list
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'getenv'
                'append'
                'name'
                'extend'
                'path'
                'expanduser'
                'expandvars'
                'getcwd'
                'AttributeError'
                'OSError'
                'curdir'
            [Var Names]
                'dirlist'
                'envname'
                'dirname'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Generate a list of candidate temporary directories which\n    _get_default_tempdir will try.'
                (
                    'TMPDIR'
                    'TEMP'
                    'TMP'
                )
                'nt'
                '~\\AppData\\Local\\Temp'
                '%SYSTEMROOT%\\Temp'
                'c:\\temp'
                'c:\\tmp'
                '\\temp'
                '\\tmp'
                (
                    '/tmp'
                    '/var/tmp'
                    '/usr/tmp'
                )
            [Disassembly]
                0       BUILD_LIST                      0
                2       STORE_FAST                      0: dirlist
                4       LOAD_CONST                      1: ('TMPDIR', 'TEMP', 'TMP')
                6       GET_ITER                        
                8       FOR_ITER                        14 (to 38)
                10      STORE_FAST                      1: envname
                12      LOAD_GLOBAL                     0: _os
                14      LOAD_METHOD                     1: getenv
                16      LOAD_FAST                       1: envname
                18      CALL_METHOD                     1
                20      STORE_FAST                      2: dirname
                22      LOAD_FAST                       2: dirname
                24      POP_JUMP_IF_FALSE               18 (to 36)
                26      LOAD_FAST                       0: dirlist
                28      LOAD_METHOD                     2: append
                30      LOAD_FAST                       2: dirname
                32      CALL_METHOD                     1
                34      POP_TOP                         
                36      JUMP_ABSOLUTE                   4 (to 8)
                38      LOAD_GLOBAL                     0: _os
                40      LOAD_ATTR                       3: name
                42      LOAD_CONST                      2: 'nt'
                44      COMPARE_OP                      2 (==)
                46      POP_JUMP_IF_FALSE               44 (to 88)
                48      LOAD_FAST                       0: dirlist
                50      LOAD_METHOD                     4: extend
                52      LOAD_GLOBAL                     0: _os
                54      LOAD_ATTR                       5: path
                56      LOAD_METHOD                     6: expanduser
                58      LOAD_CONST                      3: '~\\AppData\\Local\\Temp'
                60      CALL_METHOD                     1
                62      LOAD_GLOBAL                     0: _os
                64      LOAD_ATTR                       5: path
                66      LOAD_METHOD                     7: expandvars
                68      LOAD_CONST                      4: '%SYSTEMROOT%\\Temp'
                70      CALL_METHOD                     1
                72      LOAD_CONST                      5: 'c:\\temp'
                74      LOAD_CONST                      6: 'c:\\tmp'
                76      LOAD_CONST                      7: '\\temp'
                78      LOAD_CONST                      8: '\\tmp'
                80      BUILD_LIST                      6
                82      CALL_METHOD                     1
                84      POP_TOP                         
                86      JUMP_FORWARD                    7 (to 102)
                88      LOAD_FAST                       0: dirlist
                90      LOAD_METHOD                     4: extend
                92      BUILD_LIST                      0
                94      LOAD_CONST                      9: ('/tmp', '/var/tmp', '/usr/tmp')
                96      LIST_EXTEND                     1
                98      CALL_METHOD                     1
                100     POP_TOP                         
                102     SETUP_FINALLY                   10 (to 124)
                104     LOAD_FAST                       0: dirlist
                106     LOAD_METHOD                     2: append
                108     LOAD_GLOBAL                     0: _os
                110     LOAD_METHOD                     8: getcwd
                112     CALL_METHOD                     0
                114     CALL_METHOD                     1
                116     POP_TOP                         
                118     POP_BLOCK                       
                120     LOAD_FAST                       0: dirlist
                122     RETURN_VALUE                    
                124     DUP_TOP                         
                126     LOAD_GLOBAL                     9: AttributeError
                128     LOAD_GLOBAL                     10: OSError
                130     BUILD_TUPLE                     2
                132     JUMP_IF_NOT_EXC_MATCH           79 (to 158)
                134     POP_TOP                         
                136     POP_TOP                         
                138     POP_TOP                         
                140     LOAD_FAST                       0: dirlist
                142     LOAD_METHOD                     2: append
                144     LOAD_GLOBAL                     0: _os
                146     LOAD_ATTR                       11: curdir
                148     CALL_METHOD                     1
                150     POP_TOP                         
                152     POP_EXCEPT                      
                154     LOAD_FAST                       0: dirlist
                156     RETURN_VALUE                    
                158     RERAISE                         0
        '_candidate_tempdir_list'
        [Code]
            File Name: tempfile.py
            Object Name: _get_default_tempdir
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_RandomNameSequence'
                '_candidate_tempdir_list'
                '_os'
                'curdir'
                'path'
                'abspath'
                'range'
                'next'
                'join'
                'open'
                '_bin_openflags'
                'write'
                'close'
                'unlink'
                'FileExistsError'
                'PermissionError'
                'name'
                'isdir'
                'access'
                'W_OK'
                'OSError'
                'FileNotFoundError'
                '_errno'
                'ENOENT'
            [Var Names]
                'namer'
                'dirlist'
                'dir'
                'seq'
                'name'
                'filename'
                'fd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Calculate the default directory to use for temporary files.\n    This routine should be called exactly once.\n\n    We determine whether or not a candidate temp dir is usable by\n    trying to create and write to a file in that directory.  If this\n    is successful, the test file is deleted.  To prevent denial of\n    service, the name of the test file must be randomized.'
                100
                384
                b'blat'
                'nt'
                'No usable temporary directory found in %s'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _RandomNameSequence
                2       CALL_FUNCTION                   0
                4       STORE_FAST                      0: namer
                6       LOAD_GLOBAL                     1: _candidate_tempdir_list
                8       CALL_FUNCTION                   0
                10      STORE_FAST                      1: dirlist
                12      LOAD_FAST                       1: dirlist
                14      GET_ITER                        
                16      FOR_ITER                        126 (to 270)
                18      STORE_FAST                      2: dir
                20      LOAD_FAST                       2: dir
                22      LOAD_GLOBAL                     2: _os
                24      LOAD_ATTR                       3: curdir
                26      COMPARE_OP                      3 (!=)
                28      POP_JUMP_IF_FALSE               21 (to 42)
                30      LOAD_GLOBAL                     2: _os
                32      LOAD_ATTR                       4: path
                34      LOAD_METHOD                     5: abspath
                36      LOAD_FAST                       2: dir
                38      CALL_METHOD                     1
                40      STORE_FAST                      2: dir
                42      LOAD_GLOBAL                     6: range
                44      LOAD_CONST                      1: 100
                46      CALL_FUNCTION                   1
                48      GET_ITER                        
                50      FOR_ITER                        108 (to 268)
                52      STORE_FAST                      3: seq
                54      LOAD_GLOBAL                     7: next
                56      LOAD_FAST                       0: namer
                58      CALL_FUNCTION                   1
                60      STORE_FAST                      4: name
                62      LOAD_GLOBAL                     2: _os
                64      LOAD_ATTR                       4: path
                66      LOAD_METHOD                     8: join
                68      LOAD_FAST                       2: dir
                70      LOAD_FAST                       4: name
                72      CALL_METHOD                     2
                74      STORE_FAST                      5: filename
                76      SETUP_FINALLY                   48 (to 174)
                78      LOAD_GLOBAL                     2: _os
                80      LOAD_METHOD                     9: open
                82      LOAD_FAST                       5: filename
                84      LOAD_GLOBAL                     10: _bin_openflags
                86      LOAD_CONST                      2: 384
                88      CALL_METHOD                     3
                90      STORE_FAST                      6: fd
                92      SETUP_FINALLY                   27 (to 148)
                94      SETUP_FINALLY                   13 (to 122)
                96      LOAD_GLOBAL                     2: _os
                98      LOAD_METHOD                     11: write
                100     LOAD_FAST                       6: fd
                102     LOAD_CONST                      3: b'blat'
                104     CALL_METHOD                     2
                106     POP_TOP                         
                108     POP_BLOCK                       
                110     LOAD_GLOBAL                     2: _os
                112     LOAD_METHOD                     12: close
                114     LOAD_FAST                       6: fd
                116     CALL_METHOD                     1
                118     POP_TOP                         
                120     JUMP_FORWARD                    6 (to 134)
                122     LOAD_GLOBAL                     2: _os
                124     LOAD_METHOD                     12: close
                126     LOAD_FAST                       6: fd
                128     CALL_METHOD                     1
                130     POP_TOP                         
                132     RERAISE                         0
                134     POP_BLOCK                       
                136     LOAD_GLOBAL                     2: _os
                138     LOAD_METHOD                     13: unlink
                140     LOAD_FAST                       5: filename
                142     CALL_METHOD                     1
                144     POP_TOP                         
                146     JUMP_FORWARD                    6 (to 160)
                148     LOAD_GLOBAL                     2: _os
                150     LOAD_METHOD                     13: unlink
                152     LOAD_FAST                       5: filename
                154     CALL_METHOD                     1
                156     POP_TOP                         
                158     RERAISE                         0
                160     LOAD_FAST                       2: dir
                162     POP_BLOCK                       
                164     ROT_TWO                         
                166     POP_TOP                         
                168     ROT_TWO                         
                170     POP_TOP                         
                172     RETURN_VALUE                    
                174     DUP_TOP                         
                176     LOAD_GLOBAL                     14: FileExistsError
                178     JUMP_IF_NOT_EXC_MATCH           95 (to 190)
                180     POP_TOP                         
                182     POP_TOP                         
                184     POP_TOP                         
                186     POP_EXCEPT                      
                188     JUMP_ABSOLUTE                   25 (to 50)
                190     DUP_TOP                         
                192     LOAD_GLOBAL                     15: PermissionError
                194     JUMP_IF_NOT_EXC_MATCH           124 (to 248)
                196     POP_TOP                         
                198     POP_TOP                         
                200     POP_TOP                         
                202     LOAD_GLOBAL                     2: _os
                204     LOAD_ATTR                       16: name
                206     LOAD_CONST                      4: 'nt'
                208     COMPARE_OP                      2 (==)
                210     POP_JUMP_IF_FALSE               121 (to 242)
                212     LOAD_GLOBAL                     2: _os
                214     LOAD_ATTR                       4: path
                216     LOAD_METHOD                     17: isdir
                218     LOAD_FAST                       2: dir
                220     CALL_METHOD                     1
                222     POP_JUMP_IF_FALSE               121 (to 242)
                224     LOAD_GLOBAL                     2: _os
                226     LOAD_METHOD                     18: access
                228     LOAD_FAST                       2: dir
                230     LOAD_GLOBAL                     2: _os
                232     LOAD_ATTR                       19: W_OK
                234     CALL_METHOD                     2
                236     POP_JUMP_IF_FALSE               121 (to 242)
                238     POP_EXCEPT                      
                240     JUMP_ABSOLUTE                   25 (to 50)
                242     POP_EXCEPT                      
                244     POP_TOP                         
                246     JUMP_FORWARD                    10 (to 268)
                248     DUP_TOP                         
                250     LOAD_GLOBAL                     20: OSError
                252     JUMP_IF_NOT_EXC_MATCH           133 (to 266)
                254     POP_TOP                         
                256     POP_TOP                         
                258     POP_TOP                         
                260     POP_EXCEPT                      
                262     POP_TOP                         
                264     JUMP_FORWARD                    1 (to 268)
                266     RERAISE                         0
                268     JUMP_ABSOLUTE                   8 (to 16)
                270     LOAD_GLOBAL                     21: FileNotFoundError
                272     LOAD_GLOBAL                     22: _errno
                274     LOAD_ATTR                       23: ENOENT
                276     LOAD_CONST                      5: 'No usable temporary directory found in %s'
                278     LOAD_FAST                       1: dirlist
                280     BINARY_MODULO                   
                282     CALL_FUNCTION                   2
                284     RAISE_VARARGS                   1
        '_get_default_tempdir'
        [Code]
            File Name: tempfile.py
            Object Name: _get_candidate_names
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_name_sequence'
                '_once_lock'
                'acquire'
                '_RandomNameSequence'
                'release'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Common setup sequence for all user-callable interfaces.'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _name_sequence
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               35 (to 70)
                8       LOAD_GLOBAL                     1: _once_lock
                10      LOAD_METHOD                     2: acquire
                12      CALL_METHOD                     0
                14      POP_TOP                         
                16      SETUP_FINALLY                   21 (to 60)
                18      LOAD_GLOBAL                     0: _name_sequence
                20      LOAD_CONST                      1: None
                22      IS_OP                           0 (is)
                24      POP_JUMP_IF_FALSE               23 (to 46)
                26      LOAD_GLOBAL                     3: _RandomNameSequence
                28      CALL_FUNCTION                   0
                30      STORE_GLOBAL                    0: _name_sequence
                32      POP_BLOCK                       
                34      LOAD_GLOBAL                     1: _once_lock
                36      LOAD_METHOD                     4: release
                38      CALL_METHOD                     0
                40      POP_TOP                         
                42      LOAD_GLOBAL                     0: _name_sequence
                44      RETURN_VALUE                    
                46      POP_BLOCK                       
                48      LOAD_GLOBAL                     1: _once_lock
                50      LOAD_METHOD                     4: release
                52      CALL_METHOD                     0
                54      POP_TOP                         
                56      LOAD_GLOBAL                     0: _name_sequence
                58      RETURN_VALUE                    
                60      LOAD_GLOBAL                     1: _once_lock
                62      LOAD_METHOD                     4: release
                64      CALL_METHOD                     0
                66      POP_TOP                         
                68      RERAISE                         0
                70      LOAD_GLOBAL                     0: _name_sequence
                72      RETURN_VALUE                    
        '_get_candidate_names'
        [Code]
            File Name: tempfile.py
            Object Name: _mkstemp_inner
            Arg Count: 5
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 10
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'path'
                'abspath'
                '_get_candidate_names'
                'bytes'
                'map'
                'fsencode'
                'range'
                'TMP_MAX'
                'next'
                'join'
                '_sys'
                'audit'
                'open'
                'FileExistsError'
                'PermissionError'
                'name'
                'isdir'
                'access'
                'W_OK'
                '_errno'
                'EEXIST'
            [Var Names]
                'dir'
                'pre'
                'suf'
                'flags'
                'output_type'
                'names'
                'seq'
                'name'
                'file'
                'fd'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Code common to mkstemp, TemporaryFile, and NamedTemporaryFile.'
                'tempfile.mkstemp'
                384
                'nt'
                'No usable temporary file name found'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: abspath
                6       LOAD_FAST                       0: dir
                8       CALL_METHOD                     1
                10      STORE_FAST                      0: dir
                12      LOAD_GLOBAL                     3: _get_candidate_names
                14      CALL_FUNCTION                   0
                16      STORE_FAST                      5: names
                18      LOAD_FAST                       4: output_type
                20      LOAD_GLOBAL                     4: bytes
                22      IS_OP                           0 (is)
                24      POP_JUMP_IF_FALSE               19 (to 38)
                26      LOAD_GLOBAL                     5: map
                28      LOAD_GLOBAL                     0: _os
                30      LOAD_ATTR                       6: fsencode
                32      LOAD_FAST                       5: names
                34      CALL_FUNCTION                   2
                36      STORE_FAST                      5: names
                38      LOAD_GLOBAL                     7: range
                40      LOAD_GLOBAL                     8: TMP_MAX
                42      CALL_FUNCTION                   1
                44      GET_ITER                        
                46      FOR_ITER                        74 (to 196)
                48      STORE_FAST                      6: seq
                50      LOAD_GLOBAL                     9: next
                52      LOAD_FAST                       5: names
                54      CALL_FUNCTION                   1
                56      STORE_FAST                      7: name
                58      LOAD_GLOBAL                     0: _os
                60      LOAD_ATTR                       1: path
                62      LOAD_METHOD                     10: join
                64      LOAD_FAST                       0: dir
                66      LOAD_FAST                       1: pre
                68      LOAD_FAST                       7: name
                70      BINARY_ADD                      
                72      LOAD_FAST                       2: suf
                74      BINARY_ADD                      
                76      CALL_METHOD                     2
                78      STORE_FAST                      8: file
                80      LOAD_GLOBAL                     11: _sys
                82      LOAD_METHOD                     12: audit
                84      LOAD_CONST                      1: 'tempfile.mkstemp'
                86      LOAD_FAST                       8: file
                88      CALL_METHOD                     2
                90      POP_TOP                         
                92      SETUP_FINALLY                   9 (to 112)
                94      LOAD_GLOBAL                     0: _os
                96      LOAD_METHOD                     13: open
                98      LOAD_FAST                       8: file
                100     LOAD_FAST                       3: flags
                102     LOAD_CONST                      2: 384
                104     CALL_METHOD                     3
                106     STORE_FAST                      9: fd
                108     POP_BLOCK                       
                110     JUMP_FORWARD                    36 (to 184)
                112     DUP_TOP                         
                114     LOAD_GLOBAL                     14: FileExistsError
                116     JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                118     POP_TOP                         
                120     POP_TOP                         
                122     POP_TOP                         
                124     POP_EXCEPT                      
                126     JUMP_ABSOLUTE                   23 (to 46)
                128     DUP_TOP                         
                130     LOAD_GLOBAL                     15: PermissionError
                132     JUMP_IF_NOT_EXC_MATCH           91 (to 182)
                134     POP_TOP                         
                136     POP_TOP                         
                138     POP_TOP                         
                140     LOAD_GLOBAL                     0: _os
                142     LOAD_ATTR                       16: name
                144     LOAD_CONST                      3: 'nt'
                146     COMPARE_OP                      2 (==)
                148     POP_JUMP_IF_FALSE               90 (to 180)
                150     LOAD_GLOBAL                     0: _os
                152     LOAD_ATTR                       1: path
                154     LOAD_METHOD                     17: isdir
                156     LOAD_FAST                       0: dir
                158     CALL_METHOD                     1
                160     POP_JUMP_IF_FALSE               90 (to 180)
                162     LOAD_GLOBAL                     0: _os
                164     LOAD_METHOD                     18: access
                166     LOAD_FAST                       0: dir
                168     LOAD_GLOBAL                     0: _os
                170     LOAD_ATTR                       19: W_OK
                172     CALL_METHOD                     2
                174     POP_JUMP_IF_FALSE               90 (to 180)
                176     POP_EXCEPT                      
                178     JUMP_ABSOLUTE                   23 (to 46)
                180     RAISE_VARARGS                   0
                182     RERAISE                         0
                184     LOAD_FAST                       9: fd
                186     LOAD_FAST                       8: file
                188     BUILD_TUPLE                     2
                190     ROT_TWO                         
                192     POP_TOP                         
                194     RETURN_VALUE                    
                196     LOAD_GLOBAL                     14: FileExistsError
                198     LOAD_GLOBAL                     20: _errno
                200     LOAD_ATTR                       21: EEXIST
                202     LOAD_CONST                      4: 'No usable temporary file name found'
                204     CALL_FUNCTION                   2
                206     RAISE_VARARGS                   1
        '_mkstemp_inner'
        [Code]
            File Name: tempfile.py
            Object Name: _dont_follow_symlinks
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 4
            Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
            [Names]
                '_os'
                'supports_follow_symlinks'
                'name'
                'path'
                'islink'
            [Var Names]
                'func'
                'path'
                'args'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'follow_symlinks'
                False
                'nt'
            [Disassembly]
                0       LOAD_FAST                       0: func
                2       LOAD_GLOBAL                     0: _os
                4       LOAD_ATTR                       1: supports_follow_symlinks
                6       CONTAINS_OP                     0 (in)
                8       POP_JUMP_IF_FALSE               18 (to 36)
                10      LOAD_FAST                       0: func
                12      LOAD_FAST                       1: path
                14      BUILD_LIST                      1
                16      LOAD_FAST                       2: args
                18      LIST_EXTEND                     1
                20      LIST_TO_TUPLE                   
                22      LOAD_CONST                      1: 'follow_symlinks'
                24      LOAD_CONST                      2: False
                26      BUILD_MAP                       1
                28      CALL_FUNCTION_EX                1
                30      POP_TOP                         
                32      LOAD_CONST                      0: None
                34      RETURN_VALUE                    
                36      LOAD_GLOBAL                     0: _os
                38      LOAD_ATTR                       2: name
                40      LOAD_CONST                      3: 'nt'
                42      COMPARE_OP                      2 (==)
                44      POP_JUMP_IF_TRUE                29 (to 58)
                46      LOAD_GLOBAL                     0: _os
                48      LOAD_ATTR                       3: path
                50      LOAD_METHOD                     4: islink
                52      LOAD_FAST                       1: path
                54      CALL_METHOD                     1
                56      POP_JUMP_IF_TRUE                39 (to 78)
                58      LOAD_FAST                       0: func
                60      LOAD_FAST                       1: path
                62      BUILD_LIST                      1
                64      LOAD_FAST                       2: args
                66      LIST_EXTEND                     1
                68      LIST_TO_TUPLE                   
                70      CALL_FUNCTION_EX                0
                72      POP_TOP                         
                74      LOAD_CONST                      0: None
                76      RETURN_VALUE                    
                78      LOAD_CONST                      0: None
                80      RETURN_VALUE                    
        '_dont_follow_symlinks'
        [Code]
            File Name: tempfile.py
            Object Name: _resetperms
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'chflags'
                'AttributeError'
                '_dont_follow_symlinks'
                'chmod'
            [Var Names]
                'path'
                'chflags'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                448
            [Disassembly]
                0       SETUP_FINALLY                   5 (to 12)
                2       LOAD_GLOBAL                     0: _os
                4       LOAD_ATTR                       1: chflags
                6       STORE_FAST                      1: chflags
                8       POP_BLOCK                       
                10      JUMP_FORWARD                    9 (to 30)
                12      DUP_TOP                         
                14      LOAD_GLOBAL                     2: AttributeError
                16      JUMP_IF_NOT_EXC_MATCH           14 (to 28)
                18      POP_TOP                         
                20      POP_TOP                         
                22      POP_TOP                         
                24      POP_EXCEPT                      
                26      JUMP_FORWARD                    7 (to 42)
                28      RERAISE                         0
                30      LOAD_GLOBAL                     3: _dont_follow_symlinks
                32      LOAD_FAST                       1: chflags
                34      LOAD_FAST                       0: path
                36      LOAD_CONST                      1: 0
                38      CALL_FUNCTION                   3
                40      POP_TOP                         
                42      LOAD_GLOBAL                     3: _dont_follow_symlinks
                44      LOAD_GLOBAL                     0: _os
                46      LOAD_ATTR                       4: chmod
                48      LOAD_FAST                       0: path
                50      LOAD_CONST                      2: 448
                52      CALL_FUNCTION                   3
                54      POP_TOP                         
                56      LOAD_CONST                      0: None
                58      RETURN_VALUE                    
        '_resetperms'
        [Code]
            File Name: tempfile.py
            Object Name: gettempprefix
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'fsdecode'
                'template'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'The default prefix for temporary directories as string.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os
                2       LOAD_METHOD                     1: fsdecode
                4       LOAD_GLOBAL                     2: template
                6       CALL_METHOD                     1
                8       RETURN_VALUE                    
        'gettempprefix'
        [Code]
            File Name: tempfile.py
            Object Name: gettempprefixb
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'fsencode'
                'template'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'The default prefix for temporary directories as bytes.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os
                2       LOAD_METHOD                     1: fsencode
                4       LOAD_GLOBAL                     2: template
                6       CALL_METHOD                     1
                8       RETURN_VALUE                    
        'gettempprefixb'
        [Code]
            File Name: tempfile.py
            Object Name: _gettempdir
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'tempdir'
                '_once_lock'
                'acquire'
                '_get_default_tempdir'
                'release'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Private accessor for tempfile.tempdir.'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: tempdir
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               35 (to 70)
                8       LOAD_GLOBAL                     1: _once_lock
                10      LOAD_METHOD                     2: acquire
                12      CALL_METHOD                     0
                14      POP_TOP                         
                16      SETUP_FINALLY                   21 (to 60)
                18      LOAD_GLOBAL                     0: tempdir
                20      LOAD_CONST                      1: None
                22      IS_OP                           0 (is)
                24      POP_JUMP_IF_FALSE               23 (to 46)
                26      LOAD_GLOBAL                     3: _get_default_tempdir
                28      CALL_FUNCTION                   0
                30      STORE_GLOBAL                    0: tempdir
                32      POP_BLOCK                       
                34      LOAD_GLOBAL                     1: _once_lock
                36      LOAD_METHOD                     4: release
                38      CALL_METHOD                     0
                40      POP_TOP                         
                42      LOAD_GLOBAL                     0: tempdir
                44      RETURN_VALUE                    
                46      POP_BLOCK                       
                48      LOAD_GLOBAL                     1: _once_lock
                50      LOAD_METHOD                     4: release
                52      CALL_METHOD                     0
                54      POP_TOP                         
                56      LOAD_GLOBAL                     0: tempdir
                58      RETURN_VALUE                    
                60      LOAD_GLOBAL                     1: _once_lock
                62      LOAD_METHOD                     4: release
                64      CALL_METHOD                     0
                66      POP_TOP                         
                68      RERAISE                         0
                70      LOAD_GLOBAL                     0: tempdir
                72      RETURN_VALUE                    
        '_gettempdir'
        [Code]
            File Name: tempfile.py
            Object Name: gettempdir
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'fsdecode'
                '_gettempdir'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns tempfile.tempdir as str.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os
                2       LOAD_METHOD                     1: fsdecode
                4       LOAD_GLOBAL                     2: _gettempdir
                6       CALL_FUNCTION                   0
                8       CALL_METHOD                     1
                10      RETURN_VALUE                    
        'gettempdir'
        [Code]
            File Name: tempfile.py
            Object Name: gettempdirb
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os'
                'fsencode'
                '_gettempdir'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns tempfile.tempdir as bytes.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os
                2       LOAD_METHOD                     1: fsencode
                4       LOAD_GLOBAL                     2: _gettempdir
                6       CALL_FUNCTION                   0
                8       CALL_METHOD                     1
                10      RETURN_VALUE                    
        'gettempdirb'
        [Code]
            File Name: tempfile.py
            Object Name: mkstemp
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sanitize_params'
                '_text_openflags'
                '_bin_openflags'
                '_mkstemp_inner'
            [Var Names]
                'suffix'
                'prefix'
                'dir'
                'text'
                'output_type'
                'flags'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "User-callable function to create and return a unique temporary\n    file.  The return value is a pair (fd, name) where fd is the\n    file descriptor returned by os.open, and name is the filename.\n\n    If 'suffix' is not None, the file name will end with that suffix,\n    otherwise there will be no suffix.\n\n    If 'prefix' is not None, the file name will begin with that prefix,\n    otherwise a default prefix is used.\n\n    If 'dir' is not None, the file will be created in that directory,\n    otherwise a default directory is used.\n\n    If 'text' is specified and true, the file is opened in text\n    mode.  Else (the default) the file is opened in binary mode.\n\n    If any of 'suffix', 'prefix' and 'dir' are not None, they must be the\n    same type.  If they are bytes, the returned name will be bytes; str\n    otherwise.\n\n    The file is readable and writable only by the creating user ID.\n    If the operating system uses permission bits to indicate whether a\n    file is executable, the file is executable by no one. The file\n    descriptor is not inherited by children of this process.\n\n    Caller is responsible for deleting the file when done with it.\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sanitize_params
                2       LOAD_FAST                       1: prefix
                4       LOAD_FAST                       0: suffix
                6       LOAD_FAST                       2: dir
                8       CALL_FUNCTION                   3
                10      UNPACK_SEQUENCE                 4
                12      STORE_FAST                      1: prefix
                14      STORE_FAST                      0: suffix
                16      STORE_FAST                      2: dir
                18      STORE_FAST                      4: output_type
                20      LOAD_FAST                       3: text
                22      POP_JUMP_IF_FALSE               15 (to 30)
                24      LOAD_GLOBAL                     1: _text_openflags
                26      STORE_FAST                      5: flags
                28      JUMP_FORWARD                    2 (to 34)
                30      LOAD_GLOBAL                     2: _bin_openflags
                32      STORE_FAST                      5: flags
                34      LOAD_GLOBAL                     3: _mkstemp_inner
                36      LOAD_FAST                       2: dir
                38      LOAD_FAST                       1: prefix
                40      LOAD_FAST                       0: suffix
                42      LOAD_FAST                       5: flags
                44      LOAD_FAST                       4: output_type
                46      CALL_FUNCTION                   5
                48      RETURN_VALUE                    
        'mkstemp'
        [Code]
            File Name: tempfile.py
            Object Name: mkdtemp
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sanitize_params'
                '_get_candidate_names'
                'bytes'
                'map'
                '_os'
                'fsencode'
                'range'
                'TMP_MAX'
                'next'
                'path'
                'join'
                '_sys'
                'audit'
                'mkdir'
                'FileExistsError'
                'PermissionError'
                'name'
                'isdir'
                'access'
                'W_OK'
                '_errno'
                'EEXIST'
            [Var Names]
                'suffix'
                'prefix'
                'dir'
                'output_type'
                'names'
                'seq'
                'name'
                'file'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "User-callable function to create and return a unique temporary\n    directory.  The return value is the pathname of the directory.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    The directory is readable, writable, and searchable only by the\n    creating user.\n\n    Caller is responsible for deleting the directory when done with it.\n    "
                'tempfile.mkdtemp'
                448
                'nt'
                'No usable temporary directory name found'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sanitize_params
                2       LOAD_FAST                       1: prefix
                4       LOAD_FAST                       0: suffix
                6       LOAD_FAST                       2: dir
                8       CALL_FUNCTION                   3
                10      UNPACK_SEQUENCE                 4
                12      STORE_FAST                      1: prefix
                14      STORE_FAST                      0: suffix
                16      STORE_FAST                      2: dir
                18      STORE_FAST                      3: output_type
                20      LOAD_GLOBAL                     1: _get_candidate_names
                22      CALL_FUNCTION                   0
                24      STORE_FAST                      4: names
                26      LOAD_FAST                       3: output_type
                28      LOAD_GLOBAL                     2: bytes
                30      IS_OP                           0 (is)
                32      POP_JUMP_IF_FALSE               23 (to 46)
                34      LOAD_GLOBAL                     3: map
                36      LOAD_GLOBAL                     4: _os
                38      LOAD_ATTR                       5: fsencode
                40      LOAD_FAST                       4: names
                42      CALL_FUNCTION                   2
                44      STORE_FAST                      4: names
                46      LOAD_GLOBAL                     6: range
                48      LOAD_GLOBAL                     7: TMP_MAX
                50      CALL_FUNCTION                   1
                52      GET_ITER                        
                54      FOR_ITER                        70 (to 196)
                56      STORE_FAST                      5: seq
                58      LOAD_GLOBAL                     8: next
                60      LOAD_FAST                       4: names
                62      CALL_FUNCTION                   1
                64      STORE_FAST                      6: name
                66      LOAD_GLOBAL                     4: _os
                68      LOAD_ATTR                       9: path
                70      LOAD_METHOD                     10: join
                72      LOAD_FAST                       2: dir
                74      LOAD_FAST                       1: prefix
                76      LOAD_FAST                       6: name
                78      BINARY_ADD                      
                80      LOAD_FAST                       0: suffix
                82      BINARY_ADD                      
                84      CALL_METHOD                     2
                86      STORE_FAST                      7: file
                88      LOAD_GLOBAL                     11: _sys
                90      LOAD_METHOD                     12: audit
                92      LOAD_CONST                      1: 'tempfile.mkdtemp'
                94      LOAD_FAST                       7: file
                96      CALL_METHOD                     2
                98      POP_TOP                         
                100     SETUP_FINALLY                   11 (to 124)
                102     LOAD_GLOBAL                     4: _os
                104     LOAD_METHOD                     13: mkdir
                106     LOAD_FAST                       7: file
                108     LOAD_CONST                      2: 448
                110     CALL_METHOD                     2
                112     POP_TOP                         
                114     POP_BLOCK                       
                116     LOAD_FAST                       7: file
                118     ROT_TWO                         
                120     POP_TOP                         
                122     RETURN_VALUE                    
                124     DUP_TOP                         
                126     LOAD_GLOBAL                     14: FileExistsError
                128     JUMP_IF_NOT_EXC_MATCH           70 (to 140)
                130     POP_TOP                         
                132     POP_TOP                         
                134     POP_TOP                         
                136     POP_EXCEPT                      
                138     JUMP_ABSOLUTE                   27 (to 54)
                140     DUP_TOP                         
                142     LOAD_GLOBAL                     15: PermissionError
                144     JUMP_IF_NOT_EXC_MATCH           97 (to 194)
                146     POP_TOP                         
                148     POP_TOP                         
                150     POP_TOP                         
                152     LOAD_GLOBAL                     4: _os
                154     LOAD_ATTR                       16: name
                156     LOAD_CONST                      3: 'nt'
                158     COMPARE_OP                      2 (==)
                160     POP_JUMP_IF_FALSE               96 (to 192)
                162     LOAD_GLOBAL                     4: _os
                164     LOAD_ATTR                       9: path
                166     LOAD_METHOD                     17: isdir
                168     LOAD_FAST                       2: dir
                170     CALL_METHOD                     1
                172     POP_JUMP_IF_FALSE               96 (to 192)
                174     LOAD_GLOBAL                     4: _os
                176     LOAD_METHOD                     18: access
                178     LOAD_FAST                       2: dir
                180     LOAD_GLOBAL                     4: _os
                182     LOAD_ATTR                       19: W_OK
                184     CALL_METHOD                     2
                186     POP_JUMP_IF_FALSE               96 (to 192)
                188     POP_EXCEPT                      
                190     JUMP_ABSOLUTE                   27 (to 54)
                192     RAISE_VARARGS                   0
                194     RERAISE                         0
                196     LOAD_GLOBAL                     14: FileExistsError
                198     LOAD_GLOBAL                     20: _errno
                200     LOAD_ATTR                       21: EEXIST
                202     LOAD_CONST                      4: 'No usable temporary directory name found'
                204     CALL_FUNCTION                   2
                206     RAISE_VARARGS                   1
        'mkdtemp'
        ''
        [Code]
            File Name: tempfile.py
            Object Name: mktemp
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'gettempdir'
                '_get_candidate_names'
                'range'
                'TMP_MAX'
                'next'
                '_os'
                'path'
                'join'
                '_exists'
                'FileExistsError'
                '_errno'
                'EEXIST'
            [Var Names]
                'suffix'
                'prefix'
                'dir'
                'names'
                'seq'
                'name'
                'file'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "User-callable function to return a unique temporary file name.  The\n    file is not created.\n\n    Arguments are similar to mkstemp, except that the 'text' argument is\n    not accepted, and suffix=None, prefix=None and bytes file names are not\n    supported.\n\n    THIS FUNCTION IS UNSAFE AND SHOULD NOT BE USED.  The file name may\n    refer to a file that did not exist at some point, but by the time\n    you get around to creating it, someone else may have beaten you to\n    the punch.\n    "
                None
                'No usable temporary filename found'
            [Disassembly]
                0       LOAD_FAST                       2: dir
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               7 (to 14)
                8       LOAD_GLOBAL                     0: gettempdir
                10      CALL_FUNCTION                   0
                12      STORE_FAST                      2: dir
                14      LOAD_GLOBAL                     1: _get_candidate_names
                16      CALL_FUNCTION                   0
                18      STORE_FAST                      3: names
                20      LOAD_GLOBAL                     2: range
                22      LOAD_GLOBAL                     3: TMP_MAX
                24      CALL_FUNCTION                   1
                26      GET_ITER                        
                28      FOR_ITER                        25 (to 80)
                30      STORE_FAST                      4: seq
                32      LOAD_GLOBAL                     4: next
                34      LOAD_FAST                       3: names
                36      CALL_FUNCTION                   1
                38      STORE_FAST                      5: name
                40      LOAD_GLOBAL                     5: _os
                42      LOAD_ATTR                       6: path
                44      LOAD_METHOD                     7: join
                46      LOAD_FAST                       2: dir
                48      LOAD_FAST                       1: prefix
                50      LOAD_FAST                       5: name
                52      BINARY_ADD                      
                54      LOAD_FAST                       0: suffix
                56      BINARY_ADD                      
                58      CALL_METHOD                     2
                60      STORE_FAST                      6: file
                62      LOAD_GLOBAL                     8: _exists
                64      LOAD_FAST                       6: file
                66      CALL_FUNCTION                   1
                68      POP_JUMP_IF_TRUE                39 (to 78)
                70      LOAD_FAST                       6: file
                72      ROT_TWO                         
                74      POP_TOP                         
                76      RETURN_VALUE                    
                78      JUMP_ABSOLUTE                   14 (to 28)
                80      LOAD_GLOBAL                     9: FileExistsError
                82      LOAD_GLOBAL                     10: _errno
                84      LOAD_ATTR                       11: EEXIST
                86      LOAD_CONST                      2: 'No usable temporary filename found'
                88      CALL_FUNCTION                   2
                90      RAISE_VARARGS                   1
        'mktemp'
        [Code]
            File Name: tempfile.py
            Object Name: _TemporaryFileCloser
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'file'
                'close_called'
                '__init__'
                '_os'
                'name'
                'unlink'
                'close'
                '__del__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_TemporaryFileCloser'
                "A separate object allowing proper closing of a temporary file's\n    underlying file object, without adding a __del__ method to the\n    temporary file."
                None
                False
                True
                [Code]
                    File Name: tempfile.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'file'
                        'name'
                        'delete'
                    [Var Names]
                        'self'
                        'file'
                        'name'
                        'delete'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: file
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: file
                        6       LOAD_FAST                       2: name
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: name
                        12      LOAD_FAST                       3: delete
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: delete
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                '_TemporaryFileCloser.__init__'
                'nt'
                [Code]
                    File Name: tempfile.py
                    Object Name: close
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close_called'
                        'file'
                        'close'
                        'delete'
                        'name'
                    [Var Names]
                        'self'
                        'unlink'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: close_called
                        4       POP_JUMP_IF_TRUE                40 (to 80)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: file
                        10      LOAD_CONST                      0: None
                        12      IS_OP                           1 (is not)
                        14      POP_JUMP_IF_FALSE               42 (to 84)
                        16      LOAD_CONST                      1: True
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      0: close_called
                        22      SETUP_FINALLY                   18 (to 60)
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       1: file
                        28      LOAD_METHOD                     2: close
                        30      CALL_METHOD                     0
                        32      POP_TOP                         
                        34      POP_BLOCK                       
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       3: delete
                        40      POP_JUMP_IF_FALSE               28 (to 56)
                        42      LOAD_FAST                       1: unlink
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       4: name
                        48      CALL_FUNCTION                   1
                        50      POP_TOP                         
                        52      LOAD_CONST                      0: None
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      0: None
                        58      RETURN_VALUE                    
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       3: delete
                        64      POP_JUMP_IF_FALSE               39 (to 78)
                        66      LOAD_FAST                       1: unlink
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       4: name
                        72      CALL_FUNCTION                   1
                        74      POP_TOP                         
                        76      RERAISE                         0
                        78      RERAISE                         0
                        80      LOAD_CONST                      0: None
                        82      RETURN_VALUE                    
                        84      LOAD_CONST                      0: None
                        86      RETURN_VALUE                    
                '_TemporaryFileCloser.close'
                [Code]
                    File Name: tempfile.py
                    Object Name: __del__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: close
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_CONST                      0: None
                        10      RETURN_VALUE                    
                '_TemporaryFileCloser.__del__'
                [Code]
                    File Name: tempfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close_called'
                        'file'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: close_called
                        4       POP_JUMP_IF_TRUE                13 (to 26)
                        6       LOAD_CONST                      1: True
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      0: close_called
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       1: file
                        16      LOAD_METHOD                     2: close
                        18      CALL_METHOD                     0
                        20      POP_TOP                         
                        22      LOAD_CONST                      0: None
                        24      RETURN_VALUE                    
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                (
                    True
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_TemporaryFileCloser'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "A separate object allowing proper closing of a temporary file's\n    underlying file object, without adding a __del__ method to the\n    temporary file."
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      STORE_NAME                      4: file
                16      LOAD_CONST                      3: False
                18      STORE_NAME                      5: close_called
                20      LOAD_CONST                      13: (True,)
                22      LOAD_CONST                      5: <CODE> __init__
                24      LOAD_CONST                      6: '_TemporaryFileCloser.__init__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      6: __init__
                30      LOAD_NAME                       7: _os
                32      LOAD_ATTR                       8: name
                34      LOAD_CONST                      7: 'nt'
                36      COMPARE_OP                      3 (!=)
                38      POP_JUMP_IF_FALSE               33 (to 66)
                40      LOAD_NAME                       7: _os
                42      LOAD_ATTR                       9: unlink
                44      BUILD_TUPLE                     1
                46      LOAD_CONST                      8: <CODE> close
                48      LOAD_CONST                      9: '_TemporaryFileCloser.close'
                50      MAKE_FUNCTION                   1
                52      STORE_NAME                      10: close
                54      LOAD_CONST                      10: <CODE> __del__
                56      LOAD_CONST                      11: '_TemporaryFileCloser.__del__'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      11: __del__
                62      LOAD_CONST                      2: None
                64      RETURN_VALUE                    
                66      LOAD_CONST                      12: <CODE> close
                68      LOAD_CONST                      9: '_TemporaryFileCloser.close'
                70      MAKE_FUNCTION                   0
                72      STORE_NAME                      10: close
                74      LOAD_CONST                      2: None
                76      RETURN_VALUE                    
        '_TemporaryFileCloser'
        [Code]
            File Name: tempfile.py
            Object Name: _TemporaryFileWrapper
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                '__getattr__'
                '__enter__'
                '__exit__'
                'close'
                '__iter__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_TemporaryFileWrapper'
                'Temporary file wrapper\n\n    This class provides a wrapper around files opened for\n    temporary use.  In particular, it seeks to automatically\n    remove the file when it is no longer needed.\n    '
                True
                [Code]
                    File Name: tempfile.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'file'
                        'name'
                        'delete'
                        '_TemporaryFileCloser'
                        '_closer'
                    [Var Names]
                        'self'
                        'file'
                        'name'
                        'delete'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: file
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: file
                        6       LOAD_FAST                       2: name
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: name
                        12      LOAD_FAST                       3: delete
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: delete
                        18      LOAD_GLOBAL                     3: _TemporaryFileCloser
                        20      LOAD_FAST                       1: file
                        22      LOAD_FAST                       2: name
                        24      LOAD_FAST                       3: delete
                        26      CALL_FUNCTION                   3
                        28      LOAD_FAST                       0: self
                        30      STORE_ATTR                      4: _closer
                        32      LOAD_CONST                      0: None
                        34      RETURN_VALUE                    
                '_TemporaryFileWrapper.__init__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __getattr__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '__dict__'
                        'getattr'
                        'hasattr'
                        '_functools'
                        'wraps'
                        '_closer'
                        'isinstance'
                        'int'
                        'setattr'
                    [Var Names]
                        'self'
                        'name'
                        'file'
                        'a'
                        'func_wrapper'
                    [Free Vars]
                    [Cell Vars]
                        'func'
                    [Constants]
                        None
                        'file'
                        '__call__'
                        [Code]
                            File Name: tempfile.py
                            Object Name: func_wrapper
                            Arg Count: 0
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x0000001F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NESTED)
                            [Names]
                            [Var Names]
                                'args'
                                'kwargs'
                            [Free Vars]
                                'func'
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       LOAD_DEREF                      0: func
                                2       LOAD_FAST                       0: args
                                4       BUILD_MAP                       0
                                6       LOAD_FAST                       1: kwargs
                                8       DICT_MERGE                      1
                                10      CALL_FUNCTION_EX                1
                                12      RETURN_VALUE                    
                        '_TemporaryFileWrapper.__getattr__.<locals>.func_wrapper'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: __dict__
                        4       LOAD_CONST                      1: 'file'
                        6       BINARY_SUBSCR                   
                        8       STORE_FAST                      2: file
                        10      LOAD_GLOBAL                     1: getattr
                        12      LOAD_FAST                       2: file
                        14      LOAD_FAST                       1: name
                        16      CALL_FUNCTION                   2
                        18      STORE_FAST                      3: a
                        20      LOAD_GLOBAL                     2: hasattr
                        22      LOAD_FAST                       3: a
                        24      LOAD_CONST                      2: '__call__'
                        26      CALL_FUNCTION                   2
                        28      POP_JUMP_IF_FALSE               34 (to 68)
                        30      LOAD_FAST                       3: a
                        32      STORE_DEREF                     0: func
                        34      LOAD_GLOBAL                     3: _functools
                        36      LOAD_METHOD                     4: wraps
                        38      LOAD_DEREF                      0: func
                        40      CALL_METHOD                     1
                        42      LOAD_CLOSURE                    0: func
                        44      BUILD_TUPLE                     1
                        46      LOAD_CONST                      3: <CODE> func_wrapper
                        48      LOAD_CONST                      4: '_TemporaryFileWrapper.__getattr__.<locals>.func_wrapper'
                        50      MAKE_FUNCTION                   8
                        52      CALL_FUNCTION                   1
                        54      STORE_FAST                      4: func_wrapper
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       5: _closer
                        60      LOAD_FAST                       4: func_wrapper
                        62      STORE_ATTR                      5: _closer
                        64      LOAD_FAST                       4: func_wrapper
                        66      STORE_FAST                      3: a
                        68      LOAD_GLOBAL                     6: isinstance
                        70      LOAD_FAST                       3: a
                        72      LOAD_GLOBAL                     7: int
                        74      CALL_FUNCTION                   2
                        76      POP_JUMP_IF_TRUE                45 (to 90)
                        78      LOAD_GLOBAL                     8: setattr
                        80      LOAD_FAST                       0: self
                        82      LOAD_FAST                       1: name
                        84      LOAD_FAST                       3: a
                        86      CALL_FUNCTION                   3
                        88      POP_TOP                         
                        90      LOAD_FAST                       3: a
                        92      RETURN_VALUE                    
                '_TemporaryFileWrapper.__getattr__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'file'
                        '__enter__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: file
                        4       LOAD_METHOD                     1: __enter__
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_FAST                       0: self
                        12      RETURN_VALUE                    
                '_TemporaryFileWrapper.__enter__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'file'
                        '__exit__'
                        'close'
                    [Var Names]
                        'self'
                        'exc'
                        'value'
                        'tb'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: file
                        4       LOAD_METHOD                     1: __exit__
                        6       LOAD_FAST                       1: exc
                        8       LOAD_FAST                       2: value
                        10      LOAD_FAST                       3: tb
                        12      CALL_METHOD                     3
                        14      STORE_FAST                      4: result
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     2: close
                        20      CALL_METHOD                     0
                        22      POP_TOP                         
                        24      LOAD_FAST                       4: result
                        26      RETURN_VALUE                    
                '_TemporaryFileWrapper.__exit__'
                [Code]
                    File Name: tempfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_closer'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Close the temporary file, possibly deleting it.\n        '
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _closer
                        4       LOAD_METHOD                     1: close
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                '_TemporaryFileWrapper.close'
                [Code]
                    File Name: tempfile.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'file'
                    [Var Names]
                        'self'
                        'line'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: file
                        6       GET_ITER                        
                        8       FOR_ITER                        5 (to 20)
                        10      STORE_FAST                      1: line
                        12      LOAD_FAST                       1: line
                        14      YIELD_VALUE                     
                        16      POP_TOP                         
                        18      JUMP_ABSOLUTE                   4 (to 8)
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                '_TemporaryFileWrapper.__iter__'
                None
                (
                    True
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_TemporaryFileWrapper'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Temporary file wrapper\n\n    This class provides a wrapper around files opened for\n    temporary use.  In particular, it seeks to automatically\n    remove the file when it is no longer needed.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      16: (True,)
                14      LOAD_CONST                      3: <CODE> __init__
                16      LOAD_CONST                      4: '_TemporaryFileWrapper.__init__'
                18      MAKE_FUNCTION                   1
                20      STORE_NAME                      4: __init__
                22      LOAD_CONST                      5: <CODE> __getattr__
                24      LOAD_CONST                      6: '_TemporaryFileWrapper.__getattr__'
                26      MAKE_FUNCTION                   0
                28      STORE_NAME                      5: __getattr__
                30      LOAD_CONST                      7: <CODE> __enter__
                32      LOAD_CONST                      8: '_TemporaryFileWrapper.__enter__'
                34      MAKE_FUNCTION                   0
                36      STORE_NAME                      6: __enter__
                38      LOAD_CONST                      9: <CODE> __exit__
                40      LOAD_CONST                      10: '_TemporaryFileWrapper.__exit__'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      7: __exit__
                46      LOAD_CONST                      11: <CODE> close
                48      LOAD_CONST                      12: '_TemporaryFileWrapper.close'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      8: close
                54      LOAD_CONST                      13: <CODE> __iter__
                56      LOAD_CONST                      14: '_TemporaryFileWrapper.__iter__'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      9: __iter__
                62      LOAD_CONST                      15: None
                64      RETURN_VALUE                    
        '_TemporaryFileWrapper'
        'w+b'
        -1
        True
        (
            'errors'
        )
        [Code]
            File Name: tempfile.py
            Object Name: NamedTemporaryFile
            Arg Count: 8
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 12
            Stack Size: 9
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                '_sanitize_params'
                '_bin_openflags'
                '_os'
                'name'
                'O_TEMPORARY'
                '_io'
                'text_encoding'
                'open'
                'getattr'
                '_TemporaryFileWrapper'
                'close'
                'unlink'
            [Var Names]
                'mode'
                'buffering'
                'encoding'
                'newline'
                'suffix'
                'prefix'
                'dir'
                'delete'
                'errors'
                'opener'
                'file'
                'raw'
            [Free Vars]
            [Cell Vars]
                'dir'
                'flags'
                'name'
                'output_type'
                'prefix'
                'suffix'
            [Constants]
                'Create and return a temporary file.\n    Arguments:\n    \'prefix\', \'suffix\', \'dir\' -- as for mkstemp.\n    \'mode\' -- the mode argument to io.open (default "w+b").\n    \'buffering\' -- the buffer size argument to io.open (default -1).\n    \'encoding\' -- the encoding argument to io.open (default None)\n    \'newline\' -- the newline argument to io.open (default None)\n    \'delete\' -- whether the file is deleted on close (default True).\n    \'errors\' -- the errors argument to io.open (default None)\n    The file is created as mkstemp() would do it.\n\n    Returns an object with a file-like interface; the name of the file\n    is accessible as its \'name\' attribute.  The file will be automatically\n    deleted when it is closed unless the \'delete\' argument is set to False.\n    '
                'nt'
                'b'
                None
                [Code]
                    File Name: tempfile.py
                    Object Name: opener
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 6
                    Flags: 0x00000017 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED)
                    [Names]
                        '_mkstemp_inner'
                    [Var Names]
                        'args'
                        'fd'
                    [Free Vars]
                        'dir'
                        'flags'
                        'name'
                        'output_type'
                        'prefix'
                        'suffix'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _mkstemp_inner
                        2       LOAD_DEREF                      0: dir
                        4       LOAD_DEREF                      4: prefix
                        6       LOAD_DEREF                      5: suffix
                        8       LOAD_DEREF                      1: flags
                        10      LOAD_DEREF                      3: output_type
                        12      CALL_FUNCTION                   5
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_FAST                      1: fd
                        18      STORE_DEREF                     2: name
                        20      LOAD_FAST                       1: fd
                        22      RETURN_VALUE                    
                'NamedTemporaryFile.<locals>.opener'
                (
                    'buffering'
                    'newline'
                    'encoding'
                    'errors'
                    'opener'
                )
                'buffer'
                'raw'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sanitize_params
                2       LOAD_DEREF                      4: prefix
                4       LOAD_DEREF                      5: suffix
                6       LOAD_DEREF                      0: dir
                8       CALL_FUNCTION                   3
                10      UNPACK_SEQUENCE                 4
                12      STORE_DEREF                     4: prefix
                14      STORE_DEREF                     5: suffix
                16      STORE_DEREF                     0: dir
                18      STORE_DEREF                     3: output_type
                20      LOAD_GLOBAL                     1: _bin_openflags
                22      STORE_DEREF                     1: flags
                24      LOAD_GLOBAL                     2: _os
                26      LOAD_ATTR                       3: name
                28      LOAD_CONST                      1: 'nt'
                30      COMPARE_OP                      2 (==)
                32      POP_JUMP_IF_FALSE               24 (to 48)
                34      LOAD_FAST                       7: delete
                36      POP_JUMP_IF_FALSE               24 (to 48)
                38      LOAD_DEREF                      1: flags
                40      LOAD_GLOBAL                     2: _os
                42      LOAD_ATTR                       4: O_TEMPORARY
                44      INPLACE_OR                      
                46      STORE_DEREF                     1: flags
                48      LOAD_CONST                      2: 'b'
                50      LOAD_FAST                       0: mode
                52      CONTAINS_OP                     1 (not in)
                54      POP_JUMP_IF_FALSE               33 (to 66)
                56      LOAD_GLOBAL                     5: _io
                58      LOAD_METHOD                     6: text_encoding
                60      LOAD_FAST                       2: encoding
                62      CALL_METHOD                     1
                64      STORE_FAST                      2: encoding
                66      LOAD_CONST                      3: None
                68      STORE_DEREF                     2: name
                70      LOAD_CLOSURE                    0: dir
                72      LOAD_CLOSURE                    1: flags
                74      LOAD_CLOSURE                    2: name
                76      LOAD_CLOSURE                    3: output_type
                78      LOAD_CLOSURE                    4: prefix
                80      LOAD_CLOSURE                    5: suffix
                82      BUILD_TUPLE                     6
                84      LOAD_CONST                      4: <CODE> opener
                86      LOAD_CONST                      5: 'NamedTemporaryFile.<locals>.opener'
                88      MAKE_FUNCTION                   8
                90      STORE_FAST                      9: opener
                92      SETUP_FINALLY                   44 (to 182)
                94      LOAD_GLOBAL                     5: _io
                96      LOAD_ATTR                       7: open
                98      LOAD_DEREF                      0: dir
                100     LOAD_FAST                       0: mode
                102     LOAD_FAST                       1: buffering
                104     LOAD_FAST                       3: newline
                106     LOAD_FAST                       2: encoding
                108     LOAD_FAST                       8: errors
                110     LOAD_FAST                       9: opener
                112     LOAD_CONST                      6: ('buffering', 'newline', 'encoding', 'errors', 'opener')
                114     CALL_FUNCTION_KW                7
                116     STORE_FAST                      10: file
                118     SETUP_FINALLY                   23 (to 166)
                120     LOAD_GLOBAL                     8: getattr
                122     LOAD_FAST                       10: file
                124     LOAD_CONST                      7: 'buffer'
                126     LOAD_FAST                       10: file
                128     CALL_FUNCTION                   3
                130     STORE_FAST                      11: raw
                132     LOAD_GLOBAL                     8: getattr
                134     LOAD_FAST                       11: raw
                136     LOAD_CONST                      8: 'raw'
                138     LOAD_FAST                       11: raw
                140     CALL_FUNCTION                   3
                142     STORE_FAST                      11: raw
                144     LOAD_DEREF                      2: name
                146     LOAD_FAST                       11: raw
                148     STORE_ATTR                      3: name
                150     LOAD_GLOBAL                     9: _TemporaryFileWrapper
                152     LOAD_FAST                       10: file
                154     LOAD_DEREF                      2: name
                156     LOAD_FAST                       7: delete
                158     CALL_FUNCTION                   3
                160     POP_BLOCK                       
                162     POP_BLOCK                       
                164     RETURN_VALUE                    
                166     POP_TOP                         
                168     POP_TOP                         
                170     POP_TOP                         
                172     LOAD_FAST                       10: file
                174     LOAD_METHOD                     10: close
                176     CALL_METHOD                     0
                178     POP_TOP                         
                180     RAISE_VARARGS                   0
                182     POP_TOP                         
                184     POP_TOP                         
                186     POP_TOP                         
                188     LOAD_DEREF                      2: name
                190     LOAD_CONST                      3: None
                192     IS_OP                           1 (is not)
                194     POP_JUMP_IF_FALSE               110 (to 220)
                196     LOAD_GLOBAL                     2: _os
                198     LOAD_ATTR                       3: name
                200     LOAD_CONST                      1: 'nt'
                202     COMPARE_OP                      2 (==)
                204     POP_JUMP_IF_FALSE               105 (to 210)
                206     LOAD_FAST                       7: delete
                208     POP_JUMP_IF_TRUE                110 (to 220)
                210     LOAD_GLOBAL                     2: _os
                212     LOAD_METHOD                     11: unlink
                214     LOAD_DEREF                      2: name
                216     CALL_METHOD                     1
                218     POP_TOP                         
                220     RAISE_VARARGS                   0
        'NamedTemporaryFile'
        'posix'
        'cygwin'
        'O_TMPFILE'
        [Code]
            File Name: tempfile.py
            Object Name: TemporaryFile
            Arg Count: 7
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 11
            Stack Size: 9
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                '_io'
                'text_encoding'
                '_sanitize_params'
                '_bin_openflags'
                '_O_TMPFILE_WORKS'
                'open'
                'getattr'
                'name'
                'IsADirectoryError'
                'OSError'
            [Var Names]
                'mode'
                'buffering'
                'encoding'
                'newline'
                'suffix'
                'prefix'
                'dir'
                'errors'
                'opener'
                'file'
                'raw'
            [Free Vars]
            [Cell Vars]
                'dir'
                'fd'
                'flags'
                'output_type'
                'prefix'
                'suffix'
            [Constants]
                'Create and return a temporary file.\n        Arguments:\n        \'prefix\', \'suffix\', \'dir\' -- as for mkstemp.\n        \'mode\' -- the mode argument to io.open (default "w+b").\n        \'buffering\' -- the buffer size argument to io.open (default -1).\n        \'encoding\' -- the encoding argument to io.open (default None)\n        \'newline\' -- the newline argument to io.open (default None)\n        \'errors\' -- the errors argument to io.open (default None)\n        The file is created as mkstemp() would do it.\n\n        Returns an object with a file-like interface.  The file has no\n        name, and will cease to exist when it is closed.\n        '
                'b'
                None
                [Code]
                    File Name: tempfile.py
                    Object Name: opener
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000017 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED)
                    [Names]
                        '_os'
                        'O_TMPFILE'
                        'O_CREAT'
                        'open'
                    [Var Names]
                        'args'
                        'flags2'
                    [Free Vars]
                        'dir'
                        'fd'
                        'flags'
                    [Cell Vars]
                    [Constants]
                        None
                        384
                    [Disassembly]
                        0       LOAD_DEREF                      2: flags
                        2       LOAD_GLOBAL                     0: _os
                        4       LOAD_ATTR                       1: O_TMPFILE
                        6       BINARY_OR                       
                        8       LOAD_GLOBAL                     0: _os
                        10      LOAD_ATTR                       2: O_CREAT
                        12      UNARY_INVERT                    
                        14      BINARY_AND                      
                        16      STORE_FAST                      1: flags2
                        18      LOAD_GLOBAL                     0: _os
                        20      LOAD_METHOD                     3: open
                        22      LOAD_DEREF                      0: dir
                        24      LOAD_FAST                       1: flags2
                        26      LOAD_CONST                      1: 384
                        28      CALL_METHOD                     3
                        30      STORE_DEREF                     1: fd
                        32      LOAD_DEREF                      1: fd
                        34      RETURN_VALUE                    
                'TemporaryFile.<locals>.opener'
                (
                    'buffering'
                    'newline'
                    'encoding'
                    'errors'
                    'opener'
                )
                'buffer'
                'raw'
                False
                [Code]
                    File Name: tempfile.py
                    Object Name: opener
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 10
                    Flags: 0x00000017 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED)
                    [Names]
                        '_mkstemp_inner'
                        '_os'
                        'unlink'
                        'BaseException'
                        'close'
                    [Var Names]
                        'args'
                        'name'
                        'e'
                    [Free Vars]
                        'dir'
                        'fd'
                        'flags'
                        'output_type'
                        'prefix'
                        'suffix'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _mkstemp_inner
                        2       LOAD_DEREF                      0: dir
                        4       LOAD_DEREF                      4: prefix
                        6       LOAD_DEREF                      5: suffix
                        8       LOAD_DEREF                      2: flags
                        10      LOAD_DEREF                      3: output_type
                        12      CALL_FUNCTION                   5
                        14      UNPACK_SEQUENCE                 2
                        16      STORE_DEREF                     1: fd
                        18      STORE_FAST                      1: name
                        20      SETUP_FINALLY                   8 (to 38)
                        22      LOAD_GLOBAL                     1: _os
                        24      LOAD_METHOD                     2: unlink
                        26      LOAD_FAST                       1: name
                        28      CALL_METHOD                     1
                        30      POP_TOP                         
                        32      POP_BLOCK                       
                        34      LOAD_DEREF                      1: fd
                        36      RETURN_VALUE                    
                        38      DUP_TOP                         
                        40      LOAD_GLOBAL                     3: BaseException
                        42      JUMP_IF_NOT_EXC_MATCH           36 (to 72)
                        44      POP_TOP                         
                        46      STORE_FAST                      2: e
                        48      POP_TOP                         
                        50      SETUP_FINALLY                   6 (to 64)
                        52      LOAD_GLOBAL                     1: _os
                        54      LOAD_METHOD                     4: close
                        56      LOAD_DEREF                      1: fd
                        58      CALL_METHOD                     1
                        60      POP_TOP                         
                        62      RAISE_VARARGS                   0
                        64      LOAD_CONST                      0: None
                        66      STORE_FAST                      2: e
                        68      DELETE_FAST                     2: e
                        70      RERAISE                         1
                        72      RERAISE                         0
            [Disassembly]
                0       LOAD_CONST                      1: 'b'
                2       LOAD_FAST                       0: mode
                4       CONTAINS_OP                     1 (not in)
                6       POP_JUMP_IF_FALSE               9 (to 18)
                8       LOAD_GLOBAL                     0: _io
                10      LOAD_METHOD                     1: text_encoding
                12      LOAD_FAST                       2: encoding
                14      CALL_METHOD                     1
                16      STORE_FAST                      2: encoding
                18      LOAD_GLOBAL                     2: _sanitize_params
                20      LOAD_DEREF                      4: prefix
                22      LOAD_DEREF                      5: suffix
                24      LOAD_DEREF                      0: dir
                26      CALL_FUNCTION                   3
                28      UNPACK_SEQUENCE                 4
                30      STORE_DEREF                     4: prefix
                32      STORE_DEREF                     5: suffix
                34      STORE_DEREF                     0: dir
                36      STORE_DEREF                     3: output_type
                38      LOAD_GLOBAL                     3: _bin_openflags
                40      STORE_DEREF                     2: flags
                42      LOAD_GLOBAL                     4: _O_TMPFILE_WORKS
                44      POP_JUMP_IF_FALSE               83 (to 166)
                46      LOAD_CONST                      2: None
                48      STORE_DEREF                     1: fd
                50      LOAD_CLOSURE                    0: dir
                52      LOAD_CLOSURE                    1: fd
                54      LOAD_CLOSURE                    2: flags
                56      BUILD_TUPLE                     3
                58      LOAD_CONST                      3: <CODE> opener
                60      LOAD_CONST                      4: 'TemporaryFile.<locals>.opener'
                62      MAKE_FUNCTION                   8
                64      STORE_FAST                      8: opener
                66      SETUP_FINALLY                   30 (to 128)
                68      LOAD_GLOBAL                     0: _io
                70      LOAD_ATTR                       5: open
                72      LOAD_DEREF                      0: dir
                74      LOAD_FAST                       0: mode
                76      LOAD_FAST                       1: buffering
                78      LOAD_FAST                       3: newline
                80      LOAD_FAST                       2: encoding
                82      LOAD_FAST                       7: errors
                84      LOAD_FAST                       8: opener
                86      LOAD_CONST                      5: ('buffering', 'newline', 'encoding', 'errors', 'opener')
                88      CALL_FUNCTION_KW                7
                90      STORE_FAST                      9: file
                92      LOAD_GLOBAL                     6: getattr
                94      LOAD_FAST                       9: file
                96      LOAD_CONST                      6: 'buffer'
                98      LOAD_FAST                       9: file
                100     CALL_FUNCTION                   3
                102     STORE_FAST                      10: raw
                104     LOAD_GLOBAL                     6: getattr
                106     LOAD_FAST                       10: raw
                108     LOAD_CONST                      7: 'raw'
                110     LOAD_FAST                       10: raw
                112     CALL_FUNCTION                   3
                114     STORE_FAST                      10: raw
                116     LOAD_DEREF                      1: fd
                118     LOAD_FAST                       10: raw
                120     STORE_ATTR                      7: name
                122     LOAD_FAST                       9: file
                124     POP_BLOCK                       
                126     RETURN_VALUE                    
                128     DUP_TOP                         
                130     LOAD_GLOBAL                     8: IsADirectoryError
                132     JUMP_IF_NOT_EXC_MATCH           74 (to 148)
                134     POP_TOP                         
                136     POP_TOP                         
                138     POP_TOP                         
                140     LOAD_CONST                      8: False
                142     STORE_GLOBAL                    4: _O_TMPFILE_WORKS
                144     POP_EXCEPT                      
                146     JUMP_FORWARD                    9 (to 166)
                148     DUP_TOP                         
                150     LOAD_GLOBAL                     9: OSError
                152     JUMP_IF_NOT_EXC_MATCH           82 (to 164)
                154     POP_TOP                         
                156     POP_TOP                         
                158     POP_TOP                         
                160     POP_EXCEPT                      
                162     JUMP_FORWARD                    1 (to 166)
                164     RERAISE                         0
                166     LOAD_CONST                      2: None
                168     STORE_DEREF                     1: fd
                170     LOAD_CLOSURE                    0: dir
                172     LOAD_CLOSURE                    1: fd
                174     LOAD_CLOSURE                    2: flags
                176     LOAD_CLOSURE                    3: output_type
                178     LOAD_CLOSURE                    4: prefix
                180     LOAD_CLOSURE                    5: suffix
                182     BUILD_TUPLE                     6
                184     LOAD_CONST                      9: <CODE> opener
                186     LOAD_CONST                      4: 'TemporaryFile.<locals>.opener'
                188     MAKE_FUNCTION                   8
                190     STORE_FAST                      8: opener
                192     LOAD_GLOBAL                     0: _io
                194     LOAD_ATTR                       5: open
                196     LOAD_DEREF                      0: dir
                198     LOAD_FAST                       0: mode
                200     LOAD_FAST                       1: buffering
                202     LOAD_FAST                       3: newline
                204     LOAD_FAST                       2: encoding
                206     LOAD_FAST                       7: errors
                208     LOAD_FAST                       8: opener
                210     LOAD_CONST                      5: ('buffering', 'newline', 'encoding', 'errors', 'opener')
                212     CALL_FUNCTION_KW                7
                214     STORE_FAST                      9: file
                216     LOAD_GLOBAL                     6: getattr
                218     LOAD_FAST                       9: file
                220     LOAD_CONST                      6: 'buffer'
                222     LOAD_FAST                       9: file
                224     CALL_FUNCTION                   3
                226     STORE_FAST                      10: raw
                228     LOAD_GLOBAL                     6: getattr
                230     LOAD_FAST                       10: raw
                232     LOAD_CONST                      7: 'raw'
                234     LOAD_FAST                       10: raw
                236     CALL_FUNCTION                   3
                238     STORE_FAST                      10: raw
                240     LOAD_DEREF                      1: fd
                242     LOAD_FAST                       10: raw
                244     STORE_ATTR                      7: name
                246     LOAD_FAST                       9: file
                248     RETURN_VALUE                    
        'TemporaryFile'
        [Code]
            File Name: tempfile.py
            Object Name: SpooledTemporaryFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_rolled'
                '__init__'
                'classmethod'
                '_types'
                'GenericAlias'
                '__class_getitem__'
                '_check'
                'rollover'
                '__enter__'
                '__exit__'
                '__iter__'
                'close'
                'property'
                'closed'
                'encoding'
                'errors'
                'fileno'
                'flush'
                'isatty'
                'mode'
                'name'
                'newlines'
                'read'
                'readline'
                'readlines'
                'seek'
                'tell'
                'truncate'
                'write'
                'writelines'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'SpooledTemporaryFile'
                'Temporary file wrapper, specialized to switch from BytesIO\n    or StringIO to a real file when it exceeds a certain size or\n    when a fileno is needed.\n    '
                False
                0
                'w+b'
                -1
                None
                (
                    'errors'
                )
                [Code]
                    File Name: tempfile.py
                    Object Name: __init__
                    Arg Count: 9
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 10
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_io'
                        'BytesIO'
                        '_file'
                        'text_encoding'
                        'TextIOWrapper'
                        '_max_size'
                        '_rolled'
                        '_TemporaryFileArgs'
                    [Var Names]
                        'self'
                        'max_size'
                        'mode'
                        'buffering'
                        'encoding'
                        'newline'
                        'suffix'
                        'prefix'
                        'dir'
                        'errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'b'
                        (
                            'encoding'
                            'errors'
                            'newline'
                        )
                        False
                        (
                            'mode'
                            'buffering'
                            'suffix'
                            'prefix'
                            'encoding'
                            'newline'
                            'dir'
                            'errors'
                        )
                    [Disassembly]
                        0       LOAD_CONST                      1: 'b'
                        2       LOAD_FAST                       2: mode
                        4       CONTAINS_OP                     0 (in)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_GLOBAL                     0: _io
                        10      LOAD_METHOD                     1: BytesIO
                        12      CALL_METHOD                     0
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _file
                        18      JUMP_FORWARD                    17 (to 54)
                        20      LOAD_GLOBAL                     0: _io
                        22      LOAD_METHOD                     3: text_encoding
                        24      LOAD_FAST                       4: encoding
                        26      CALL_METHOD                     1
                        28      STORE_FAST                      4: encoding
                        30      LOAD_GLOBAL                     0: _io
                        32      LOAD_ATTR                       4: TextIOWrapper
                        34      LOAD_GLOBAL                     0: _io
                        36      LOAD_METHOD                     1: BytesIO
                        38      CALL_METHOD                     0
                        40      LOAD_FAST                       4: encoding
                        42      LOAD_FAST                       9: errors
                        44      LOAD_FAST                       5: newline
                        46      LOAD_CONST                      2: ('encoding', 'errors', 'newline')
                        48      CALL_FUNCTION_KW                4
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      2: _file
                        54      LOAD_FAST                       1: max_size
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      5: _max_size
                        60      LOAD_CONST                      3: False
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      6: _rolled
                        66      LOAD_FAST                       2: mode
                        68      LOAD_FAST                       3: buffering
                        70      LOAD_FAST                       6: suffix
                        72      LOAD_FAST                       7: prefix
                        74      LOAD_FAST                       4: encoding
                        76      LOAD_FAST                       5: newline
                        78      LOAD_FAST                       8: dir
                        80      LOAD_FAST                       9: errors
                        82      LOAD_CONST                      4: ('mode', 'buffering', 'suffix', 'prefix', 'encoding', 'newline', 'dir', 'errors')
                        84      BUILD_CONST_KEY_MAP             8
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      7: _TemporaryFileArgs
                        90      LOAD_CONST                      0: None
                        92      RETURN_VALUE                    
                'SpooledTemporaryFile.__init__'
                [Code]
                    File Name: tempfile.py
                    Object Name: _check
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_rolled'
                        '_max_size'
                        'tell'
                        'rollover'
                    [Var Names]
                        'self'
                        'file'
                        'max_size'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _rolled
                        4       POP_JUMP_IF_FALSE               5 (to 10)
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _max_size
                        14      STORE_FAST                      2: max_size
                        16      LOAD_FAST                       2: max_size
                        18      POP_JUMP_IF_FALSE               22 (to 44)
                        20      LOAD_FAST                       1: file
                        22      LOAD_METHOD                     2: tell
                        24      CALL_METHOD                     0
                        26      LOAD_FAST                       2: max_size
                        28      COMPARE_OP                      4 (>)
                        30      POP_JUMP_IF_FALSE               24 (to 48)
                        32      LOAD_FAST                       0: self
                        34      LOAD_METHOD                     3: rollover
                        36      CALL_METHOD                     0
                        38      POP_TOP                         
                        40      LOAD_CONST                      0: None
                        42      RETURN_VALUE                    
                        44      LOAD_CONST                      0: None
                        46      RETURN_VALUE                    
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                'SpooledTemporaryFile._check'
                [Code]
                    File Name: tempfile.py
                    Object Name: rollover
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_rolled'
                        '_file'
                        'TemporaryFile'
                        '_TemporaryFileArgs'
                        'tell'
                        'hasattr'
                        'buffer'
                        'write'
                        'detach'
                        'getvalue'
                        'seek'
                    [Var Names]
                        'self'
                        'file'
                        'newfile'
                        'pos'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'buffer'
                        0
                        True
                        (
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _rolled
                        4       POP_JUMP_IF_FALSE               5 (to 10)
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       1: _file
                        14      STORE_FAST                      1: file
                        16      LOAD_GLOBAL                     2: TemporaryFile
                        18      LOAD_CONST                      4: ()
                        20      BUILD_MAP                       0
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _TemporaryFileArgs
                        26      DICT_MERGE                      1
                        28      CALL_FUNCTION_EX                1
                        30      DUP_TOP                         
                        32      STORE_FAST                      2: newfile
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      1: _file
                        38      LOAD_FAST                       0: self
                        40      DELETE_ATTR                     3: _TemporaryFileArgs
                        42      LOAD_FAST                       1: file
                        44      LOAD_METHOD                     4: tell
                        46      CALL_METHOD                     0
                        48      STORE_FAST                      3: pos
                        50      LOAD_GLOBAL                     5: hasattr
                        52      LOAD_FAST                       2: newfile
                        54      LOAD_CONST                      1: 'buffer'
                        56      CALL_FUNCTION                   2
                        58      POP_JUMP_IF_FALSE               41 (to 82)
                        60      LOAD_FAST                       2: newfile
                        62      LOAD_ATTR                       6: buffer
                        64      LOAD_METHOD                     7: write
                        66      LOAD_FAST                       1: file
                        68      LOAD_METHOD                     8: detach
                        70      CALL_METHOD                     0
                        72      LOAD_METHOD                     9: getvalue
                        74      CALL_METHOD                     0
                        76      CALL_METHOD                     1
                        78      POP_TOP                         
                        80      JUMP_FORWARD                    7 (to 96)
                        82      LOAD_FAST                       2: newfile
                        84      LOAD_METHOD                     7: write
                        86      LOAD_FAST                       1: file
                        88      LOAD_METHOD                     9: getvalue
                        90      CALL_METHOD                     0
                        92      CALL_METHOD                     1
                        94      POP_TOP                         
                        96      LOAD_FAST                       2: newfile
                        98      LOAD_METHOD                     10: seek
                        100     LOAD_FAST                       3: pos
                        102     LOAD_CONST                      2: 0
                        104     CALL_METHOD                     2
                        106     POP_TOP                         
                        108     LOAD_CONST                      3: True
                        110     LOAD_FAST                       0: self
                        112     STORE_ATTR                      0: _rolled
                        114     LOAD_CONST                      0: None
                        116     RETURN_VALUE                    
                'SpooledTemporaryFile.rollover'
                [Code]
                    File Name: tempfile.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'closed'
                        'ValueError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Cannot enter context with closed file'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: closed
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     2: ValueError
                        10      LOAD_CONST                      1: 'Cannot enter context with closed file'
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       0: self
                        18      RETURN_VALUE                    
                'SpooledTemporaryFile.__enter__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'close'
                    [Var Names]
                        'self'
                        'exc'
                        'value'
                        'tb'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: close
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                'SpooledTemporaryFile.__exit__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        '__iter__'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: __iter__
                        6       CALL_METHOD                     0
                        8       RETURN_VALUE                    
                'SpooledTemporaryFile.__iter__'
                [Code]
                    File Name: tempfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: close
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                'SpooledTemporaryFile.close'
                [Code]
                    File Name: tempfile.py
                    Object Name: closed
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'closed'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: closed
                        6       RETURN_VALUE                    
                'SpooledTemporaryFile.closed'
                [Code]
                    File Name: tempfile.py
                    Object Name: encoding
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'encoding'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: encoding
                        6       RETURN_VALUE                    
                'SpooledTemporaryFile.encoding'
                [Code]
                    File Name: tempfile.py
                    Object Name: errors
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'errors'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: errors
                        6       RETURN_VALUE                    
                'SpooledTemporaryFile.errors'
                [Code]
                    File Name: tempfile.py
                    Object Name: fileno
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'rollover'
                        '_file'
                        'fileno'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: rollover
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: _file
                        12      LOAD_METHOD                     2: fileno
                        14      CALL_METHOD                     0
                        16      RETURN_VALUE                    
                'SpooledTemporaryFile.fileno'
                [Code]
                    File Name: tempfile.py
                    Object Name: flush
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'flush'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: flush
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                'SpooledTemporaryFile.flush'
                [Code]
                    File Name: tempfile.py
                    Object Name: isatty
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'isatty'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: isatty
                        6       CALL_METHOD                     0
                        8       RETURN_VALUE                    
                'SpooledTemporaryFile.isatty'
                [Code]
                    File Name: tempfile.py
                    Object Name: mode
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'mode'
                        'AttributeError'
                        '_TemporaryFileArgs'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'mode'
                    [Disassembly]
                        0       SETUP_FINALLY                   5 (to 12)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _file
                        6       LOAD_ATTR                       1: mode
                        8       POP_BLOCK                       
                        10      RETURN_VALUE                    
                        12      DUP_TOP                         
                        14      LOAD_GLOBAL                     2: AttributeError
                        16      JUMP_IF_NOT_EXC_MATCH           19 (to 38)
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      POP_TOP                         
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: _TemporaryFileArgs
                        28      LOAD_CONST                      1: 'mode'
                        30      BINARY_SUBSCR                   
                        32      ROT_FOUR                        
                        34      POP_EXCEPT                      
                        36      RETURN_VALUE                    
                        38      RERAISE                         0
                'SpooledTemporaryFile.mode'
                [Code]
                    File Name: tempfile.py
                    Object Name: name
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'name'
                        'AttributeError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   5 (to 12)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _file
                        6       LOAD_ATTR                       1: name
                        8       POP_BLOCK                       
                        10      RETURN_VALUE                    
                        12      DUP_TOP                         
                        14      LOAD_GLOBAL                     2: AttributeError
                        16      JUMP_IF_NOT_EXC_MATCH           15 (to 30)
                        18      POP_TOP                         
                        20      POP_TOP                         
                        22      POP_TOP                         
                        24      POP_EXCEPT                      
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                        30      RERAISE                         0
                'SpooledTemporaryFile.name'
                [Code]
                    File Name: tempfile.py
                    Object Name: newlines
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'newlines'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: newlines
                        6       RETURN_VALUE                    
                'SpooledTemporaryFile.newlines'
                [Code]
                    File Name: tempfile.py
                    Object Name: read
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        '_file'
                        'read'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: read
                        6       LOAD_FAST                       1: args
                        8       CALL_FUNCTION_EX                0
                        10      RETURN_VALUE                    
                'SpooledTemporaryFile.read'
                [Code]
                    File Name: tempfile.py
                    Object Name: readline
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        '_file'
                        'readline'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: readline
                        6       LOAD_FAST                       1: args
                        8       CALL_FUNCTION_EX                0
                        10      RETURN_VALUE                    
                'SpooledTemporaryFile.readline'
                [Code]
                    File Name: tempfile.py
                    Object Name: readlines
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        '_file'
                        'readlines'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: readlines
                        6       LOAD_FAST                       1: args
                        8       CALL_FUNCTION_EX                0
                        10      RETURN_VALUE                    
                'SpooledTemporaryFile.readlines'
                [Code]
                    File Name: tempfile.py
                    Object Name: seek
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        '_file'
                        'seek'
                    [Var Names]
                        'self'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_ATTR                       1: seek
                        6       LOAD_FAST                       1: args
                        8       CALL_FUNCTION_EX                0
                        10      RETURN_VALUE                    
                'SpooledTemporaryFile.seek'
                [Code]
                    File Name: tempfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'tell'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_METHOD                     1: tell
                        6       CALL_METHOD                     0
                        8       RETURN_VALUE                    
                'SpooledTemporaryFile.tell'
                [Code]
                    File Name: tempfile.py
                    Object Name: truncate
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'truncate'
                        '_max_size'
                        'rollover'
                    [Var Names]
                        'self'
                        'size'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: size
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               11 (to 22)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: _file
                        12      LOAD_METHOD                     1: truncate
                        14      CALL_METHOD                     0
                        16      POP_TOP                         
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                        22      LOAD_FAST                       1: size
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       2: _max_size
                        28      COMPARE_OP                      4 (>)
                        30      POP_JUMP_IF_FALSE               20 (to 40)
                        32      LOAD_FAST                       0: self
                        34      LOAD_METHOD                     3: rollover
                        36      CALL_METHOD                     0
                        38      POP_TOP                         
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       0: _file
                        44      LOAD_METHOD                     1: truncate
                        46      LOAD_FAST                       1: size
                        48      CALL_METHOD                     1
                        50      POP_TOP                         
                        52      LOAD_CONST                      0: None
                        54      RETURN_VALUE                    
                'SpooledTemporaryFile.truncate'
                [Code]
                    File Name: tempfile.py
                    Object Name: write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'write'
                        '_check'
                    [Var Names]
                        'self'
                        's'
                        'file'
                        'rv'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       STORE_FAST                      2: file
                        6       LOAD_FAST                       2: file
                        8       LOAD_METHOD                     1: write
                        10      LOAD_FAST                       1: s
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      3: rv
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     2: _check
                        20      LOAD_FAST                       2: file
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_FAST                       3: rv
                        28      RETURN_VALUE                    
                'SpooledTemporaryFile.write'
                [Code]
                    File Name: tempfile.py
                    Object Name: writelines
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        'writelines'
                        '_check'
                    [Var Names]
                        'self'
                        'iterable'
                        'file'
                        'rv'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       STORE_FAST                      2: file
                        6       LOAD_FAST                       2: file
                        8       LOAD_METHOD                     1: writelines
                        10      LOAD_FAST                       1: iterable
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      3: rv
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     2: _check
                        20      LOAD_FAST                       2: file
                        22      CALL_METHOD                     1
                        24      POP_TOP                         
                        26      LOAD_FAST                       3: rv
                        28      RETURN_VALUE                    
                'SpooledTemporaryFile.writelines'
                (
                    0
                    'w+b'
                    -1
                    None
                    None
                    None
                    None
                    None
                )
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SpooledTemporaryFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Temporary file wrapper, specialized to switch from BytesIO\n    or StringIO to a real file when it exceeds a certain size or\n    when a fileno is needed.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: False
                14      STORE_NAME                      4: _rolled
                16      NOP                             
                18      NOP                             
                20      NOP                             
                22      LOAD_CONST                      56: (0, 'w+b', -1, None, None, None, None, None)
                24      LOAD_CONST                      6: None
                26      LOAD_CONST                      7: ('errors',)
                28      BUILD_CONST_KEY_MAP             1
                30      LOAD_CONST                      8: <CODE> __init__
                32      LOAD_CONST                      9: 'SpooledTemporaryFile.__init__'
                34      MAKE_FUNCTION                   3
                36      STORE_NAME                      5: __init__
                38      LOAD_NAME                       6: classmethod
                40      LOAD_NAME                       7: _types
                42      LOAD_ATTR                       8: GenericAlias
                44      CALL_FUNCTION                   1
                46      STORE_NAME                      9: __class_getitem__
                48      LOAD_CONST                      10: <CODE> _check
                50      LOAD_CONST                      11: 'SpooledTemporaryFile._check'
                52      MAKE_FUNCTION                   0
                54      STORE_NAME                      10: _check
                56      LOAD_CONST                      12: <CODE> rollover
                58      LOAD_CONST                      13: 'SpooledTemporaryFile.rollover'
                60      MAKE_FUNCTION                   0
                62      STORE_NAME                      11: rollover
                64      LOAD_CONST                      14: <CODE> __enter__
                66      LOAD_CONST                      15: 'SpooledTemporaryFile.__enter__'
                68      MAKE_FUNCTION                   0
                70      STORE_NAME                      12: __enter__
                72      LOAD_CONST                      16: <CODE> __exit__
                74      LOAD_CONST                      17: 'SpooledTemporaryFile.__exit__'
                76      MAKE_FUNCTION                   0
                78      STORE_NAME                      13: __exit__
                80      LOAD_CONST                      18: <CODE> __iter__
                82      LOAD_CONST                      19: 'SpooledTemporaryFile.__iter__'
                84      MAKE_FUNCTION                   0
                86      STORE_NAME                      14: __iter__
                88      LOAD_CONST                      20: <CODE> close
                90      LOAD_CONST                      21: 'SpooledTemporaryFile.close'
                92      MAKE_FUNCTION                   0
                94      STORE_NAME                      15: close
                96      LOAD_NAME                       16: property
                98      LOAD_CONST                      22: <CODE> closed
                100     LOAD_CONST                      23: 'SpooledTemporaryFile.closed'
                102     MAKE_FUNCTION                   0
                104     CALL_FUNCTION                   1
                106     STORE_NAME                      17: closed
                108     LOAD_NAME                       16: property
                110     LOAD_CONST                      24: <CODE> encoding
                112     LOAD_CONST                      25: 'SpooledTemporaryFile.encoding'
                114     MAKE_FUNCTION                   0
                116     CALL_FUNCTION                   1
                118     STORE_NAME                      18: encoding
                120     LOAD_NAME                       16: property
                122     LOAD_CONST                      26: <CODE> errors
                124     LOAD_CONST                      27: 'SpooledTemporaryFile.errors'
                126     MAKE_FUNCTION                   0
                128     CALL_FUNCTION                   1
                130     STORE_NAME                      19: errors
                132     LOAD_CONST                      28: <CODE> fileno
                134     LOAD_CONST                      29: 'SpooledTemporaryFile.fileno'
                136     MAKE_FUNCTION                   0
                138     STORE_NAME                      20: fileno
                140     LOAD_CONST                      30: <CODE> flush
                142     LOAD_CONST                      31: 'SpooledTemporaryFile.flush'
                144     MAKE_FUNCTION                   0
                146     STORE_NAME                      21: flush
                148     LOAD_CONST                      32: <CODE> isatty
                150     LOAD_CONST                      33: 'SpooledTemporaryFile.isatty'
                152     MAKE_FUNCTION                   0
                154     STORE_NAME                      22: isatty
                156     LOAD_NAME                       16: property
                158     LOAD_CONST                      34: <CODE> mode
                160     LOAD_CONST                      35: 'SpooledTemporaryFile.mode'
                162     MAKE_FUNCTION                   0
                164     CALL_FUNCTION                   1
                166     STORE_NAME                      23: mode
                168     LOAD_NAME                       16: property
                170     LOAD_CONST                      36: <CODE> name
                172     LOAD_CONST                      37: 'SpooledTemporaryFile.name'
                174     MAKE_FUNCTION                   0
                176     CALL_FUNCTION                   1
                178     STORE_NAME                      24: name
                180     LOAD_NAME                       16: property
                182     LOAD_CONST                      38: <CODE> newlines
                184     LOAD_CONST                      39: 'SpooledTemporaryFile.newlines'
                186     MAKE_FUNCTION                   0
                188     CALL_FUNCTION                   1
                190     STORE_NAME                      25: newlines
                192     LOAD_CONST                      40: <CODE> read
                194     LOAD_CONST                      41: 'SpooledTemporaryFile.read'
                196     MAKE_FUNCTION                   0
                198     STORE_NAME                      26: read
                200     LOAD_CONST                      42: <CODE> readline
                202     LOAD_CONST                      43: 'SpooledTemporaryFile.readline'
                204     MAKE_FUNCTION                   0
                206     STORE_NAME                      27: readline
                208     LOAD_CONST                      44: <CODE> readlines
                210     LOAD_CONST                      45: 'SpooledTemporaryFile.readlines'
                212     MAKE_FUNCTION                   0
                214     STORE_NAME                      28: readlines
                216     LOAD_CONST                      46: <CODE> seek
                218     LOAD_CONST                      47: 'SpooledTemporaryFile.seek'
                220     MAKE_FUNCTION                   0
                222     STORE_NAME                      29: seek
                224     LOAD_CONST                      48: <CODE> tell
                226     LOAD_CONST                      49: 'SpooledTemporaryFile.tell'
                228     MAKE_FUNCTION                   0
                230     STORE_NAME                      30: tell
                232     LOAD_CONST                      57: (None,)
                234     LOAD_CONST                      50: <CODE> truncate
                236     LOAD_CONST                      51: 'SpooledTemporaryFile.truncate'
                238     MAKE_FUNCTION                   1
                240     STORE_NAME                      31: truncate
                242     LOAD_CONST                      52: <CODE> write
                244     LOAD_CONST                      53: 'SpooledTemporaryFile.write'
                246     MAKE_FUNCTION                   0
                248     STORE_NAME                      32: write
                250     LOAD_CONST                      54: <CODE> writelines
                252     LOAD_CONST                      55: 'SpooledTemporaryFile.writelines'
                254     MAKE_FUNCTION                   0
                256     STORE_NAME                      33: writelines
                258     LOAD_CONST                      6: None
                260     RETURN_VALUE                    
        'SpooledTemporaryFile'
        [Code]
            File Name: tempfile.py
            Object Name: TemporaryDirectory
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__init__'
                'classmethod'
                '_rmtree'
                '_cleanup'
                '__repr__'
                '__enter__'
                '__exit__'
                'cleanup'
                '_types'
                'GenericAlias'
                '__class_getitem__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'TemporaryDirectory'
                'Create and return a temporary directory.  This has the same\n    behavior as mkdtemp but can be used as a context manager.  For\n    example:\n\n        with TemporaryDirectory() as tmpdir:\n            ...\n\n    Upon exiting the context, the directory and everything contained\n    in it are removed.\n    '
                None
                False
                [Code]
                    File Name: tempfile.py
                    Object Name: __init__
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'mkdtemp'
                        'name'
                        '_ignore_cleanup_errors'
                        '_weakref'
                        'finalize'
                        '_cleanup'
                        'format'
                        '_finalizer'
                    [Var Names]
                        'self'
                        'suffix'
                        'prefix'
                        'dir'
                        'ignore_cleanup_errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Implicitly cleaning up {!r}'
                        (
                            'warn_message'
                            'ignore_errors'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: mkdtemp
                        2       LOAD_FAST                       1: suffix
                        4       LOAD_FAST                       2: prefix
                        6       LOAD_FAST                       3: dir
                        8       CALL_FUNCTION                   3
                        10      LOAD_FAST                       0: self
                        12      STORE_ATTR                      1: name
                        14      LOAD_FAST                       4: ignore_cleanup_errors
                        16      LOAD_FAST                       0: self
                        18      STORE_ATTR                      2: _ignore_cleanup_errors
                        20      LOAD_GLOBAL                     3: _weakref
                        22      LOAD_ATTR                       4: finalize
                        24      LOAD_FAST                       0: self
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       5: _cleanup
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       1: name
                        34      LOAD_CONST                      1: 'Implicitly cleaning up {!r}'
                        36      LOAD_METHOD                     6: format
                        38      LOAD_FAST                       0: self
                        40      CALL_METHOD                     1
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       2: _ignore_cleanup_errors
                        46      LOAD_CONST                      2: ('warn_message', 'ignore_errors')
                        48      CALL_FUNCTION_KW                5
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      7: _finalizer
                        54      LOAD_CONST                      0: None
                        56      RETURN_VALUE                    
                'TemporaryDirectory.__init__'
                [Code]
                    File Name: tempfile.py
                    Object Name: _rmtree
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '_rmtree'
                    [Var Names]
                        'cls'
                        'name'
                        'ignore_errors'
                        'onerror'
                    [Free Vars]
                    [Cell Vars]
                        'cls'
                        'ignore_errors'
                        'name'
                    [Constants]
                        None
                        [Code]
                            File Name: tempfile.py
                            Object Name: onerror
                            Arg Count: 3
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 3
                            Stack Size: 9
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'issubclass'
                                'PermissionError'
                                '_resetperms'
                                '_os'
                                'path'
                                'dirname'
                                'unlink'
                                'IsADirectoryError'
                                '_rmtree'
                                'FileNotFoundError'
                            [Var Names]
                                'func'
                                'path'
                                'exc_info'
                            [Free Vars]
                                'cls'
                                'ignore_errors'
                                'name'
                            [Cell Vars]
                            [Constants]
                                None
                                0
                                (
                                    'ignore_errors'
                                )
                            [Disassembly]
                                0       LOAD_GLOBAL                     0: issubclass
                                2       LOAD_FAST                       2: exc_info
                                4       LOAD_CONST                      1: 0
                                6       BINARY_SUBSCR                   
                                8       LOAD_GLOBAL                     1: PermissionError
                                10      CALL_FUNCTION                   2
                                12      POP_JUMP_IF_FALSE               65 (to 130)
                                14      SETUP_FINALLY                   47 (to 110)
                                16      LOAD_FAST                       1: path
                                18      LOAD_DEREF                      2: name
                                20      COMPARE_OP                      3 (!=)
                                22      POP_JUMP_IF_FALSE               20 (to 40)
                                24      LOAD_GLOBAL                     2: _resetperms
                                26      LOAD_GLOBAL                     3: _os
                                28      LOAD_ATTR                       4: path
                                30      LOAD_METHOD                     5: dirname
                                32      LOAD_FAST                       1: path
                                34      CALL_METHOD                     1
                                36      CALL_FUNCTION                   1
                                38      POP_TOP                         
                                40      LOAD_GLOBAL                     2: _resetperms
                                42      LOAD_FAST                       1: path
                                44      CALL_FUNCTION                   1
                                46      POP_TOP                         
                                48      SETUP_FINALLY                   9 (to 68)
                                50      LOAD_GLOBAL                     3: _os
                                52      LOAD_METHOD                     6: unlink
                                54      LOAD_FAST                       1: path
                                56      CALL_METHOD                     1
                                58      POP_TOP                         
                                60      POP_BLOCK                       
                                62      POP_BLOCK                       
                                64      LOAD_CONST                      0: None
                                66      RETURN_VALUE                    
                                68      DUP_TOP                         
                                70      LOAD_GLOBAL                     7: IsADirectoryError
                                72      LOAD_GLOBAL                     1: PermissionError
                                74      BUILD_TUPLE                     2
                                76      JUMP_IF_NOT_EXC_MATCH           51 (to 102)
                                78      POP_TOP                         
                                80      POP_TOP                         
                                82      POP_TOP                         
                                84      LOAD_DEREF                      0: cls
                                86      LOAD_ATTR                       8: _rmtree
                                88      LOAD_FAST                       1: path
                                90      LOAD_DEREF                      1: ignore_errors
                                92      LOAD_CONST                      2: ('ignore_errors',)
                                94      CALL_FUNCTION_KW                2
                                96      POP_TOP                         
                                98      POP_EXCEPT                      
                                100     JUMP_FORWARD                    1 (to 104)
                                102     RERAISE                         0
                                104     POP_BLOCK                       
                                106     LOAD_CONST                      0: None
                                108     RETURN_VALUE                    
                                110     DUP_TOP                         
                                112     LOAD_GLOBAL                     9: FileNotFoundError
                                114     JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                                116     POP_TOP                         
                                118     POP_TOP                         
                                120     POP_TOP                         
                                122     POP_EXCEPT                      
                                124     LOAD_CONST                      0: None
                                126     RETURN_VALUE                    
                                128     RERAISE                         0
                                130     LOAD_GLOBAL                     0: issubclass
                                132     LOAD_FAST                       2: exc_info
                                134     LOAD_CONST                      1: 0
                                136     BINARY_SUBSCR                   
                                138     LOAD_GLOBAL                     9: FileNotFoundError
                                140     CALL_FUNCTION                   2
                                142     POP_JUMP_IF_FALSE               74 (to 148)
                                144     LOAD_CONST                      0: None
                                146     RETURN_VALUE                    
                                148     LOAD_DEREF                      1: ignore_errors
                                150     POP_JUMP_IF_TRUE                77 (to 154)
                                152     RAISE_VARARGS                   0
                                154     LOAD_CONST                      0: None
                                156     RETURN_VALUE                    
                        'TemporaryDirectory._rmtree.<locals>.onerror'
                        (
                            'onerror'
                        )
                    [Disassembly]
                        0       LOAD_CLOSURE                    0: cls
                        2       LOAD_CLOSURE                    1: ignore_errors
                        4       LOAD_CLOSURE                    2: name
                        6       BUILD_TUPLE                     3
                        8       LOAD_CONST                      1: <CODE> onerror
                        10      LOAD_CONST                      2: 'TemporaryDirectory._rmtree.<locals>.onerror'
                        12      MAKE_FUNCTION                   8
                        14      STORE_FAST                      3: onerror
                        16      LOAD_GLOBAL                     0: _rmtree
                        18      LOAD_DEREF                      2: name
                        20      LOAD_FAST                       3: onerror
                        22      LOAD_CONST                      3: ('onerror',)
                        24      CALL_FUNCTION_KW                2
                        26      POP_TOP                         
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                'TemporaryDirectory._rmtree'
                [Code]
                    File Name: tempfile.py
                    Object Name: _cleanup
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_rmtree'
                        '_warnings'
                        'warn'
                        'ResourceWarning'
                    [Var Names]
                        'cls'
                        'name'
                        'warn_message'
                        'ignore_errors'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'ignore_errors'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_ATTR                       0: _rmtree
                        4       LOAD_FAST                       1: name
                        6       LOAD_FAST                       3: ignore_errors
                        8       LOAD_CONST                      1: ('ignore_errors',)
                        10      CALL_FUNCTION_KW                2
                        12      POP_TOP                         
                        14      LOAD_GLOBAL                     1: _warnings
                        16      LOAD_METHOD                     2: warn
                        18      LOAD_FAST                       2: warn_message
                        20      LOAD_GLOBAL                     3: ResourceWarning
                        22      CALL_METHOD                     2
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'TemporaryDirectory._cleanup'
                [Code]
                    File Name: tempfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'format'
                        '__class__'
                        '__name__'
                        'name'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<{} {!r}>'
                    [Disassembly]
                        0       LOAD_CONST                      1: '<{} {!r}>'
                        2       LOAD_METHOD                     0: format
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: __class__
                        8       LOAD_ATTR                       2: __name__
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       3: name
                        14      CALL_METHOD                     2
                        16      RETURN_VALUE                    
                'TemporaryDirectory.__repr__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: name
                        4       RETURN_VALUE                    
                'TemporaryDirectory.__enter__'
                [Code]
                    File Name: tempfile.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'cleanup'
                    [Var Names]
                        'self'
                        'exc'
                        'value'
                        'tb'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: cleanup
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_CONST                      0: None
                        10      RETURN_VALUE                    
                'TemporaryDirectory.__exit__'
                [Code]
                    File Name: tempfile.py
                    Object Name: cleanup
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_finalizer'
                        'detach'
                        '_os'
                        'path'
                        'exists'
                        'name'
                        '_rmtree'
                        '_ignore_cleanup_errors'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'ignore_errors'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _finalizer
                        4       LOAD_METHOD                     1: detach
                        6       CALL_METHOD                     0
                        8       POP_JUMP_IF_TRUE                12 (to 24)
                        10      LOAD_GLOBAL                     2: _os
                        12      LOAD_ATTR                       3: path
                        14      LOAD_METHOD                     4: exists
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       5: name
                        20      CALL_METHOD                     1
                        22      POP_JUMP_IF_FALSE               23 (to 46)
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       6: _rmtree
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       5: name
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       7: _ignore_cleanup_errors
                        36      LOAD_CONST                      1: ('ignore_errors',)
                        38      CALL_FUNCTION_KW                2
                        40      POP_TOP                         
                        42      LOAD_CONST                      0: None
                        44      RETURN_VALUE                    
                        46      LOAD_CONST                      0: None
                        48      RETURN_VALUE                    
                'TemporaryDirectory.cleanup'
                (
                    None
                    None
                    None
                    False
                )
                (
                    False
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'TemporaryDirectory'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Create and return a temporary directory.  This has the same\n    behavior as mkdtemp but can be used as a context manager.  For\n    example:\n\n        with TemporaryDirectory() as tmpdir:\n            ...\n\n    Upon exiting the context, the directory and everything contained\n    in it are removed.\n    '
                10      STORE_NAME                      3: __doc__
                12      NOP                             
                14      NOP                             
                16      LOAD_CONST                      18: (None, None, None, False)
                18      LOAD_CONST                      4: <CODE> __init__
                20      LOAD_CONST                      5: 'TemporaryDirectory.__init__'
                22      MAKE_FUNCTION                   1
                24      STORE_NAME                      4: __init__
                26      LOAD_NAME                       5: classmethod
                28      LOAD_CONST                      19: (False,)
                30      LOAD_CONST                      6: <CODE> _rmtree
                32      LOAD_CONST                      7: 'TemporaryDirectory._rmtree'
                34      MAKE_FUNCTION                   1
                36      CALL_FUNCTION                   1
                38      STORE_NAME                      6: _rmtree
                40      LOAD_NAME                       5: classmethod
                42      LOAD_CONST                      19: (False,)
                44      LOAD_CONST                      8: <CODE> _cleanup
                46      LOAD_CONST                      9: 'TemporaryDirectory._cleanup'
                48      MAKE_FUNCTION                   1
                50      CALL_FUNCTION                   1
                52      STORE_NAME                      7: _cleanup
                54      LOAD_CONST                      10: <CODE> __repr__
                56      LOAD_CONST                      11: 'TemporaryDirectory.__repr__'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      8: __repr__
                62      LOAD_CONST                      12: <CODE> __enter__
                64      LOAD_CONST                      13: 'TemporaryDirectory.__enter__'
                66      MAKE_FUNCTION                   0
                68      STORE_NAME                      9: __enter__
                70      LOAD_CONST                      14: <CODE> __exit__
                72      LOAD_CONST                      15: 'TemporaryDirectory.__exit__'
                74      MAKE_FUNCTION                   0
                76      STORE_NAME                      10: __exit__
                78      LOAD_CONST                      16: <CODE> cleanup
                80      LOAD_CONST                      17: 'TemporaryDirectory.cleanup'
                82      MAKE_FUNCTION                   0
                84      STORE_NAME                      11: cleanup
                86      LOAD_NAME                       5: classmethod
                88      LOAD_NAME                       12: _types
                90      LOAD_ATTR                       13: GenericAlias
                92      CALL_FUNCTION                   1
                94      STORE_NAME                      14: __class_getitem__
                96      LOAD_CONST                      2: None
                98      RETURN_VALUE                    
        'TemporaryDirectory'
        (
            False
            None
        )
        (
            None
            None
            None
            False
        )
        (
            None
            None
            None
        )
        (
            'w+b'
            -1
            None
            None
            None
            None
            None
            True
        )
        (
            'w+b'
            -1
            None
            None
            None
            None
            None
        )
    [Disassembly]
        0       LOAD_CONST                      0: "Temporary files.\n\nThis module provides generic, low- and high-level interfaces for\ncreating temporary files and directories.  All of the interfaces\nprovided by this module can be used without fear of race conditions\nexcept for 'mktemp'.  'mktemp' is subject to race conditions and\nshould not be used; it is provided for backward compatibility only.\n\nThe default path names are returned as str.  If you supply bytes as\ninput, all return values will be in bytes.  Ex:\n\n    >>> tempfile.mkstemp()\n    (4, '/tmp/tmptpu9nin8')\n    >>> tempfile.mkdtemp(suffix=b'')\n    b'/tmp/tmppbi8f0hy'\n\nThis module also provides some data items to the user:\n\n  TMP_MAX  - maximum number of names that will be tried before\n             giving up.\n  tempdir  - If this is set to a string before the first use of\n             any routine from this module, it will be considered as\n             another candidate location to store temporary files.\n"
        2       STORE_NAME                      0: __doc__
        4       BUILD_LIST                      0
        6       LOAD_CONST                      1: ('NamedTemporaryFile', 'TemporaryFile', 'SpooledTemporaryFile', 'TemporaryDirectory', 'mkstemp', 'mkdtemp', 'mktemp', 'TMP_MAX', 'gettempprefix', 'tempdir', 'gettempdir', 'gettempprefixb', 'gettempdirb')
        8       LIST_EXTEND                     1
        10      STORE_NAME                      1: __all__
        12      LOAD_CONST                      2: 0
        14      LOAD_CONST                      3: None
        16      IMPORT_NAME                     2: functools
        18      STORE_NAME                      3: _functools
        20      LOAD_CONST                      2: 0
        22      LOAD_CONST                      3: None
        24      IMPORT_NAME                     4: warnings
        26      STORE_NAME                      5: _warnings
        28      LOAD_CONST                      2: 0
        30      LOAD_CONST                      3: None
        32      IMPORT_NAME                     6: io
        34      STORE_NAME                      7: _io
        36      LOAD_CONST                      2: 0
        38      LOAD_CONST                      3: None
        40      IMPORT_NAME                     8: os
        42      STORE_NAME                      9: _os
        44      SETUP_FINALLY                   9 (to 64)
        46      LOAD_CONST                      2: 0
        48      LOAD_CONST                      3: None
        50      IMPORT_NAME                     10: shutil
        52      STORE_NAME                      11: _shutil
        54      LOAD_NAME                       11: _shutil
        56      LOAD_ATTR                       12: rmtree
        58      STORE_NAME                      13: _rmtree
        60      POP_BLOCK                       
        62      JUMP_FORWARD                    55 (to 174)
        64      DUP_TOP                         
        66      LOAD_NAME                       14: ImportError
        68      JUMP_IF_NOT_EXC_MATCH           86 (to 172)
        70      POP_TOP                         
        72      POP_TOP                         
        74      POP_TOP                         
        76      LOAD_CONST                      2: 0
        78      LOAD_CONST                      3: None
        80      IMPORT_NAME                     15: sys
        82      STORE_NAME                      16: _sys
        84      LOAD_CONST                      2: 0
        86      LOAD_CONST                      3: None
        88      IMPORT_NAME                     17: stat
        90      STORE_NAME                      18: _stat
        92      LOAD_CONST                      4: <CODE> _rmtree_unsafe
        94      LOAD_CONST                      5: '_rmtree_unsafe'
        96      MAKE_FUNCTION                   0
        98      STORE_NAME                      19: _rmtree_unsafe
        100     LOAD_CONST                      6: <CODE> _rmtree_safe_fd
        102     LOAD_CONST                      7: '_rmtree_safe_fd'
        104     MAKE_FUNCTION                   0
        106     STORE_NAME                      20: _rmtree_safe_fd
        108     LOAD_NAME                       9: _os
        110     LOAD_ATTR                       21: open
        112     LOAD_NAME                       9: _os
        114     LOAD_ATTR                       17: stat
        116     LOAD_NAME                       9: _os
        118     LOAD_ATTR                       22: unlink
        120     LOAD_NAME                       9: _os
        122     LOAD_ATTR                       23: rmdir
        124     BUILD_SET                       4
        126     LOAD_NAME                       9: _os
        128     LOAD_ATTR                       24: supports_dir_fd
        130     COMPARE_OP                      1 (<=)
        132     JUMP_IF_FALSE_OR_POP            78 (to 156)
        134     LOAD_NAME                       9: _os
        136     LOAD_ATTR                       25: listdir
        138     LOAD_NAME                       9: _os
        140     LOAD_ATTR                       26: supports_fd
        142     CONTAINS_OP                     0 (in)
        144     JUMP_IF_FALSE_OR_POP            78 (to 156)
        146     LOAD_NAME                       9: _os
        148     LOAD_ATTR                       17: stat
        150     LOAD_NAME                       9: _os
        152     LOAD_ATTR                       27: supports_follow_symlinks
        154     CONTAINS_OP                     0 (in)
        156     STORE_NAME                      28: _use_fd_functions
        158     LOAD_CONST                      73: (False, None)
        160     LOAD_CONST                      9: <CODE> _rmtree
        162     LOAD_CONST                      10: '_rmtree'
        164     MAKE_FUNCTION                   1
        166     STORE_NAME                      13: _rmtree
        168     POP_EXCEPT                      
        170     JUMP_FORWARD                    1 (to 174)
        172     RERAISE                         0
        174     LOAD_CONST                      2: 0
        176     LOAD_CONST                      3: None
        178     IMPORT_NAME                     29: errno
        180     STORE_NAME                      30: _errno
        182     LOAD_CONST                      2: 0
        184     LOAD_CONST                      11: ('Random',)
        186     IMPORT_NAME                     31: random
        188     IMPORT_FROM                     32: Random
        190     STORE_NAME                      33: _Random
        192     POP_TOP                         
        194     LOAD_CONST                      2: 0
        196     LOAD_CONST                      3: None
        198     IMPORT_NAME                     15: sys
        200     STORE_NAME                      16: _sys
        202     LOAD_CONST                      2: 0
        204     LOAD_CONST                      3: None
        206     IMPORT_NAME                     34: types
        208     STORE_NAME                      35: _types
        210     LOAD_CONST                      2: 0
        212     LOAD_CONST                      3: None
        214     IMPORT_NAME                     36: weakref
        216     STORE_NAME                      37: _weakref
        218     LOAD_CONST                      2: 0
        220     LOAD_CONST                      3: None
        222     IMPORT_NAME                     38: _thread
        224     STORE_NAME                      38: _thread
        226     LOAD_NAME                       38: _thread
        228     LOAD_ATTR                       39: allocate_lock
        230     STORE_NAME                      40: _allocate_lock
        232     LOAD_NAME                       9: _os
        234     LOAD_ATTR                       41: O_RDWR
        236     LOAD_NAME                       9: _os
        238     LOAD_ATTR                       42: O_CREAT
        240     BINARY_OR                       
        242     LOAD_NAME                       9: _os
        244     LOAD_ATTR                       43: O_EXCL
        246     BINARY_OR                       
        248     STORE_NAME                      44: _text_openflags
        250     LOAD_NAME                       45: hasattr
        252     LOAD_NAME                       9: _os
        254     LOAD_CONST                      12: 'O_NOFOLLOW'
        256     CALL_FUNCTION                   2
        258     POP_JUMP_IF_FALSE               135 (to 270)
        260     LOAD_NAME                       44: _text_openflags
        262     LOAD_NAME                       9: _os
        264     LOAD_ATTR                       46: O_NOFOLLOW
        266     INPLACE_OR                      
        268     STORE_NAME                      44: _text_openflags
        270     LOAD_NAME                       44: _text_openflags
        272     STORE_NAME                      47: _bin_openflags
        274     LOAD_NAME                       45: hasattr
        276     LOAD_NAME                       9: _os
        278     LOAD_CONST                      13: 'O_BINARY'
        280     CALL_FUNCTION                   2
        282     POP_JUMP_IF_FALSE               147 (to 294)
        284     LOAD_NAME                       47: _bin_openflags
        286     LOAD_NAME                       9: _os
        288     LOAD_ATTR                       48: O_BINARY
        290     INPLACE_OR                      
        292     STORE_NAME                      47: _bin_openflags
        294     LOAD_NAME                       45: hasattr
        296     LOAD_NAME                       9: _os
        298     LOAD_CONST                      14: 'TMP_MAX'
        300     CALL_FUNCTION                   2
        302     POP_JUMP_IF_FALSE               156 (to 312)
        304     LOAD_NAME                       9: _os
        306     LOAD_ATTR                       49: TMP_MAX
        308     STORE_NAME                      49: TMP_MAX
        310     JUMP_FORWARD                    2 (to 316)
        312     LOAD_CONST                      15: 10000
        314     STORE_NAME                      49: TMP_MAX
        316     LOAD_CONST                      16: 'tmp'
        318     STORE_NAME                      50: template
        320     LOAD_NAME                       40: _allocate_lock
        322     CALL_FUNCTION                   0
        324     STORE_NAME                      51: _once_lock
        326     LOAD_CONST                      17: <CODE> _exists
        328     LOAD_CONST                      18: '_exists'
        330     MAKE_FUNCTION                   0
        332     STORE_NAME                      52: _exists
        334     LOAD_CONST                      19: <CODE> _infer_return_type
        336     LOAD_CONST                      20: '_infer_return_type'
        338     MAKE_FUNCTION                   0
        340     STORE_NAME                      53: _infer_return_type
        342     LOAD_CONST                      21: <CODE> _sanitize_params
        344     LOAD_CONST                      22: '_sanitize_params'
        346     MAKE_FUNCTION                   0
        348     STORE_NAME                      54: _sanitize_params
        350     LOAD_BUILD_CLASS                
        352     LOAD_CONST                      23: <CODE> _RandomNameSequence
        354     LOAD_CONST                      24: '_RandomNameSequence'
        356     MAKE_FUNCTION                   0
        358     LOAD_CONST                      24: '_RandomNameSequence'
        360     CALL_FUNCTION                   2
        362     STORE_NAME                      55: _RandomNameSequence
        364     LOAD_CONST                      25: <CODE> _candidate_tempdir_list
        366     LOAD_CONST                      26: '_candidate_tempdir_list'
        368     MAKE_FUNCTION                   0
        370     STORE_NAME                      56: _candidate_tempdir_list
        372     LOAD_CONST                      27: <CODE> _get_default_tempdir
        374     LOAD_CONST                      28: '_get_default_tempdir'
        376     MAKE_FUNCTION                   0
        378     STORE_NAME                      57: _get_default_tempdir
        380     LOAD_CONST                      3: None
        382     STORE_GLOBAL                    58: _name_sequence
        384     LOAD_CONST                      29: <CODE> _get_candidate_names
        386     LOAD_CONST                      30: '_get_candidate_names'
        388     MAKE_FUNCTION                   0
        390     STORE_NAME                      59: _get_candidate_names
        392     LOAD_CONST                      31: <CODE> _mkstemp_inner
        394     LOAD_CONST                      32: '_mkstemp_inner'
        396     MAKE_FUNCTION                   0
        398     STORE_NAME                      60: _mkstemp_inner
        400     LOAD_CONST                      33: <CODE> _dont_follow_symlinks
        402     LOAD_CONST                      34: '_dont_follow_symlinks'
        404     MAKE_FUNCTION                   0
        406     STORE_NAME                      61: _dont_follow_symlinks
        408     LOAD_CONST                      35: <CODE> _resetperms
        410     LOAD_CONST                      36: '_resetperms'
        412     MAKE_FUNCTION                   0
        414     STORE_NAME                      62: _resetperms
        416     LOAD_CONST                      37: <CODE> gettempprefix
        418     LOAD_CONST                      38: 'gettempprefix'
        420     MAKE_FUNCTION                   0
        422     STORE_NAME                      63: gettempprefix
        424     LOAD_CONST                      39: <CODE> gettempprefixb
        426     LOAD_CONST                      40: 'gettempprefixb'
        428     MAKE_FUNCTION                   0
        430     STORE_NAME                      64: gettempprefixb
        432     LOAD_CONST                      3: None
        434     STORE_GLOBAL                    65: tempdir
        436     LOAD_CONST                      41: <CODE> _gettempdir
        438     LOAD_CONST                      42: '_gettempdir'
        440     MAKE_FUNCTION                   0
        442     STORE_NAME                      66: _gettempdir
        444     LOAD_CONST                      43: <CODE> gettempdir
        446     LOAD_CONST                      44: 'gettempdir'
        448     MAKE_FUNCTION                   0
        450     STORE_NAME                      67: gettempdir
        452     LOAD_CONST                      45: <CODE> gettempdirb
        454     LOAD_CONST                      46: 'gettempdirb'
        456     MAKE_FUNCTION                   0
        458     STORE_NAME                      68: gettempdirb
        460     LOAD_CONST                      74: (None, None, None, False)
        462     LOAD_CONST                      47: <CODE> mkstemp
        464     LOAD_CONST                      48: 'mkstemp'
        466     MAKE_FUNCTION                   1
        468     STORE_NAME                      69: mkstemp
        470     LOAD_CONST                      75: (None, None, None)
        472     LOAD_CONST                      49: <CODE> mkdtemp
        474     LOAD_CONST                      50: 'mkdtemp'
        476     MAKE_FUNCTION                   1
        478     STORE_NAME                      70: mkdtemp
        480     LOAD_CONST                      51: ''
        482     LOAD_NAME                       50: template
        484     LOAD_CONST                      3: None
        486     BUILD_TUPLE                     3
        488     LOAD_CONST                      52: <CODE> mktemp
        490     LOAD_CONST                      53: 'mktemp'
        492     MAKE_FUNCTION                   1
        494     STORE_NAME                      71: mktemp
        496     LOAD_BUILD_CLASS                
        498     LOAD_CONST                      54: <CODE> _TemporaryFileCloser
        500     LOAD_CONST                      55: '_TemporaryFileCloser'
        502     MAKE_FUNCTION                   0
        504     LOAD_CONST                      55: '_TemporaryFileCloser'
        506     CALL_FUNCTION                   2
        508     STORE_NAME                      72: _TemporaryFileCloser
        510     LOAD_BUILD_CLASS                
        512     LOAD_CONST                      56: <CODE> _TemporaryFileWrapper
        514     LOAD_CONST                      57: '_TemporaryFileWrapper'
        516     MAKE_FUNCTION                   0
        518     LOAD_CONST                      57: '_TemporaryFileWrapper'
        520     CALL_FUNCTION                   2
        522     STORE_NAME                      73: _TemporaryFileWrapper
        524     NOP                             
        526     NOP                             
        528     NOP                             
        530     LOAD_CONST                      76: ('w+b', -1, None, None, None, None, None, True)
        532     LOAD_CONST                      3: None
        534     LOAD_CONST                      61: ('errors',)
        536     BUILD_CONST_KEY_MAP             1
        538     LOAD_CONST                      62: <CODE> NamedTemporaryFile
        540     LOAD_CONST                      63: 'NamedTemporaryFile'
        542     MAKE_FUNCTION                   3
        544     STORE_NAME                      74: NamedTemporaryFile
        546     LOAD_NAME                       9: _os
        548     LOAD_ATTR                       75: name
        550     LOAD_CONST                      64: 'posix'
        552     COMPARE_OP                      3 (!=)
        554     POP_JUMP_IF_TRUE                285 (to 570)
        558     LOAD_NAME                       16: _sys
        560     LOAD_ATTR                       76: platform
        562     LOAD_CONST                      65: 'cygwin'
        564     COMPARE_OP                      2 (==)
        566     POP_JUMP_IF_FALSE               288 (to 576)
        570     LOAD_NAME                       74: NamedTemporaryFile
        572     STORE_NAME                      77: TemporaryFile
        574     JUMP_FORWARD                    16 (to 608)
        576     LOAD_NAME                       45: hasattr
        578     LOAD_NAME                       9: _os
        580     LOAD_CONST                      66: 'O_TMPFILE'
        582     CALL_FUNCTION                   2
        584     STORE_GLOBAL                    78: _O_TMPFILE_WORKS
        586     NOP                             
        588     NOP                             
        590     NOP                             
        592     LOAD_CONST                      77: ('w+b', -1, None, None, None, None, None)
        594     LOAD_CONST                      3: None
        596     LOAD_CONST                      61: ('errors',)
        598     BUILD_CONST_KEY_MAP             1
        600     LOAD_CONST                      67: <CODE> TemporaryFile
        602     LOAD_CONST                      68: 'TemporaryFile'
        604     MAKE_FUNCTION                   3
        606     STORE_NAME                      77: TemporaryFile
        608     LOAD_BUILD_CLASS                
        610     LOAD_CONST                      69: <CODE> SpooledTemporaryFile
        612     LOAD_CONST                      70: 'SpooledTemporaryFile'
        614     MAKE_FUNCTION                   0
        616     LOAD_CONST                      70: 'SpooledTemporaryFile'
        618     CALL_FUNCTION                   2
        620     STORE_NAME                      79: SpooledTemporaryFile
        622     LOAD_BUILD_CLASS                
        624     LOAD_CONST                      71: <CODE> TemporaryDirectory
        626     LOAD_CONST                      72: 'TemporaryDirectory'
        628     MAKE_FUNCTION                   0
        630     LOAD_CONST                      72: 'TemporaryDirectory'
        632     CALL_FUNCTION                   2
        634     STORE_NAME                      80: TemporaryDirectory
        636     LOAD_CONST                      3: None
        638     RETURN_VALUE                    
