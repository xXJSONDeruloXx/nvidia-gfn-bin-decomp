zipfile.pyc (Python 3.10)
[Code]
    File Name: zipfile.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        'binascii'
        'importlib.util'
        'importlib'
        'io'
        'itertools'
        'os'
        'posixpath'
        're'
        'shutil'
        'stat'
        'struct'
        'sys'
        'threading'
        'time'
        'contextlib'
        'pathlib'
        'zlib'
        'crc32'
        'ImportError'
        'bz2'
        'lzma'
        '__all__'
        'Exception'
        'BadZipFile'
        'LargeZipFile'
        'error'
        'BadZipfile'
        'ZIP64_LIMIT'
        'ZIP_FILECOUNT_LIMIT'
        'ZIP_MAX_COMMENT'
        'ZIP_STORED'
        'ZIP_DEFLATED'
        'ZIP_BZIP2'
        'ZIP_LZMA'
        'DEFAULT_VERSION'
        'ZIP64_VERSION'
        'BZIP2_VERSION'
        'LZMA_VERSION'
        'MAX_EXTRACT_VERSION'
        'structEndArchive'
        'stringEndArchive'
        'calcsize'
        'sizeEndCentDir'
        '_ECD_SIGNATURE'
        '_ECD_DISK_NUMBER'
        '_ECD_DISK_START'
        '_ECD_ENTRIES_THIS_DISK'
        '_ECD_ENTRIES_TOTAL'
        '_ECD_SIZE'
        '_ECD_OFFSET'
        '_ECD_COMMENT_SIZE'
        '_ECD_COMMENT'
        '_ECD_LOCATION'
        'structCentralDir'
        'stringCentralDir'
        'sizeCentralDir'
        '_CD_SIGNATURE'
        '_CD_CREATE_VERSION'
        '_CD_CREATE_SYSTEM'
        '_CD_EXTRACT_VERSION'
        '_CD_EXTRACT_SYSTEM'
        '_CD_FLAG_BITS'
        '_CD_COMPRESS_TYPE'
        '_CD_TIME'
        '_CD_DATE'
        '_CD_CRC'
        '_CD_COMPRESSED_SIZE'
        '_CD_UNCOMPRESSED_SIZE'
        '_CD_FILENAME_LENGTH'
        '_CD_EXTRA_FIELD_LENGTH'
        '_CD_COMMENT_LENGTH'
        '_CD_DISK_NUMBER_START'
        '_CD_INTERNAL_FILE_ATTRIBUTES'
        '_CD_EXTERNAL_FILE_ATTRIBUTES'
        '_CD_LOCAL_HEADER_OFFSET'
        'structFileHeader'
        'stringFileHeader'
        'sizeFileHeader'
        '_FH_SIGNATURE'
        '_FH_EXTRACT_VERSION'
        '_FH_EXTRACT_SYSTEM'
        '_FH_GENERAL_PURPOSE_FLAG_BITS'
        '_FH_COMPRESSION_METHOD'
        '_FH_LAST_MOD_TIME'
        '_FH_LAST_MOD_DATE'
        '_FH_CRC'
        '_FH_COMPRESSED_SIZE'
        '_FH_UNCOMPRESSED_SIZE'
        '_FH_FILENAME_LENGTH'
        '_FH_EXTRA_FIELD_LENGTH'
        'structEndArchive64Locator'
        'stringEndArchive64Locator'
        'sizeEndCentDir64Locator'
        'structEndArchive64'
        'stringEndArchive64'
        'sizeEndCentDir64'
        '_CD64_SIGNATURE'
        '_CD64_DIRECTORY_RECSIZE'
        '_CD64_CREATE_VERSION'
        '_CD64_EXTRACT_VERSION'
        '_CD64_DISK_NUMBER'
        '_CD64_DISK_NUMBER_START'
        '_CD64_NUMBER_ENTRIES_THIS_DISK'
        '_CD64_NUMBER_ENTRIES_TOTAL'
        '_CD64_DIRECTORY_SIZE'
        '_CD64_OFFSET_START_CENTDIR'
        '_DD_SIGNATURE'
        'Struct'
        '_EXTRA_FIELD_STRUCT'
        '_strip_extra'
        '_check_zipfile'
        'is_zipfile'
        '_EndRecData64'
        '_EndRecData'
        'object'
        'ZipInfo'
        '_crctable'
        '_gen_crc'
        '_ZipDecrypter'
        'LZMACompressor'
        'LZMADecompressor'
        'compressor_names'
        '_check_compression'
        '_get_compressor'
        '_get_decompressor'
        '_SharedFile'
        '_Tellable'
        'BufferedIOBase'
        'ZipExtFile'
        '_ZipWriteFile'
        'ZipFile'
        'PyZipFile'
        '_parents'
        '_ancestry'
        'dict'
        'fromkeys'
        '_dedupe'
        '_difference'
        'CompleteDirs'
        'FastLookup'
        '_extract_text_encoding'
        'Path'
        'main'
        '__name__'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        '\nRead and write ZIP files.\n\nXXX references to utf-8 need further investigation.\n'
        0
        None
        (
            'BadZipFile'
            'BadZipfile'
            'error'
            'ZIP_STORED'
            'ZIP_DEFLATED'
            'ZIP_BZIP2'
            'ZIP_LZMA'
            'is_zipfile'
            'ZipInfo'
            'ZipFile'
            'PyZipFile'
            'LargeZipFile'
            'Path'
        )
        [Code]
            File Name: zipfile.py
            Object Name: BadZipFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'BadZipFile'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'BadZipFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
        'BadZipFile'
        [Code]
            File Name: zipfile.py
            Object Name: LargeZipFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'LargeZipFile'
                '\n    Raised when writing a zipfile, the zipfile requires ZIP64 extensions\n    and those extensions are disabled.\n    '
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'LargeZipFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    Raised when writing a zipfile, the zipfile requires ZIP64 extensions\n    and those extensions are disabled.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'LargeZipFile'
        2147483647
        65535
        8
        12
        14
        20
        45
        46
        63
        b'<4s4H2LH'
        b'PK\x05\x06'
        1
        2
        3
        4
        5
        6
        7
        9
        '<4s4B4HL2L5H2L'
        b'PK\x01\x02'
        10
        11
        13
        15
        16
        17
        18
        '<4s2B4HL2L2H'
        b'PK\x03\x04'
        '<4sLQL'
        b'PK\x06\x07'
        '<4sQ2H2L4Q'
        b'PK\x06\x06'
        134695760
        '<HH'
        [Code]
            File Name: zipfile.py
            Object Name: _strip_extra
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 10
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_EXTRA_FIELD_STRUCT'
                'unpack'
                'len'
                'append'
                'join'
            [Var Names]
                'extra'
                'xids'
                'unpack'
                'modified'
                'buffer'
                'start'
                'i'
                'xid'
                'xlen'
                'j'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                0
                4
                True
                b''
            [Disassembly]
                0       LOAD_GLOBAL                     0: _EXTRA_FIELD_STRUCT
                2       LOAD_ATTR                       1: unpack
                4       STORE_FAST                      2: unpack
                6       LOAD_CONST                      1: False
                8       STORE_FAST                      3: modified
                10      BUILD_LIST                      0
                12      STORE_FAST                      4: buffer
                14      LOAD_CONST                      2: 0
                16      DUP_TOP                         
                18      STORE_FAST                      5: start
                20      STORE_FAST                      6: i
                22      LOAD_FAST                       6: i
                24      LOAD_CONST                      3: 4
                26      BINARY_ADD                      
                28      LOAD_GLOBAL                     2: len
                30      LOAD_FAST                       0: extra
                32      CALL_FUNCTION                   1
                34      COMPARE_OP                      1 (<=)
                36      POP_JUMP_IF_FALSE               68 (to 136)
                38      LOAD_FAST                       2: unpack
                40      LOAD_FAST                       0: extra
                42      LOAD_FAST                       6: i
                44      LOAD_FAST                       6: i
                46      LOAD_CONST                      3: 4
                48      BINARY_ADD                      
                50      BUILD_SLICE                     2
                52      BINARY_SUBSCR                   
                54      CALL_FUNCTION                   1
                56      UNPACK_SEQUENCE                 2
                58      STORE_FAST                      7: xid
                60      STORE_FAST                      8: xlen
                62      LOAD_FAST                       6: i
                64      LOAD_CONST                      3: 4
                66      BINARY_ADD                      
                68      LOAD_FAST                       8: xlen
                70      BINARY_ADD                      
                72      STORE_FAST                      9: j
                74      LOAD_FAST                       7: xid
                76      LOAD_FAST                       1: xids
                78      CONTAINS_OP                     0 (in)
                80      POP_JUMP_IF_FALSE               58 (to 116)
                82      LOAD_FAST                       6: i
                84      LOAD_FAST                       5: start
                86      COMPARE_OP                      3 (!=)
                88      POP_JUMP_IF_FALSE               54 (to 108)
                90      LOAD_FAST                       4: buffer
                92      LOAD_METHOD                     3: append
                94      LOAD_FAST                       0: extra
                96      LOAD_FAST                       5: start
                98      LOAD_FAST                       6: i
                100     BUILD_SLICE                     2
                102     BINARY_SUBSCR                   
                104     CALL_METHOD                     1
                106     POP_TOP                         
                108     LOAD_FAST                       9: j
                110     STORE_FAST                      5: start
                112     LOAD_CONST                      4: True
                114     STORE_FAST                      3: modified
                116     LOAD_FAST                       9: j
                118     STORE_FAST                      6: i
                120     LOAD_FAST                       6: i
                122     LOAD_CONST                      3: 4
                124     BINARY_ADD                      
                126     LOAD_GLOBAL                     2: len
                128     LOAD_FAST                       0: extra
                130     CALL_FUNCTION                   1
                132     COMPARE_OP                      1 (<=)
                134     POP_JUMP_IF_TRUE                19 (to 38)
                136     LOAD_FAST                       3: modified
                138     POP_JUMP_IF_TRUE                72 (to 144)
                140     LOAD_FAST                       0: extra
                142     RETURN_VALUE                    
                144     LOAD_FAST                       5: start
                146     LOAD_GLOBAL                     2: len
                148     LOAD_FAST                       0: extra
                150     CALL_FUNCTION                   1
                152     COMPARE_OP                      3 (!=)
                154     POP_JUMP_IF_FALSE               87 (to 174)
                156     LOAD_FAST                       4: buffer
                158     LOAD_METHOD                     3: append
                160     LOAD_FAST                       0: extra
                162     LOAD_FAST                       5: start
                164     LOAD_CONST                      0: None
                166     BUILD_SLICE                     2
                168     BINARY_SUBSCR                   
                170     CALL_METHOD                     1
                172     POP_TOP                         
                174     LOAD_CONST                      5: b''
                176     LOAD_METHOD                     4: join
                178     LOAD_FAST                       4: buffer
                180     CALL_METHOD                     1
                182     RETURN_VALUE                    
        '_strip_extra'
        [Code]
            File Name: zipfile.py
            Object Name: _check_zipfile
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_EndRecData'
                'OSError'
            [Var Names]
                'fp'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                True
                False
            [Disassembly]
                0       SETUP_FINALLY                   10 (to 22)
                2       LOAD_GLOBAL                     0: _EndRecData
                4       LOAD_FAST                       0: fp
                6       CALL_FUNCTION                   1
                8       POP_JUMP_IF_FALSE               8 (to 16)
                10      POP_BLOCK                       
                12      LOAD_CONST                      1: True
                14      RETURN_VALUE                    
                16      POP_BLOCK                       
                18      LOAD_CONST                      2: False
                20      RETURN_VALUE                    
                22      DUP_TOP                         
                24      LOAD_GLOBAL                     1: OSError
                26      JUMP_IF_NOT_EXC_MATCH           20 (to 40)
                28      POP_TOP                         
                30      POP_TOP                         
                32      POP_TOP                         
                34      POP_EXCEPT                      
                36      LOAD_CONST                      2: False
                38      RETURN_VALUE                    
                40      RERAISE                         0
        '_check_zipfile'
        [Code]
            File Name: zipfile.py
            Object Name: is_zipfile
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'hasattr'
                '_check_zipfile'
                'open'
                'OSError'
            [Var Names]
                'filename'
                'result'
                'fp'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Quickly see if a file is a ZIP file by checking the magic number.\n\n    The filename argument may be a file or file-like object too.\n    '
                False
                'read'
                (
                    'fp'
                )
                'rb'
                None
            [Disassembly]
                0       LOAD_CONST                      1: False
                2       STORE_FAST                      1: result
                4       SETUP_FINALLY                   43 (to 92)
                6       LOAD_GLOBAL                     0: hasattr
                8       LOAD_FAST                       0: filename
                10      LOAD_CONST                      2: 'read'
                12      CALL_FUNCTION                   2
                14      POP_JUMP_IF_FALSE               16 (to 32)
                16      LOAD_GLOBAL                     1: _check_zipfile
                18      LOAD_FAST                       0: filename
                20      LOAD_CONST                      3: ('fp',)
                22      CALL_FUNCTION_KW                1
                24      STORE_FAST                      1: result
                26      POP_BLOCK                       
                28      LOAD_FAST                       1: result
                30      RETURN_VALUE                    
                32      LOAD_GLOBAL                     2: open
                34      LOAD_FAST                       0: filename
                36      LOAD_CONST                      4: 'rb'
                38      CALL_FUNCTION                   2
                40      SETUP_WITH                      14 (to 70)
                42      STORE_FAST                      2: fp
                44      LOAD_GLOBAL                     1: _check_zipfile
                46      LOAD_FAST                       2: fp
                48      CALL_FUNCTION                   1
                50      STORE_FAST                      1: result
                52      POP_BLOCK                       
                54      LOAD_CONST                      5: None
                56      DUP_TOP                         
                58      DUP_TOP                         
                60      CALL_FUNCTION                   3
                62      POP_TOP                         
                64      POP_BLOCK                       
                66      LOAD_FAST                       1: result
                68      RETURN_VALUE                    
                70      WITH_EXCEPT_START               
                72      POP_JUMP_IF_TRUE                38 (to 76)
                74      RERAISE                         1
                76      POP_TOP                         
                78      POP_TOP                         
                80      POP_TOP                         
                82      POP_EXCEPT                      
                84      POP_TOP                         
                86      POP_BLOCK                       
                88      LOAD_FAST                       1: result
                90      RETURN_VALUE                    
                92      DUP_TOP                         
                94      LOAD_GLOBAL                     3: OSError
                96      JUMP_IF_NOT_EXC_MATCH           55 (to 110)
                98      POP_TOP                         
                100     POP_TOP                         
                102     POP_TOP                         
                104     POP_EXCEPT                      
                106     LOAD_FAST                       1: result
                108     RETURN_VALUE                    
                110     RERAISE                         0
        'is_zipfile'
        [Code]
            File Name: zipfile.py
            Object Name: _EndRecData64
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 17
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'seek'
                'sizeEndCentDir64Locator'
                'OSError'
                'read'
                'len'
                'struct'
                'unpack'
                'structEndArchive64Locator'
                'stringEndArchive64Locator'
                'BadZipFile'
                'sizeEndCentDir64'
                'structEndArchive64'
                'stringEndArchive64'
                '_ECD_SIGNATURE'
                '_ECD_DISK_NUMBER'
                '_ECD_DISK_START'
                '_ECD_ENTRIES_THIS_DISK'
                '_ECD_ENTRIES_TOTAL'
                '_ECD_SIZE'
                '_ECD_OFFSET'
            [Var Names]
                'fpin'
                'offset'
                'endrec'
                'data'
                'sig'
                'diskno'
                'reloff'
                'disks'
                'sz'
                'create_version'
                'read_version'
                'disk_num'
                'disk_dir'
                'dircount'
                'dircount2'
                'dirsize'
                'diroffset'
            [Free Vars]
            [Cell Vars]
            [Constants]
                '\n    Read the ZIP64 end-of-archive records and use that to update endrec\n    '
                2
                0
                1
                'zipfiles that span multiple disks are not supported'
            [Disassembly]
                0       SETUP_FINALLY                   10 (to 22)
                2       LOAD_FAST                       0: fpin
                4       LOAD_METHOD                     0: seek
                6       LOAD_FAST                       1: offset
                8       LOAD_GLOBAL                     1: sizeEndCentDir64Locator
                10      BINARY_SUBTRACT                 
                12      LOAD_CONST                      1: 2
                14      CALL_METHOD                     2
                16      POP_TOP                         
                18      POP_BLOCK                       
                20      JUMP_FORWARD                    11 (to 44)
                22      DUP_TOP                         
                24      LOAD_GLOBAL                     2: OSError
                26      JUMP_IF_NOT_EXC_MATCH           21 (to 42)
                28      POP_TOP                         
                30      POP_TOP                         
                32      POP_TOP                         
                34      LOAD_FAST                       2: endrec
                36      ROT_FOUR                        
                38      POP_EXCEPT                      
                40      RETURN_VALUE                    
                42      RERAISE                         0
                44      LOAD_FAST                       0: fpin
                46      LOAD_METHOD                     3: read
                48      LOAD_GLOBAL                     1: sizeEndCentDir64Locator
                50      CALL_METHOD                     1
                52      STORE_FAST                      3: data
                54      LOAD_GLOBAL                     4: len
                56      LOAD_FAST                       3: data
                58      CALL_FUNCTION                   1
                60      LOAD_GLOBAL                     1: sizeEndCentDir64Locator
                62      COMPARE_OP                      3 (!=)
                64      POP_JUMP_IF_FALSE               35 (to 70)
                66      LOAD_FAST                       2: endrec
                68      RETURN_VALUE                    
                70      LOAD_GLOBAL                     5: struct
                72      LOAD_METHOD                     6: unpack
                74      LOAD_GLOBAL                     7: structEndArchive64Locator
                76      LOAD_FAST                       3: data
                78      CALL_METHOD                     2
                80      UNPACK_SEQUENCE                 4
                82      STORE_FAST                      4: sig
                84      STORE_FAST                      5: diskno
                86      STORE_FAST                      6: reloff
                88      STORE_FAST                      7: disks
                90      LOAD_FAST                       4: sig
                92      LOAD_GLOBAL                     8: stringEndArchive64Locator
                94      COMPARE_OP                      3 (!=)
                96      POP_JUMP_IF_FALSE               51 (to 102)
                98      LOAD_FAST                       2: endrec
                100     RETURN_VALUE                    
                102     LOAD_FAST                       5: diskno
                104     LOAD_CONST                      2: 0
                106     COMPARE_OP                      3 (!=)
                108     POP_JUMP_IF_TRUE                59 (to 118)
                110     LOAD_FAST                       7: disks
                112     LOAD_CONST                      3: 1
                114     COMPARE_OP                      4 (>)
                116     POP_JUMP_IF_FALSE               63 (to 126)
                118     LOAD_GLOBAL                     9: BadZipFile
                120     LOAD_CONST                      4: 'zipfiles that span multiple disks are not supported'
                122     CALL_FUNCTION                   1
                124     RAISE_VARARGS                   1
                126     LOAD_FAST                       0: fpin
                128     LOAD_METHOD                     0: seek
                130     LOAD_FAST                       1: offset
                132     LOAD_GLOBAL                     1: sizeEndCentDir64Locator
                134     BINARY_SUBTRACT                 
                136     LOAD_GLOBAL                     10: sizeEndCentDir64
                138     BINARY_SUBTRACT                 
                140     LOAD_CONST                      1: 2
                142     CALL_METHOD                     2
                144     POP_TOP                         
                146     LOAD_FAST                       0: fpin
                148     LOAD_METHOD                     3: read
                150     LOAD_GLOBAL                     10: sizeEndCentDir64
                152     CALL_METHOD                     1
                154     STORE_FAST                      3: data
                156     LOAD_GLOBAL                     4: len
                158     LOAD_FAST                       3: data
                160     CALL_FUNCTION                   1
                162     LOAD_GLOBAL                     10: sizeEndCentDir64
                164     COMPARE_OP                      3 (!=)
                166     POP_JUMP_IF_FALSE               86 (to 172)
                168     LOAD_FAST                       2: endrec
                170     RETURN_VALUE                    
                172     LOAD_GLOBAL                     5: struct
                174     LOAD_METHOD                     6: unpack
                176     LOAD_GLOBAL                     11: structEndArchive64
                178     LOAD_FAST                       3: data
                180     CALL_METHOD                     2
                182     UNPACK_SEQUENCE                 10
                184     STORE_FAST                      4: sig
                186     STORE_FAST                      8: sz
                188     STORE_FAST                      9: create_version
                190     STORE_FAST                      10: read_version
                192     STORE_FAST                      11: disk_num
                194     STORE_FAST                      12: disk_dir
                196     STORE_FAST                      13: dircount
                198     STORE_FAST                      14: dircount2
                200     STORE_FAST                      15: dirsize
                202     STORE_FAST                      16: diroffset
                204     LOAD_FAST                       4: sig
                206     LOAD_GLOBAL                     12: stringEndArchive64
                208     COMPARE_OP                      3 (!=)
                210     POP_JUMP_IF_FALSE               108 (to 216)
                212     LOAD_FAST                       2: endrec
                214     RETURN_VALUE                    
                216     LOAD_FAST                       4: sig
                218     LOAD_FAST                       2: endrec
                220     LOAD_GLOBAL                     13: _ECD_SIGNATURE
                222     STORE_SUBSCR                    
                224     LOAD_FAST                       11: disk_num
                226     LOAD_FAST                       2: endrec
                228     LOAD_GLOBAL                     14: _ECD_DISK_NUMBER
                230     STORE_SUBSCR                    
                232     LOAD_FAST                       12: disk_dir
                234     LOAD_FAST                       2: endrec
                236     LOAD_GLOBAL                     15: _ECD_DISK_START
                238     STORE_SUBSCR                    
                240     LOAD_FAST                       13: dircount
                242     LOAD_FAST                       2: endrec
                244     LOAD_GLOBAL                     16: _ECD_ENTRIES_THIS_DISK
                246     STORE_SUBSCR                    
                248     LOAD_FAST                       14: dircount2
                250     LOAD_FAST                       2: endrec
                252     LOAD_GLOBAL                     17: _ECD_ENTRIES_TOTAL
                254     STORE_SUBSCR                    
                256     LOAD_FAST                       15: dirsize
                258     LOAD_FAST                       2: endrec
                260     LOAD_GLOBAL                     18: _ECD_SIZE
                262     STORE_SUBSCR                    
                264     LOAD_FAST                       16: diroffset
                266     LOAD_FAST                       2: endrec
                268     LOAD_GLOBAL                     19: _ECD_OFFSET
                270     STORE_SUBSCR                    
                272     LOAD_FAST                       2: endrec
                274     RETURN_VALUE                    
        '_EndRecData64'
        [Code]
            File Name: zipfile.py
            Object Name: _EndRecData
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'seek'
                'tell'
                'sizeEndCentDir'
                'OSError'
                'read'
                'len'
                'stringEndArchive'
                'struct'
                'unpack'
                'structEndArchive'
                'list'
                'append'
                '_EndRecData64'
                'max'
                'rfind'
                '_ECD_COMMENT_SIZE'
            [Var Names]
                'fpin'
                'filesize'
                'data'
                'endrec'
                'maxCommentStart'
                'start'
                'recData'
                'commentSize'
                'comment'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Return data from the "End of Central Directory" record, or None.\n\n    The data is a list of the nine items in the ZIP "End of central dir"\n    record followed by a tenth item, the file seek offset of this record.'
                0
                2
                None
                4
                -2
                b'\x00\x00'
                b''
                65536
            [Disassembly]
                0       LOAD_FAST                       0: fpin
                2       LOAD_METHOD                     0: seek
                4       LOAD_CONST                      1: 0
                6       LOAD_CONST                      2: 2
                8       CALL_METHOD                     2
                10      POP_TOP                         
                12      LOAD_FAST                       0: fpin
                14      LOAD_METHOD                     1: tell
                16      CALL_METHOD                     0
                18      STORE_FAST                      1: filesize
                20      SETUP_FINALLY                   9 (to 40)
                22      LOAD_FAST                       0: fpin
                24      LOAD_METHOD                     0: seek
                26      LOAD_GLOBAL                     2: sizeEndCentDir
                28      UNARY_NEGATIVE                  
                30      LOAD_CONST                      2: 2
                32      CALL_METHOD                     2
                34      POP_TOP                         
                36      POP_BLOCK                       
                38      JUMP_FORWARD                    10 (to 60)
                40      DUP_TOP                         
                42      LOAD_GLOBAL                     3: OSError
                44      JUMP_IF_NOT_EXC_MATCH           29 (to 58)
                46      POP_TOP                         
                48      POP_TOP                         
                50      POP_TOP                         
                52      POP_EXCEPT                      
                54      LOAD_CONST                      3: None
                56      RETURN_VALUE                    
                58      RERAISE                         0
                60      LOAD_FAST                       0: fpin
                62      LOAD_METHOD                     4: read
                64      CALL_METHOD                     0
                66      STORE_FAST                      2: data
                68      LOAD_GLOBAL                     5: len
                70      LOAD_FAST                       2: data
                72      CALL_FUNCTION                   1
                74      LOAD_GLOBAL                     2: sizeEndCentDir
                76      COMPARE_OP                      2 (==)
                78      POP_JUMP_IF_FALSE               85 (to 170)
                80      LOAD_FAST                       2: data
                82      LOAD_CONST                      1: 0
                84      LOAD_CONST                      4: 4
                86      BUILD_SLICE                     2
                88      BINARY_SUBSCR                   
                90      LOAD_GLOBAL                     6: stringEndArchive
                92      COMPARE_OP                      2 (==)
                94      POP_JUMP_IF_FALSE               85 (to 170)
                96      LOAD_FAST                       2: data
                98      LOAD_CONST                      5: -2
                100     LOAD_CONST                      3: None
                102     BUILD_SLICE                     2
                104     BINARY_SUBSCR                   
                106     LOAD_CONST                      6: b'\x00\x00'
                108     COMPARE_OP                      2 (==)
                110     POP_JUMP_IF_FALSE               85 (to 170)
                112     LOAD_GLOBAL                     7: struct
                114     LOAD_METHOD                     8: unpack
                116     LOAD_GLOBAL                     9: structEndArchive
                118     LOAD_FAST                       2: data
                120     CALL_METHOD                     2
                122     STORE_FAST                      3: endrec
                124     LOAD_GLOBAL                     10: list
                126     LOAD_FAST                       3: endrec
                128     CALL_FUNCTION                   1
                130     STORE_FAST                      3: endrec
                132     LOAD_FAST                       3: endrec
                134     LOAD_METHOD                     11: append
                136     LOAD_CONST                      7: b''
                138     CALL_METHOD                     1
                140     POP_TOP                         
                142     LOAD_FAST                       3: endrec
                144     LOAD_METHOD                     11: append
                146     LOAD_FAST                       1: filesize
                148     LOAD_GLOBAL                     2: sizeEndCentDir
                150     BINARY_SUBTRACT                 
                152     CALL_METHOD                     1
                154     POP_TOP                         
                156     LOAD_GLOBAL                     12: _EndRecData64
                158     LOAD_FAST                       0: fpin
                160     LOAD_GLOBAL                     2: sizeEndCentDir
                162     UNARY_NEGATIVE                  
                164     LOAD_FAST                       3: endrec
                166     CALL_FUNCTION                   3
                168     RETURN_VALUE                    
                170     LOAD_GLOBAL                     13: max
                172     LOAD_FAST                       1: filesize
                174     LOAD_CONST                      8: 65536
                176     BINARY_SUBTRACT                 
                178     LOAD_GLOBAL                     2: sizeEndCentDir
                180     BINARY_SUBTRACT                 
                182     LOAD_CONST                      1: 0
                184     CALL_FUNCTION                   2
                186     STORE_FAST                      4: maxCommentStart
                188     LOAD_FAST                       0: fpin
                190     LOAD_METHOD                     0: seek
                192     LOAD_FAST                       4: maxCommentStart
                194     LOAD_CONST                      1: 0
                196     CALL_METHOD                     2
                198     POP_TOP                         
                200     LOAD_FAST                       0: fpin
                202     LOAD_METHOD                     4: read
                204     CALL_METHOD                     0
                206     STORE_FAST                      2: data
                208     LOAD_FAST                       2: data
                210     LOAD_METHOD                     14: rfind
                212     LOAD_GLOBAL                     6: stringEndArchive
                214     CALL_METHOD                     1
                216     STORE_FAST                      5: start
                218     LOAD_FAST                       5: start
                220     LOAD_CONST                      1: 0
                222     COMPARE_OP                      5 (>=)
                224     POP_JUMP_IF_FALSE               175 (to 350)
                226     LOAD_FAST                       2: data
                228     LOAD_FAST                       5: start
                230     LOAD_FAST                       5: start
                232     LOAD_GLOBAL                     2: sizeEndCentDir
                234     BINARY_ADD                      
                236     BUILD_SLICE                     2
                238     BINARY_SUBSCR                   
                240     STORE_FAST                      6: recData
                242     LOAD_GLOBAL                     5: len
                244     LOAD_FAST                       6: recData
                246     CALL_FUNCTION                   1
                248     LOAD_GLOBAL                     2: sizeEndCentDir
                250     COMPARE_OP                      3 (!=)
                252     POP_JUMP_IF_FALSE               129 (to 258)
                254     LOAD_CONST                      3: None
                256     RETURN_VALUE                    
                258     LOAD_GLOBAL                     10: list
                260     LOAD_GLOBAL                     7: struct
                262     LOAD_METHOD                     8: unpack
                264     LOAD_GLOBAL                     9: structEndArchive
                266     LOAD_FAST                       6: recData
                268     CALL_METHOD                     2
                270     CALL_FUNCTION                   1
                272     STORE_FAST                      3: endrec
                274     LOAD_FAST                       3: endrec
                276     LOAD_GLOBAL                     15: _ECD_COMMENT_SIZE
                278     BINARY_SUBSCR                   
                280     STORE_FAST                      7: commentSize
                282     LOAD_FAST                       2: data
                284     LOAD_FAST                       5: start
                286     LOAD_GLOBAL                     2: sizeEndCentDir
                288     BINARY_ADD                      
                290     LOAD_FAST                       5: start
                292     LOAD_GLOBAL                     2: sizeEndCentDir
                294     BINARY_ADD                      
                296     LOAD_FAST                       7: commentSize
                298     BINARY_ADD                      
                300     BUILD_SLICE                     2
                302     BINARY_SUBSCR                   
                304     STORE_FAST                      8: comment
                306     LOAD_FAST                       3: endrec
                308     LOAD_METHOD                     11: append
                310     LOAD_FAST                       8: comment
                312     CALL_METHOD                     1
                314     POP_TOP                         
                316     LOAD_FAST                       3: endrec
                318     LOAD_METHOD                     11: append
                320     LOAD_FAST                       4: maxCommentStart
                322     LOAD_FAST                       5: start
                324     BINARY_ADD                      
                326     CALL_METHOD                     1
                328     POP_TOP                         
                330     LOAD_GLOBAL                     12: _EndRecData64
                332     LOAD_FAST                       0: fpin
                334     LOAD_FAST                       4: maxCommentStart
                336     LOAD_FAST                       5: start
                338     BINARY_ADD                      
                340     LOAD_FAST                       1: filesize
                342     BINARY_SUBTRACT                 
                344     LOAD_FAST                       3: endrec
                346     CALL_FUNCTION                   3
                348     RETURN_VALUE                    
                350     LOAD_CONST                      3: None
                352     RETURN_VALUE                    
        '_EndRecData'
        [Code]
            File Name: zipfile.py
            Object Name: ZipInfo
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 5
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '__slots__'
                '__init__'
                '__repr__'
                'FileHeader'
                '_encodeFilenameFlags'
                '_decodeExtra'
                'classmethod'
                'from_file'
                'is_dir'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ZipInfo'
                'Class with attributes describing each file in the ZIP archive.'
                (
                    'orig_filename'
                    'filename'
                    'date_time'
                    'compress_type'
                    '_compresslevel'
                    'comment'
                    'extra'
                    'create_system'
                    'create_version'
                    'extract_version'
                    'reserved'
                    'flag_bits'
                    'volume'
                    'internal_attr'
                    'external_attr'
                    'header_offset'
                    'CRC'
                    'compress_size'
                    'file_size'
                    '_raw_time'
                    '_end_offset'
                )
                'NoName'
                (
                    1980
                    1
                    1
                    0
                    0
                    0
                )
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'orig_filename'
                        'find'
                        'chr'
                        'os'
                        'sep'
                        'replace'
                        'filename'
                        'date_time'
                        'ValueError'
                        'ZIP_STORED'
                        'compress_type'
                        '_compresslevel'
                        'comment'
                        'extra'
                        'sys'
                        'platform'
                        'create_system'
                        'DEFAULT_VERSION'
                        'create_version'
                        'extract_version'
                        'reserved'
                        'flag_bits'
                        'volume'
                        'internal_attr'
                        'external_attr'
                        'compress_size'
                        'file_size'
                        '_end_offset'
                    [Var Names]
                        'self'
                        'filename'
                        'date_time'
                        'null_byte'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        '/'
                        1980
                        'ZIP does not support timestamps before 1980'
                        b''
                        'win32'
                        3
                    [Disassembly]
                        0       LOAD_FAST                       1: filename
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: orig_filename
                        6       LOAD_FAST                       1: filename
                        8       LOAD_METHOD                     1: find
                        10      LOAD_GLOBAL                     2: chr
                        12      LOAD_CONST                      1: 0
                        14      CALL_FUNCTION                   1
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      3: null_byte
                        20      LOAD_FAST                       3: null_byte
                        22      LOAD_CONST                      1: 0
                        24      COMPARE_OP                      5 (>=)
                        26      POP_JUMP_IF_FALSE               20 (to 40)
                        28      LOAD_FAST                       1: filename
                        30      LOAD_CONST                      1: 0
                        32      LOAD_FAST                       3: null_byte
                        34      BUILD_SLICE                     2
                        36      BINARY_SUBSCR                   
                        38      STORE_FAST                      1: filename
                        40      LOAD_GLOBAL                     3: os
                        42      LOAD_ATTR                       4: sep
                        44      LOAD_CONST                      2: '/'
                        46      COMPARE_OP                      3 (!=)
                        48      POP_JUMP_IF_FALSE               37 (to 74)
                        50      LOAD_GLOBAL                     3: os
                        52      LOAD_ATTR                       4: sep
                        54      LOAD_FAST                       1: filename
                        56      CONTAINS_OP                     0 (in)
                        58      POP_JUMP_IF_FALSE               37 (to 74)
                        60      LOAD_FAST                       1: filename
                        62      LOAD_METHOD                     5: replace
                        64      LOAD_GLOBAL                     3: os
                        66      LOAD_ATTR                       4: sep
                        68      LOAD_CONST                      2: '/'
                        70      CALL_METHOD                     2
                        72      STORE_FAST                      1: filename
                        74      LOAD_FAST                       1: filename
                        76      LOAD_FAST                       0: self
                        78      STORE_ATTR                      6: filename
                        80      LOAD_FAST                       2: date_time
                        82      LOAD_FAST                       0: self
                        84      STORE_ATTR                      7: date_time
                        86      LOAD_FAST                       2: date_time
                        88      LOAD_CONST                      1: 0
                        90      BINARY_SUBSCR                   
                        92      LOAD_CONST                      3: 1980
                        94      COMPARE_OP                      0 (<)
                        96      POP_JUMP_IF_FALSE               53 (to 106)
                        98      LOAD_GLOBAL                     8: ValueError
                        100     LOAD_CONST                      4: 'ZIP does not support timestamps before 1980'
                        102     CALL_FUNCTION                   1
                        104     RAISE_VARARGS                   1
                        106     LOAD_GLOBAL                     9: ZIP_STORED
                        108     LOAD_FAST                       0: self
                        110     STORE_ATTR                      10: compress_type
                        112     LOAD_CONST                      0: None
                        114     LOAD_FAST                       0: self
                        116     STORE_ATTR                      11: _compresslevel
                        118     LOAD_CONST                      5: b''
                        120     LOAD_FAST                       0: self
                        122     STORE_ATTR                      12: comment
                        124     LOAD_CONST                      5: b''
                        126     LOAD_FAST                       0: self
                        128     STORE_ATTR                      13: extra
                        130     LOAD_GLOBAL                     14: sys
                        132     LOAD_ATTR                       15: platform
                        134     LOAD_CONST                      6: 'win32'
                        136     COMPARE_OP                      2 (==)
                        138     POP_JUMP_IF_FALSE               74 (to 148)
                        140     LOAD_CONST                      1: 0
                        142     LOAD_FAST                       0: self
                        144     STORE_ATTR                      16: create_system
                        146     JUMP_FORWARD                    3 (to 154)
                        148     LOAD_CONST                      7: 3
                        150     LOAD_FAST                       0: self
                        152     STORE_ATTR                      16: create_system
                        154     LOAD_GLOBAL                     17: DEFAULT_VERSION
                        156     LOAD_FAST                       0: self
                        158     STORE_ATTR                      18: create_version
                        160     LOAD_GLOBAL                     17: DEFAULT_VERSION
                        162     LOAD_FAST                       0: self
                        164     STORE_ATTR                      19: extract_version
                        166     LOAD_CONST                      1: 0
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      20: reserved
                        172     LOAD_CONST                      1: 0
                        174     LOAD_FAST                       0: self
                        176     STORE_ATTR                      21: flag_bits
                        178     LOAD_CONST                      1: 0
                        180     LOAD_FAST                       0: self
                        182     STORE_ATTR                      22: volume
                        184     LOAD_CONST                      1: 0
                        186     LOAD_FAST                       0: self
                        188     STORE_ATTR                      23: internal_attr
                        190     LOAD_CONST                      1: 0
                        192     LOAD_FAST                       0: self
                        194     STORE_ATTR                      24: external_attr
                        196     LOAD_CONST                      1: 0
                        198     LOAD_FAST                       0: self
                        200     STORE_ATTR                      25: compress_size
                        202     LOAD_CONST                      1: 0
                        204     LOAD_FAST                       0: self
                        206     STORE_ATTR                      26: file_size
                        208     LOAD_CONST                      0: None
                        210     LOAD_FAST                       0: self
                        212     STORE_ATTR                      27: _end_offset
                        214     LOAD_CONST                      0: None
                        216     RETURN_VALUE                    
                'ZipInfo.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__name__'
                        'filename'
                        'compress_type'
                        'ZIP_STORED'
                        'append'
                        'compressor_names'
                        'get'
                        'external_attr'
                        'stat'
                        'filemode'
                        'is_dir'
                        'file_size'
                        'compress_size'
                        'join'
                    [Var Names]
                        'self'
                        'result'
                        'hi'
                        'lo'
                        'isdir'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<%s filename=%r'
                        ' compress_type=%s'
                        16
                        65535
                        ' filemode=%r'
                        ' external_attr=%#x'
                        ' file_size=%r'
                        ' compress_size=%r'
                        '>'
                        ''
                    [Disassembly]
                        0       LOAD_CONST                      1: '<%s filename=%r'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __name__
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       2: filename
                        12      BUILD_TUPLE                     2
                        14      BINARY_MODULO                   
                        16      BUILD_LIST                      1
                        18      STORE_FAST                      1: result
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       3: compress_type
                        24      LOAD_GLOBAL                     4: ZIP_STORED
                        26      COMPARE_OP                      3 (!=)
                        28      POP_JUMP_IF_FALSE               28 (to 56)
                        30      LOAD_FAST                       1: result
                        32      LOAD_METHOD                     5: append
                        34      LOAD_CONST                      2: ' compress_type=%s'
                        36      LOAD_GLOBAL                     6: compressor_names
                        38      LOAD_METHOD                     7: get
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       3: compress_type
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       3: compress_type
                        48      CALL_METHOD                     2
                        50      BINARY_MODULO                   
                        52      CALL_METHOD                     1
                        54      POP_TOP                         
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       8: external_attr
                        60      LOAD_CONST                      3: 16
                        62      BINARY_RSHIFT                   
                        64      STORE_FAST                      2: hi
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       8: external_attr
                        70      LOAD_CONST                      4: 65535
                        72      BINARY_AND                      
                        74      STORE_FAST                      3: lo
                        76      LOAD_FAST                       2: hi
                        78      POP_JUMP_IF_FALSE               50 (to 100)
                        80      LOAD_FAST                       1: result
                        82      LOAD_METHOD                     5: append
                        84      LOAD_CONST                      5: ' filemode=%r'
                        86      LOAD_GLOBAL                     9: stat
                        88      LOAD_METHOD                     10: filemode
                        90      LOAD_FAST                       2: hi
                        92      CALL_METHOD                     1
                        94      BINARY_MODULO                   
                        96      CALL_METHOD                     1
                        98      POP_TOP                         
                        100     LOAD_FAST                       3: lo
                        102     POP_JUMP_IF_FALSE               59 (to 118)
                        104     LOAD_FAST                       1: result
                        106     LOAD_METHOD                     5: append
                        108     LOAD_CONST                      6: ' external_attr=%#x'
                        110     LOAD_FAST                       3: lo
                        112     BINARY_MODULO                   
                        114     CALL_METHOD                     1
                        116     POP_TOP                         
                        118     LOAD_FAST                       0: self
                        120     LOAD_METHOD                     11: is_dir
                        122     CALL_METHOD                     0
                        124     STORE_FAST                      4: isdir
                        126     LOAD_FAST                       4: isdir
                        128     POP_JUMP_IF_FALSE               68 (to 136)
                        130     LOAD_FAST                       0: self
                        132     LOAD_ATTR                       12: file_size
                        134     POP_JUMP_IF_FALSE               76 (to 152)
                        136     LOAD_FAST                       1: result
                        138     LOAD_METHOD                     5: append
                        140     LOAD_CONST                      7: ' file_size=%r'
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       12: file_size
                        146     BINARY_MODULO                   
                        148     CALL_METHOD                     1
                        150     POP_TOP                         
                        152     LOAD_FAST                       4: isdir
                        154     POP_JUMP_IF_FALSE               81 (to 162)
                        156     LOAD_FAST                       0: self
                        158     LOAD_ATTR                       13: compress_size
                        160     POP_JUMP_IF_FALSE               100 (to 200)
                        162     LOAD_FAST                       0: self
                        164     LOAD_ATTR                       3: compress_type
                        166     LOAD_GLOBAL                     4: ZIP_STORED
                        168     COMPARE_OP                      3 (!=)
                        170     POP_JUMP_IF_TRUE                92 (to 184)
                        172     LOAD_FAST                       0: self
                        174     LOAD_ATTR                       12: file_size
                        176     LOAD_FAST                       0: self
                        178     LOAD_ATTR                       13: compress_size
                        180     COMPARE_OP                      3 (!=)
                        182     POP_JUMP_IF_FALSE               100 (to 200)
                        184     LOAD_FAST                       1: result
                        186     LOAD_METHOD                     5: append
                        188     LOAD_CONST                      8: ' compress_size=%r'
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       13: compress_size
                        194     BINARY_MODULO                   
                        196     CALL_METHOD                     1
                        198     POP_TOP                         
                        200     LOAD_FAST                       1: result
                        202     LOAD_METHOD                     5: append
                        204     LOAD_CONST                      9: '>'
                        206     CALL_METHOD                     1
                        208     POP_TOP                         
                        210     LOAD_CONST                      10: ''
                        212     LOAD_METHOD                     14: join
                        214     LOAD_FAST                       1: result
                        216     CALL_METHOD                     1
                        218     RETURN_VALUE                    
                'ZipInfo.__repr__'
                None
                [Code]
                    File Name: zipfile.py
                    Object Name: FileHeader
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 14
                    Stack Size: 16
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'date_time'
                        'flag_bits'
                        'CRC'
                        'compress_size'
                        'file_size'
                        'extra'
                        'ZIP64_LIMIT'
                        'struct'
                        'pack'
                        'calcsize'
                        'LargeZipFile'
                        'ZIP64_VERSION'
                        'compress_type'
                        'ZIP_BZIP2'
                        'max'
                        'BZIP2_VERSION'
                        'ZIP_LZMA'
                        'LZMA_VERSION'
                        'extract_version'
                        'create_version'
                        '_encodeFilenameFlags'
                        'structFileHeader'
                        'stringFileHeader'
                        'reserved'
                        'len'
                    [Var Names]
                        'self'
                        'zip64'
                        'dt'
                        'dosdate'
                        'dostime'
                        'CRC'
                        'compress_size'
                        'file_size'
                        'extra'
                        'min_version'
                        'fmt'
                        'filename'
                        'flag_bits'
                        'header'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return the per-file header as a bytes object.'
                        0
                        1980
                        9
                        1
                        5
                        2
                        3
                        11
                        4
                        8
                        None
                        '<HHQQ'
                        'Filesize would require ZIP64 extensions'
                        0xFFFFFFFF
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: date_time
                        4       STORE_FAST                      2: dt
                        6       LOAD_FAST                       2: dt
                        8       LOAD_CONST                      1: 0
                        10      BINARY_SUBSCR                   
                        12      LOAD_CONST                      2: 1980
                        14      BINARY_SUBTRACT                 
                        16      LOAD_CONST                      3: 9
                        18      BINARY_LSHIFT                   
                        20      LOAD_FAST                       2: dt
                        22      LOAD_CONST                      4: 1
                        24      BINARY_SUBSCR                   
                        26      LOAD_CONST                      5: 5
                        28      BINARY_LSHIFT                   
                        30      BINARY_OR                       
                        32      LOAD_FAST                       2: dt
                        34      LOAD_CONST                      6: 2
                        36      BINARY_SUBSCR                   
                        38      BINARY_OR                       
                        40      STORE_FAST                      3: dosdate
                        42      LOAD_FAST                       2: dt
                        44      LOAD_CONST                      7: 3
                        46      BINARY_SUBSCR                   
                        48      LOAD_CONST                      8: 11
                        50      BINARY_LSHIFT                   
                        52      LOAD_FAST                       2: dt
                        54      LOAD_CONST                      9: 4
                        56      BINARY_SUBSCR                   
                        58      LOAD_CONST                      5: 5
                        60      BINARY_LSHIFT                   
                        62      BINARY_OR                       
                        64      LOAD_FAST                       2: dt
                        66      LOAD_CONST                      5: 5
                        68      BINARY_SUBSCR                   
                        70      LOAD_CONST                      6: 2
                        72      BINARY_FLOOR_DIVIDE             
                        74      BINARY_OR                       
                        76      STORE_FAST                      4: dostime
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       1: flag_bits
                        82      LOAD_CONST                      10: 8
                        84      BINARY_AND                      
                        86      POP_JUMP_IF_FALSE               51 (to 102)
                        88      LOAD_CONST                      1: 0
                        90      DUP_TOP                         
                        92      STORE_FAST                      5: CRC
                        94      DUP_TOP                         
                        96      STORE_FAST                      6: compress_size
                        98      STORE_FAST                      7: file_size
                        100     JUMP_FORWARD                    9 (to 120)
                        102     LOAD_FAST                       0: self
                        104     LOAD_ATTR                       2: CRC
                        106     STORE_FAST                      5: CRC
                        108     LOAD_FAST                       0: self
                        110     LOAD_ATTR                       3: compress_size
                        112     STORE_FAST                      6: compress_size
                        114     LOAD_FAST                       0: self
                        116     LOAD_ATTR                       4: file_size
                        118     STORE_FAST                      7: file_size
                        120     LOAD_FAST                       0: self
                        122     LOAD_ATTR                       5: extra
                        124     STORE_FAST                      8: extra
                        126     LOAD_CONST                      1: 0
                        128     STORE_FAST                      9: min_version
                        130     LOAD_FAST                       1: zip64
                        132     LOAD_CONST                      11: None
                        134     IS_OP                           0 (is)
                        136     POP_JUMP_IF_FALSE               77 (to 154)
                        138     LOAD_FAST                       7: file_size
                        140     LOAD_GLOBAL                     6: ZIP64_LIMIT
                        142     COMPARE_OP                      4 (>)
                        144     JUMP_IF_TRUE_OR_POP             76 (to 152)
                        146     LOAD_FAST                       6: compress_size
                        148     LOAD_GLOBAL                     6: ZIP64_LIMIT
                        150     COMPARE_OP                      4 (>)
                        152     STORE_FAST                      1: zip64
                        154     LOAD_FAST                       1: zip64
                        156     POP_JUMP_IF_FALSE               97 (to 194)
                        158     LOAD_CONST                      12: '<HHQQ'
                        160     STORE_FAST                      10: fmt
                        162     LOAD_FAST                       8: extra
                        164     LOAD_GLOBAL                     7: struct
                        166     LOAD_METHOD                     8: pack
                        168     LOAD_FAST                       10: fmt
                        170     LOAD_CONST                      4: 1
                        172     LOAD_GLOBAL                     7: struct
                        174     LOAD_METHOD                     9: calcsize
                        176     LOAD_FAST                       10: fmt
                        178     CALL_METHOD                     1
                        180     LOAD_CONST                      9: 4
                        182     BINARY_SUBTRACT                 
                        184     LOAD_FAST                       7: file_size
                        186     LOAD_FAST                       6: compress_size
                        188     CALL_METHOD                     5
                        190     BINARY_ADD                      
                        192     STORE_FAST                      8: extra
                        194     LOAD_FAST                       7: file_size
                        196     LOAD_GLOBAL                     6: ZIP64_LIMIT
                        198     COMPARE_OP                      4 (>)
                        200     POP_JUMP_IF_TRUE                105 (to 210)
                        202     LOAD_FAST                       6: compress_size
                        204     LOAD_GLOBAL                     6: ZIP64_LIMIT
                        206     COMPARE_OP                      4 (>)
                        208     POP_JUMP_IF_FALSE               117 (to 234)
                        210     LOAD_FAST                       1: zip64
                        212     POP_JUMP_IF_TRUE                111 (to 222)
                        214     LOAD_GLOBAL                     10: LargeZipFile
                        216     LOAD_CONST                      13: 'Filesize would require ZIP64 extensions'
                        218     CALL_FUNCTION                   1
                        220     RAISE_VARARGS                   1
                        222     LOAD_CONST                      14: 0xFFFFFFFF
                        224     STORE_FAST                      7: file_size
                        226     LOAD_CONST                      14: 0xFFFFFFFF
                        228     STORE_FAST                      6: compress_size
                        230     LOAD_GLOBAL                     11: ZIP64_VERSION
                        232     STORE_FAST                      9: min_version
                        234     LOAD_FAST                       0: self
                        236     LOAD_ATTR                       12: compress_type
                        238     LOAD_GLOBAL                     13: ZIP_BZIP2
                        240     COMPARE_OP                      2 (==)
                        242     POP_JUMP_IF_FALSE               128 (to 256)
                        244     LOAD_GLOBAL                     14: max
                        246     LOAD_GLOBAL                     15: BZIP2_VERSION
                        248     LOAD_FAST                       9: min_version
                        250     CALL_FUNCTION                   2
                        252     STORE_FAST                      9: min_version
                        254     JUMP_FORWARD                    10 (to 276)
                        256     LOAD_FAST                       0: self
                        258     LOAD_ATTR                       12: compress_type
                        260     LOAD_GLOBAL                     16: ZIP_LZMA
                        262     COMPARE_OP                      2 (==)
                        264     POP_JUMP_IF_FALSE               138 (to 276)
                        266     LOAD_GLOBAL                     14: max
                        268     LOAD_GLOBAL                     17: LZMA_VERSION
                        270     LOAD_FAST                       9: min_version
                        272     CALL_FUNCTION                   2
                        274     STORE_FAST                      9: min_version
                        276     LOAD_GLOBAL                     14: max
                        278     LOAD_FAST                       9: min_version
                        280     LOAD_FAST                       0: self
                        282     LOAD_ATTR                       18: extract_version
                        284     CALL_FUNCTION                   2
                        286     LOAD_FAST                       0: self
                        288     STORE_ATTR                      18: extract_version
                        290     LOAD_GLOBAL                     14: max
                        292     LOAD_FAST                       9: min_version
                        294     LOAD_FAST                       0: self
                        296     LOAD_ATTR                       19: create_version
                        298     CALL_FUNCTION                   2
                        300     LOAD_FAST                       0: self
                        302     STORE_ATTR                      19: create_version
                        304     LOAD_FAST                       0: self
                        306     LOAD_METHOD                     20: _encodeFilenameFlags
                        308     CALL_METHOD                     0
                        310     UNPACK_SEQUENCE                 2
                        312     STORE_FAST                      11: filename
                        314     STORE_FAST                      12: flag_bits
                        316     LOAD_GLOBAL                     7: struct
                        318     LOAD_METHOD                     8: pack
                        320     LOAD_GLOBAL                     21: structFileHeader
                        322     LOAD_GLOBAL                     22: stringFileHeader
                        324     LOAD_FAST                       0: self
                        326     LOAD_ATTR                       18: extract_version
                        328     LOAD_FAST                       0: self
                        330     LOAD_ATTR                       23: reserved
                        332     LOAD_FAST                       12: flag_bits
                        334     LOAD_FAST                       0: self
                        336     LOAD_ATTR                       12: compress_type
                        338     LOAD_FAST                       4: dostime
                        340     LOAD_FAST                       3: dosdate
                        342     LOAD_FAST                       5: CRC
                        344     LOAD_FAST                       6: compress_size
                        346     LOAD_FAST                       7: file_size
                        348     LOAD_GLOBAL                     24: len
                        350     LOAD_FAST                       11: filename
                        352     CALL_FUNCTION                   1
                        354     LOAD_GLOBAL                     24: len
                        356     LOAD_FAST                       8: extra
                        358     CALL_FUNCTION                   1
                        360     CALL_METHOD                     13
                        362     STORE_FAST                      13: header
                        364     LOAD_FAST                       13: header
                        366     LOAD_FAST                       11: filename
                        368     BINARY_ADD                      
                        370     LOAD_FAST                       8: extra
                        372     BINARY_ADD                      
                        374     RETURN_VALUE                    
                'ZipInfo.FileHeader'
                [Code]
                    File Name: zipfile.py
                    Object Name: _encodeFilenameFlags
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filename'
                        'encode'
                        'flag_bits'
                        'UnicodeEncodeError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'ascii'
                        'utf-8'
                        2048
                    [Disassembly]
                        0       SETUP_FINALLY                   10 (to 22)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: filename
                        6       LOAD_METHOD                     1: encode
                        8       LOAD_CONST                      1: 'ascii'
                        10      CALL_METHOD                     1
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       2: flag_bits
                        16      BUILD_TUPLE                     2
                        18      POP_BLOCK                       
                        20      RETURN_VALUE                    
                        22      DUP_TOP                         
                        24      LOAD_GLOBAL                     3: UnicodeEncodeError
                        26      JUMP_IF_NOT_EXC_MATCH           30 (to 60)
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      POP_TOP                         
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       0: filename
                        38      LOAD_METHOD                     1: encode
                        40      LOAD_CONST                      2: 'utf-8'
                        42      CALL_METHOD                     1
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       2: flag_bits
                        48      LOAD_CONST                      3: 2048
                        50      BINARY_OR                       
                        52      BUILD_TUPLE                     2
                        54      ROT_FOUR                        
                        56      POP_EXCEPT                      
                        58      RETURN_VALUE                    
                        60      RERAISE                         0
                'ZipInfo._encodeFilenameFlags'
                [Code]
                    File Name: zipfile.py
                    Object Name: _decodeExtra
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'extra'
                        'struct'
                        'unpack'
                        'len'
                        'BadZipFile'
                        'file_size'
                        'compress_size'
                        'header_offset'
                        'error'
                    [Var Names]
                        'self'
                        'extra'
                        'unpack'
                        'tp'
                        'ln'
                        'data'
                        'field'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        4
                        '<HH'
                        'Corrupt extra field %04x (size=%d)'
                        1
                        (
                            0xFFFFFFFFFFFFFFFF
                            0xFFFFFFFF
                        )
                        'File size'
                        '<Q'
                        8
                        0xFFFFFFFF
                        'Compress size'
                        'Header offset'
                        'Corrupt zip64 extra field. '
                        ' not found.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: extra
                        4       STORE_FAST                      1: extra
                        6       LOAD_GLOBAL                     1: struct
                        8       LOAD_ATTR                       2: unpack
                        10      STORE_FAST                      2: unpack
                        12      LOAD_GLOBAL                     3: len
                        14      LOAD_FAST                       1: extra
                        16      CALL_FUNCTION                   1
                        18      LOAD_CONST                      1: 4
                        20      COMPARE_OP                      5 (>=)
                        22      POP_JUMP_IF_FALSE               153 (to 306)
                        24      LOAD_FAST                       2: unpack
                        26      LOAD_CONST                      2: '<HH'
                        28      LOAD_FAST                       1: extra
                        30      LOAD_CONST                      0: None
                        32      LOAD_CONST                      1: 4
                        34      BUILD_SLICE                     2
                        36      BINARY_SUBSCR                   
                        38      CALL_FUNCTION                   2
                        40      UNPACK_SEQUENCE                 2
                        42      STORE_FAST                      3: tp
                        44      STORE_FAST                      4: ln
                        46      LOAD_FAST                       4: ln
                        48      LOAD_CONST                      1: 4
                        50      BINARY_ADD                      
                        52      LOAD_GLOBAL                     3: len
                        54      LOAD_FAST                       1: extra
                        56      CALL_FUNCTION                   1
                        58      COMPARE_OP                      4 (>)
                        60      POP_JUMP_IF_FALSE               39 (to 78)
                        62      LOAD_GLOBAL                     4: BadZipFile
                        64      LOAD_CONST                      3: 'Corrupt extra field %04x (size=%d)'
                        66      LOAD_FAST                       3: tp
                        68      LOAD_FAST                       4: ln
                        70      BUILD_TUPLE                     2
                        72      BINARY_MODULO                   
                        74      CALL_FUNCTION                   1
                        76      RAISE_VARARGS                   1
                        78      LOAD_FAST                       3: tp
                        80      LOAD_CONST                      4: 1
                        82      COMPARE_OP                      2 (==)
                        84      POP_JUMP_IF_FALSE               137 (to 274)
                        86      LOAD_FAST                       1: extra
                        88      LOAD_CONST                      1: 4
                        90      LOAD_FAST                       4: ln
                        92      LOAD_CONST                      1: 4
                        94      BINARY_ADD                      
                        96      BUILD_SLICE                     2
                        98      BINARY_SUBSCR                   
                        100     STORE_FAST                      5: data
                        102     SETUP_FINALLY                   68 (to 240)
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       5: file_size
                        108     LOAD_CONST                      5: (0xFFFFFFFFFFFFFFFF, 0xFFFFFFFF)
                        110     CONTAINS_OP                     0 (in)
                        112     POP_JUMP_IF_FALSE               76 (to 152)
                        114     LOAD_CONST                      6: 'File size'
                        116     STORE_FAST                      6: field
                        118     LOAD_FAST                       2: unpack
                        120     LOAD_CONST                      7: '<Q'
                        122     LOAD_FAST                       5: data
                        124     LOAD_CONST                      0: None
                        126     LOAD_CONST                      8: 8
                        128     BUILD_SLICE                     2
                        130     BINARY_SUBSCR                   
                        132     CALL_FUNCTION                   2
                        134     UNPACK_SEQUENCE                 1
                        136     LOAD_FAST                       0: self
                        138     STORE_ATTR                      5: file_size
                        140     LOAD_FAST                       5: data
                        142     LOAD_CONST                      8: 8
                        144     LOAD_CONST                      0: None
                        146     BUILD_SLICE                     2
                        148     BINARY_SUBSCR                   
                        150     STORE_FAST                      5: data
                        152     LOAD_FAST                       0: self
                        154     LOAD_ATTR                       6: compress_size
                        156     LOAD_CONST                      9: 0xFFFFFFFF
                        158     COMPARE_OP                      2 (==)
                        160     POP_JUMP_IF_FALSE               100 (to 200)
                        162     LOAD_CONST                      10: 'Compress size'
                        164     STORE_FAST                      6: field
                        166     LOAD_FAST                       2: unpack
                        168     LOAD_CONST                      7: '<Q'
                        170     LOAD_FAST                       5: data
                        172     LOAD_CONST                      0: None
                        174     LOAD_CONST                      8: 8
                        176     BUILD_SLICE                     2
                        178     BINARY_SUBSCR                   
                        180     CALL_FUNCTION                   2
                        182     UNPACK_SEQUENCE                 1
                        184     LOAD_FAST                       0: self
                        186     STORE_ATTR                      6: compress_size
                        188     LOAD_FAST                       5: data
                        190     LOAD_CONST                      8: 8
                        192     LOAD_CONST                      0: None
                        194     BUILD_SLICE                     2
                        196     BINARY_SUBSCR                   
                        198     STORE_FAST                      5: data
                        200     LOAD_FAST                       0: self
                        202     LOAD_ATTR                       7: header_offset
                        204     LOAD_CONST                      9: 0xFFFFFFFF
                        206     COMPARE_OP                      2 (==)
                        208     POP_JUMP_IF_FALSE               118 (to 236)
                        210     LOAD_CONST                      11: 'Header offset'
                        212     STORE_FAST                      6: field
                        214     LOAD_FAST                       2: unpack
                        216     LOAD_CONST                      7: '<Q'
                        218     LOAD_FAST                       5: data
                        220     LOAD_CONST                      0: None
                        222     LOAD_CONST                      8: 8
                        224     BUILD_SLICE                     2
                        226     BINARY_SUBSCR                   
                        228     CALL_FUNCTION                   2
                        230     UNPACK_SEQUENCE                 1
                        232     LOAD_FAST                       0: self
                        234     STORE_ATTR                      7: header_offset
                        236     POP_BLOCK                       
                        238     JUMP_FORWARD                    17 (to 274)
                        240     DUP_TOP                         
                        242     LOAD_GLOBAL                     1: struct
                        244     LOAD_ATTR                       8: error
                        246     JUMP_IF_NOT_EXC_MATCH           136 (to 272)
                        248     POP_TOP                         
                        250     POP_TOP                         
                        252     POP_TOP                         
                        254     LOAD_GLOBAL                     4: BadZipFile
                        256     LOAD_CONST                      12: 'Corrupt zip64 extra field. '
                        258     LOAD_FAST                       6: field
                        260     FORMAT_VALUE                    0 (FVC_NONE)
                        262     LOAD_CONST                      13: ' not found.'
                        264     BUILD_STRING                    3
                        266     CALL_FUNCTION                   1
                        268     LOAD_CONST                      0: None
                        270     RAISE_VARARGS                   2
                        272     RERAISE                         0
                        274     LOAD_FAST                       1: extra
                        276     LOAD_FAST                       4: ln
                        278     LOAD_CONST                      1: 4
                        280     BINARY_ADD                      
                        282     LOAD_CONST                      0: None
                        284     BUILD_SLICE                     2
                        286     BINARY_SUBSCR                   
                        288     STORE_FAST                      1: extra
                        290     LOAD_GLOBAL                     3: len
                        292     LOAD_FAST                       1: extra
                        294     CALL_FUNCTION                   1
                        296     LOAD_CONST                      1: 4
                        298     COMPARE_OP                      5 (>=)
                        300     POP_JUMP_IF_TRUE                12 (to 24)
                        302     LOAD_CONST                      0: None
                        304     RETURN_VALUE                    
                        306     LOAD_CONST                      0: None
                        308     RETURN_VALUE                    
                'ZipInfo._decodeExtra'
                True
                (
                    'strict_timestamps'
                )
                [Code]
                    File Name: zipfile.py
                    Object Name: from_file
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 9
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'os'
                        'PathLike'
                        'fspath'
                        'stat'
                        'S_ISDIR'
                        'st_mode'
                        'time'
                        'localtime'
                        'st_mtime'
                        'path'
                        'normpath'
                        'splitdrive'
                        'sep'
                        'altsep'
                        'external_attr'
                        'file_size'
                        'st_size'
                    [Var Names]
                        'cls'
                        'filename'
                        'arcname'
                        'strict_timestamps'
                        'st'
                        'isdir'
                        'mtime'
                        'date_time'
                        'zinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Construct an appropriate ZipInfo for a file on the filesystem.\n\n        filename should be the path to a file or directory on the filesystem.\n\n        arcname is the name which it will have within the archive (by default,\n        this will be the same as filename, but without a drive letter and with\n        leading path separators removed).\n        '
                        0
                        6
                        1980
                        (
                            1980
                            1
                            1
                            0
                            0
                            0
                        )
                        2107
                        (
                            2107
                            12
                            31
                            23
                            59
                            59
                        )
                        None
                        1
                        '/'
                        65535
                        16
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: filename
                        4       LOAD_GLOBAL                     1: os
                        6       LOAD_ATTR                       2: PathLike
                        8       CALL_FUNCTION                   2
                        10      POP_JUMP_IF_FALSE               11 (to 22)
                        12      LOAD_GLOBAL                     1: os
                        14      LOAD_METHOD                     3: fspath
                        16      LOAD_FAST                       1: filename
                        18      CALL_METHOD                     1
                        20      STORE_FAST                      1: filename
                        22      LOAD_GLOBAL                     1: os
                        24      LOAD_METHOD                     4: stat
                        26      LOAD_FAST                       1: filename
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      4: st
                        32      LOAD_GLOBAL                     4: stat
                        34      LOAD_METHOD                     5: S_ISDIR
                        36      LOAD_FAST                       4: st
                        38      LOAD_ATTR                       6: st_mode
                        40      CALL_METHOD                     1
                        42      STORE_FAST                      5: isdir
                        44      LOAD_GLOBAL                     7: time
                        46      LOAD_METHOD                     8: localtime
                        48      LOAD_FAST                       4: st
                        50      LOAD_ATTR                       9: st_mtime
                        52      CALL_METHOD                     1
                        54      STORE_FAST                      6: mtime
                        56      LOAD_FAST                       6: mtime
                        58      LOAD_CONST                      1: 0
                        60      LOAD_CONST                      2: 6
                        62      BUILD_SLICE                     2
                        64      BINARY_SUBSCR                   
                        66      STORE_FAST                      7: date_time
                        68      LOAD_FAST                       3: strict_timestamps
                        70      POP_JUMP_IF_TRUE                45 (to 90)
                        72      LOAD_FAST                       7: date_time
                        74      LOAD_CONST                      1: 0
                        76      BINARY_SUBSCR                   
                        78      LOAD_CONST                      3: 1980
                        80      COMPARE_OP                      0 (<)
                        82      POP_JUMP_IF_FALSE               45 (to 90)
                        84      LOAD_CONST                      4: (1980, 1, 1, 0, 0, 0)
                        86      STORE_FAST                      7: date_time
                        88      JUMP_FORWARD                    10 (to 110)
                        90      LOAD_FAST                       3: strict_timestamps
                        92      POP_JUMP_IF_TRUE                55 (to 110)
                        94      LOAD_FAST                       7: date_time
                        96      LOAD_CONST                      1: 0
                        98      BINARY_SUBSCR                   
                        100     LOAD_CONST                      5: 2107
                        102     COMPARE_OP                      4 (>)
                        104     POP_JUMP_IF_FALSE               55 (to 110)
                        106     LOAD_CONST                      6: (2107, 12, 31, 23, 59, 59)
                        108     STORE_FAST                      7: date_time
                        110     LOAD_FAST                       2: arcname
                        112     LOAD_CONST                      7: None
                        114     IS_OP                           0 (is)
                        116     POP_JUMP_IF_FALSE               61 (to 122)
                        118     LOAD_FAST                       1: filename
                        120     STORE_FAST                      2: arcname
                        122     LOAD_GLOBAL                     1: os
                        124     LOAD_ATTR                       10: path
                        126     LOAD_METHOD                     11: normpath
                        128     LOAD_GLOBAL                     1: os
                        130     LOAD_ATTR                       10: path
                        132     LOAD_METHOD                     12: splitdrive
                        134     LOAD_FAST                       2: arcname
                        136     CALL_METHOD                     1
                        138     LOAD_CONST                      8: 1
                        140     BINARY_SUBSCR                   
                        142     CALL_METHOD                     1
                        144     STORE_FAST                      2: arcname
                        146     LOAD_FAST                       2: arcname
                        148     LOAD_CONST                      1: 0
                        150     BINARY_SUBSCR                   
                        152     LOAD_GLOBAL                     1: os
                        154     LOAD_ATTR                       13: sep
                        156     LOAD_GLOBAL                     1: os
                        158     LOAD_ATTR                       14: altsep
                        160     BUILD_TUPLE                     2
                        162     CONTAINS_OP                     0 (in)
                        164     POP_JUMP_IF_FALSE               99 (to 198)
                        166     LOAD_FAST                       2: arcname
                        168     LOAD_CONST                      8: 1
                        170     LOAD_CONST                      7: None
                        172     BUILD_SLICE                     2
                        174     BINARY_SUBSCR                   
                        176     STORE_FAST                      2: arcname
                        178     LOAD_FAST                       2: arcname
                        180     LOAD_CONST                      1: 0
                        182     BINARY_SUBSCR                   
                        184     LOAD_GLOBAL                     1: os
                        186     LOAD_ATTR                       13: sep
                        188     LOAD_GLOBAL                     1: os
                        190     LOAD_ATTR                       14: altsep
                        192     BUILD_TUPLE                     2
                        194     CONTAINS_OP                     0 (in)
                        196     POP_JUMP_IF_TRUE                83 (to 166)
                        198     LOAD_FAST                       5: isdir
                        200     POP_JUMP_IF_FALSE               105 (to 210)
                        202     LOAD_FAST                       2: arcname
                        204     LOAD_CONST                      9: '/'
                        206     INPLACE_ADD                     
                        208     STORE_FAST                      2: arcname
                        210     LOAD_FAST                       0: cls
                        212     LOAD_FAST                       2: arcname
                        214     LOAD_FAST                       7: date_time
                        216     CALL_FUNCTION                   2
                        218     STORE_FAST                      8: zinfo
                        220     LOAD_FAST                       4: st
                        222     LOAD_ATTR                       6: st_mode
                        224     LOAD_CONST                      10: 65535
                        226     BINARY_AND                      
                        228     LOAD_CONST                      11: 16
                        230     BINARY_LSHIFT                   
                        232     LOAD_FAST                       8: zinfo
                        234     STORE_ATTR                      15: external_attr
                        236     LOAD_FAST                       5: isdir
                        238     POP_JUMP_IF_FALSE               132 (to 264)
                        240     LOAD_CONST                      1: 0
                        242     LOAD_FAST                       8: zinfo
                        244     STORE_ATTR                      16: file_size
                        246     LOAD_FAST                       8: zinfo
                        248     DUP_TOP                         
                        250     LOAD_ATTR                       15: external_attr
                        252     LOAD_CONST                      11: 16
                        254     INPLACE_OR                      
                        256     ROT_TWO                         
                        258     STORE_ATTR                      15: external_attr
                        260     LOAD_FAST                       8: zinfo
                        262     RETURN_VALUE                    
                        264     LOAD_FAST                       4: st
                        266     LOAD_ATTR                       17: st_size
                        268     LOAD_FAST                       8: zinfo
                        270     STORE_ATTR                      16: file_size
                        272     LOAD_FAST                       8: zinfo
                        274     RETURN_VALUE                    
                'ZipInfo.from_file'
                [Code]
                    File Name: zipfile.py
                    Object Name: is_dir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filename'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return True if this archive member is a directory.'
                        -1
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: filename
                        4       LOAD_CONST                      1: -1
                        6       BINARY_SUBSCR                   
                        8       LOAD_CONST                      2: '/'
                        10      COMPARE_OP                      2 (==)
                        12      RETURN_VALUE                    
                'ZipInfo.is_dir'
                (
                    'NoName'
                    (
                        1980
                        1
                        1
                        0
                        0
                        0
                    )
                )
                (
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ZipInfo'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Class with attributes describing each file in the ZIP archive.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('orig_filename', 'filename', 'date_time', 'compress_type', '_compresslevel', 'comment', 'extra', 'create_system', 'create_version', 'extract_version', 'reserved', 'flag_bits', 'volume', 'internal_attr', 'external_attr', 'header_offset', 'CRC', 'compress_size', 'file_size', '_raw_time', '_end_offset')
                14      STORE_NAME                      4: __slots__
                16      LOAD_CONST                      22: ('NoName', (1980, 1, 1, 0, 0, 0))
                18      LOAD_CONST                      5: <CODE> __init__
                20      LOAD_CONST                      6: 'ZipInfo.__init__'
                22      MAKE_FUNCTION                   1
                24      STORE_NAME                      5: __init__
                26      LOAD_CONST                      7: <CODE> __repr__
                28      LOAD_CONST                      8: 'ZipInfo.__repr__'
                30      MAKE_FUNCTION                   0
                32      STORE_NAME                      6: __repr__
                34      LOAD_CONST                      23: (None,)
                36      LOAD_CONST                      10: <CODE> FileHeader
                38      LOAD_CONST                      11: 'ZipInfo.FileHeader'
                40      MAKE_FUNCTION                   1
                42      STORE_NAME                      7: FileHeader
                44      LOAD_CONST                      12: <CODE> _encodeFilenameFlags
                46      LOAD_CONST                      13: 'ZipInfo._encodeFilenameFlags'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      8: _encodeFilenameFlags
                52      LOAD_CONST                      14: <CODE> _decodeExtra
                54      LOAD_CONST                      15: 'ZipInfo._decodeExtra'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      9: _decodeExtra
                60      LOAD_NAME                       10: classmethod
                62      LOAD_CONST                      23: (None,)
                64      LOAD_CONST                      16: True
                66      LOAD_CONST                      17: ('strict_timestamps',)
                68      BUILD_CONST_KEY_MAP             1
                70      LOAD_CONST                      18: <CODE> from_file
                72      LOAD_CONST                      19: 'ZipInfo.from_file'
                74      MAKE_FUNCTION                   3
                76      CALL_FUNCTION                   1
                78      STORE_NAME                      11: from_file
                80      LOAD_CONST                      20: <CODE> is_dir
                82      LOAD_CONST                      21: 'ZipInfo.is_dir'
                84      MAKE_FUNCTION                   0
                86      STORE_NAME                      12: is_dir
                88      LOAD_CONST                      9: None
                90      RETURN_VALUE                    
        'ZipInfo'
        [Code]
            File Name: zipfile.py
            Object Name: _gen_crc
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'range'
            [Var Names]
                'crc'
                'j'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                8
                1
                0xEDB88320
            [Disassembly]
                0       LOAD_GLOBAL                     0: range
                2       LOAD_CONST                      1: 8
                4       CALL_FUNCTION                   1
                6       GET_ITER                        
                8       FOR_ITER                        17 (to 44)
                10      STORE_FAST                      1: j
                12      LOAD_FAST                       0: crc
                14      LOAD_CONST                      2: 1
                16      BINARY_AND                      
                18      POP_JUMP_IF_FALSE               17 (to 34)
                20      LOAD_FAST                       0: crc
                22      LOAD_CONST                      2: 1
                24      BINARY_RSHIFT                   
                26      LOAD_CONST                      3: 0xEDB88320
                28      BINARY_XOR                      
                30      STORE_FAST                      0: crc
                32      JUMP_ABSOLUTE                   4 (to 8)
                34      LOAD_FAST                       0: crc
                36      LOAD_CONST                      2: 1
                38      INPLACE_RSHIFT                  
                40      STORE_FAST                      0: crc
                42      JUMP_ABSOLUTE                   4 (to 8)
                44      LOAD_FAST                       0: crc
                46      RETURN_VALUE                    
        '_gen_crc'
        [Code]
            File Name: zipfile.py
            Object Name: _ZipDecrypter
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 5
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                '_crctable'
                'list'
                'map'
                '_gen_crc'
                'range'
            [Var Names]
                'pwd'
                'p'
                'decrypter'
            [Free Vars]
            [Cell Vars]
                'crc32'
                'crctable'
                'key0'
                'key1'
                'key2'
                'update_keys'
            [Constants]
                None
                305419896
                591751049
                878082192
                256
                [Code]
                    File Name: zipfile.py
                    Object Name: crc32
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                    [Var Names]
                        'ch'
                        'crc'
                    [Free Vars]
                        'crctable'
                    [Cell Vars]
                    [Constants]
                        'Compute the CRC32 primitive on one byte.'
                        8
                        255
                    [Disassembly]
                        0       LOAD_FAST                       1: crc
                        2       LOAD_CONST                      1: 8
                        4       BINARY_RSHIFT                   
                        6       LOAD_DEREF                      0: crctable
                        8       LOAD_FAST                       1: crc
                        10      LOAD_FAST                       0: ch
                        12      BINARY_XOR                      
                        14      LOAD_CONST                      2: 255
                        16      BINARY_AND                      
                        18      BINARY_SUBSCR                   
                        20      BINARY_XOR                      
                        22      RETURN_VALUE                    
                '_ZipDecrypter.<locals>.crc32'
                [Code]
                    File Name: zipfile.py
                    Object Name: update_keys
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                    [Var Names]
                        'c'
                    [Free Vars]
                        'crc32'
                        'key0'
                        'key1'
                        'key2'
                    [Cell Vars]
                    [Constants]
                        None
                        255
                        0xFFFFFFFF
                        134775813
                        1
                        24
                    [Disassembly]
                        0       LOAD_DEREF                      0: crc32
                        2       LOAD_FAST                       0: c
                        4       LOAD_DEREF                      1: key0
                        6       CALL_FUNCTION                   2
                        8       STORE_DEREF                     1: key0
                        10      LOAD_DEREF                      2: key1
                        12      LOAD_DEREF                      1: key0
                        14      LOAD_CONST                      1: 255
                        16      BINARY_AND                      
                        18      BINARY_ADD                      
                        20      LOAD_CONST                      2: 0xFFFFFFFF
                        22      BINARY_AND                      
                        24      STORE_DEREF                     2: key1
                        26      LOAD_DEREF                      2: key1
                        28      LOAD_CONST                      3: 134775813
                        30      BINARY_MULTIPLY                 
                        32      LOAD_CONST                      4: 1
                        34      BINARY_ADD                      
                        36      LOAD_CONST                      2: 0xFFFFFFFF
                        38      BINARY_AND                      
                        40      STORE_DEREF                     2: key1
                        42      LOAD_DEREF                      0: crc32
                        44      LOAD_DEREF                      2: key1
                        46      LOAD_CONST                      5: 24
                        48      BINARY_RSHIFT                   
                        50      LOAD_DEREF                      3: key2
                        52      CALL_FUNCTION                   2
                        54      STORE_DEREF                     3: key2
                        56      LOAD_CONST                      0: None
                        58      RETURN_VALUE                    
                '_ZipDecrypter.<locals>.update_keys'
                [Code]
                    File Name: zipfile.py
                    Object Name: decrypter
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'bytearray'
                        'append'
                        'bytes'
                    [Var Names]
                        'data'
                        'result'
                        'append'
                        'c'
                        'k'
                    [Free Vars]
                        'key2'
                        'update_keys'
                    [Cell Vars]
                    [Constants]
                        'Decrypt a bytes object.'
                        2
                        1
                        8
                        255
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: bytearray
                        2       CALL_FUNCTION                   0
                        4       STORE_FAST                      1: result
                        6       LOAD_FAST                       1: result
                        8       LOAD_ATTR                       1: append
                        10      STORE_FAST                      2: append
                        12      LOAD_FAST                       0: data
                        14      GET_ITER                        
                        16      FOR_ITER                        26 (to 70)
                        18      STORE_FAST                      3: c
                        20      LOAD_DEREF                      0: key2
                        22      LOAD_CONST                      1: 2
                        24      BINARY_OR                       
                        26      STORE_FAST                      4: k
                        28      LOAD_FAST                       3: c
                        30      LOAD_FAST                       4: k
                        32      LOAD_FAST                       4: k
                        34      LOAD_CONST                      2: 1
                        36      BINARY_XOR                      
                        38      BINARY_MULTIPLY                 
                        40      LOAD_CONST                      3: 8
                        42      BINARY_RSHIFT                   
                        44      LOAD_CONST                      4: 255
                        46      BINARY_AND                      
                        48      INPLACE_XOR                     
                        50      STORE_FAST                      3: c
                        52      LOAD_DEREF                      1: update_keys
                        54      LOAD_FAST                       3: c
                        56      CALL_FUNCTION                   1
                        58      POP_TOP                         
                        60      LOAD_FAST                       2: append
                        62      LOAD_FAST                       3: c
                        64      CALL_FUNCTION                   1
                        66      POP_TOP                         
                        68      JUMP_ABSOLUTE                   8 (to 16)
                        70      LOAD_GLOBAL                     2: bytes
                        72      LOAD_FAST                       1: result
                        74      CALL_FUNCTION                   1
                        76      RETURN_VALUE                    
                '_ZipDecrypter.<locals>.decrypter'
            [Disassembly]
                0       LOAD_CONST                      1: 305419896
                2       STORE_DEREF                     2: key0
                4       LOAD_CONST                      2: 591751049
                6       STORE_DEREF                     3: key1
                8       LOAD_CONST                      3: 878082192
                10      STORE_DEREF                     4: key2
                12      LOAD_GLOBAL                     0: _crctable
                14      LOAD_CONST                      0: None
                16      IS_OP                           0 (is)
                18      POP_JUMP_IF_FALSE               19 (to 38)
                20      LOAD_GLOBAL                     1: list
                22      LOAD_GLOBAL                     2: map
                24      LOAD_GLOBAL                     3: _gen_crc
                26      LOAD_GLOBAL                     4: range
                28      LOAD_CONST                      4: 256
                30      CALL_FUNCTION                   1
                32      CALL_FUNCTION                   2
                34      CALL_FUNCTION                   1
                36      STORE_GLOBAL                    0: _crctable
                38      LOAD_GLOBAL                     0: _crctable
                40      STORE_DEREF                     1: crctable
                42      LOAD_CLOSURE                    1: crctable
                44      BUILD_TUPLE                     1
                46      LOAD_CONST                      5: <CODE> crc32
                48      LOAD_CONST                      6: '_ZipDecrypter.<locals>.crc32'
                50      MAKE_FUNCTION                   8
                52      STORE_DEREF                     0: crc32
                54      LOAD_CLOSURE                    0: crc32
                56      LOAD_CLOSURE                    2: key0
                58      LOAD_CLOSURE                    3: key1
                60      LOAD_CLOSURE                    4: key2
                62      BUILD_TUPLE                     4
                64      LOAD_CONST                      7: <CODE> update_keys
                66      LOAD_CONST                      8: '_ZipDecrypter.<locals>.update_keys'
                68      MAKE_FUNCTION                   8
                70      STORE_DEREF                     5: update_keys
                72      LOAD_FAST                       0: pwd
                74      GET_ITER                        
                76      FOR_ITER                        6 (to 90)
                78      STORE_FAST                      1: p
                80      LOAD_DEREF                      5: update_keys
                82      LOAD_FAST                       1: p
                84      CALL_FUNCTION                   1
                86      POP_TOP                         
                88      JUMP_ABSOLUTE                   38 (to 76)
                90      LOAD_CLOSURE                    4: key2
                92      LOAD_CLOSURE                    5: update_keys
                94      BUILD_TUPLE                     2
                96      LOAD_CONST                      9: <CODE> decrypter
                98      LOAD_CONST                      10: '_ZipDecrypter.<locals>.decrypter'
                100     MAKE_FUNCTION                   8
                102     STORE_FAST                      2: decrypter
                104     LOAD_FAST                       2: decrypter
                106     RETURN_VALUE                    
        '_ZipDecrypter'
        [Code]
            File Name: zipfile.py
            Object Name: LZMACompressor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                '_init'
                'compress'
                'flush'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'LZMACompressor'
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_comp'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _comp
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                'LZMACompressor.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: _init
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'lzma'
                        '_encode_filter_properties'
                        'FILTER_LZMA1'
                        'LZMACompressor'
                        'FORMAT_RAW'
                        '_decode_filter_properties'
                        '_comp'
                        'struct'
                        'pack'
                        'len'
                    [Var Names]
                        'self'
                        'props'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'id'
                        (
                            'filters'
                        )
                        '<BBH'
                        9
                        4
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: lzma
                        2       LOAD_METHOD                     1: _encode_filter_properties
                        4       LOAD_CONST                      1: 'id'
                        6       LOAD_GLOBAL                     0: lzma
                        8       LOAD_ATTR                       2: FILTER_LZMA1
                        10      BUILD_MAP                       1
                        12      CALL_METHOD                     1
                        14      STORE_FAST                      1: props
                        16      LOAD_GLOBAL                     0: lzma
                        18      LOAD_ATTR                       3: LZMACompressor
                        20      LOAD_GLOBAL                     0: lzma
                        22      LOAD_ATTR                       4: FORMAT_RAW
                        24      LOAD_GLOBAL                     0: lzma
                        26      LOAD_METHOD                     5: _decode_filter_properties
                        28      LOAD_GLOBAL                     0: lzma
                        30      LOAD_ATTR                       2: FILTER_LZMA1
                        32      LOAD_FAST                       1: props
                        34      CALL_METHOD                     2
                        36      BUILD_LIST                      1
                        38      LOAD_CONST                      2: ('filters',)
                        40      CALL_FUNCTION_KW                2
                        42      LOAD_FAST                       0: self
                        44      STORE_ATTR                      6: _comp
                        46      LOAD_GLOBAL                     7: struct
                        48      LOAD_METHOD                     8: pack
                        50      LOAD_CONST                      3: '<BBH'
                        52      LOAD_CONST                      4: 9
                        54      LOAD_CONST                      5: 4
                        56      LOAD_GLOBAL                     9: len
                        58      LOAD_FAST                       1: props
                        60      CALL_FUNCTION                   1
                        62      CALL_METHOD                     4
                        64      LOAD_FAST                       1: props
                        66      BINARY_ADD                      
                        68      RETURN_VALUE                    
                'LZMACompressor._init'
                [Code]
                    File Name: zipfile.py
                    Object Name: compress
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_comp'
                        '_init'
                        'compress'
                    [Var Names]
                        'self'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _comp
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               15 (to 30)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _init
                        14      CALL_METHOD                     0
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _comp
                        20      LOAD_METHOD                     2: compress
                        22      LOAD_FAST                       1: data
                        24      CALL_METHOD                     1
                        26      BINARY_ADD                      
                        28      RETURN_VALUE                    
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       0: _comp
                        34      LOAD_METHOD                     2: compress
                        36      LOAD_FAST                       1: data
                        38      CALL_METHOD                     1
                        40      RETURN_VALUE                    
                'LZMACompressor.compress'
                [Code]
                    File Name: zipfile.py
                    Object Name: flush
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_comp'
                        '_init'
                        'flush'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _comp
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               14 (to 28)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     1: _init
                        14      CALL_METHOD                     0
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _comp
                        20      LOAD_METHOD                     2: flush
                        22      CALL_METHOD                     0
                        24      BINARY_ADD                      
                        26      RETURN_VALUE                    
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       0: _comp
                        32      LOAD_METHOD                     2: flush
                        34      CALL_METHOD                     0
                        36      RETURN_VALUE                    
                'LZMACompressor.flush'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'LZMACompressor'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: 'LZMACompressor.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> _init
                18      LOAD_CONST                      4: 'LZMACompressor._init'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: _init
                24      LOAD_CONST                      5: <CODE> compress
                26      LOAD_CONST                      6: 'LZMACompressor.compress'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      5: compress
                32      LOAD_CONST                      7: <CODE> flush
                34      LOAD_CONST                      8: 'LZMACompressor.flush'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      6: flush
                40      LOAD_CONST                      9: None
                42      RETURN_VALUE                    
        'LZMACompressor'
        [Code]
            File Name: zipfile.py
            Object Name: LZMADecompressor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'decompress'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'LZMADecompressor'
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_decomp'
                        '_unconsumed'
                        'eof'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        b''
                        False
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _decomp
                        6       LOAD_CONST                      1: b''
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _unconsumed
                        12      LOAD_CONST                      2: False
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: eof
                        18      LOAD_CONST                      0: None
                        20      RETURN_VALUE                    
                'LZMADecompressor.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: decompress
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_decomp'
                        '_unconsumed'
                        'len'
                        'struct'
                        'unpack'
                        'lzma'
                        'LZMADecompressor'
                        'FORMAT_RAW'
                        '_decode_filter_properties'
                        'FILTER_LZMA1'
                        'decompress'
                        'eof'
                    [Var Names]
                        'self'
                        'data'
                        'psize'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        4
                        b''
                        '<H'
                        2
                        (
                            'filters'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _decomp
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               77 (to 154)
                        10      LOAD_FAST                       0: self
                        12      DUP_TOP                         
                        14      LOAD_ATTR                       1: _unconsumed
                        16      LOAD_FAST                       1: data
                        18      INPLACE_ADD                     
                        20      ROT_TWO                         
                        22      STORE_ATTR                      1: _unconsumed
                        24      LOAD_GLOBAL                     2: len
                        26      LOAD_FAST                       0: self
                        28      LOAD_ATTR                       1: _unconsumed
                        30      CALL_FUNCTION                   1
                        32      LOAD_CONST                      1: 4
                        34      COMPARE_OP                      1 (<=)
                        36      POP_JUMP_IF_FALSE               21 (to 42)
                        38      LOAD_CONST                      2: b''
                        40      RETURN_VALUE                    
                        42      LOAD_GLOBAL                     3: struct
                        44      LOAD_METHOD                     4: unpack
                        46      LOAD_CONST                      3: '<H'
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       1: _unconsumed
                        52      LOAD_CONST                      4: 2
                        54      LOAD_CONST                      1: 4
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      CALL_METHOD                     2
                        62      UNPACK_SEQUENCE                 1
                        64      STORE_FAST                      2: psize
                        66      LOAD_GLOBAL                     2: len
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       1: _unconsumed
                        72      CALL_FUNCTION                   1
                        74      LOAD_CONST                      1: 4
                        76      LOAD_FAST                       2: psize
                        78      BINARY_ADD                      
                        80      COMPARE_OP                      1 (<=)
                        82      POP_JUMP_IF_FALSE               44 (to 88)
                        84      LOAD_CONST                      2: b''
                        86      RETURN_VALUE                    
                        88      LOAD_GLOBAL                     5: lzma
                        90      LOAD_ATTR                       6: LZMADecompressor
                        92      LOAD_GLOBAL                     5: lzma
                        94      LOAD_ATTR                       7: FORMAT_RAW
                        96      LOAD_GLOBAL                     5: lzma
                        98      LOAD_METHOD                     8: _decode_filter_properties
                        100     LOAD_GLOBAL                     5: lzma
                        102     LOAD_ATTR                       9: FILTER_LZMA1
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       1: _unconsumed
                        108     LOAD_CONST                      1: 4
                        110     LOAD_CONST                      1: 4
                        112     LOAD_FAST                       2: psize
                        114     BINARY_ADD                      
                        116     BUILD_SLICE                     2
                        118     BINARY_SUBSCR                   
                        120     CALL_METHOD                     2
                        122     BUILD_LIST                      1
                        124     LOAD_CONST                      5: ('filters',)
                        126     CALL_FUNCTION_KW                2
                        128     LOAD_FAST                       0: self
                        130     STORE_ATTR                      0: _decomp
                        132     LOAD_FAST                       0: self
                        134     LOAD_ATTR                       1: _unconsumed
                        136     LOAD_CONST                      1: 4
                        138     LOAD_FAST                       2: psize
                        140     BINARY_ADD                      
                        142     LOAD_CONST                      0: None
                        144     BUILD_SLICE                     2
                        146     BINARY_SUBSCR                   
                        148     STORE_FAST                      1: data
                        150     LOAD_FAST                       0: self
                        152     DELETE_ATTR                     1: _unconsumed
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       0: _decomp
                        158     LOAD_METHOD                     10: decompress
                        160     LOAD_FAST                       1: data
                        162     CALL_METHOD                     1
                        164     STORE_FAST                      3: result
                        166     LOAD_FAST                       0: self
                        168     LOAD_ATTR                       0: _decomp
                        170     LOAD_ATTR                       11: eof
                        172     LOAD_FAST                       0: self
                        174     STORE_ATTR                      11: eof
                        176     LOAD_FAST                       3: result
                        178     RETURN_VALUE                    
                'LZMADecompressor.decompress'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'LZMADecompressor'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: 'LZMADecompressor.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> decompress
                18      LOAD_CONST                      4: 'LZMADecompressor.decompress'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: decompress
                24      LOAD_CONST                      5: None
                26      RETURN_VALUE                    
        'LZMADecompressor'
        'store'
        'shrink'
        'reduce'
        'implode'
        'tokenize'
        'deflate'
        'deflate64'
        'bzip2'
        'lzma'
        'terse'
        19
        'lz77'
        97
        'wavpack'
        98
        'ppmd'
        [Code]
            File Name: zipfile.py
            Object Name: _check_compression
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'ZIP_STORED'
                'ZIP_DEFLATED'
                'zlib'
                'RuntimeError'
                'ZIP_BZIP2'
                'bz2'
                'ZIP_LZMA'
                'lzma'
                'NotImplementedError'
            [Var Names]
                'compression'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'Compression requires the (missing) zlib module'
                'Compression requires the (missing) bz2 module'
                'Compression requires the (missing) lzma module'
                'That compression method is not supported'
            [Disassembly]
                0       LOAD_FAST                       0: compression
                2       LOAD_GLOBAL                     0: ZIP_STORED
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      0: None
                10      RETURN_VALUE                    
                12      LOAD_FAST                       0: compression
                14      LOAD_GLOBAL                     1: ZIP_DEFLATED
                16      COMPARE_OP                      2 (==)
                18      POP_JUMP_IF_FALSE               18 (to 36)
                20      LOAD_GLOBAL                     2: zlib
                22      POP_JUMP_IF_TRUE                16 (to 32)
                24      LOAD_GLOBAL                     3: RuntimeError
                26      LOAD_CONST                      1: 'Compression requires the (missing) zlib module'
                28      CALL_FUNCTION                   1
                30      RAISE_VARARGS                   1
                32      LOAD_CONST                      0: None
                34      RETURN_VALUE                    
                36      LOAD_FAST                       0: compression
                38      LOAD_GLOBAL                     4: ZIP_BZIP2
                40      COMPARE_OP                      2 (==)
                42      POP_JUMP_IF_FALSE               30 (to 60)
                44      LOAD_GLOBAL                     5: bz2
                46      POP_JUMP_IF_TRUE                28 (to 56)
                48      LOAD_GLOBAL                     3: RuntimeError
                50      LOAD_CONST                      2: 'Compression requires the (missing) bz2 module'
                52      CALL_FUNCTION                   1
                54      RAISE_VARARGS                   1
                56      LOAD_CONST                      0: None
                58      RETURN_VALUE                    
                60      LOAD_FAST                       0: compression
                62      LOAD_GLOBAL                     6: ZIP_LZMA
                64      COMPARE_OP                      2 (==)
                66      POP_JUMP_IF_FALSE               42 (to 84)
                68      LOAD_GLOBAL                     7: lzma
                70      POP_JUMP_IF_TRUE                40 (to 80)
                72      LOAD_GLOBAL                     3: RuntimeError
                74      LOAD_CONST                      3: 'Compression requires the (missing) lzma module'
                76      CALL_FUNCTION                   1
                78      RAISE_VARARGS                   1
                80      LOAD_CONST                      0: None
                82      RETURN_VALUE                    
                84      LOAD_GLOBAL                     8: NotImplementedError
                86      LOAD_CONST                      4: 'That compression method is not supported'
                88      CALL_FUNCTION                   1
                90      RAISE_VARARGS                   1
        '_check_compression'
        [Code]
            File Name: zipfile.py
            Object Name: _get_compressor
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'ZIP_DEFLATED'
                'zlib'
                'compressobj'
                'DEFLATED'
                'Z_DEFAULT_COMPRESSION'
                'ZIP_BZIP2'
                'bz2'
                'BZ2Compressor'
                'ZIP_LZMA'
                'LZMACompressor'
            [Var Names]
                'compress_type'
                'compresslevel'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                -15
            [Disassembly]
                0       LOAD_FAST                       0: compress_type
                2       LOAD_GLOBAL                     0: ZIP_DEFLATED
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               25 (to 50)
                8       LOAD_FAST                       1: compresslevel
                10      LOAD_CONST                      0: None
                12      IS_OP                           1 (is not)
                14      POP_JUMP_IF_FALSE               16 (to 32)
                16      LOAD_GLOBAL                     1: zlib
                18      LOAD_METHOD                     2: compressobj
                20      LOAD_FAST                       1: compresslevel
                22      LOAD_GLOBAL                     1: zlib
                24      LOAD_ATTR                       3: DEFLATED
                26      LOAD_CONST                      1: -15
                28      CALL_METHOD                     3
                30      RETURN_VALUE                    
                32      LOAD_GLOBAL                     1: zlib
                34      LOAD_METHOD                     2: compressobj
                36      LOAD_GLOBAL                     1: zlib
                38      LOAD_ATTR                       4: Z_DEFAULT_COMPRESSION
                40      LOAD_GLOBAL                     1: zlib
                42      LOAD_ATTR                       3: DEFLATED
                44      LOAD_CONST                      1: -15
                46      CALL_METHOD                     3
                48      RETURN_VALUE                    
                50      LOAD_FAST                       0: compress_type
                52      LOAD_GLOBAL                     5: ZIP_BZIP2
                54      COMPARE_OP                      2 (==)
                56      POP_JUMP_IF_FALSE               42 (to 84)
                58      LOAD_FAST                       1: compresslevel
                60      LOAD_CONST                      0: None
                62      IS_OP                           1 (is not)
                64      POP_JUMP_IF_FALSE               38 (to 76)
                66      LOAD_GLOBAL                     6: bz2
                68      LOAD_METHOD                     7: BZ2Compressor
                70      LOAD_FAST                       1: compresslevel
                72      CALL_METHOD                     1
                74      RETURN_VALUE                    
                76      LOAD_GLOBAL                     6: bz2
                78      LOAD_METHOD                     7: BZ2Compressor
                80      CALL_METHOD                     0
                82      RETURN_VALUE                    
                84      LOAD_FAST                       0: compress_type
                86      LOAD_GLOBAL                     8: ZIP_LZMA
                88      COMPARE_OP                      2 (==)
                90      POP_JUMP_IF_FALSE               49 (to 98)
                92      LOAD_GLOBAL                     9: LZMACompressor
                94      CALL_FUNCTION                   0
                96      RETURN_VALUE                    
                98      LOAD_CONST                      0: None
                100     RETURN_VALUE                    
        '_get_compressor'
        [Code]
            File Name: zipfile.py
            Object Name: _get_decompressor
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_check_compression'
                'ZIP_STORED'
                'ZIP_DEFLATED'
                'zlib'
                'decompressobj'
                'ZIP_BZIP2'
                'bz2'
                'BZ2Decompressor'
                'ZIP_LZMA'
                'LZMADecompressor'
                'compressor_names'
                'get'
                'NotImplementedError'
            [Var Names]
                'compress_type'
                'descr'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                -15
                'compression type %d (%s)'
                'compression type %d'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _check_compression
                2       LOAD_FAST                       0: compress_type
                4       CALL_FUNCTION                   1
                6       POP_TOP                         
                8       LOAD_FAST                       0: compress_type
                10      LOAD_GLOBAL                     1: ZIP_STORED
                12      COMPARE_OP                      2 (==)
                14      POP_JUMP_IF_FALSE               10 (to 20)
                16      LOAD_CONST                      0: None
                18      RETURN_VALUE                    
                20      LOAD_FAST                       0: compress_type
                22      LOAD_GLOBAL                     2: ZIP_DEFLATED
                24      COMPARE_OP                      2 (==)
                26      POP_JUMP_IF_FALSE               19 (to 38)
                28      LOAD_GLOBAL                     3: zlib
                30      LOAD_METHOD                     4: decompressobj
                32      LOAD_CONST                      1: -15
                34      CALL_METHOD                     1
                36      RETURN_VALUE                    
                38      LOAD_FAST                       0: compress_type
                40      LOAD_GLOBAL                     5: ZIP_BZIP2
                42      COMPARE_OP                      2 (==)
                44      POP_JUMP_IF_FALSE               27 (to 54)
                46      LOAD_GLOBAL                     6: bz2
                48      LOAD_METHOD                     7: BZ2Decompressor
                50      CALL_METHOD                     0
                52      RETURN_VALUE                    
                54      LOAD_FAST                       0: compress_type
                56      LOAD_GLOBAL                     8: ZIP_LZMA
                58      COMPARE_OP                      2 (==)
                60      POP_JUMP_IF_FALSE               34 (to 68)
                62      LOAD_GLOBAL                     9: LZMADecompressor
                64      CALL_FUNCTION                   0
                66      RETURN_VALUE                    
                68      LOAD_GLOBAL                     10: compressor_names
                70      LOAD_METHOD                     11: get
                72      LOAD_FAST                       0: compress_type
                74      CALL_METHOD                     1
                76      STORE_FAST                      1: descr
                78      LOAD_FAST                       1: descr
                80      POP_JUMP_IF_FALSE               49 (to 98)
                82      LOAD_GLOBAL                     12: NotImplementedError
                84      LOAD_CONST                      2: 'compression type %d (%s)'
                86      LOAD_FAST                       0: compress_type
                88      LOAD_FAST                       1: descr
                90      BUILD_TUPLE                     2
                92      BINARY_MODULO                   
                94      CALL_FUNCTION                   1
                96      RAISE_VARARGS                   1
                98      LOAD_GLOBAL                     12: NotImplementedError
                100     LOAD_CONST                      3: 'compression type %d'
                102     LOAD_FAST                       0: compress_type
                104     BUILD_TUPLE                     1
                106     BINARY_MODULO                   
                108     CALL_FUNCTION                   1
                110     RAISE_VARARGS                   1
        '_get_decompressor'
        [Code]
            File Name: zipfile.py
            Object Name: _SharedFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'tell'
                'seek'
                'read'
                'close'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_SharedFile'
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        '_pos'
                        '_close'
                        '_lock'
                        '_writing'
                        'seekable'
                    [Var Names]
                        'self'
                        'file'
                        'pos'
                        'close'
                        'lock'
                        'writing'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: file
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _file
                        6       LOAD_FAST                       2: pos
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _pos
                        12      LOAD_FAST                       3: close
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _close
                        18      LOAD_FAST                       4: lock
                        20      LOAD_FAST                       0: self
                        22      STORE_ATTR                      3: _lock
                        24      LOAD_FAST                       5: writing
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      4: _writing
                        30      LOAD_FAST                       1: file
                        32      LOAD_ATTR                       5: seekable
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      5: seekable
                        38      LOAD_CONST                      0: None
                        40      RETURN_VALUE                    
                '_SharedFile.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_pos'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _pos
                        4       RETURN_VALUE                    
                '_SharedFile.tell'
                0
                [Code]
                    File Name: zipfile.py
                    Object Name: seek
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_lock'
                        '_writing'
                        'ValueError'
                        '_file'
                        'seek'
                        'tell'
                        '_pos'
                    [Var Names]
                        'self'
                        'offset'
                        'whence'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        "Can't reposition in the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _lock
                        4       SETUP_WITH                      32 (to 70)
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     1: _writing
                        12      CALL_METHOD                     0
                        14      POP_JUMP_IF_FALSE               12 (to 24)
                        16      LOAD_GLOBAL                     2: ValueError
                        18      LOAD_CONST                      1: "Can't reposition in the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                        20      CALL_FUNCTION                   1
                        22      RAISE_VARARGS                   1
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: _file
                        28      LOAD_METHOD                     4: seek
                        30      LOAD_FAST                       1: offset
                        32      LOAD_FAST                       2: whence
                        34      CALL_METHOD                     2
                        36      POP_TOP                         
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       3: _file
                        42      LOAD_METHOD                     5: tell
                        44      CALL_METHOD                     0
                        46      LOAD_FAST                       0: self
                        48      STORE_ATTR                      6: _pos
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       6: _pos
                        54      POP_BLOCK                       
                        56      ROT_TWO                         
                        58      LOAD_CONST                      0: None
                        60      DUP_TOP                         
                        62      DUP_TOP                         
                        64      CALL_FUNCTION                   3
                        66      POP_TOP                         
                        68      RETURN_VALUE                    
                        70      WITH_EXCEPT_START               
                        72      POP_JUMP_IF_TRUE                38 (to 76)
                        74      RERAISE                         1
                        76      POP_TOP                         
                        78      POP_TOP                         
                        80      POP_TOP                         
                        82      POP_EXCEPT                      
                        84      POP_TOP                         
                        86      LOAD_CONST                      0: None
                        88      RETURN_VALUE                    
                '_SharedFile.seek'
                -1
                [Code]
                    File Name: zipfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_lock'
                        '_writing'
                        'ValueError'
                        '_file'
                        'seek'
                        '_pos'
                        'read'
                        'tell'
                    [Var Names]
                        'self'
                        'n'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        "Can't read from the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _lock
                        4       SETUP_WITH                      37 (to 80)
                        6       POP_TOP                         
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     1: _writing
                        12      CALL_METHOD                     0
                        14      POP_JUMP_IF_FALSE               12 (to 24)
                        16      LOAD_GLOBAL                     2: ValueError
                        18      LOAD_CONST                      1: "Can't read from the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                        20      CALL_FUNCTION                   1
                        22      RAISE_VARARGS                   1
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       3: _file
                        28      LOAD_METHOD                     4: seek
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       5: _pos
                        34      CALL_METHOD                     1
                        36      POP_TOP                         
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       3: _file
                        42      LOAD_METHOD                     6: read
                        44      LOAD_FAST                       1: n
                        46      CALL_METHOD                     1
                        48      STORE_FAST                      2: data
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       3: _file
                        54      LOAD_METHOD                     7: tell
                        56      CALL_METHOD                     0
                        58      LOAD_FAST                       0: self
                        60      STORE_ATTR                      5: _pos
                        62      LOAD_FAST                       2: data
                        64      POP_BLOCK                       
                        66      ROT_TWO                         
                        68      LOAD_CONST                      0: None
                        70      DUP_TOP                         
                        72      DUP_TOP                         
                        74      CALL_FUNCTION                   3
                        76      POP_TOP                         
                        78      RETURN_VALUE                    
                        80      WITH_EXCEPT_START               
                        82      POP_JUMP_IF_TRUE                43 (to 86)
                        84      RERAISE                         1
                        86      POP_TOP                         
                        88      POP_TOP                         
                        90      POP_TOP                         
                        92      POP_EXCEPT                      
                        94      POP_TOP                         
                        96      LOAD_CONST                      0: None
                        98      RETURN_VALUE                    
                '_SharedFile.read'
                [Code]
                    File Name: zipfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_file'
                        '_close'
                    [Var Names]
                        'self'
                        'fileobj'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _file
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           1 (is not)
                        8       POP_JUMP_IF_FALSE               18 (to 36)
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       0: _file
                        14      STORE_FAST                      1: fileobj
                        16      LOAD_CONST                      0: None
                        18      LOAD_FAST                       0: self
                        20      STORE_ATTR                      0: _file
                        22      LOAD_FAST                       0: self
                        24      LOAD_METHOD                     1: _close
                        26      LOAD_FAST                       1: fileobj
                        28      CALL_METHOD                     1
                        30      POP_TOP                         
                        32      LOAD_CONST                      0: None
                        34      RETURN_VALUE                    
                        36      LOAD_CONST                      0: None
                        38      RETURN_VALUE                    
                '_SharedFile.close'
                None
                (
                    0
                )
                (
                    -1
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_SharedFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_SharedFile.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> tell
                18      LOAD_CONST                      4: '_SharedFile.tell'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: tell
                24      LOAD_CONST                      14: (0,)
                26      LOAD_CONST                      6: <CODE> seek
                28      LOAD_CONST                      7: '_SharedFile.seek'
                30      MAKE_FUNCTION                   1
                32      STORE_NAME                      5: seek
                34      LOAD_CONST                      15: (-1,)
                36      LOAD_CONST                      9: <CODE> read
                38      LOAD_CONST                      10: '_SharedFile.read'
                40      MAKE_FUNCTION                   1
                42      STORE_NAME                      6: read
                44      LOAD_CONST                      11: <CODE> close
                46      LOAD_CONST                      12: '_SharedFile.close'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      7: close
                52      LOAD_CONST                      13: None
                54      RETURN_VALUE                    
        '_SharedFile'
        [Code]
            File Name: zipfile.py
            Object Name: _Tellable
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'write'
                'tell'
                'flush'
                'close'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Tellable'
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        'offset'
                    [Var Names]
                        'self'
                        'fp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       1: fp
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: fp
                        6       LOAD_CONST                      1: 0
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: offset
                        12      LOAD_CONST                      0: None
                        14      RETURN_VALUE                    
                '_Tellable.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        'write'
                        'offset'
                    [Var Names]
                        'self'
                        'data'
                        'n'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       LOAD_METHOD                     1: write
                        6       LOAD_FAST                       1: data
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      2: n
                        12      LOAD_FAST                       0: self
                        14      DUP_TOP                         
                        16      LOAD_ATTR                       2: offset
                        18      LOAD_FAST                       2: n
                        20      INPLACE_ADD                     
                        22      ROT_TWO                         
                        24      STORE_ATTR                      2: offset
                        26      LOAD_FAST                       2: n
                        28      RETURN_VALUE                    
                '_Tellable.write'
                [Code]
                    File Name: zipfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'offset'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: offset
                        4       RETURN_VALUE                    
                '_Tellable.tell'
                [Code]
                    File Name: zipfile.py
                    Object Name: flush
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        'flush'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       LOAD_METHOD                     1: flush
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                '_Tellable.flush'
                [Code]
                    File Name: zipfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       LOAD_METHOD                     1: close
                        6       CALL_METHOD                     0
                        8       POP_TOP                         
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                '_Tellable.close'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Tellable'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_Tellable.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_CONST                      3: <CODE> write
                18      LOAD_CONST                      4: '_Tellable.write'
                20      MAKE_FUNCTION                   0
                22      STORE_NAME                      4: write
                24      LOAD_CONST                      5: <CODE> tell
                26      LOAD_CONST                      6: '_Tellable.tell'
                28      MAKE_FUNCTION                   0
                30      STORE_NAME                      5: tell
                32      LOAD_CONST                      7: <CODE> flush
                34      LOAD_CONST                      8: '_Tellable.flush'
                36      MAKE_FUNCTION                   0
                38      STORE_NAME                      6: flush
                40      LOAD_CONST                      9: <CODE> close
                42      LOAD_CONST                      10: '_Tellable.close'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      7: close
                48      LOAD_CONST                      11: None
                50      RETURN_VALUE                    
        '_Tellable'
        [Code]
            File Name: zipfile.py
            Object Name: ZipExtFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'MAX_N'
                'MIN_READ_SIZE'
                'MAX_SEEK_READ'
                '__init__'
                '_init_decrypter'
                '__repr__'
                'readline'
                'peek'
                'readable'
                'read'
                '_update_crc'
                'read1'
                '_read1'
                '_read2'
                'close'
                'seekable'
                'seek'
                'tell'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'ZipExtFile'
                'File-like object for reading an archive member.\n       Is returned by ZipFile.open().\n    '
                1073741824
                4096
                16777216
                None
                False
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_fileobj'
                        '_pwd'
                        '_close_fileobj'
                        'compress_type'
                        '_compress_type'
                        'compress_size'
                        '_compress_left'
                        'file_size'
                        '_left'
                        '_get_decompressor'
                        '_decompressor'
                        '_eof'
                        '_readbuffer'
                        '_offset'
                        'newlines'
                        'mode'
                        'filename'
                        'name'
                        'hasattr'
                        'CRC'
                        '_expected_crc'
                        'crc32'
                        '_running_crc'
                        '_seekable'
                        'seekable'
                        'tell'
                        '_orig_compress_start'
                        '_orig_compress_size'
                        '_orig_file_size'
                        '_orig_start_crc'
                        'AttributeError'
                        '_decrypter'
                        'flag_bits'
                        '_raw_time'
                        '_init_decrypter'
                        'RuntimeError'
                        'orig_filename'
                    [Var Names]
                        'self'
                        'fileobj'
                        'mode'
                        'zipinfo'
                        'pwd'
                        'close_fileobj'
                        'check_byte'
                        'h'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        False
                        b''
                        0
                        'CRC'
                        True
                        8
                        255
                        24
                        'Bad password for file %r'
                    [Disassembly]
                        0       LOAD_FAST                       1: fileobj
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _fileobj
                        6       LOAD_FAST                       4: pwd
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _pwd
                        12      LOAD_FAST                       5: close_fileobj
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _close_fileobj
                        18      LOAD_FAST                       3: zipinfo
                        20      LOAD_ATTR                       3: compress_type
                        22      LOAD_FAST                       0: self
                        24      STORE_ATTR                      4: _compress_type
                        26      LOAD_FAST                       3: zipinfo
                        28      LOAD_ATTR                       5: compress_size
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      6: _compress_left
                        34      LOAD_FAST                       3: zipinfo
                        36      LOAD_ATTR                       7: file_size
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      8: _left
                        42      LOAD_GLOBAL                     9: _get_decompressor
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       4: _compress_type
                        48      CALL_FUNCTION                   1
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      10: _decompressor
                        54      LOAD_CONST                      1: False
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      11: _eof
                        60      LOAD_CONST                      2: b''
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      12: _readbuffer
                        66      LOAD_CONST                      3: 0
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      13: _offset
                        72      LOAD_CONST                      0: None
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      14: newlines
                        78      LOAD_FAST                       2: mode
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      15: mode
                        84      LOAD_FAST                       3: zipinfo
                        86      LOAD_ATTR                       16: filename
                        88      LOAD_FAST                       0: self
                        90      STORE_ATTR                      17: name
                        92      LOAD_GLOBAL                     18: hasattr
                        94      LOAD_FAST                       3: zipinfo
                        96      LOAD_CONST                      4: 'CRC'
                        98      CALL_FUNCTION                   2
                        100     POP_JUMP_IF_FALSE               61 (to 122)
                        102     LOAD_FAST                       3: zipinfo
                        104     LOAD_ATTR                       19: CRC
                        106     LOAD_FAST                       0: self
                        108     STORE_ATTR                      20: _expected_crc
                        110     LOAD_GLOBAL                     21: crc32
                        112     LOAD_CONST                      2: b''
                        114     CALL_FUNCTION                   1
                        116     LOAD_FAST                       0: self
                        118     STORE_ATTR                      22: _running_crc
                        120     JUMP_FORWARD                    3 (to 128)
                        122     LOAD_CONST                      0: None
                        124     LOAD_FAST                       0: self
                        126     STORE_ATTR                      20: _expected_crc
                        128     LOAD_CONST                      1: False
                        130     LOAD_FAST                       0: self
                        132     STORE_ATTR                      23: _seekable
                        134     SETUP_FINALLY                   26 (to 188)
                        136     LOAD_FAST                       1: fileobj
                        138     LOAD_METHOD                     24: seekable
                        140     CALL_METHOD                     0
                        142     POP_JUMP_IF_FALSE               92 (to 184)
                        144     LOAD_FAST                       1: fileobj
                        146     LOAD_METHOD                     25: tell
                        148     CALL_METHOD                     0
                        150     LOAD_FAST                       0: self
                        152     STORE_ATTR                      26: _orig_compress_start
                        154     LOAD_FAST                       3: zipinfo
                        156     LOAD_ATTR                       5: compress_size
                        158     LOAD_FAST                       0: self
                        160     STORE_ATTR                      27: _orig_compress_size
                        162     LOAD_FAST                       3: zipinfo
                        164     LOAD_ATTR                       7: file_size
                        166     LOAD_FAST                       0: self
                        168     STORE_ATTR                      28: _orig_file_size
                        170     LOAD_FAST                       0: self
                        172     LOAD_ATTR                       22: _running_crc
                        174     LOAD_FAST                       0: self
                        176     STORE_ATTR                      29: _orig_start_crc
                        178     LOAD_CONST                      5: True
                        180     LOAD_FAST                       0: self
                        182     STORE_ATTR                      23: _seekable
                        184     POP_BLOCK                       
                        186     JUMP_FORWARD                    9 (to 206)
                        188     DUP_TOP                         
                        190     LOAD_GLOBAL                     30: AttributeError
                        192     JUMP_IF_NOT_EXC_MATCH           102 (to 204)
                        194     POP_TOP                         
                        196     POP_TOP                         
                        198     POP_TOP                         
                        200     POP_EXCEPT                      
                        202     JUMP_FORWARD                    1 (to 206)
                        204     RERAISE                         0
                        206     LOAD_CONST                      0: None
                        208     LOAD_FAST                       0: self
                        210     STORE_ATTR                      31: _decrypter
                        212     LOAD_FAST                       4: pwd
                        214     POP_JUMP_IF_FALSE               143 (to 286)
                        216     LOAD_FAST                       3: zipinfo
                        218     LOAD_ATTR                       32: flag_bits
                        220     LOAD_CONST                      6: 8
                        222     BINARY_AND                      
                        224     POP_JUMP_IF_FALSE               121 (to 242)
                        226     LOAD_FAST                       3: zipinfo
                        228     LOAD_ATTR                       33: _raw_time
                        230     LOAD_CONST                      6: 8
                        232     BINARY_RSHIFT                   
                        234     LOAD_CONST                      7: 255
                        236     BINARY_AND                      
                        238     STORE_FAST                      6: check_byte
                        240     JUMP_FORWARD                    7 (to 256)
                        242     LOAD_FAST                       3: zipinfo
                        244     LOAD_ATTR                       19: CRC
                        246     LOAD_CONST                      8: 24
                        248     BINARY_RSHIFT                   
                        250     LOAD_CONST                      7: 255
                        252     BINARY_AND                      
                        254     STORE_FAST                      6: check_byte
                        256     LOAD_FAST                       0: self
                        258     LOAD_METHOD                     34: _init_decrypter
                        260     CALL_METHOD                     0
                        262     STORE_FAST                      7: h
                        264     LOAD_FAST                       7: h
                        266     LOAD_FAST                       6: check_byte
                        268     COMPARE_OP                      3 (!=)
                        270     POP_JUMP_IF_FALSE               145 (to 290)
                        272     LOAD_GLOBAL                     35: RuntimeError
                        274     LOAD_CONST                      9: 'Bad password for file %r'
                        276     LOAD_FAST                       3: zipinfo
                        278     LOAD_ATTR                       36: orig_filename
                        280     BINARY_MODULO                   
                        282     CALL_FUNCTION                   1
                        284     RAISE_VARARGS                   1
                        286     LOAD_CONST                      0: None
                        288     RETURN_VALUE                    
                        290     LOAD_CONST                      0: None
                        292     RETURN_VALUE                    
                'ZipExtFile.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: _init_decrypter
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_ZipDecrypter'
                        '_pwd'
                        '_decrypter'
                        '_fileobj'
                        'read'
                        '_compress_left'
                    [Var Names]
                        'self'
                        'header'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        12
                        11
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _ZipDecrypter
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       1: _pwd
                        6       CALL_FUNCTION                   1
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      2: _decrypter
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _fileobj
                        16      LOAD_METHOD                     4: read
                        18      LOAD_CONST                      1: 12
                        20      CALL_METHOD                     1
                        22      STORE_FAST                      1: header
                        24      LOAD_FAST                       0: self
                        26      DUP_TOP                         
                        28      LOAD_ATTR                       5: _compress_left
                        30      LOAD_CONST                      1: 12
                        32      INPLACE_SUBTRACT                
                        34      ROT_TWO                         
                        36      STORE_ATTR                      5: _compress_left
                        38      LOAD_FAST                       0: self
                        40      LOAD_METHOD                     2: _decrypter
                        42      LOAD_FAST                       1: header
                        44      CALL_METHOD                     1
                        46      LOAD_CONST                      2: 11
                        48      BINARY_SUBSCR                   
                        50      RETURN_VALUE                    
                'ZipExtFile._init_decrypter'
                [Code]
                    File Name: zipfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__module__'
                        '__qualname__'
                        'closed'
                        'append'
                        'name'
                        'mode'
                        '_compress_type'
                        'ZIP_STORED'
                        'compressor_names'
                        'get'
                        'join'
                    [Var Names]
                        'self'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<%s.%s'
                        ' name=%r mode=%r'
                        ' compress_type=%s'
                        ' [closed]'
                        '>'
                        ''
                    [Disassembly]
                        0       LOAD_CONST                      1: '<%s.%s'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __module__
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: __class__
                        12      LOAD_ATTR                       2: __qualname__
                        14      BUILD_TUPLE                     2
                        16      BINARY_MODULO                   
                        18      BUILD_LIST                      1
                        20      STORE_FAST                      1: result
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: closed
                        26      POP_JUMP_IF_TRUE                44 (to 88)
                        28      LOAD_FAST                       1: result
                        30      LOAD_METHOD                     4: append
                        32      LOAD_CONST                      2: ' name=%r mode=%r'
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       5: name
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       6: mode
                        42      BUILD_TUPLE                     2
                        44      BINARY_MODULO                   
                        46      CALL_METHOD                     1
                        48      POP_TOP                         
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       7: _compress_type
                        54      LOAD_GLOBAL                     8: ZIP_STORED
                        56      COMPARE_OP                      3 (!=)
                        58      POP_JUMP_IF_FALSE               43 (to 86)
                        60      LOAD_FAST                       1: result
                        62      LOAD_METHOD                     4: append
                        64      LOAD_CONST                      3: ' compress_type=%s'
                        66      LOAD_GLOBAL                     9: compressor_names
                        68      LOAD_METHOD                     10: get
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       7: _compress_type
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       7: _compress_type
                        78      CALL_METHOD                     2
                        80      BINARY_MODULO                   
                        82      CALL_METHOD                     1
                        84      POP_TOP                         
                        86      JUMP_FORWARD                    5 (to 98)
                        88      LOAD_FAST                       1: result
                        90      LOAD_METHOD                     4: append
                        92      LOAD_CONST                      4: ' [closed]'
                        94      CALL_METHOD                     1
                        96      POP_TOP                         
                        98      LOAD_FAST                       1: result
                        100     LOAD_METHOD                     4: append
                        102     LOAD_CONST                      5: '>'
                        104     CALL_METHOD                     1
                        106     POP_TOP                         
                        108     LOAD_CONST                      6: ''
                        110     LOAD_METHOD                     11: join
                        112     LOAD_FAST                       1: result
                        114     CALL_METHOD                     1
                        116     RETURN_VALUE                    
                'ZipExtFile.__repr__'
                -1
                [Code]
                    File Name: zipfile.py
                    Object Name: readline
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_readbuffer'
                        'find'
                        '_offset'
                        'io'
                        'BufferedIOBase'
                        'readline'
                    [Var Names]
                        'self'
                        'limit'
                        'i'
                        'line'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read and return a line from the stream.\n\n        If limit is specified, at most limit bytes will be read.\n        '
                        0
                        b'\n'
                        1
                    [Disassembly]
                        0       LOAD_FAST                       1: limit
                        2       LOAD_CONST                      1: 0
                        4       COMPARE_OP                      0 (<)
                        6       POP_JUMP_IF_FALSE               31 (to 62)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: _readbuffer
                        12      LOAD_METHOD                     1: find
                        14      LOAD_CONST                      2: b'\n'
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: _offset
                        20      CALL_METHOD                     2
                        22      LOAD_CONST                      3: 1
                        24      BINARY_ADD                      
                        26      STORE_FAST                      2: i
                        28      LOAD_FAST                       2: i
                        30      LOAD_CONST                      1: 0
                        32      COMPARE_OP                      4 (>)
                        34      POP_JUMP_IF_FALSE               31 (to 62)
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       0: _readbuffer
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       2: _offset
                        44      LOAD_FAST                       2: i
                        46      BUILD_SLICE                     2
                        48      BINARY_SUBSCR                   
                        50      STORE_FAST                      3: line
                        52      LOAD_FAST                       2: i
                        54      LOAD_FAST                       0: self
                        56      STORE_ATTR                      2: _offset
                        58      LOAD_FAST                       3: line
                        60      RETURN_VALUE                    
                        62      LOAD_GLOBAL                     3: io
                        64      LOAD_ATTR                       4: BufferedIOBase
                        66      LOAD_METHOD                     5: readline
                        68      LOAD_FAST                       0: self
                        70      LOAD_FAST                       1: limit
                        72      CALL_METHOD                     2
                        74      RETURN_VALUE                    
                'ZipExtFile.readline'
                1
                [Code]
                    File Name: zipfile.py
                    Object Name: peek
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        '_readbuffer'
                        '_offset'
                        'read'
                    [Var Names]
                        'self'
                        'n'
                        'chunk'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Returns buffered bytes without advancing the position.'
                        None
                        0
                        512
                    [Disassembly]
                        0       LOAD_FAST                       1: n
                        2       LOAD_GLOBAL                     0: len
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: _readbuffer
                        8       CALL_FUNCTION                   1
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       2: _offset
                        14      BINARY_SUBTRACT                 
                        16      COMPARE_OP                      4 (>)
                        18      POP_JUMP_IF_FALSE               46 (to 92)
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     3: read
                        24      LOAD_FAST                       1: n
                        26      CALL_METHOD                     1
                        28      STORE_FAST                      2: chunk
                        30      LOAD_GLOBAL                     0: len
                        32      LOAD_FAST                       2: chunk
                        34      CALL_FUNCTION                   1
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       2: _offset
                        40      COMPARE_OP                      4 (>)
                        42      POP_JUMP_IF_FALSE               37 (to 74)
                        44      LOAD_FAST                       2: chunk
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       1: _readbuffer
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       2: _offset
                        54      LOAD_CONST                      1: None
                        56      BUILD_SLICE                     2
                        58      BINARY_SUBSCR                   
                        60      BINARY_ADD                      
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      1: _readbuffer
                        66      LOAD_CONST                      2: 0
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      2: _offset
                        72      JUMP_FORWARD                    9 (to 92)
                        74      LOAD_FAST                       0: self
                        76      DUP_TOP                         
                        78      LOAD_ATTR                       2: _offset
                        80      LOAD_GLOBAL                     0: len
                        82      LOAD_FAST                       2: chunk
                        84      CALL_FUNCTION                   1
                        86      INPLACE_SUBTRACT                
                        88      ROT_TWO                         
                        90      STORE_ATTR                      2: _offset
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       1: _readbuffer
                        96      LOAD_FAST                       0: self
                        98      LOAD_ATTR                       2: _offset
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       2: _offset
                        104     LOAD_CONST                      3: 512
                        106     BINARY_ADD                      
                        108     BUILD_SLICE                     2
                        110     BINARY_SUBSCR                   
                        112     RETURN_VALUE                    
                'ZipExtFile.peek'
                [Code]
                    File Name: zipfile.py
                    Object Name: readable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'I/O operation on closed file.'
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'I/O operation on closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_CONST                      2: True
                        16      RETURN_VALUE                    
                'ZipExtFile.readable'
                [Code]
                    File Name: zipfile.py
                    Object Name: read
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                        '_readbuffer'
                        '_offset'
                        '_eof'
                        '_read1'
                        'MAX_N'
                        'len'
                    [Var Names]
                        'self'
                        'n'
                        'buf'
                        'end'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read and return up to n bytes.\n        If the argument is omitted, None, or negative, data is read and returned until EOF is reached.\n        '
                        'read from closed file.'
                        None
                        0
                        b''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'read from closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       1: n
                        16      LOAD_CONST                      2: None
                        18      IS_OP                           0 (is)
                        20      POP_JUMP_IF_TRUE                15 (to 30)
                        22      LOAD_FAST                       1: n
                        24      LOAD_CONST                      3: 0
                        26      COMPARE_OP                      0 (<)
                        28      POP_JUMP_IF_FALSE               45 (to 90)
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       2: _readbuffer
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       3: _offset
                        38      LOAD_CONST                      2: None
                        40      BUILD_SLICE                     2
                        42      BINARY_SUBSCR                   
                        44      STORE_FAST                      2: buf
                        46      LOAD_CONST                      4: b''
                        48      LOAD_FAST                       0: self
                        50      STORE_ATTR                      2: _readbuffer
                        52      LOAD_CONST                      3: 0
                        54      LOAD_FAST                       0: self
                        56      STORE_ATTR                      3: _offset
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       4: _eof
                        62      POP_JUMP_IF_TRUE                43 (to 86)
                        64      LOAD_FAST                       2: buf
                        66      LOAD_FAST                       0: self
                        68      LOAD_METHOD                     5: _read1
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       6: MAX_N
                        74      CALL_METHOD                     1
                        76      INPLACE_ADD                     
                        78      STORE_FAST                      2: buf
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       4: _eof
                        84      POP_JUMP_IF_FALSE               32 (to 64)
                        86      LOAD_FAST                       2: buf
                        88      RETURN_VALUE                    
                        90      LOAD_FAST                       1: n
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       3: _offset
                        96      BINARY_ADD                      
                        98      STORE_FAST                      3: end
                        100     LOAD_FAST                       3: end
                        102     LOAD_GLOBAL                     7: len
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       2: _readbuffer
                        108     CALL_FUNCTION                   1
                        110     COMPARE_OP                      0 (<)
                        112     POP_JUMP_IF_FALSE               70 (to 140)
                        114     LOAD_FAST                       0: self
                        116     LOAD_ATTR                       2: _readbuffer
                        118     LOAD_FAST                       0: self
                        120     LOAD_ATTR                       3: _offset
                        122     LOAD_FAST                       3: end
                        124     BUILD_SLICE                     2
                        126     BINARY_SUBSCR                   
                        128     STORE_FAST                      2: buf
                        130     LOAD_FAST                       3: end
                        132     LOAD_FAST                       0: self
                        134     STORE_ATTR                      3: _offset
                        136     LOAD_FAST                       2: buf
                        138     RETURN_VALUE                    
                        140     LOAD_FAST                       3: end
                        142     LOAD_GLOBAL                     7: len
                        144     LOAD_FAST                       0: self
                        146     LOAD_ATTR                       2: _readbuffer
                        148     CALL_FUNCTION                   1
                        150     BINARY_SUBTRACT                 
                        152     STORE_FAST                      1: n
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       2: _readbuffer
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       3: _offset
                        162     LOAD_CONST                      2: None
                        164     BUILD_SLICE                     2
                        166     BINARY_SUBSCR                   
                        168     STORE_FAST                      2: buf
                        170     LOAD_CONST                      4: b''
                        172     LOAD_FAST                       0: self
                        174     STORE_ATTR                      2: _readbuffer
                        176     LOAD_CONST                      3: 0
                        178     LOAD_FAST                       0: self
                        180     STORE_ATTR                      3: _offset
                        182     LOAD_FAST                       1: n
                        184     LOAD_CONST                      3: 0
                        186     COMPARE_OP                      4 (>)
                        188     POP_JUMP_IF_FALSE               143 (to 286)
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       4: _eof
                        194     POP_JUMP_IF_TRUE                143 (to 286)
                        196     LOAD_FAST                       0: self
                        198     LOAD_METHOD                     5: _read1
                        200     LOAD_FAST                       1: n
                        202     CALL_METHOD                     1
                        204     STORE_FAST                      4: data
                        206     LOAD_FAST                       1: n
                        208     LOAD_GLOBAL                     7: len
                        210     LOAD_FAST                       4: data
                        212     CALL_FUNCTION                   1
                        214     COMPARE_OP                      0 (<)
                        216     POP_JUMP_IF_FALSE               126 (to 252)
                        218     LOAD_FAST                       4: data
                        220     LOAD_FAST                       0: self
                        222     STORE_ATTR                      2: _readbuffer
                        224     LOAD_FAST                       1: n
                        226     LOAD_FAST                       0: self
                        228     STORE_ATTR                      3: _offset
                        230     LOAD_FAST                       2: buf
                        232     LOAD_FAST                       4: data
                        234     LOAD_CONST                      2: None
                        236     LOAD_FAST                       1: n
                        238     BUILD_SLICE                     2
                        240     BINARY_SUBSCR                   
                        242     INPLACE_ADD                     
                        244     STORE_FAST                      2: buf
                        246     NOP                             
                        248     LOAD_FAST                       2: buf
                        250     RETURN_VALUE                    
                        252     LOAD_FAST                       2: buf
                        254     LOAD_FAST                       4: data
                        256     INPLACE_ADD                     
                        258     STORE_FAST                      2: buf
                        260     LOAD_FAST                       1: n
                        262     LOAD_GLOBAL                     7: len
                        264     LOAD_FAST                       4: data
                        266     CALL_FUNCTION                   1
                        268     INPLACE_SUBTRACT                
                        270     STORE_FAST                      1: n
                        272     LOAD_FAST                       1: n
                        274     LOAD_CONST                      3: 0
                        276     COMPARE_OP                      4 (>)
                        278     POP_JUMP_IF_FALSE               143 (to 286)
                        280     LOAD_FAST                       0: self
                        282     LOAD_ATTR                       4: _eof
                        284     POP_JUMP_IF_FALSE               98 (to 196)
                        286     LOAD_FAST                       2: buf
                        288     RETURN_VALUE                    
                'ZipExtFile.read'
                [Code]
                    File Name: zipfile.py
                    Object Name: _update_crc
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_expected_crc'
                        'crc32'
                        '_running_crc'
                        '_eof'
                        'BadZipFile'
                        'name'
                    [Var Names]
                        'self'
                        'newdata'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'Bad CRC-32 for file %r'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _expected_crc
                        4       LOAD_CONST                      0: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      0: None
                        12      RETURN_VALUE                    
                        14      LOAD_GLOBAL                     1: crc32
                        16      LOAD_FAST                       1: newdata
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _running_crc
                        22      CALL_FUNCTION                   2
                        24      LOAD_FAST                       0: self
                        26      STORE_ATTR                      2: _running_crc
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: _eof
                        32      POP_JUMP_IF_FALSE               30 (to 60)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       2: _running_crc
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       0: _expected_crc
                        42      COMPARE_OP                      3 (!=)
                        44      POP_JUMP_IF_FALSE               32 (to 64)
                        46      LOAD_GLOBAL                     4: BadZipFile
                        48      LOAD_CONST                      1: 'Bad CRC-32 for file %r'
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       5: name
                        54      BINARY_MODULO                   
                        56      CALL_FUNCTION                   1
                        58      RAISE_VARARGS                   1
                        60      LOAD_CONST                      0: None
                        62      RETURN_VALUE                    
                        64      LOAD_CONST                      0: None
                        66      RETURN_VALUE                    
                'ZipExtFile._update_crc'
                [Code]
                    File Name: zipfile.py
                    Object Name: read1
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_readbuffer'
                        '_offset'
                        '_eof'
                        '_read1'
                        'MAX_N'
                        'len'
                    [Var Names]
                        'self'
                        'n'
                        'buf'
                        'data'
                        'end'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read up to n bytes with at most one read() system call.'
                        None
                        0
                        b''
                    [Disassembly]
                        0       LOAD_FAST                       1: n
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_TRUE                8 (to 16)
                        8       LOAD_FAST                       1: n
                        10      LOAD_CONST                      2: 0
                        12      COMPARE_OP                      0 (<)
                        14      POP_JUMP_IF_FALSE               45 (to 90)
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       0: _readbuffer
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: _offset
                        24      LOAD_CONST                      1: None
                        26      BUILD_SLICE                     2
                        28      BINARY_SUBSCR                   
                        30      STORE_FAST                      2: buf
                        32      LOAD_CONST                      3: b''
                        34      LOAD_FAST                       0: self
                        36      STORE_ATTR                      0: _readbuffer
                        38      LOAD_CONST                      2: 0
                        40      LOAD_FAST                       0: self
                        42      STORE_ATTR                      1: _offset
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       2: _eof
                        48      POP_JUMP_IF_TRUE                43 (to 86)
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     3: _read1
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       4: MAX_N
                        58      CALL_METHOD                     1
                        60      STORE_FAST                      3: data
                        62      LOAD_FAST                       3: data
                        64      POP_JUMP_IF_FALSE               40 (to 80)
                        66      LOAD_FAST                       2: buf
                        68      LOAD_FAST                       3: data
                        70      INPLACE_ADD                     
                        72      STORE_FAST                      2: buf
                        74      NOP                             
                        76      LOAD_FAST                       2: buf
                        78      RETURN_VALUE                    
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       2: _eof
                        84      POP_JUMP_IF_FALSE               25 (to 50)
                        86      LOAD_FAST                       2: buf
                        88      RETURN_VALUE                    
                        90      LOAD_FAST                       1: n
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       1: _offset
                        96      BINARY_ADD                      
                        98      STORE_FAST                      4: end
                        100     LOAD_FAST                       4: end
                        102     LOAD_GLOBAL                     5: len
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       0: _readbuffer
                        108     CALL_FUNCTION                   1
                        110     COMPARE_OP                      0 (<)
                        112     POP_JUMP_IF_FALSE               70 (to 140)
                        114     LOAD_FAST                       0: self
                        116     LOAD_ATTR                       0: _readbuffer
                        118     LOAD_FAST                       0: self
                        120     LOAD_ATTR                       1: _offset
                        122     LOAD_FAST                       4: end
                        124     BUILD_SLICE                     2
                        126     BINARY_SUBSCR                   
                        128     STORE_FAST                      2: buf
                        130     LOAD_FAST                       4: end
                        132     LOAD_FAST                       0: self
                        134     STORE_ATTR                      1: _offset
                        136     LOAD_FAST                       2: buf
                        138     RETURN_VALUE                    
                        140     LOAD_FAST                       4: end
                        142     LOAD_GLOBAL                     5: len
                        144     LOAD_FAST                       0: self
                        146     LOAD_ATTR                       0: _readbuffer
                        148     CALL_FUNCTION                   1
                        150     BINARY_SUBTRACT                 
                        152     STORE_FAST                      1: n
                        154     LOAD_FAST                       0: self
                        156     LOAD_ATTR                       0: _readbuffer
                        158     LOAD_FAST                       0: self
                        160     LOAD_ATTR                       1: _offset
                        162     LOAD_CONST                      1: None
                        164     BUILD_SLICE                     2
                        166     BINARY_SUBSCR                   
                        168     STORE_FAST                      2: buf
                        170     LOAD_CONST                      3: b''
                        172     LOAD_FAST                       0: self
                        174     STORE_ATTR                      0: _readbuffer
                        176     LOAD_CONST                      2: 0
                        178     LOAD_FAST                       0: self
                        180     STORE_ATTR                      1: _offset
                        182     LOAD_FAST                       1: n
                        184     LOAD_CONST                      2: 0
                        186     COMPARE_OP                      4 (>)
                        188     POP_JUMP_IF_FALSE               138 (to 276)
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       2: _eof
                        194     POP_JUMP_IF_TRUE                138 (to 276)
                        196     LOAD_FAST                       0: self
                        198     LOAD_METHOD                     3: _read1
                        200     LOAD_FAST                       1: n
                        202     CALL_METHOD                     1
                        204     STORE_FAST                      3: data
                        206     LOAD_FAST                       1: n
                        208     LOAD_GLOBAL                     5: len
                        210     LOAD_FAST                       3: data
                        212     CALL_FUNCTION                   1
                        214     COMPARE_OP                      0 (<)
                        216     POP_JUMP_IF_FALSE               126 (to 252)
                        218     LOAD_FAST                       3: data
                        220     LOAD_FAST                       0: self
                        222     STORE_ATTR                      0: _readbuffer
                        224     LOAD_FAST                       1: n
                        226     LOAD_FAST                       0: self
                        228     STORE_ATTR                      1: _offset
                        230     LOAD_FAST                       2: buf
                        232     LOAD_FAST                       3: data
                        234     LOAD_CONST                      1: None
                        236     LOAD_FAST                       1: n
                        238     BUILD_SLICE                     2
                        240     BINARY_SUBSCR                   
                        242     INPLACE_ADD                     
                        244     STORE_FAST                      2: buf
                        246     NOP                             
                        248     LOAD_FAST                       2: buf
                        250     RETURN_VALUE                    
                        252     LOAD_FAST                       3: data
                        254     POP_JUMP_IF_FALSE               135 (to 270)
                        256     LOAD_FAST                       2: buf
                        258     LOAD_FAST                       3: data
                        260     INPLACE_ADD                     
                        262     STORE_FAST                      2: buf
                        264     NOP                             
                        266     LOAD_FAST                       2: buf
                        268     RETURN_VALUE                    
                        270     LOAD_FAST                       0: self
                        272     LOAD_ATTR                       2: _eof
                        274     POP_JUMP_IF_FALSE               98 (to 196)
                        276     LOAD_FAST                       2: buf
                        278     RETURN_VALUE                    
                'ZipExtFile.read1'
                [Code]
                    File Name: zipfile.py
                    Object Name: _read1
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_eof'
                        '_compress_type'
                        'ZIP_DEFLATED'
                        '_decompressor'
                        'unconsumed_tail'
                        'len'
                        '_read2'
                        'ZIP_STORED'
                        '_compress_left'
                        'max'
                        'MIN_READ_SIZE'
                        'decompress'
                        'eof'
                        'flush'
                        '_left'
                        '_update_crc'
                    [Var Names]
                        'self'
                        'n'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        b''
                        True
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _eof
                        4       POP_JUMP_IF_TRUE                7 (to 14)
                        6       LOAD_FAST                       1: n
                        8       LOAD_CONST                      1: 0
                        10      COMPARE_OP                      1 (<=)
                        12      POP_JUMP_IF_FALSE               9 (to 18)
                        14      LOAD_CONST                      2: b''
                        16      RETURN_VALUE                    
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       1: _compress_type
                        22      LOAD_GLOBAL                     2: ZIP_DEFLATED
                        24      COMPARE_OP                      2 (==)
                        26      POP_JUMP_IF_FALSE               36 (to 72)
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: _decompressor
                        32      LOAD_ATTR                       4: unconsumed_tail
                        34      STORE_FAST                      2: data
                        36      LOAD_FAST                       1: n
                        38      LOAD_GLOBAL                     5: len
                        40      LOAD_FAST                       2: data
                        42      CALL_FUNCTION                   1
                        44      COMPARE_OP                      4 (>)
                        46      POP_JUMP_IF_FALSE               35 (to 70)
                        48      LOAD_FAST                       2: data
                        50      LOAD_FAST                       0: self
                        52      LOAD_METHOD                     6: _read2
                        54      LOAD_FAST                       1: n
                        56      LOAD_GLOBAL                     5: len
                        58      LOAD_FAST                       2: data
                        60      CALL_FUNCTION                   1
                        62      BINARY_SUBTRACT                 
                        64      CALL_METHOD                     1
                        66      INPLACE_ADD                     
                        68      STORE_FAST                      2: data
                        70      JUMP_FORWARD                    5 (to 82)
                        72      LOAD_FAST                       0: self
                        74      LOAD_METHOD                     6: _read2
                        76      LOAD_FAST                       1: n
                        78      CALL_METHOD                     1
                        80      STORE_FAST                      2: data
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       1: _compress_type
                        86      LOAD_GLOBAL                     7: ZIP_STORED
                        88      COMPARE_OP                      2 (==)
                        90      POP_JUMP_IF_FALSE               53 (to 106)
                        92      LOAD_FAST                       0: self
                        94      LOAD_ATTR                       8: _compress_left
                        96      LOAD_CONST                      1: 0
                        98      COMPARE_OP                      1 (<=)
                        100     LOAD_FAST                       0: self
                        102     STORE_ATTR                      0: _eof
                        104     JUMP_FORWARD                    60 (to 226)
                        106     LOAD_FAST                       0: self
                        108     LOAD_ATTR                       1: _compress_type
                        110     LOAD_GLOBAL                     2: ZIP_DEFLATED
                        112     COMPARE_OP                      2 (==)
                        114     POP_JUMP_IF_FALSE               97 (to 194)
                        116     LOAD_GLOBAL                     9: max
                        118     LOAD_FAST                       1: n
                        120     LOAD_FAST                       0: self
                        122     LOAD_ATTR                       10: MIN_READ_SIZE
                        124     CALL_FUNCTION                   2
                        126     STORE_FAST                      1: n
                        128     LOAD_FAST                       0: self
                        130     LOAD_ATTR                       3: _decompressor
                        132     LOAD_METHOD                     11: decompress
                        134     LOAD_FAST                       2: data
                        136     LOAD_FAST                       1: n
                        138     CALL_METHOD                     2
                        140     STORE_FAST                      2: data
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       3: _decompressor
                        146     LOAD_ATTR                       12: eof
                        148     JUMP_IF_TRUE_OR_POP             84 (to 168)
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       8: _compress_left
                        154     LOAD_CONST                      1: 0
                        156     COMPARE_OP                      1 (<=)
                        158     JUMP_IF_FALSE_OR_POP            84 (to 168)
                        160     LOAD_FAST                       0: self
                        162     LOAD_ATTR                       3: _decompressor
                        164     LOAD_ATTR                       4: unconsumed_tail
                        166     UNARY_NOT                       
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      0: _eof
                        172     LOAD_FAST                       0: self
                        174     LOAD_ATTR                       0: _eof
                        176     POP_JUMP_IF_FALSE               96 (to 192)
                        178     LOAD_FAST                       2: data
                        180     LOAD_FAST                       0: self
                        182     LOAD_ATTR                       3: _decompressor
                        184     LOAD_METHOD                     13: flush
                        186     CALL_METHOD                     0
                        188     INPLACE_ADD                     
                        190     STORE_FAST                      2: data
                        192     JUMP_FORWARD                    16 (to 226)
                        194     LOAD_FAST                       0: self
                        196     LOAD_ATTR                       3: _decompressor
                        198     LOAD_METHOD                     11: decompress
                        200     LOAD_FAST                       2: data
                        202     CALL_METHOD                     1
                        204     STORE_FAST                      2: data
                        206     LOAD_FAST                       0: self
                        208     LOAD_ATTR                       3: _decompressor
                        210     LOAD_ATTR                       12: eof
                        212     JUMP_IF_TRUE_OR_POP             111 (to 222)
                        214     LOAD_FAST                       0: self
                        216     LOAD_ATTR                       8: _compress_left
                        218     LOAD_CONST                      1: 0
                        220     COMPARE_OP                      1 (<=)
                        222     LOAD_FAST                       0: self
                        224     STORE_ATTR                      0: _eof
                        226     LOAD_FAST                       2: data
                        228     LOAD_CONST                      0: None
                        230     LOAD_FAST                       0: self
                        232     LOAD_ATTR                       14: _left
                        234     BUILD_SLICE                     2
                        236     BINARY_SUBSCR                   
                        238     STORE_FAST                      2: data
                        240     LOAD_FAST                       0: self
                        242     DUP_TOP                         
                        244     LOAD_ATTR                       14: _left
                        246     LOAD_GLOBAL                     5: len
                        248     LOAD_FAST                       2: data
                        250     CALL_FUNCTION                   1
                        252     INPLACE_SUBTRACT                
                        254     ROT_TWO                         
                        256     STORE_ATTR                      14: _left
                        258     LOAD_FAST                       0: self
                        260     LOAD_ATTR                       14: _left
                        262     LOAD_CONST                      1: 0
                        264     COMPARE_OP                      1 (<=)
                        266     POP_JUMP_IF_FALSE               137 (to 274)
                        268     LOAD_CONST                      3: True
                        270     LOAD_FAST                       0: self
                        272     STORE_ATTR                      0: _eof
                        274     LOAD_FAST                       0: self
                        276     LOAD_METHOD                     15: _update_crc
                        278     LOAD_FAST                       2: data
                        280     CALL_METHOD                     1
                        282     POP_TOP                         
                        284     LOAD_FAST                       2: data
                        286     RETURN_VALUE                    
                'ZipExtFile._read1'
                [Code]
                    File Name: zipfile.py
                    Object Name: _read2
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_compress_left'
                        'max'
                        'MIN_READ_SIZE'
                        'min'
                        '_fileobj'
                        'read'
                        'len'
                        'EOFError'
                        '_decrypter'
                    [Var Names]
                        'self'
                        'n'
                        'data'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        b''
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _compress_left
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      1 (<=)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      2: b''
                        12      RETURN_VALUE                    
                        14      LOAD_GLOBAL                     1: max
                        16      LOAD_FAST                       1: n
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: MIN_READ_SIZE
                        22      CALL_FUNCTION                   2
                        24      STORE_FAST                      1: n
                        26      LOAD_GLOBAL                     3: min
                        28      LOAD_FAST                       1: n
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       0: _compress_left
                        34      CALL_FUNCTION                   2
                        36      STORE_FAST                      1: n
                        38      LOAD_FAST                       0: self
                        40      LOAD_ATTR                       4: _fileobj
                        42      LOAD_METHOD                     5: read
                        44      LOAD_FAST                       1: n
                        46      CALL_METHOD                     1
                        48      STORE_FAST                      2: data
                        50      LOAD_FAST                       0: self
                        52      DUP_TOP                         
                        54      LOAD_ATTR                       0: _compress_left
                        56      LOAD_GLOBAL                     6: len
                        58      LOAD_FAST                       2: data
                        60      CALL_FUNCTION                   1
                        62      INPLACE_SUBTRACT                
                        64      ROT_TWO                         
                        66      STORE_ATTR                      0: _compress_left
                        68      LOAD_FAST                       2: data
                        70      POP_JUMP_IF_TRUE                38 (to 76)
                        72      LOAD_GLOBAL                     7: EOFError
                        74      RAISE_VARARGS                   1
                        76      LOAD_FAST                       0: self
                        78      LOAD_ATTR                       8: _decrypter
                        80      LOAD_CONST                      0: None
                        82      IS_OP                           1 (is not)
                        84      POP_JUMP_IF_FALSE               48 (to 96)
                        86      LOAD_FAST                       0: self
                        88      LOAD_METHOD                     8: _decrypter
                        90      LOAD_FAST                       2: data
                        92      CALL_METHOD                     1
                        94      STORE_FAST                      2: data
                        96      LOAD_FAST                       2: data
                        98      RETURN_VALUE                    
                'ZipExtFile._read2'
                [Code]
                    File Name: zipfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        '_close_fileobj'
                        '_fileobj'
                        'close'
                        'super'
                    [Var Names]
                        'self'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   24 (to 50)
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: _close_fileobj
                        6       POP_JUMP_IF_FALSE               17 (to 34)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       1: _fileobj
                        12      LOAD_METHOD                     2: close
                        14      CALL_METHOD                     0
                        16      POP_TOP                         
                        18      POP_BLOCK                       
                        20      LOAD_GLOBAL                     3: super
                        22      CALL_FUNCTION                   0
                        24      LOAD_METHOD                     2: close
                        26      CALL_METHOD                     0
                        28      POP_TOP                         
                        30      LOAD_CONST                      0: None
                        32      RETURN_VALUE                    
                        34      POP_BLOCK                       
                        36      LOAD_GLOBAL                     3: super
                        38      CALL_FUNCTION                   0
                        40      LOAD_METHOD                     2: close
                        42      CALL_METHOD                     0
                        44      POP_TOP                         
                        46      LOAD_CONST                      0: None
                        48      RETURN_VALUE                    
                        50      LOAD_GLOBAL                     3: super
                        52      CALL_FUNCTION                   0
                        54      LOAD_METHOD                     2: close
                        56      CALL_METHOD                     0
                        58      POP_TOP                         
                        60      RERAISE                         0
                'ZipExtFile.close'
                [Code]
                    File Name: zipfile.py
                    Object Name: seekable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                        '_seekable'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'I/O operation on closed file.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'I/O operation on closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _seekable
                        18      RETURN_VALUE                    
                'ZipExtFile.seekable'
                0
                [Code]
                    File Name: zipfile.py
                    Object Name: seek
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                        '_seekable'
                        'io'
                        'UnsupportedOperation'
                        'tell'
                        '_orig_file_size'
                        '_offset'
                        'len'
                        '_readbuffer'
                        '_fileobj'
                        'seek'
                        '_orig_compress_start'
                        '_orig_start_crc'
                        '_running_crc'
                        '_orig_compress_size'
                        '_compress_left'
                        '_left'
                        '_get_decompressor'
                        '_compress_type'
                        '_decompressor'
                        '_eof'
                        '_decrypter'
                        '_init_decrypter'
                        'min'
                        'MAX_SEEK_READ'
                        'read'
                    [Var Names]
                        'self'
                        'offset'
                        'whence'
                        'curr_pos'
                        'new_pos'
                        'read_offset'
                        'buff_offset'
                        'read_len'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'seek on closed file.'
                        'underlying stream is not seekable'
                        0
                        1
                        2
                        'whence must be os.SEEK_SET (0), os.SEEK_CUR (1), or os.SEEK_END (2)'
                        b''
                        False
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'seek on closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _seekable
                        18      POP_JUMP_IF_TRUE                15 (to 30)
                        20      LOAD_GLOBAL                     3: io
                        22      LOAD_METHOD                     4: UnsupportedOperation
                        24      LOAD_CONST                      2: 'underlying stream is not seekable'
                        26      CALL_METHOD                     1
                        28      RAISE_VARARGS                   1
                        30      LOAD_FAST                       0: self
                        32      LOAD_METHOD                     5: tell
                        34      CALL_METHOD                     0
                        36      STORE_FAST                      3: curr_pos
                        38      LOAD_FAST                       2: whence
                        40      LOAD_CONST                      3: 0
                        42      COMPARE_OP                      2 (==)
                        44      POP_JUMP_IF_FALSE               26 (to 52)
                        46      LOAD_FAST                       1: offset
                        48      STORE_FAST                      4: new_pos
                        50      JUMP_FORWARD                    23 (to 98)
                        52      LOAD_FAST                       2: whence
                        54      LOAD_CONST                      4: 1
                        56      COMPARE_OP                      2 (==)
                        58      POP_JUMP_IF_FALSE               35 (to 70)
                        60      LOAD_FAST                       3: curr_pos
                        62      LOAD_FAST                       1: offset
                        64      BINARY_ADD                      
                        66      STORE_FAST                      4: new_pos
                        68      JUMP_FORWARD                    14 (to 98)
                        70      LOAD_FAST                       2: whence
                        72      LOAD_CONST                      5: 2
                        74      COMPARE_OP                      2 (==)
                        76      POP_JUMP_IF_FALSE               45 (to 90)
                        78      LOAD_FAST                       0: self
                        80      LOAD_ATTR                       6: _orig_file_size
                        82      LOAD_FAST                       1: offset
                        84      BINARY_ADD                      
                        86      STORE_FAST                      4: new_pos
                        88      JUMP_FORWARD                    4 (to 98)
                        90      LOAD_GLOBAL                     1: ValueError
                        92      LOAD_CONST                      6: 'whence must be os.SEEK_SET (0), os.SEEK_CUR (1), or os.SEEK_END (2)'
                        94      CALL_FUNCTION                   1
                        96      RAISE_VARARGS                   1
                        98      LOAD_FAST                       4: new_pos
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       6: _orig_file_size
                        104     COMPARE_OP                      4 (>)
                        106     POP_JUMP_IF_FALSE               57 (to 114)
                        108     LOAD_FAST                       0: self
                        110     LOAD_ATTR                       6: _orig_file_size
                        112     STORE_FAST                      4: new_pos
                        114     LOAD_FAST                       4: new_pos
                        116     LOAD_CONST                      3: 0
                        118     COMPARE_OP                      0 (<)
                        120     POP_JUMP_IF_FALSE               63 (to 126)
                        122     LOAD_CONST                      3: 0
                        124     STORE_FAST                      4: new_pos
                        126     LOAD_FAST                       4: new_pos
                        128     LOAD_FAST                       3: curr_pos
                        130     BINARY_SUBTRACT                 
                        132     STORE_FAST                      5: read_offset
                        134     LOAD_FAST                       5: read_offset
                        136     LOAD_FAST                       0: self
                        138     LOAD_ATTR                       7: _offset
                        140     BINARY_ADD                      
                        142     STORE_FAST                      6: buff_offset
                        144     LOAD_FAST                       6: buff_offset
                        146     LOAD_CONST                      3: 0
                        148     COMPARE_OP                      5 (>=)
                        150     POP_JUMP_IF_FALSE               89 (to 178)
                        152     LOAD_FAST                       6: buff_offset
                        154     LOAD_GLOBAL                     8: len
                        156     LOAD_FAST                       0: self
                        158     LOAD_ATTR                       9: _readbuffer
                        160     CALL_FUNCTION                   1
                        162     COMPARE_OP                      0 (<)
                        164     POP_JUMP_IF_FALSE               89 (to 178)
                        166     LOAD_FAST                       6: buff_offset
                        168     LOAD_FAST                       0: self
                        170     STORE_ATTR                      7: _offset
                        172     LOAD_CONST                      3: 0
                        174     STORE_FAST                      5: read_offset
                        176     JUMP_FORWARD                    49 (to 276)
                        178     LOAD_FAST                       5: read_offset
                        180     LOAD_CONST                      3: 0
                        182     COMPARE_OP                      0 (<)
                        184     POP_JUMP_IF_FALSE               138 (to 276)
                        186     LOAD_FAST                       0: self
                        188     LOAD_ATTR                       10: _fileobj
                        190     LOAD_METHOD                     11: seek
                        192     LOAD_FAST                       0: self
                        194     LOAD_ATTR                       12: _orig_compress_start
                        196     CALL_METHOD                     1
                        198     POP_TOP                         
                        200     LOAD_FAST                       0: self
                        202     LOAD_ATTR                       13: _orig_start_crc
                        204     LOAD_FAST                       0: self
                        206     STORE_ATTR                      14: _running_crc
                        208     LOAD_FAST                       0: self
                        210     LOAD_ATTR                       15: _orig_compress_size
                        212     LOAD_FAST                       0: self
                        214     STORE_ATTR                      16: _compress_left
                        216     LOAD_FAST                       0: self
                        218     LOAD_ATTR                       6: _orig_file_size
                        220     LOAD_FAST                       0: self
                        222     STORE_ATTR                      17: _left
                        224     LOAD_CONST                      7: b''
                        226     LOAD_FAST                       0: self
                        228     STORE_ATTR                      9: _readbuffer
                        230     LOAD_CONST                      3: 0
                        232     LOAD_FAST                       0: self
                        234     STORE_ATTR                      7: _offset
                        236     LOAD_GLOBAL                     18: _get_decompressor
                        238     LOAD_FAST                       0: self
                        240     LOAD_ATTR                       19: _compress_type
                        242     CALL_FUNCTION                   1
                        244     LOAD_FAST                       0: self
                        246     STORE_ATTR                      20: _decompressor
                        248     LOAD_CONST                      8: False
                        250     LOAD_FAST                       0: self
                        252     STORE_ATTR                      21: _eof
                        254     LOAD_FAST                       4: new_pos
                        256     STORE_FAST                      5: read_offset
                        258     LOAD_FAST                       0: self
                        260     LOAD_ATTR                       22: _decrypter
                        262     LOAD_CONST                      0: None
                        264     IS_OP                           1 (is not)
                        266     POP_JUMP_IF_FALSE               138 (to 276)
                        268     LOAD_FAST                       0: self
                        270     LOAD_METHOD                     23: _init_decrypter
                        272     CALL_METHOD                     0
                        274     POP_TOP                         
                        276     LOAD_FAST                       5: read_offset
                        278     LOAD_CONST                      3: 0
                        280     COMPARE_OP                      4 (>)
                        282     POP_JUMP_IF_FALSE               161 (to 322)
                        284     LOAD_GLOBAL                     24: min
                        286     LOAD_FAST                       0: self
                        288     LOAD_ATTR                       25: MAX_SEEK_READ
                        290     LOAD_FAST                       5: read_offset
                        292     CALL_FUNCTION                   2
                        294     STORE_FAST                      7: read_len
                        296     LOAD_FAST                       0: self
                        298     LOAD_METHOD                     26: read
                        300     LOAD_FAST                       7: read_len
                        302     CALL_METHOD                     1
                        304     POP_TOP                         
                        306     LOAD_FAST                       5: read_offset
                        308     LOAD_FAST                       7: read_len
                        310     INPLACE_SUBTRACT                
                        312     STORE_FAST                      5: read_offset
                        314     LOAD_FAST                       5: read_offset
                        316     LOAD_CONST                      3: 0
                        318     COMPARE_OP                      4 (>)
                        320     POP_JUMP_IF_TRUE                142 (to 284)
                        322     LOAD_FAST                       0: self
                        324     LOAD_METHOD                     5: tell
                        326     CALL_METHOD                     0
                        328     RETURN_VALUE                    
                'ZipExtFile.seek'
                [Code]
                    File Name: zipfile.py
                    Object Name: tell
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                        '_seekable'
                        'io'
                        'UnsupportedOperation'
                        '_orig_file_size'
                        '_left'
                        'len'
                        '_readbuffer'
                        '_offset'
                    [Var Names]
                        'self'
                        'filepos'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'tell on closed file.'
                        'underlying stream is not seekable'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'tell on closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _seekable
                        18      POP_JUMP_IF_TRUE                15 (to 30)
                        20      LOAD_GLOBAL                     3: io
                        22      LOAD_METHOD                     4: UnsupportedOperation
                        24      LOAD_CONST                      2: 'underlying stream is not seekable'
                        26      CALL_METHOD                     1
                        28      RAISE_VARARGS                   1
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       5: _orig_file_size
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       6: _left
                        38      BINARY_SUBTRACT                 
                        40      LOAD_GLOBAL                     7: len
                        42      LOAD_FAST                       0: self
                        44      LOAD_ATTR                       8: _readbuffer
                        46      CALL_FUNCTION                   1
                        48      BINARY_SUBTRACT                 
                        50      LOAD_FAST                       0: self
                        52      LOAD_ATTR                       9: _offset
                        54      BINARY_ADD                      
                        56      STORE_FAST                      1: filepos
                        58      LOAD_FAST                       1: filepos
                        60      RETURN_VALUE                    
                'ZipExtFile.tell'
                (
                    None
                    False
                )
                (
                    -1
                )
                (
                    1
                )
                (
                    0
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ZipExtFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'File-like object for reading an archive member.\n       Is returned by ZipFile.open().\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: 1073741824
                14      STORE_NAME                      4: MAX_N
                16      LOAD_CONST                      3: 4096
                18      STORE_NAME                      5: MIN_READ_SIZE
                20      LOAD_CONST                      4: 16777216
                22      STORE_NAME                      6: MAX_SEEK_READ
                24      NOP                             
                26      NOP                             
                28      LOAD_CONST                      40: (None, False)
                30      LOAD_CONST                      7: <CODE> __init__
                32      LOAD_CONST                      8: 'ZipExtFile.__init__'
                34      MAKE_FUNCTION                   1
                36      STORE_NAME                      7: __init__
                38      LOAD_CONST                      9: <CODE> _init_decrypter
                40      LOAD_CONST                      10: 'ZipExtFile._init_decrypter'
                42      MAKE_FUNCTION                   0
                44      STORE_NAME                      8: _init_decrypter
                46      LOAD_CONST                      11: <CODE> __repr__
                48      LOAD_CONST                      12: 'ZipExtFile.__repr__'
                50      MAKE_FUNCTION                   0
                52      STORE_NAME                      9: __repr__
                54      LOAD_CONST                      41: (-1,)
                56      LOAD_CONST                      14: <CODE> readline
                58      LOAD_CONST                      15: 'ZipExtFile.readline'
                60      MAKE_FUNCTION                   1
                62      STORE_NAME                      10: readline
                64      LOAD_CONST                      42: (1,)
                66      LOAD_CONST                      17: <CODE> peek
                68      LOAD_CONST                      18: 'ZipExtFile.peek'
                70      MAKE_FUNCTION                   1
                72      STORE_NAME                      11: peek
                74      LOAD_CONST                      19: <CODE> readable
                76      LOAD_CONST                      20: 'ZipExtFile.readable'
                78      MAKE_FUNCTION                   0
                80      STORE_NAME                      12: readable
                82      LOAD_CONST                      41: (-1,)
                84      LOAD_CONST                      21: <CODE> read
                86      LOAD_CONST                      22: 'ZipExtFile.read'
                88      MAKE_FUNCTION                   1
                90      STORE_NAME                      13: read
                92      LOAD_CONST                      23: <CODE> _update_crc
                94      LOAD_CONST                      24: 'ZipExtFile._update_crc'
                96      MAKE_FUNCTION                   0
                98      STORE_NAME                      14: _update_crc
                100     LOAD_CONST                      25: <CODE> read1
                102     LOAD_CONST                      26: 'ZipExtFile.read1'
                104     MAKE_FUNCTION                   0
                106     STORE_NAME                      15: read1
                108     LOAD_CONST                      27: <CODE> _read1
                110     LOAD_CONST                      28: 'ZipExtFile._read1'
                112     MAKE_FUNCTION                   0
                114     STORE_NAME                      16: _read1
                116     LOAD_CONST                      29: <CODE> _read2
                118     LOAD_CONST                      30: 'ZipExtFile._read2'
                120     MAKE_FUNCTION                   0
                122     STORE_NAME                      17: _read2
                124     LOAD_CLOSURE                    0: __class__
                126     BUILD_TUPLE                     1
                128     LOAD_CONST                      31: <CODE> close
                130     LOAD_CONST                      32: 'ZipExtFile.close'
                132     MAKE_FUNCTION                   8
                134     STORE_NAME                      18: close
                136     LOAD_CONST                      33: <CODE> seekable
                138     LOAD_CONST                      34: 'ZipExtFile.seekable'
                140     MAKE_FUNCTION                   0
                142     STORE_NAME                      19: seekable
                144     LOAD_CONST                      43: (0,)
                146     LOAD_CONST                      36: <CODE> seek
                148     LOAD_CONST                      37: 'ZipExtFile.seek'
                150     MAKE_FUNCTION                   1
                152     STORE_NAME                      20: seek
                154     LOAD_CONST                      38: <CODE> tell
                156     LOAD_CONST                      39: 'ZipExtFile.tell'
                158     MAKE_FUNCTION                   0
                160     STORE_NAME                      21: tell
                162     LOAD_CLOSURE                    0: __class__
                164     DUP_TOP                         
                166     STORE_NAME                      22: __classcell__
                168     RETURN_VALUE                    
        'ZipExtFile'
        [Code]
            File Name: zipfile.py
            Object Name: _ZipWriteFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__init__'
                'property'
                '_fileobj'
                'writable'
                'write'
                'close'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                '_ZipWriteFile'
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_zinfo'
                        '_zip64'
                        '_zipfile'
                        '_get_compressor'
                        'compress_type'
                        '_compresslevel'
                        '_compressor'
                        '_file_size'
                        '_compress_size'
                        '_crc'
                    [Var Names]
                        'self'
                        'zf'
                        'zinfo'
                        'zip64'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                    [Disassembly]
                        0       LOAD_FAST                       2: zinfo
                        2       LOAD_FAST                       0: self
                        4       STORE_ATTR                      0: _zinfo
                        6       LOAD_FAST                       3: zip64
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      1: _zip64
                        12      LOAD_FAST                       1: zf
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      2: _zipfile
                        18      LOAD_GLOBAL                     3: _get_compressor
                        20      LOAD_FAST                       2: zinfo
                        22      LOAD_ATTR                       4: compress_type
                        24      LOAD_FAST                       2: zinfo
                        26      LOAD_ATTR                       5: _compresslevel
                        28      CALL_FUNCTION                   2
                        30      LOAD_FAST                       0: self
                        32      STORE_ATTR                      6: _compressor
                        34      LOAD_CONST                      1: 0
                        36      LOAD_FAST                       0: self
                        38      STORE_ATTR                      7: _file_size
                        40      LOAD_CONST                      1: 0
                        42      LOAD_FAST                       0: self
                        44      STORE_ATTR                      8: _compress_size
                        46      LOAD_CONST                      1: 0
                        48      LOAD_FAST                       0: self
                        50      STORE_ATTR                      9: _crc
                        52      LOAD_CONST                      0: None
                        54      RETURN_VALUE                    
                '_ZipWriteFile.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: _fileobj
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_zipfile'
                        'fp'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _zipfile
                        4       LOAD_ATTR                       1: fp
                        6       RETURN_VALUE                    
                '_ZipWriteFile._fileobj'
                [Code]
                    File Name: zipfile.py
                    Object Name: writable
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        True
                    [Disassembly]
                        0       LOAD_CONST                      1: True
                        2       RETURN_VALUE                    
                '_ZipWriteFile.writable'
                [Code]
                    File Name: zipfile.py
                    Object Name: write
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'closed'
                        'ValueError'
                        'isinstance'
                        'bytes'
                        'bytearray'
                        'len'
                        'memoryview'
                        'nbytes'
                        '_file_size'
                        'crc32'
                        '_crc'
                        '_compressor'
                        'compress'
                        '_compress_size'
                        '_fileobj'
                        'write'
                    [Var Names]
                        'self'
                        'data'
                        'nbytes'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'I/O operation on closed file.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'I/O operation on closed file.'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_GLOBAL                     2: isinstance
                        16      LOAD_FAST                       1: data
                        18      LOAD_GLOBAL                     3: bytes
                        20      LOAD_GLOBAL                     4: bytearray
                        22      BUILD_TUPLE                     2
                        24      CALL_FUNCTION                   2
                        26      POP_JUMP_IF_FALSE               19 (to 38)
                        28      LOAD_GLOBAL                     5: len
                        30      LOAD_FAST                       1: data
                        32      CALL_FUNCTION                   1
                        34      STORE_FAST                      2: nbytes
                        36      JUMP_FORWARD                    7 (to 52)
                        38      LOAD_GLOBAL                     6: memoryview
                        40      LOAD_FAST                       1: data
                        42      CALL_FUNCTION                   1
                        44      STORE_FAST                      1: data
                        46      LOAD_FAST                       1: data
                        48      LOAD_ATTR                       7: nbytes
                        50      STORE_FAST                      2: nbytes
                        52      LOAD_FAST                       0: self
                        54      DUP_TOP                         
                        56      LOAD_ATTR                       8: _file_size
                        58      LOAD_FAST                       2: nbytes
                        60      INPLACE_ADD                     
                        62      ROT_TWO                         
                        64      STORE_ATTR                      8: _file_size
                        66      LOAD_GLOBAL                     9: crc32
                        68      LOAD_FAST                       1: data
                        70      LOAD_FAST                       0: self
                        72      LOAD_ATTR                       10: _crc
                        74      CALL_FUNCTION                   2
                        76      LOAD_FAST                       0: self
                        78      STORE_ATTR                      10: _crc
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       11: _compressor
                        84      POP_JUMP_IF_FALSE               58 (to 116)
                        86      LOAD_FAST                       0: self
                        88      LOAD_ATTR                       11: _compressor
                        90      LOAD_METHOD                     12: compress
                        92      LOAD_FAST                       1: data
                        94      CALL_METHOD                     1
                        96      STORE_FAST                      1: data
                        98      LOAD_FAST                       0: self
                        100     DUP_TOP                         
                        102     LOAD_ATTR                       13: _compress_size
                        104     LOAD_GLOBAL                     5: len
                        106     LOAD_FAST                       1: data
                        108     CALL_FUNCTION                   1
                        110     INPLACE_ADD                     
                        112     ROT_TWO                         
                        114     STORE_ATTR                      13: _compress_size
                        116     LOAD_FAST                       0: self
                        118     LOAD_ATTR                       14: _fileobj
                        120     LOAD_METHOD                     15: write
                        122     LOAD_FAST                       1: data
                        124     CALL_METHOD                     1
                        126     POP_TOP                         
                        128     LOAD_FAST                       2: nbytes
                        130     RETURN_VALUE                    
                '_ZipWriteFile.write'
                [Code]
                    File Name: zipfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 9
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'closed'
                        'super'
                        'close'
                        '_compressor'
                        'flush'
                        '_compress_size'
                        'len'
                        '_fileobj'
                        'write'
                        '_zinfo'
                        'compress_size'
                        '_file_size'
                        '_crc'
                        'CRC'
                        'file_size'
                        'flag_bits'
                        '_zip64'
                        'struct'
                        'pack'
                        '_DD_SIGNATURE'
                        'tell'
                        '_zipfile'
                        'start_dir'
                        'ZIP64_LIMIT'
                        'RuntimeError'
                        'seek'
                        'header_offset'
                        'FileHeader'
                        'filelist'
                        'append'
                        'NameToInfo'
                        'filename'
                        '_writing'
                    [Var Names]
                        'self'
                        'buf'
                        'fmt'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                        8
                        '<LLQQ'
                        '<LLLL'
                        'File size unexpectedly exceeded ZIP64 limit'
                        'Compressed size unexpectedly exceeded ZIP64 limit'
                        False
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: closed
                        4       POP_JUMP_IF_FALSE               5 (to 10)
                        6       LOAD_CONST                      0: None
                        8       RETURN_VALUE                    
                        10      SETUP_FINALLY                   168 (to 348)
                        12      LOAD_GLOBAL                     1: super
                        14      CALL_FUNCTION                   0
                        16      LOAD_METHOD                     2: close
                        18      CALL_METHOD                     0
                        20      POP_TOP                         
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: _compressor
                        26      POP_JUMP_IF_FALSE               40 (to 80)
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       3: _compressor
                        32      LOAD_METHOD                     4: flush
                        34      CALL_METHOD                     0
                        36      STORE_FAST                      1: buf
                        38      LOAD_FAST                       0: self
                        40      DUP_TOP                         
                        42      LOAD_ATTR                       5: _compress_size
                        44      LOAD_GLOBAL                     6: len
                        46      LOAD_FAST                       1: buf
                        48      CALL_FUNCTION                   1
                        50      INPLACE_ADD                     
                        52      ROT_TWO                         
                        54      STORE_ATTR                      5: _compress_size
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       7: _fileobj
                        60      LOAD_METHOD                     8: write
                        62      LOAD_FAST                       1: buf
                        64      CALL_METHOD                     1
                        66      POP_TOP                         
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       5: _compress_size
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       9: _zinfo
                        76      STORE_ATTR                      10: compress_size
                        78      JUMP_FORWARD                    5 (to 90)
                        80      LOAD_FAST                       0: self
                        82      LOAD_ATTR                       11: _file_size
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       9: _zinfo
                        88      STORE_ATTR                      10: compress_size
                        90      LOAD_FAST                       0: self
                        92      LOAD_ATTR                       12: _crc
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       9: _zinfo
                        98      STORE_ATTR                      13: CRC
                        100     LOAD_FAST                       0: self
                        102     LOAD_ATTR                       11: _file_size
                        104     LOAD_FAST                       0: self
                        106     LOAD_ATTR                       9: _zinfo
                        108     STORE_ATTR                      14: file_size
                        110     LOAD_FAST                       0: self
                        112     LOAD_ATTR                       9: _zinfo
                        114     LOAD_ATTR                       15: flag_bits
                        116     LOAD_CONST                      1: 8
                        118     BINARY_AND                      
                        120     POP_JUMP_IF_FALSE               95 (to 190)
                        122     LOAD_FAST                       0: self
                        124     LOAD_ATTR                       16: _zip64
                        126     POP_JUMP_IF_FALSE               66 (to 132)
                        128     LOAD_CONST                      2: '<LLQQ'
                        130     JUMP_FORWARD                    1 (to 134)
                        132     LOAD_CONST                      3: '<LLLL'
                        134     STORE_FAST                      2: fmt
                        136     LOAD_FAST                       0: self
                        138     LOAD_ATTR                       7: _fileobj
                        140     LOAD_METHOD                     8: write
                        142     LOAD_GLOBAL                     17: struct
                        144     LOAD_METHOD                     18: pack
                        146     LOAD_FAST                       2: fmt
                        148     LOAD_GLOBAL                     19: _DD_SIGNATURE
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       9: _zinfo
                        154     LOAD_ATTR                       13: CRC
                        156     LOAD_FAST                       0: self
                        158     LOAD_ATTR                       9: _zinfo
                        160     LOAD_ATTR                       10: compress_size
                        162     LOAD_FAST                       0: self
                        164     LOAD_ATTR                       9: _zinfo
                        166     LOAD_ATTR                       14: file_size
                        168     CALL_METHOD                     5
                        170     CALL_METHOD                     1
                        172     POP_TOP                         
                        174     LOAD_FAST                       0: self
                        176     LOAD_ATTR                       7: _fileobj
                        178     LOAD_METHOD                     20: tell
                        180     CALL_METHOD                     0
                        182     LOAD_FAST                       0: self
                        184     LOAD_ATTR                       21: _zipfile
                        186     STORE_ATTR                      22: start_dir
                        188     JUMP_FORWARD                    55 (to 300)
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       16: _zip64
                        194     POP_JUMP_IF_TRUE                116 (to 232)
                        196     LOAD_FAST                       0: self
                        198     LOAD_ATTR                       11: _file_size
                        200     LOAD_GLOBAL                     23: ZIP64_LIMIT
                        202     COMPARE_OP                      4 (>)
                        204     POP_JUMP_IF_FALSE               107 (to 214)
                        206     LOAD_GLOBAL                     24: RuntimeError
                        208     LOAD_CONST                      4: 'File size unexpectedly exceeded ZIP64 limit'
                        210     CALL_FUNCTION                   1
                        212     RAISE_VARARGS                   1
                        214     LOAD_FAST                       0: self
                        216     LOAD_ATTR                       5: _compress_size
                        218     LOAD_GLOBAL                     23: ZIP64_LIMIT
                        220     COMPARE_OP                      4 (>)
                        222     POP_JUMP_IF_FALSE               116 (to 232)
                        224     LOAD_GLOBAL                     24: RuntimeError
                        226     LOAD_CONST                      5: 'Compressed size unexpectedly exceeded ZIP64 limit'
                        228     CALL_FUNCTION                   1
                        230     RAISE_VARARGS                   1
                        232     LOAD_FAST                       0: self
                        234     LOAD_ATTR                       7: _fileobj
                        236     LOAD_METHOD                     20: tell
                        238     CALL_METHOD                     0
                        240     LOAD_FAST                       0: self
                        242     LOAD_ATTR                       21: _zipfile
                        244     STORE_ATTR                      22: start_dir
                        246     LOAD_FAST                       0: self
                        248     LOAD_ATTR                       7: _fileobj
                        250     LOAD_METHOD                     25: seek
                        252     LOAD_FAST                       0: self
                        254     LOAD_ATTR                       9: _zinfo
                        256     LOAD_ATTR                       26: header_offset
                        258     CALL_METHOD                     1
                        260     POP_TOP                         
                        262     LOAD_FAST                       0: self
                        264     LOAD_ATTR                       7: _fileobj
                        266     LOAD_METHOD                     8: write
                        268     LOAD_FAST                       0: self
                        270     LOAD_ATTR                       9: _zinfo
                        272     LOAD_METHOD                     27: FileHeader
                        274     LOAD_FAST                       0: self
                        276     LOAD_ATTR                       16: _zip64
                        278     CALL_METHOD                     1
                        280     CALL_METHOD                     1
                        282     POP_TOP                         
                        284     LOAD_FAST                       0: self
                        286     LOAD_ATTR                       7: _fileobj
                        288     LOAD_METHOD                     25: seek
                        290     LOAD_FAST                       0: self
                        292     LOAD_ATTR                       21: _zipfile
                        294     LOAD_ATTR                       22: start_dir
                        296     CALL_METHOD                     1
                        298     POP_TOP                         
                        300     LOAD_FAST                       0: self
                        302     LOAD_ATTR                       21: _zipfile
                        304     LOAD_ATTR                       28: filelist
                        306     LOAD_METHOD                     29: append
                        308     LOAD_FAST                       0: self
                        310     LOAD_ATTR                       9: _zinfo
                        312     CALL_METHOD                     1
                        314     POP_TOP                         
                        316     LOAD_FAST                       0: self
                        318     LOAD_ATTR                       9: _zinfo
                        320     LOAD_FAST                       0: self
                        322     LOAD_ATTR                       21: _zipfile
                        324     LOAD_ATTR                       30: NameToInfo
                        326     LOAD_FAST                       0: self
                        328     LOAD_ATTR                       9: _zinfo
                        330     LOAD_ATTR                       31: filename
                        332     STORE_SUBSCR                    
                        334     POP_BLOCK                       
                        336     LOAD_CONST                      6: False
                        338     LOAD_FAST                       0: self
                        340     LOAD_ATTR                       21: _zipfile
                        342     STORE_ATTR                      32: _writing
                        344     LOAD_CONST                      0: None
                        346     RETURN_VALUE                    
                        348     LOAD_CONST                      6: False
                        350     LOAD_FAST                       0: self
                        352     LOAD_ATTR                       21: _zipfile
                        354     STORE_ATTR                      32: _writing
                        356     RERAISE                         0
                '_ZipWriteFile.close'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_ZipWriteFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: <CODE> __init__
                10      LOAD_CONST                      2: '_ZipWriteFile.__init__'
                12      MAKE_FUNCTION                   0
                14      STORE_NAME                      3: __init__
                16      LOAD_NAME                       4: property
                18      LOAD_CONST                      3: <CODE> _fileobj
                20      LOAD_CONST                      4: '_ZipWriteFile._fileobj'
                22      MAKE_FUNCTION                   0
                24      CALL_FUNCTION                   1
                26      STORE_NAME                      5: _fileobj
                28      LOAD_CONST                      5: <CODE> writable
                30      LOAD_CONST                      6: '_ZipWriteFile.writable'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: writable
                36      LOAD_CONST                      7: <CODE> write
                38      LOAD_CONST                      8: '_ZipWriteFile.write'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: write
                44      LOAD_CLOSURE                    0: __class__
                46      BUILD_TUPLE                     1
                48      LOAD_CONST                      9: <CODE> close
                50      LOAD_CONST                      10: '_ZipWriteFile.close'
                52      MAKE_FUNCTION                   8
                54      STORE_NAME                      8: close
                56      LOAD_CLOSURE                    0: __class__
                58      DUP_TOP                         
                60      STORE_NAME                      9: __classcell__
                62      RETURN_VALUE                    
        '_ZipWriteFile'
        [Code]
            File Name: zipfile.py
            Object Name: ZipFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'fp'
                '_windows_illegal_name_trans_table'
                'ZIP_STORED'
                '__init__'
                '__enter__'
                '__exit__'
                '__repr__'
                '_RealGetContents'
                'namelist'
                'infolist'
                'printdir'
                'testzip'
                'getinfo'
                'setpassword'
                'property'
                'comment'
                'setter'
                'read'
                'open'
                '_open_to_write'
                'extract'
                'extractall'
                'classmethod'
                '_sanitize_windows_name'
                '_extract_member'
                '_writecheck'
                'write'
                'writestr'
                '__del__'
                'close'
                '_write_end_record'
                '_fpclose'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ZipFile'
                ' Class with methods to open, read, write, close, list zip files.\n\n    z = ZipFile(file, mode="r", compression=ZIP_STORED, allowZip64=True,\n                compresslevel=None)\n\n    file: Either the path to the file, or a file-like object.\n          If it is a path, the file will be opened and closed by ZipFile.\n    mode: The mode can be either read \'r\', write \'w\', exclusive create \'x\',\n          or append \'a\'.\n    compression: ZIP_STORED (no compression), ZIP_DEFLATED (requires zlib),\n                 ZIP_BZIP2 (requires bz2) or ZIP_LZMA (requires lzma).\n    allowZip64: if True ZipFile will create files with ZIP64 extensions when\n                needed, otherwise it will raise an exception when this would\n                be necessary.\n    compresslevel: None (default for the given compression type) or an integer\n                   specifying the level to pass to the compressor.\n                   When using ZIP_STORED or ZIP_LZMA this keyword has no effect.\n                   When using ZIP_DEFLATED integers 0 through 9 are accepted.\n                   When using ZIP_BZIP2 integers 1 through 9 are accepted.\n\n    '
                None
                'r'
                True
                (
                    'strict_timestamps'
                )
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 10
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ValueError'
                        '_check_compression'
                        '_allowZip64'
                        '_didModify'
                        'debug'
                        'NameToInfo'
                        'filelist'
                        'compression'
                        'compresslevel'
                        'mode'
                        'pwd'
                        '_comment'
                        '_strict_timestamps'
                        'isinstance'
                        'os'
                        'PathLike'
                        'fspath'
                        'str'
                        '_filePassed'
                        'filename'
                        'io'
                        'open'
                        'fp'
                        'OSError'
                        'getattr'
                        '_fileRefCnt'
                        'threading'
                        'RLock'
                        '_lock'
                        '_seekable'
                        '_writing'
                        '_RealGetContents'
                        'tell'
                        'start_dir'
                        'AttributeError'
                        '_Tellable'
                        'seek'
                        'BadZipFile'
                        '_fpclose'
                    [Var Names]
                        'self'
                        'file'
                        'mode'
                        'compression'
                        'allowZip64'
                        'compresslevel'
                        'strict_timestamps'
                        'modeDict'
                        'filemode'
                        'fp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'."
                        (
                            'r'
                            'w'
                            'x'
                            'a'
                        )
                        "ZipFile requires mode 'r', 'w', 'x', or 'a'"
                        False
                        0
                        None
                        b''
                        'rb'
                        'w+b'
                        'x+b'
                        'r+b'
                        'wb'
                        'xb'
                        (
                            'r'
                            'w'
                            'x'
                            'a'
                            'r+b'
                            'w+b'
                            'x+b'
                        )
                        True
                        1
                        'name'
                        'r'
                        (
                            'w'
                            'x'
                        )
                        'a'
                        2
                        "Mode must be 'r', 'w', 'x', or 'a'"
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: ('r', 'w', 'x', 'a')
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: "ZipFile requires mode 'r', 'w', 'x', or 'a'"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_GLOBAL                     1: _check_compression
                        18      LOAD_FAST                       3: compression
                        20      CALL_FUNCTION                   1
                        22      POP_TOP                         
                        24      LOAD_FAST                       4: allowZip64
                        26      LOAD_FAST                       0: self
                        28      STORE_ATTR                      2: _allowZip64
                        30      LOAD_CONST                      3: False
                        32      LOAD_FAST                       0: self
                        34      STORE_ATTR                      3: _didModify
                        36      LOAD_CONST                      4: 0
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      4: debug
                        42      BUILD_MAP                       0
                        44      LOAD_FAST                       0: self
                        46      STORE_ATTR                      5: NameToInfo
                        48      BUILD_LIST                      0
                        50      LOAD_FAST                       0: self
                        52      STORE_ATTR                      6: filelist
                        54      LOAD_FAST                       3: compression
                        56      LOAD_FAST                       0: self
                        58      STORE_ATTR                      7: compression
                        60      LOAD_FAST                       5: compresslevel
                        62      LOAD_FAST                       0: self
                        64      STORE_ATTR                      8: compresslevel
                        66      LOAD_FAST                       2: mode
                        68      LOAD_FAST                       0: self
                        70      STORE_ATTR                      9: mode
                        72      LOAD_CONST                      5: None
                        74      LOAD_FAST                       0: self
                        76      STORE_ATTR                      10: pwd
                        78      LOAD_CONST                      6: b''
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      11: _comment
                        84      LOAD_FAST                       6: strict_timestamps
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      12: _strict_timestamps
                        90      LOAD_GLOBAL                     13: isinstance
                        92      LOAD_FAST                       1: file
                        94      LOAD_GLOBAL                     14: os
                        96      LOAD_ATTR                       15: PathLike
                        98      CALL_FUNCTION                   2
                        100     POP_JUMP_IF_FALSE               56 (to 112)
                        102     LOAD_GLOBAL                     14: os
                        104     LOAD_METHOD                     16: fspath
                        106     LOAD_FAST                       1: file
                        108     CALL_METHOD                     1
                        110     STORE_FAST                      1: file
                        112     LOAD_GLOBAL                     13: isinstance
                        114     LOAD_FAST                       1: file
                        116     LOAD_GLOBAL                     17: str
                        118     CALL_FUNCTION                   2
                        120     POP_JUMP_IF_FALSE               112 (to 224)
                        122     LOAD_CONST                      4: 0
                        124     LOAD_FAST                       0: self
                        126     STORE_ATTR                      18: _filePassed
                        128     LOAD_FAST                       1: file
                        130     LOAD_FAST                       0: self
                        132     STORE_ATTR                      19: filename
                        134     LOAD_CONST                      7: 'rb'
                        136     LOAD_CONST                      8: 'w+b'
                        138     LOAD_CONST                      9: 'x+b'
                        140     LOAD_CONST                      10: 'r+b'
                        142     LOAD_CONST                      8: 'w+b'
                        144     LOAD_CONST                      11: 'wb'
                        146     LOAD_CONST                      12: 'xb'
                        148     LOAD_CONST                      13: ('r', 'w', 'x', 'a', 'r+b', 'w+b', 'x+b')
                        150     BUILD_CONST_KEY_MAP             7
                        152     STORE_FAST                      7: modeDict
                        154     LOAD_FAST                       7: modeDict
                        156     LOAD_FAST                       2: mode
                        158     BINARY_SUBSCR                   
                        160     STORE_FAST                      8: filemode
                        162     NOP                             
                        164     SETUP_FINALLY                   9 (to 184)
                        166     LOAD_GLOBAL                     20: io
                        168     LOAD_METHOD                     21: open
                        170     LOAD_FAST                       1: file
                        172     LOAD_FAST                       8: filemode
                        174     CALL_METHOD                     2
                        176     LOAD_FAST                       0: self
                        178     STORE_ATTR                      22: fp
                        180     POP_BLOCK                       
                        182     JUMP_FORWARD                    18 (to 220)
                        184     DUP_TOP                         
                        186     LOAD_GLOBAL                     23: OSError
                        188     JUMP_IF_NOT_EXC_MATCH           109 (to 218)
                        190     POP_TOP                         
                        192     POP_TOP                         
                        194     POP_TOP                         
                        196     LOAD_FAST                       8: filemode
                        198     LOAD_FAST                       7: modeDict
                        200     CONTAINS_OP                     0 (in)
                        202     POP_JUMP_IF_FALSE               108 (to 216)
                        204     LOAD_FAST                       7: modeDict
                        206     LOAD_FAST                       8: filemode
                        208     BINARY_SUBSCR                   
                        210     STORE_FAST                      8: filemode
                        212     POP_EXCEPT                      
                        214     JUMP_ABSOLUTE                   81 (to 162)
                        216     RAISE_VARARGS                   0
                        218     RERAISE                         0
                        220     NOP                             
                        222     JUMP_FORWARD                    13 (to 250)
                        224     LOAD_CONST                      15: 1
                        226     LOAD_FAST                       0: self
                        228     STORE_ATTR                      18: _filePassed
                        230     LOAD_FAST                       1: file
                        232     LOAD_FAST                       0: self
                        234     STORE_ATTR                      22: fp
                        236     LOAD_GLOBAL                     24: getattr
                        238     LOAD_FAST                       1: file
                        240     LOAD_CONST                      16: 'name'
                        242     LOAD_CONST                      5: None
                        244     CALL_FUNCTION                   3
                        246     LOAD_FAST                       0: self
                        248     STORE_ATTR                      19: filename
                        250     LOAD_CONST                      15: 1
                        252     LOAD_FAST                       0: self
                        254     STORE_ATTR                      25: _fileRefCnt
                        256     LOAD_GLOBAL                     26: threading
                        258     LOAD_METHOD                     27: RLock
                        260     CALL_METHOD                     0
                        262     LOAD_FAST                       0: self
                        264     STORE_ATTR                      28: _lock
                        266     LOAD_CONST                      14: True
                        268     LOAD_FAST                       0: self
                        270     STORE_ATTR                      29: _seekable
                        272     LOAD_CONST                      3: False
                        274     LOAD_FAST                       0: self
                        276     STORE_ATTR                      30: _writing
                        278     SETUP_FINALLY                   133 (to 546)
                        280     LOAD_FAST                       2: mode
                        282     LOAD_CONST                      17: 'r'
                        284     COMPARE_OP                      2 (==)
                        286     POP_JUMP_IF_FALSE               151 (to 302)
                        288     LOAD_FAST                       0: self
                        290     LOAD_METHOD                     31: _RealGetContents
                        292     CALL_METHOD                     0
                        294     POP_TOP                         
                        296     POP_BLOCK                       
                        298     LOAD_CONST                      5: None
                        300     RETURN_VALUE                    
                        302     LOAD_FAST                       2: mode
                        304     LOAD_CONST                      18: ('w', 'x')
                        306     CONTAINS_OP                     0 (in)
                        308     POP_JUMP_IF_FALSE               220 (to 440)
                        310     LOAD_CONST                      14: True
                        312     LOAD_FAST                       0: self
                        314     STORE_ATTR                      3: _didModify
                        316     SETUP_FINALLY                   8 (to 334)
                        318     LOAD_FAST                       0: self
                        320     LOAD_ATTR                       22: fp
                        322     LOAD_METHOD                     32: tell
                        324     CALL_METHOD                     0
                        326     LOAD_FAST                       0: self
                        328     STORE_ATTR                      33: start_dir
                        330     POP_BLOCK                       
                        332     JUMP_FORWARD                    25 (to 384)
                        334     DUP_TOP                         
                        336     LOAD_GLOBAL                     34: AttributeError
                        338     LOAD_GLOBAL                     23: OSError
                        340     BUILD_TUPLE                     2
                        342     JUMP_IF_NOT_EXC_MATCH           191 (to 382)
                        344     POP_TOP                         
                        346     POP_TOP                         
                        348     POP_TOP                         
                        350     LOAD_GLOBAL                     35: _Tellable
                        352     LOAD_FAST                       0: self
                        354     LOAD_ATTR                       22: fp
                        356     CALL_FUNCTION                   1
                        358     LOAD_FAST                       0: self
                        360     STORE_ATTR                      22: fp
                        362     LOAD_CONST                      4: 0
                        364     LOAD_FAST                       0: self
                        366     STORE_ATTR                      33: start_dir
                        368     LOAD_CONST                      3: False
                        370     LOAD_FAST                       0: self
                        372     STORE_ATTR                      29: _seekable
                        374     POP_EXCEPT                      
                        376     POP_BLOCK                       
                        378     LOAD_CONST                      5: None
                        380     RETURN_VALUE                    
                        382     RERAISE                         0
                        384     SETUP_FINALLY                   11 (to 408)
                        386     LOAD_FAST                       0: self
                        388     LOAD_ATTR                       22: fp
                        390     LOAD_METHOD                     36: seek
                        392     LOAD_FAST                       0: self
                        394     LOAD_ATTR                       33: start_dir
                        396     CALL_METHOD                     1
                        398     POP_TOP                         
                        400     POP_BLOCK                       
                        402     POP_BLOCK                       
                        404     LOAD_CONST                      5: None
                        406     RETURN_VALUE                    
                        408     DUP_TOP                         
                        410     LOAD_GLOBAL                     34: AttributeError
                        412     LOAD_GLOBAL                     23: OSError
                        414     BUILD_TUPLE                     2
                        416     JUMP_IF_NOT_EXC_MATCH           219 (to 438)
                        418     POP_TOP                         
                        420     POP_TOP                         
                        422     POP_TOP                         
                        424     LOAD_CONST                      3: False
                        426     LOAD_FAST                       0: self
                        428     STORE_ATTR                      29: _seekable
                        430     POP_EXCEPT                      
                        432     POP_BLOCK                       
                        434     LOAD_CONST                      5: None
                        436     RETURN_VALUE                    
                        438     RERAISE                         0
                        440     LOAD_FAST                       2: mode
                        442     LOAD_CONST                      19: 'a'
                        444     COMPARE_OP                      2 (==)
                        446     POP_JUMP_IF_FALSE               269 (to 538)
                        450     SETUP_FINALLY                   15 (to 482)
                        452     LOAD_FAST                       0: self
                        454     LOAD_METHOD                     31: _RealGetContents
                        456     CALL_METHOD                     0
                        458     POP_TOP                         
                        460     LOAD_FAST                       0: self
                        462     LOAD_ATTR                       22: fp
                        464     LOAD_METHOD                     36: seek
                        466     LOAD_FAST                       0: self
                        468     LOAD_ATTR                       33: start_dir
                        470     CALL_METHOD                     1
                        472     POP_TOP                         
                        474     POP_BLOCK                       
                        476     POP_BLOCK                       
                        478     LOAD_CONST                      5: None
                        480     RETURN_VALUE                    
                        482     DUP_TOP                         
                        484     LOAD_GLOBAL                     37: BadZipFile
                        486     JUMP_IF_NOT_EXC_MATCH           268 (to 536)
                        490     POP_TOP                         
                        492     POP_TOP                         
                        494     POP_TOP                         
                        496     LOAD_FAST                       0: self
                        498     LOAD_ATTR                       22: fp
                        500     LOAD_METHOD                     36: seek
                        502     LOAD_CONST                      4: 0
                        504     LOAD_CONST                      20: 2
                        506     CALL_METHOD                     2
                        508     POP_TOP                         
                        510     LOAD_CONST                      14: True
                        512     LOAD_FAST                       0: self
                        514     STORE_ATTR                      3: _didModify
                        516     LOAD_FAST                       0: self
                        518     LOAD_ATTR                       22: fp
                        520     LOAD_METHOD                     32: tell
                        522     CALL_METHOD                     0
                        524     LOAD_FAST                       0: self
                        526     STORE_ATTR                      33: start_dir
                        528     POP_EXCEPT                      
                        530     POP_BLOCK                       
                        532     LOAD_CONST                      5: None
                        534     RETURN_VALUE                    
                        536     RERAISE                         0
                        538     LOAD_GLOBAL                     0: ValueError
                        540     LOAD_CONST                      21: "Mode must be 'r', 'w', 'x', or 'a'"
                        542     CALL_FUNCTION                   1
                        544     RAISE_VARARGS                   1
                        546     POP_TOP                         
                        548     POP_TOP                         
                        550     POP_TOP                         
                        552     LOAD_FAST                       0: self
                        554     LOAD_ATTR                       22: fp
                        556     STORE_FAST                      9: fp
                        558     LOAD_CONST                      5: None
                        560     LOAD_FAST                       0: self
                        562     STORE_ATTR                      22: fp
                        564     LOAD_FAST                       0: self
                        566     LOAD_METHOD                     38: _fpclose
                        568     LOAD_FAST                       9: fp
                        570     CALL_METHOD                     1
                        572     POP_TOP                         
                        574     RAISE_VARARGS                   0
                'ZipFile.__init__'
                [Code]
                    File Name: zipfile.py
                    Object Name: __enter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       RETURN_VALUE                    
                'ZipFile.__enter__'
                [Code]
                    File Name: zipfile.py
                    Object Name: __exit__
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close'
                    [Var Names]
                        'self'
                        'type'
                        'value'
                        'traceback'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: close
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_CONST                      0: None
                        10      RETURN_VALUE                    
                'ZipFile.__exit__'
                [Code]
                    File Name: zipfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        '__module__'
                        '__qualname__'
                        'fp'
                        '_filePassed'
                        'append'
                        'filename'
                        'mode'
                        'join'
                    [Var Names]
                        'self'
                        'result'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '<%s.%s'
                        ' file=%r'
                        ' filename=%r'
                        ' mode=%r'
                        ' [closed]'
                        '>'
                        ''
                    [Disassembly]
                        0       LOAD_CONST                      1: '<%s.%s'
                        2       LOAD_FAST                       0: self
                        4       LOAD_ATTR                       0: __class__
                        6       LOAD_ATTR                       1: __module__
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: __class__
                        12      LOAD_ATTR                       2: __qualname__
                        14      BUILD_TUPLE                     2
                        16      BINARY_MODULO                   
                        18      BUILD_LIST                      1
                        20      STORE_FAST                      1: result
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       3: fp
                        26      LOAD_CONST                      0: None
                        28      IS_OP                           1 (is not)
                        30      POP_JUMP_IF_FALSE               50 (to 100)
                        32      LOAD_FAST                       0: self
                        34      LOAD_ATTR                       4: _filePassed
                        36      POP_JUMP_IF_FALSE               28 (to 56)
                        38      LOAD_FAST                       1: result
                        40      LOAD_METHOD                     5: append
                        42      LOAD_CONST                      2: ' file=%r'
                        44      LOAD_FAST                       0: self
                        46      LOAD_ATTR                       3: fp
                        48      BINARY_MODULO                   
                        50      CALL_METHOD                     1
                        52      POP_TOP                         
                        54      JUMP_FORWARD                    13 (to 82)
                        56      LOAD_FAST                       0: self
                        58      LOAD_ATTR                       6: filename
                        60      LOAD_CONST                      0: None
                        62      IS_OP                           1 (is not)
                        64      POP_JUMP_IF_FALSE               41 (to 82)
                        66      LOAD_FAST                       1: result
                        68      LOAD_METHOD                     5: append
                        70      LOAD_CONST                      3: ' filename=%r'
                        72      LOAD_FAST                       0: self
                        74      LOAD_ATTR                       6: filename
                        76      BINARY_MODULO                   
                        78      CALL_METHOD                     1
                        80      POP_TOP                         
                        82      LOAD_FAST                       1: result
                        84      LOAD_METHOD                     5: append
                        86      LOAD_CONST                      4: ' mode=%r'
                        88      LOAD_FAST                       0: self
                        90      LOAD_ATTR                       7: mode
                        92      BINARY_MODULO                   
                        94      CALL_METHOD                     1
                        96      POP_TOP                         
                        98      JUMP_FORWARD                    5 (to 110)
                        100     LOAD_FAST                       1: result
                        102     LOAD_METHOD                     5: append
                        104     LOAD_CONST                      5: ' [closed]'
                        106     CALL_METHOD                     1
                        108     POP_TOP                         
                        110     LOAD_FAST                       1: result
                        112     LOAD_METHOD                     5: append
                        114     LOAD_CONST                      6: '>'
                        116     CALL_METHOD                     1
                        118     POP_TOP                         
                        120     LOAD_CONST                      7: ''
                        122     LOAD_METHOD                     8: join
                        124     LOAD_FAST                       1: result
                        126     CALL_METHOD                     1
                        128     RETURN_VALUE                    
                'ZipFile.__repr__'
                [Code]
                    File Name: zipfile.py
                    Object Name: _RealGetContents
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 17
                    Stack Size: 12
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        '_EndRecData'
                        'OSError'
                        'BadZipFile'
                        'debug'
                        'print'
                        '_ECD_SIZE'
                        '_ECD_OFFSET'
                        '_ECD_COMMENT'
                        '_comment'
                        '_ECD_LOCATION'
                        '_ECD_SIGNATURE'
                        'stringEndArchive64'
                        'sizeEndCentDir64'
                        'sizeEndCentDir64Locator'
                        'start_dir'
                        'seek'
                        'read'
                        'io'
                        'BytesIO'
                        'sizeCentralDir'
                        'len'
                        'struct'
                        'unpack'
                        'structCentralDir'
                        '_CD_SIGNATURE'
                        'stringCentralDir'
                        '_CD_FILENAME_LENGTH'
                        'decode'
                        'ZipInfo'
                        '_CD_EXTRA_FIELD_LENGTH'
                        'extra'
                        '_CD_COMMENT_LENGTH'
                        'comment'
                        '_CD_LOCAL_HEADER_OFFSET'
                        'header_offset'
                        'create_version'
                        'create_system'
                        'extract_version'
                        'reserved'
                        'flag_bits'
                        'compress_type'
                        'CRC'
                        'compress_size'
                        'file_size'
                        'MAX_EXTRACT_VERSION'
                        'NotImplementedError'
                        'volume'
                        'internal_attr'
                        'external_attr'
                        '_raw_time'
                        'date_time'
                        '_decodeExtra'
                        'filelist'
                        'append'
                        'NameToInfo'
                        'filename'
                        'sorted'
                        '_end_offset'
                    [Var Names]
                        'self'
                        'fp'
                        'endrec'
                        'size_cd'
                        'offset_cd'
                        'concat'
                        'inferred'
                        'data'
                        'total'
                        'centdir'
                        'filename'
                        'flags'
                        'x'
                        't'
                        'd'
                        'end_offset'
                        'zinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read in the table of contents for the ZIP file.'
                        'File is not a zip file'
                        1
                        2
                        'given, inferred, offset'
                        0
                        'Bad offset for central directory'
                        'Truncated central directory'
                        'Bad magic number for central directory'
                        5
                        2048
                        'utf-8'
                        'cp437'
                        12
                        'zip file version %.1f'
                        10
                        15
                        18
                        9
                        1980
                        31
                        11
                        63
                        'total'
                        [Code]
                            File Name: zipfile.py
                            Object Name: <lambda>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 1
                            Stack Size: 1
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'header_offset'
                            [Var Names]
                                'zinfo'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       LOAD_FAST                       0: zinfo
                                2       LOAD_ATTR                       0: header_offset
                                4       RETURN_VALUE                    
                        'ZipFile._RealGetContents.<locals>.<lambda>'
                        True
                        (
                            'key'
                            'reverse'
                        )
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       STORE_FAST                      1: fp
                        6       SETUP_FINALLY                   6 (to 20)
                        8       LOAD_GLOBAL                     1: _EndRecData
                        10      LOAD_FAST                       1: fp
                        12      CALL_FUNCTION                   1
                        14      STORE_FAST                      2: endrec
                        16      POP_BLOCK                       
                        18      JUMP_FORWARD                    11 (to 42)
                        20      DUP_TOP                         
                        22      LOAD_GLOBAL                     2: OSError
                        24      JUMP_IF_NOT_EXC_MATCH           20 (to 40)
                        26      POP_TOP                         
                        28      POP_TOP                         
                        30      POP_TOP                         
                        32      LOAD_GLOBAL                     3: BadZipFile
                        34      LOAD_CONST                      1: 'File is not a zip file'
                        36      CALL_FUNCTION                   1
                        38      RAISE_VARARGS                   1
                        40      RERAISE                         0
                        42      LOAD_FAST                       2: endrec
                        44      POP_JUMP_IF_TRUE                27 (to 54)
                        46      LOAD_GLOBAL                     3: BadZipFile
                        48      LOAD_CONST                      1: 'File is not a zip file'
                        50      CALL_FUNCTION                   1
                        52      RAISE_VARARGS                   1
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       4: debug
                        58      LOAD_CONST                      2: 1
                        60      COMPARE_OP                      4 (>)
                        62      POP_JUMP_IF_FALSE               36 (to 72)
                        64      LOAD_GLOBAL                     5: print
                        66      LOAD_FAST                       2: endrec
                        68      CALL_FUNCTION                   1
                        70      POP_TOP                         
                        72      LOAD_FAST                       2: endrec
                        74      LOAD_GLOBAL                     6: _ECD_SIZE
                        76      BINARY_SUBSCR                   
                        78      STORE_FAST                      3: size_cd
                        80      LOAD_FAST                       2: endrec
                        82      LOAD_GLOBAL                     7: _ECD_OFFSET
                        84      BINARY_SUBSCR                   
                        86      STORE_FAST                      4: offset_cd
                        88      LOAD_FAST                       2: endrec
                        90      LOAD_GLOBAL                     8: _ECD_COMMENT
                        92      BINARY_SUBSCR                   
                        94      LOAD_FAST                       0: self
                        96      STORE_ATTR                      9: _comment
                        98      LOAD_FAST                       2: endrec
                        100     LOAD_GLOBAL                     10: _ECD_LOCATION
                        102     BINARY_SUBSCR                   
                        104     LOAD_FAST                       3: size_cd
                        106     BINARY_SUBTRACT                 
                        108     LOAD_FAST                       4: offset_cd
                        110     BINARY_SUBTRACT                 
                        112     STORE_FAST                      5: concat
                        114     LOAD_FAST                       2: endrec
                        116     LOAD_GLOBAL                     11: _ECD_SIGNATURE
                        118     BINARY_SUBSCR                   
                        120     LOAD_GLOBAL                     12: stringEndArchive64
                        122     COMPARE_OP                      2 (==)
                        124     POP_JUMP_IF_FALSE               69 (to 138)
                        126     LOAD_FAST                       5: concat
                        128     LOAD_GLOBAL                     13: sizeEndCentDir64
                        130     LOAD_GLOBAL                     14: sizeEndCentDir64Locator
                        132     BINARY_ADD                      
                        134     INPLACE_SUBTRACT                
                        136     STORE_FAST                      5: concat
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       4: debug
                        142     LOAD_CONST                      3: 2
                        144     COMPARE_OP                      4 (>)
                        146     POP_JUMP_IF_FALSE               85 (to 170)
                        148     LOAD_FAST                       5: concat
                        150     LOAD_FAST                       4: offset_cd
                        152     BINARY_ADD                      
                        154     STORE_FAST                      6: inferred
                        156     LOAD_GLOBAL                     5: print
                        158     LOAD_CONST                      4: 'given, inferred, offset'
                        160     LOAD_FAST                       4: offset_cd
                        162     LOAD_FAST                       6: inferred
                        164     LOAD_FAST                       5: concat
                        166     CALL_FUNCTION                   4
                        168     POP_TOP                         
                        170     LOAD_FAST                       4: offset_cd
                        172     LOAD_FAST                       5: concat
                        174     BINARY_ADD                      
                        176     LOAD_FAST                       0: self
                        178     STORE_ATTR                      15: start_dir
                        180     LOAD_FAST                       0: self
                        182     LOAD_ATTR                       15: start_dir
                        184     LOAD_CONST                      5: 0
                        186     COMPARE_OP                      0 (<)
                        188     POP_JUMP_IF_FALSE               99 (to 198)
                        190     LOAD_GLOBAL                     3: BadZipFile
                        192     LOAD_CONST                      6: 'Bad offset for central directory'
                        194     CALL_FUNCTION                   1
                        196     RAISE_VARARGS                   1
                        198     LOAD_FAST                       1: fp
                        200     LOAD_METHOD                     16: seek
                        202     LOAD_FAST                       0: self
                        204     LOAD_ATTR                       15: start_dir
                        206     LOAD_CONST                      5: 0
                        208     CALL_METHOD                     2
                        210     POP_TOP                         
                        212     LOAD_FAST                       1: fp
                        214     LOAD_METHOD                     17: read
                        216     LOAD_FAST                       3: size_cd
                        218     CALL_METHOD                     1
                        220     STORE_FAST                      7: data
                        222     LOAD_GLOBAL                     18: io
                        224     LOAD_METHOD                     19: BytesIO
                        226     LOAD_FAST                       7: data
                        228     CALL_METHOD                     1
                        230     STORE_FAST                      1: fp
                        232     LOAD_CONST                      5: 0
                        234     STORE_FAST                      8: total
                        236     LOAD_FAST                       8: total
                        238     LOAD_FAST                       3: size_cd
                        240     COMPARE_OP                      0 (<)
                        242     POP_JUMP_IF_FALSE               351 (to 702)
                        246     LOAD_FAST                       1: fp
                        248     LOAD_METHOD                     17: read
                        250     LOAD_GLOBAL                     20: sizeCentralDir
                        252     CALL_METHOD                     1
                        254     STORE_FAST                      9: centdir
                        256     LOAD_GLOBAL                     21: len
                        258     LOAD_FAST                       9: centdir
                        260     CALL_FUNCTION                   1
                        262     LOAD_GLOBAL                     20: sizeCentralDir
                        264     COMPARE_OP                      3 (!=)
                        266     POP_JUMP_IF_FALSE               138 (to 276)
                        268     LOAD_GLOBAL                     3: BadZipFile
                        270     LOAD_CONST                      7: 'Truncated central directory'
                        272     CALL_FUNCTION                   1
                        274     RAISE_VARARGS                   1
                        276     LOAD_GLOBAL                     22: struct
                        278     LOAD_METHOD                     23: unpack
                        280     LOAD_GLOBAL                     24: structCentralDir
                        282     LOAD_FAST                       9: centdir
                        284     CALL_METHOD                     2
                        286     STORE_FAST                      9: centdir
                        288     LOAD_FAST                       9: centdir
                        290     LOAD_GLOBAL                     25: _CD_SIGNATURE
                        292     BINARY_SUBSCR                   
                        294     LOAD_GLOBAL                     26: stringCentralDir
                        296     COMPARE_OP                      3 (!=)
                        298     POP_JUMP_IF_FALSE               154 (to 308)
                        300     LOAD_GLOBAL                     3: BadZipFile
                        302     LOAD_CONST                      8: 'Bad magic number for central directory'
                        304     CALL_FUNCTION                   1
                        306     RAISE_VARARGS                   1
                        308     LOAD_FAST                       0: self
                        310     LOAD_ATTR                       4: debug
                        312     LOAD_CONST                      3: 2
                        314     COMPARE_OP                      4 (>)
                        316     POP_JUMP_IF_FALSE               163 (to 326)
                        318     LOAD_GLOBAL                     5: print
                        320     LOAD_FAST                       9: centdir
                        322     CALL_FUNCTION                   1
                        324     POP_TOP                         
                        326     LOAD_FAST                       1: fp
                        328     LOAD_METHOD                     17: read
                        330     LOAD_FAST                       9: centdir
                        332     LOAD_GLOBAL                     27: _CD_FILENAME_LENGTH
                        334     BINARY_SUBSCR                   
                        336     CALL_METHOD                     1
                        338     STORE_FAST                      10: filename
                        340     LOAD_FAST                       9: centdir
                        342     LOAD_CONST                      9: 5
                        344     BINARY_SUBSCR                   
                        346     STORE_FAST                      11: flags
                        348     LOAD_FAST                       11: flags
                        350     LOAD_CONST                      10: 2048
                        352     BINARY_AND                      
                        354     POP_JUMP_IF_FALSE               184 (to 368)
                        356     LOAD_FAST                       10: filename
                        358     LOAD_METHOD                     28: decode
                        360     LOAD_CONST                      11: 'utf-8'
                        362     CALL_METHOD                     1
                        364     STORE_FAST                      10: filename
                        366     JUMP_FORWARD                    5 (to 378)
                        368     LOAD_FAST                       10: filename
                        370     LOAD_METHOD                     28: decode
                        372     LOAD_CONST                      12: 'cp437'
                        374     CALL_METHOD                     1
                        376     STORE_FAST                      10: filename
                        378     LOAD_GLOBAL                     29: ZipInfo
                        380     LOAD_FAST                       10: filename
                        382     CALL_FUNCTION                   1
                        384     STORE_FAST                      12: x
                        386     LOAD_FAST                       1: fp
                        388     LOAD_METHOD                     17: read
                        390     LOAD_FAST                       9: centdir
                        392     LOAD_GLOBAL                     30: _CD_EXTRA_FIELD_LENGTH
                        394     BINARY_SUBSCR                   
                        396     CALL_METHOD                     1
                        398     LOAD_FAST                       12: x
                        400     STORE_ATTR                      31: extra
                        402     LOAD_FAST                       1: fp
                        404     LOAD_METHOD                     17: read
                        406     LOAD_FAST                       9: centdir
                        408     LOAD_GLOBAL                     32: _CD_COMMENT_LENGTH
                        410     BINARY_SUBSCR                   
                        412     CALL_METHOD                     1
                        414     LOAD_FAST                       12: x
                        416     STORE_ATTR                      33: comment
                        418     LOAD_FAST                       9: centdir
                        420     LOAD_GLOBAL                     34: _CD_LOCAL_HEADER_OFFSET
                        422     BINARY_SUBSCR                   
                        424     LOAD_FAST                       12: x
                        426     STORE_ATTR                      35: header_offset
                        428     LOAD_FAST                       9: centdir
                        430     LOAD_CONST                      2: 1
                        432     LOAD_CONST                      13: 12
                        434     BUILD_SLICE                     2
                        436     BINARY_SUBSCR                   
                        438     UNPACK_SEQUENCE                 11
                        440     LOAD_FAST                       12: x
                        442     STORE_ATTR                      36: create_version
                        444     LOAD_FAST                       12: x
                        446     STORE_ATTR                      37: create_system
                        448     LOAD_FAST                       12: x
                        450     STORE_ATTR                      38: extract_version
                        452     LOAD_FAST                       12: x
                        454     STORE_ATTR                      39: reserved
                        456     LOAD_FAST                       12: x
                        458     STORE_ATTR                      40: flag_bits
                        460     LOAD_FAST                       12: x
                        462     STORE_ATTR                      41: compress_type
                        464     STORE_FAST                      13: t
                        466     STORE_FAST                      14: d
                        468     LOAD_FAST                       12: x
                        470     STORE_ATTR                      42: CRC
                        472     LOAD_FAST                       12: x
                        474     STORE_ATTR                      43: compress_size
                        476     LOAD_FAST                       12: x
                        478     STORE_ATTR                      44: file_size
                        480     LOAD_FAST                       12: x
                        482     LOAD_ATTR                       38: extract_version
                        484     LOAD_GLOBAL                     45: MAX_EXTRACT_VERSION
                        486     COMPARE_OP                      4 (>)
                        488     POP_JUMP_IF_FALSE               254 (to 508)
                        490     LOAD_GLOBAL                     46: NotImplementedError
                        492     LOAD_CONST                      14: 'zip file version %.1f'
                        494     LOAD_FAST                       12: x
                        496     LOAD_ATTR                       38: extract_version
                        498     LOAD_CONST                      15: 10
                        500     BINARY_TRUE_DIVIDE              
                        502     BINARY_MODULO                   
                        504     CALL_FUNCTION                   1
                        506     RAISE_VARARGS                   1
                        508     LOAD_FAST                       9: centdir
                        510     LOAD_CONST                      16: 15
                        512     LOAD_CONST                      17: 18
                        514     BUILD_SLICE                     2
                        516     BINARY_SUBSCR                   
                        518     UNPACK_SEQUENCE                 3
                        520     LOAD_FAST                       12: x
                        522     STORE_ATTR                      47: volume
                        524     LOAD_FAST                       12: x
                        526     STORE_ATTR                      48: internal_attr
                        528     LOAD_FAST                       12: x
                        530     STORE_ATTR                      49: external_attr
                        532     LOAD_FAST                       13: t
                        534     LOAD_FAST                       12: x
                        536     STORE_ATTR                      50: _raw_time
                        538     LOAD_FAST                       14: d
                        540     LOAD_CONST                      18: 9
                        542     BINARY_RSHIFT                   
                        544     LOAD_CONST                      19: 1980
                        546     BINARY_ADD                      
                        548     LOAD_FAST                       14: d
                        550     LOAD_CONST                      9: 5
                        552     BINARY_RSHIFT                   
                        554     LOAD_CONST                      16: 15
                        556     BINARY_AND                      
                        558     LOAD_FAST                       14: d
                        560     LOAD_CONST                      20: 31
                        562     BINARY_AND                      
                        564     LOAD_FAST                       13: t
                        566     LOAD_CONST                      21: 11
                        568     BINARY_RSHIFT                   
                        570     LOAD_FAST                       13: t
                        572     LOAD_CONST                      9: 5
                        574     BINARY_RSHIFT                   
                        576     LOAD_CONST                      22: 63
                        578     BINARY_AND                      
                        580     LOAD_FAST                       13: t
                        582     LOAD_CONST                      20: 31
                        584     BINARY_AND                      
                        586     LOAD_CONST                      3: 2
                        588     BINARY_MULTIPLY                 
                        590     BUILD_TUPLE                     6
                        592     LOAD_FAST                       12: x
                        594     STORE_ATTR                      51: date_time
                        596     LOAD_FAST                       12: x
                        598     LOAD_METHOD                     52: _decodeExtra
                        600     CALL_METHOD                     0
                        602     POP_TOP                         
                        604     LOAD_FAST                       12: x
                        606     LOAD_ATTR                       35: header_offset
                        608     LOAD_FAST                       5: concat
                        610     BINARY_ADD                      
                        612     LOAD_FAST                       12: x
                        614     STORE_ATTR                      35: header_offset
                        616     LOAD_FAST                       0: self
                        618     LOAD_ATTR                       53: filelist
                        620     LOAD_METHOD                     54: append
                        622     LOAD_FAST                       12: x
                        624     CALL_METHOD                     1
                        626     POP_TOP                         
                        628     LOAD_FAST                       12: x
                        630     LOAD_FAST                       0: self
                        632     LOAD_ATTR                       55: NameToInfo
                        634     LOAD_FAST                       12: x
                        636     LOAD_ATTR                       56: filename
                        638     STORE_SUBSCR                    
                        640     LOAD_FAST                       8: total
                        642     LOAD_GLOBAL                     20: sizeCentralDir
                        644     BINARY_ADD                      
                        646     LOAD_FAST                       9: centdir
                        648     LOAD_GLOBAL                     27: _CD_FILENAME_LENGTH
                        650     BINARY_SUBSCR                   
                        652     BINARY_ADD                      
                        654     LOAD_FAST                       9: centdir
                        656     LOAD_GLOBAL                     30: _CD_EXTRA_FIELD_LENGTH
                        658     BINARY_SUBSCR                   
                        660     BINARY_ADD                      
                        662     LOAD_FAST                       9: centdir
                        664     LOAD_GLOBAL                     32: _CD_COMMENT_LENGTH
                        666     BINARY_SUBSCR                   
                        668     BINARY_ADD                      
                        670     STORE_FAST                      8: total
                        672     LOAD_FAST                       0: self
                        674     LOAD_ATTR                       4: debug
                        676     LOAD_CONST                      3: 2
                        678     COMPARE_OP                      4 (>)
                        680     POP_JUMP_IF_FALSE               347 (to 694)
                        684     LOAD_GLOBAL                     5: print
                        686     LOAD_CONST                      23: 'total'
                        688     LOAD_FAST                       8: total
                        690     CALL_FUNCTION                   2
                        692     POP_TOP                         
                        694     LOAD_FAST                       8: total
                        696     LOAD_FAST                       3: size_cd
                        698     COMPARE_OP                      0 (<)
                        700     POP_JUMP_IF_TRUE                123 (to 246)
                        702     LOAD_FAST                       0: self
                        704     LOAD_ATTR                       15: start_dir
                        706     STORE_FAST                      15: end_offset
                        708     LOAD_GLOBAL                     57: sorted
                        710     LOAD_FAST                       0: self
                        712     LOAD_ATTR                       53: filelist
                        714     LOAD_CONST                      24: <CODE> <lambda>
                        716     LOAD_CONST                      25: 'ZipFile._RealGetContents.<locals>.<lambda>'
                        718     MAKE_FUNCTION                   0
                        720     LOAD_CONST                      26: True
                        722     LOAD_CONST                      27: ('key', 'reverse')
                        724     CALL_FUNCTION_KW                3
                        726     GET_ITER                        
                        728     FOR_ITER                        9 (to 748)
                        730     STORE_FAST                      16: zinfo
                        732     LOAD_FAST                       15: end_offset
                        734     LOAD_FAST                       16: zinfo
                        736     STORE_ATTR                      58: _end_offset
                        738     LOAD_FAST                       16: zinfo
                        740     LOAD_ATTR                       35: header_offset
                        742     STORE_FAST                      15: end_offset
                        744     JUMP_ABSOLUTE                   364 (to 728)
                        748     LOAD_CONST                      28: None
                        750     RETURN_VALUE                    
                'ZipFile._RealGetContents'
                [Code]
                    File Name: zipfile.py
                    Object Name: namelist
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filelist'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a list of file names in the archive.'
                        [Code]
                            File Name: zipfile.py
                            Object Name: <listcomp>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                            [Names]
                                'filename'
                            [Var Names]
                                '.0'
                                'data'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                            [Disassembly]
                                0       BUILD_LIST                      0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        5 (to 16)
                                6       STORE_FAST                      1: data
                                8       LOAD_FAST                       1: data
                                10      LOAD_ATTR                       0: filename
                                12      LIST_APPEND                     2
                                14      JUMP_ABSOLUTE                   2 (to 4)
                                16      RETURN_VALUE                    
                        'ZipFile.namelist.<locals>.<listcomp>'
                    [Disassembly]
                        0       LOAD_CONST                      1: <CODE> <listcomp>
                        2       LOAD_CONST                      2: 'ZipFile.namelist.<locals>.<listcomp>'
                        4       MAKE_FUNCTION                   0
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       0: filelist
                        10      GET_ITER                        
                        12      CALL_FUNCTION                   1
                        14      RETURN_VALUE                    
                'ZipFile.namelist'
                [Code]
                    File Name: zipfile.py
                    Object Name: infolist
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filelist'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return a list of class ZipInfo instances for files in the\n        archive.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: filelist
                        4       RETURN_VALUE                    
                'ZipFile.infolist'
                [Code]
                    File Name: zipfile.py
                    Object Name: printdir
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'print'
                        'filelist'
                        'date_time'
                        'filename'
                        'file_size'
                    [Var Names]
                        'self'
                        'file'
                        'zinfo'
                        'date'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Print a table of contents for the zip file.'
                        '%-46s %19s %12s'
                        (
                            'File Name'
                            'Modified    '
                            'Size'
                        )
                        (
                            'file'
                        )
                        '%d-%02d-%02d %02d:%02d:%02d'
                        None
                        6
                        '%-46s %s %12d'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: print
                        2       LOAD_CONST                      1: '%-46s %19s %12s'
                        4       LOAD_CONST                      2: ('File Name', 'Modified    ', 'Size')
                        6       BINARY_MODULO                   
                        8       LOAD_FAST                       1: file
                        10      LOAD_CONST                      3: ('file',)
                        12      CALL_FUNCTION_KW                2
                        14      POP_TOP                         
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       1: filelist
                        20      GET_ITER                        
                        22      FOR_ITER                        24 (to 72)
                        24      STORE_FAST                      2: zinfo
                        26      LOAD_CONST                      4: '%d-%02d-%02d %02d:%02d:%02d'
                        28      LOAD_FAST                       2: zinfo
                        30      LOAD_ATTR                       2: date_time
                        32      LOAD_CONST                      5: None
                        34      LOAD_CONST                      6: 6
                        36      BUILD_SLICE                     2
                        38      BINARY_SUBSCR                   
                        40      BINARY_MODULO                   
                        42      STORE_FAST                      3: date
                        44      LOAD_GLOBAL                     0: print
                        46      LOAD_CONST                      7: '%-46s %s %12d'
                        48      LOAD_FAST                       2: zinfo
                        50      LOAD_ATTR                       3: filename
                        52      LOAD_FAST                       3: date
                        54      LOAD_FAST                       2: zinfo
                        56      LOAD_ATTR                       4: file_size
                        58      BUILD_TUPLE                     3
                        60      BINARY_MODULO                   
                        62      LOAD_FAST                       1: file
                        64      LOAD_CONST                      3: ('file',)
                        66      CALL_FUNCTION_KW                2
                        68      POP_TOP                         
                        70      JUMP_ABSOLUTE                   11 (to 22)
                        72      LOAD_CONST                      5: None
                        74      RETURN_VALUE                    
                'ZipFile.printdir'
                [Code]
                    File Name: zipfile.py
                    Object Name: testzip
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filelist'
                        'open'
                        'filename'
                        'read'
                        'BadZipFile'
                    [Var Names]
                        'self'
                        'chunk_size'
                        'zinfo'
                        'f'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Read all the files and check the CRC.'
                        1048576
                        'r'
                        None
                    [Disassembly]
                        0       LOAD_CONST                      1: 1048576
                        2       STORE_FAST                      1: chunk_size
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       0: filelist
                        8       GET_ITER                        
                        10      FOR_ITER                        52 (to 116)
                        12      STORE_FAST                      2: zinfo
                        14      SETUP_FINALLY                   36 (to 88)
                        16      LOAD_FAST                       0: self
                        18      LOAD_METHOD                     1: open
                        20      LOAD_FAST                       2: zinfo
                        22      LOAD_ATTR                       2: filename
                        24      LOAD_CONST                      2: 'r'
                        26      CALL_METHOD                     2
                        28      SETUP_WITH                      19 (to 68)
                        30      STORE_FAST                      3: f
                        32      LOAD_FAST                       3: f
                        34      LOAD_METHOD                     3: read
                        36      LOAD_FAST                       1: chunk_size
                        38      CALL_METHOD                     1
                        40      POP_JUMP_IF_FALSE               27 (to 54)
                        42      NOP                             
                        44      LOAD_FAST                       3: f
                        46      LOAD_METHOD                     3: read
                        48      LOAD_FAST                       1: chunk_size
                        50      CALL_METHOD                     1
                        52      POP_JUMP_IF_TRUE                21 (to 42)
                        54      POP_BLOCK                       
                        56      LOAD_CONST                      3: None
                        58      DUP_TOP                         
                        60      DUP_TOP                         
                        62      CALL_FUNCTION                   3
                        64      POP_TOP                         
                        66      JUMP_FORWARD                    8 (to 84)
                        68      WITH_EXCEPT_START               
                        70      POP_JUMP_IF_TRUE                37 (to 74)
                        72      RERAISE                         1
                        74      POP_TOP                         
                        76      POP_TOP                         
                        78      POP_TOP                         
                        80      POP_EXCEPT                      
                        82      POP_TOP                         
                        84      POP_BLOCK                       
                        86      JUMP_ABSOLUTE                   5 (to 10)
                        88      DUP_TOP                         
                        90      LOAD_GLOBAL                     4: BadZipFile
                        92      JUMP_IF_NOT_EXC_MATCH           57 (to 114)
                        94      POP_TOP                         
                        96      POP_TOP                         
                        98      POP_TOP                         
                        100     LOAD_FAST                       2: zinfo
                        102     LOAD_ATTR                       2: filename
                        104     ROT_FOUR                        
                        106     POP_EXCEPT                      
                        108     ROT_TWO                         
                        110     POP_TOP                         
                        112     RETURN_VALUE                    
                        114     RERAISE                         0
                        116     LOAD_CONST                      3: None
                        118     RETURN_VALUE                    
                'ZipFile.testzip'
                [Code]
                    File Name: zipfile.py
                    Object Name: getinfo
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'NameToInfo'
                        'get'
                        'KeyError'
                    [Var Names]
                        'self'
                        'name'
                        'info'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Return the instance of ZipInfo given 'name'."
                        None
                        'There is no item named %r in the archive'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: NameToInfo
                        4       LOAD_METHOD                     1: get
                        6       LOAD_FAST                       1: name
                        8       CALL_METHOD                     1
                        10      STORE_FAST                      2: info
                        12      LOAD_FAST                       2: info
                        14      LOAD_CONST                      1: None
                        16      IS_OP                           0 (is)
                        18      POP_JUMP_IF_FALSE               16 (to 32)
                        20      LOAD_GLOBAL                     2: KeyError
                        22      LOAD_CONST                      2: 'There is no item named %r in the archive'
                        24      LOAD_FAST                       1: name
                        26      BINARY_MODULO                   
                        28      CALL_FUNCTION                   1
                        30      RAISE_VARARGS                   1
                        32      LOAD_FAST                       2: info
                        34      RETURN_VALUE                    
                'ZipFile.getinfo'
                [Code]
                    File Name: zipfile.py
                    Object Name: setpassword
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'bytes'
                        'TypeError'
                        'type'
                        '__name__'
                        'pwd'
                    [Var Names]
                        'self'
                        'pwd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Set default password for encrypted files.'
                        'pwd: expected bytes, got %s'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       1: pwd
                        2       POP_JUMP_IF_FALSE               16 (to 32)
                        4       LOAD_GLOBAL                     0: isinstance
                        6       LOAD_FAST                       1: pwd
                        8       LOAD_GLOBAL                     1: bytes
                        10      CALL_FUNCTION                   2
                        12      POP_JUMP_IF_TRUE                16 (to 32)
                        14      LOAD_GLOBAL                     2: TypeError
                        16      LOAD_CONST                      1: 'pwd: expected bytes, got %s'
                        18      LOAD_GLOBAL                     3: type
                        20      LOAD_FAST                       1: pwd
                        22      CALL_FUNCTION                   1
                        24      LOAD_ATTR                       4: __name__
                        26      BINARY_MODULO                   
                        28      CALL_FUNCTION                   1
                        30      RAISE_VARARGS                   1
                        32      LOAD_FAST                       1: pwd
                        34      POP_JUMP_IF_FALSE               23 (to 46)
                        36      LOAD_FAST                       1: pwd
                        38      LOAD_FAST                       0: self
                        40      STORE_ATTR                      5: pwd
                        42      LOAD_CONST                      2: None
                        44      RETURN_VALUE                    
                        46      LOAD_CONST                      2: None
                        48      LOAD_FAST                       0: self
                        50      STORE_ATTR                      5: pwd
                        52      LOAD_CONST                      2: None
                        54      RETURN_VALUE                    
                'ZipFile.setpassword'
                [Code]
                    File Name: zipfile.py
                    Object Name: comment
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_comment'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'The comment text associated with the ZIP file.'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _comment
                        4       RETURN_VALUE                    
                'ZipFile.comment'
                [Code]
                    File Name: zipfile.py
                    Object Name: comment
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'bytes'
                        'TypeError'
                        'type'
                        '__name__'
                        'len'
                        'ZIP_MAX_COMMENT'
                        'warnings'
                        'warn'
                        '_comment'
                        '_didModify'
                    [Var Names]
                        'self'
                        'comment'
                        'warnings'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'comment: expected bytes, got %s'
                        0
                        'Archive comment is too long; truncating to %d bytes'
                        2
                        (
                            'stacklevel'
                        )
                        True
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: comment
                        4       LOAD_GLOBAL                     1: bytes
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                14 (to 28)
                        10      LOAD_GLOBAL                     2: TypeError
                        12      LOAD_CONST                      1: 'comment: expected bytes, got %s'
                        14      LOAD_GLOBAL                     3: type
                        16      LOAD_FAST                       1: comment
                        18      CALL_FUNCTION                   1
                        20      LOAD_ATTR                       4: __name__
                        22      BINARY_MODULO                   
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_GLOBAL                     5: len
                        30      LOAD_FAST                       1: comment
                        32      CALL_FUNCTION                   1
                        34      LOAD_GLOBAL                     6: ZIP_MAX_COMMENT
                        36      COMPARE_OP                      4 (>)
                        38      POP_JUMP_IF_FALSE               39 (to 78)
                        40      LOAD_CONST                      2: 0
                        42      LOAD_CONST                      0: None
                        44      IMPORT_NAME                     7: warnings
                        46      STORE_FAST                      2: warnings
                        48      LOAD_FAST                       2: warnings
                        50      LOAD_ATTR                       8: warn
                        52      LOAD_CONST                      3: 'Archive comment is too long; truncating to %d bytes'
                        54      LOAD_GLOBAL                     6: ZIP_MAX_COMMENT
                        56      BINARY_MODULO                   
                        58      LOAD_CONST                      4: 2
                        60      LOAD_CONST                      5: ('stacklevel',)
                        62      CALL_FUNCTION_KW                2
                        64      POP_TOP                         
                        66      LOAD_FAST                       1: comment
                        68      LOAD_CONST                      0: None
                        70      LOAD_GLOBAL                     6: ZIP_MAX_COMMENT
                        72      BUILD_SLICE                     2
                        74      BINARY_SUBSCR                   
                        76      STORE_FAST                      1: comment
                        78      LOAD_FAST                       1: comment
                        80      LOAD_FAST                       0: self
                        82      STORE_ATTR                      9: _comment
                        84      LOAD_CONST                      6: True
                        86      LOAD_FAST                       0: self
                        88      STORE_ATTR                      10: _didModify
                        90      LOAD_CONST                      0: None
                        92      RETURN_VALUE                    
                [Code]
                    File Name: zipfile.py
                    Object Name: read
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'open'
                        'read'
                    [Var Names]
                        'self'
                        'name'
                        'pwd'
                        'fp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Return file bytes for name.'
                        'r'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: open
                        4       LOAD_FAST                       1: name
                        6       LOAD_CONST                      1: 'r'
                        8       LOAD_FAST                       2: pwd
                        10      CALL_METHOD                     3
                        12      SETUP_WITH                      12 (to 38)
                        14      STORE_FAST                      3: fp
                        16      LOAD_FAST                       3: fp
                        18      LOAD_METHOD                     1: read
                        20      CALL_METHOD                     0
                        22      POP_BLOCK                       
                        24      ROT_TWO                         
                        26      LOAD_CONST                      2: None
                        28      DUP_TOP                         
                        30      DUP_TOP                         
                        32      CALL_FUNCTION                   3
                        34      POP_TOP                         
                        36      RETURN_VALUE                    
                        38      WITH_EXCEPT_START               
                        40      POP_JUMP_IF_TRUE                22 (to 44)
                        42      RERAISE                         1
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_TOP                         
                        50      POP_EXCEPT                      
                        52      POP_TOP                         
                        54      LOAD_CONST                      2: None
                        56      RETURN_VALUE                    
                'ZipFile.read'
                False
                (
                    'force_zip64'
                )
                [Code]
                    File Name: zipfile.py
                    Object Name: open
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 11
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'ValueError'
                        'isinstance'
                        'bytes'
                        'TypeError'
                        'type'
                        '__name__'
                        'fp'
                        'ZipInfo'
                        'compression'
                        'compress_type'
                        'compresslevel'
                        '_compresslevel'
                        'getinfo'
                        '_open_to_write'
                        '_writing'
                        '_fileRefCnt'
                        '_SharedFile'
                        'header_offset'
                        '_fpclose'
                        '_lock'
                        'read'
                        'sizeFileHeader'
                        'len'
                        'BadZipFile'
                        'struct'
                        'unpack'
                        'structFileHeader'
                        '_FH_SIGNATURE'
                        'stringFileHeader'
                        '_FH_FILENAME_LENGTH'
                        '_FH_EXTRA_FIELD_LENGTH'
                        'flag_bits'
                        'NotImplementedError'
                        '_FH_GENERAL_PURPOSE_FLAG_BITS'
                        'decode'
                        'orig_filename'
                        '_end_offset'
                        'tell'
                        'compress_size'
                        'pwd'
                        'RuntimeError'
                        'ZipExtFile'
                        'close'
                    [Var Names]
                        'self'
                        'name'
                        'mode'
                        'pwd'
                        'force_zip64'
                        'zinfo'
                        'zef_file'
                        'fheader'
                        'fname'
                        'fname_str'
                        'is_encrypted'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        "Return file-like object for 'name'.\n\n        name is a string for the file name within the ZIP file, or a ZipInfo\n        object.\n\n        mode should be 'r' to read a file already in the ZIP file, or 'w' to\n        write to a file newly added to the archive.\n\n        pwd is the password to decrypt files (only used for reading).\n\n        When writing, if the file size is not known in advance but may exceed\n        2 GiB, pass force_zip64 to use the ZIP64 format, which can handle large\n        files.  If the size is known in advance, it is best to pass a ZipInfo\n        instance for name, with zinfo.file_size set.\n        "
                        frozenset({
                            'r'
                            'w'
                        })
                        'open() requires mode "r" or "w"'
                        'pwd: expected bytes, got %s'
                        'w'
                        'pwd is only supported for reading files'
                        'Attempt to use ZIP archive that was already closed'
                        (
                            'force_zip64'
                        )
                        "Can't read from the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                        1
                        [Code]
                            File Name: zipfile.py
                            Object Name: <lambda>
                            Arg Count: 0
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 0
                            Stack Size: 1
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                '_writing'
                            [Var Names]
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       LOAD_DEREF                      0: self
                                2       LOAD_ATTR                       0: _writing
                                4       RETURN_VALUE                    
                        'ZipFile.open.<locals>.<lambda>'
                        'Truncated file header'
                        'Bad magic number for file header'
                        32
                        'compressed patched data (flag bit 5)'
                        64
                        'strong encryption (flag bit 6)'
                        2048
                        'utf-8'
                        'cp437'
                        'File name in directory %r and header %r differ.'
                        None
                        'Overlapped entries: '
                        ' (possible zip bomb)'
                        'File %r is encrypted, password required for extraction'
                        True
                    [Disassembly]
                        0       LOAD_FAST                       2: mode
                        2       LOAD_CONST                      1: frozenset({'r', 'w'})
                        4       CONTAINS_OP                     1 (not in)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     0: ValueError
                        10      LOAD_CONST                      2: 'open() requires mode "r" or "w"'
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       3: pwd
                        18      POP_JUMP_IF_FALSE               24 (to 48)
                        20      LOAD_GLOBAL                     1: isinstance
                        22      LOAD_FAST                       3: pwd
                        24      LOAD_GLOBAL                     2: bytes
                        26      CALL_FUNCTION                   2
                        28      POP_JUMP_IF_TRUE                24 (to 48)
                        30      LOAD_GLOBAL                     3: TypeError
                        32      LOAD_CONST                      3: 'pwd: expected bytes, got %s'
                        34      LOAD_GLOBAL                     4: type
                        36      LOAD_FAST                       3: pwd
                        38      CALL_FUNCTION                   1
                        40      LOAD_ATTR                       5: __name__
                        42      BINARY_MODULO                   
                        44      CALL_FUNCTION                   1
                        46      RAISE_VARARGS                   1
                        48      LOAD_FAST                       3: pwd
                        50      POP_JUMP_IF_FALSE               34 (to 68)
                        52      LOAD_FAST                       2: mode
                        54      LOAD_CONST                      4: 'w'
                        56      COMPARE_OP                      2 (==)
                        58      POP_JUMP_IF_FALSE               34 (to 68)
                        60      LOAD_GLOBAL                     0: ValueError
                        62      LOAD_CONST                      5: 'pwd is only supported for reading files'
                        64      CALL_FUNCTION                   1
                        66      RAISE_VARARGS                   1
                        68      LOAD_DEREF                      0: self
                        70      LOAD_ATTR                       6: fp
                        72      POP_JUMP_IF_TRUE                41 (to 82)
                        74      LOAD_GLOBAL                     0: ValueError
                        76      LOAD_CONST                      6: 'Attempt to use ZIP archive that was already closed'
                        78      CALL_FUNCTION                   1
                        80      RAISE_VARARGS                   1
                        82      LOAD_GLOBAL                     1: isinstance
                        84      LOAD_FAST                       1: name
                        86      LOAD_GLOBAL                     7: ZipInfo
                        88      CALL_FUNCTION                   2
                        90      POP_JUMP_IF_FALSE               49 (to 98)
                        92      LOAD_FAST                       1: name
                        94      STORE_FAST                      5: zinfo
                        96      JUMP_FORWARD                    22 (to 142)
                        98      LOAD_FAST                       2: mode
                        100     LOAD_CONST                      4: 'w'
                        102     COMPARE_OP                      2 (==)
                        104     POP_JUMP_IF_FALSE               66 (to 132)
                        106     LOAD_GLOBAL                     7: ZipInfo
                        108     LOAD_FAST                       1: name
                        110     CALL_FUNCTION                   1
                        112     STORE_FAST                      5: zinfo
                        114     LOAD_DEREF                      0: self
                        116     LOAD_ATTR                       8: compression
                        118     LOAD_FAST                       5: zinfo
                        120     STORE_ATTR                      9: compress_type
                        122     LOAD_DEREF                      0: self
                        124     LOAD_ATTR                       10: compresslevel
                        126     LOAD_FAST                       5: zinfo
                        128     STORE_ATTR                      11: _compresslevel
                        130     JUMP_FORWARD                    5 (to 142)
                        132     LOAD_DEREF                      0: self
                        134     LOAD_METHOD                     12: getinfo
                        136     LOAD_FAST                       1: name
                        138     CALL_METHOD                     1
                        140     STORE_FAST                      5: zinfo
                        142     LOAD_FAST                       2: mode
                        144     LOAD_CONST                      4: 'w'
                        146     COMPARE_OP                      2 (==)
                        148     POP_JUMP_IF_FALSE               82 (to 164)
                        150     LOAD_DEREF                      0: self
                        152     LOAD_ATTR                       13: _open_to_write
                        154     LOAD_FAST                       5: zinfo
                        156     LOAD_FAST                       4: force_zip64
                        158     LOAD_CONST                      7: ('force_zip64',)
                        160     CALL_FUNCTION_KW                2
                        162     RETURN_VALUE                    
                        164     LOAD_DEREF                      0: self
                        166     LOAD_ATTR                       14: _writing
                        168     POP_JUMP_IF_FALSE               89 (to 178)
                        170     LOAD_GLOBAL                     0: ValueError
                        172     LOAD_CONST                      8: "Can't read from the ZIP file while there is an open writing handle on it. Close the writing handle before trying to read."
                        174     CALL_FUNCTION                   1
                        176     RAISE_VARARGS                   1
                        178     LOAD_DEREF                      0: self
                        180     DUP_TOP                         
                        182     LOAD_ATTR                       15: _fileRefCnt
                        184     LOAD_CONST                      9: 1
                        186     INPLACE_ADD                     
                        188     ROT_TWO                         
                        190     STORE_ATTR                      15: _fileRefCnt
                        192     LOAD_GLOBAL                     16: _SharedFile
                        194     LOAD_DEREF                      0: self
                        196     LOAD_ATTR                       6: fp
                        198     LOAD_FAST                       5: zinfo
                        200     LOAD_ATTR                       17: header_offset
                        202     LOAD_DEREF                      0: self
                        204     LOAD_ATTR                       18: _fpclose
                        206     LOAD_DEREF                      0: self
                        208     LOAD_ATTR                       19: _lock
                        210     LOAD_CLOSURE                    0: self
                        212     BUILD_TUPLE                     1
                        214     LOAD_CONST                      10: <CODE> <lambda>
                        216     LOAD_CONST                      11: 'ZipFile.open.<locals>.<lambda>'
                        218     MAKE_FUNCTION                   8
                        220     CALL_FUNCTION                   5
                        222     STORE_FAST                      6: zef_file
                        224     SETUP_FINALLY                   156 (to 538)
                        226     LOAD_FAST                       6: zef_file
                        228     LOAD_METHOD                     20: read
                        230     LOAD_GLOBAL                     21: sizeFileHeader
                        232     CALL_METHOD                     1
                        234     STORE_FAST                      7: fheader
                        236     LOAD_GLOBAL                     22: len
                        238     LOAD_FAST                       7: fheader
                        240     CALL_FUNCTION                   1
                        242     LOAD_GLOBAL                     21: sizeFileHeader
                        244     COMPARE_OP                      3 (!=)
                        246     POP_JUMP_IF_FALSE               128 (to 256)
                        248     LOAD_GLOBAL                     23: BadZipFile
                        250     LOAD_CONST                      12: 'Truncated file header'
                        252     CALL_FUNCTION                   1
                        254     RAISE_VARARGS                   1
                        256     LOAD_GLOBAL                     24: struct
                        258     LOAD_METHOD                     25: unpack
                        260     LOAD_GLOBAL                     26: structFileHeader
                        262     LOAD_FAST                       7: fheader
                        264     CALL_METHOD                     2
                        266     STORE_FAST                      7: fheader
                        268     LOAD_FAST                       7: fheader
                        270     LOAD_GLOBAL                     27: _FH_SIGNATURE
                        272     BINARY_SUBSCR                   
                        274     LOAD_GLOBAL                     28: stringFileHeader
                        276     COMPARE_OP                      3 (!=)
                        278     POP_JUMP_IF_FALSE               144 (to 288)
                        280     LOAD_GLOBAL                     23: BadZipFile
                        282     LOAD_CONST                      13: 'Bad magic number for file header'
                        284     CALL_FUNCTION                   1
                        286     RAISE_VARARGS                   1
                        288     LOAD_FAST                       6: zef_file
                        290     LOAD_METHOD                     20: read
                        292     LOAD_FAST                       7: fheader
                        294     LOAD_GLOBAL                     29: _FH_FILENAME_LENGTH
                        296     BINARY_SUBSCR                   
                        298     CALL_METHOD                     1
                        300     STORE_FAST                      8: fname
                        302     LOAD_FAST                       7: fheader
                        304     LOAD_GLOBAL                     30: _FH_EXTRA_FIELD_LENGTH
                        306     BINARY_SUBSCR                   
                        308     POP_JUMP_IF_FALSE               162 (to 324)
                        310     LOAD_FAST                       6: zef_file
                        312     LOAD_METHOD                     20: read
                        314     LOAD_FAST                       7: fheader
                        316     LOAD_GLOBAL                     30: _FH_EXTRA_FIELD_LENGTH
                        318     BINARY_SUBSCR                   
                        320     CALL_METHOD                     1
                        322     POP_TOP                         
                        324     LOAD_FAST                       5: zinfo
                        326     LOAD_ATTR                       31: flag_bits
                        328     LOAD_CONST                      14: 32
                        330     BINARY_AND                      
                        332     POP_JUMP_IF_FALSE               171 (to 342)
                        334     LOAD_GLOBAL                     32: NotImplementedError
                        336     LOAD_CONST                      15: 'compressed patched data (flag bit 5)'
                        338     CALL_FUNCTION                   1
                        340     RAISE_VARARGS                   1
                        342     LOAD_FAST                       5: zinfo
                        344     LOAD_ATTR                       31: flag_bits
                        346     LOAD_CONST                      16: 64
                        348     BINARY_AND                      
                        350     POP_JUMP_IF_FALSE               180 (to 360)
                        352     LOAD_GLOBAL                     32: NotImplementedError
                        354     LOAD_CONST                      17: 'strong encryption (flag bit 6)'
                        356     CALL_FUNCTION                   1
                        358     RAISE_VARARGS                   1
                        360     LOAD_FAST                       7: fheader
                        362     LOAD_GLOBAL                     33: _FH_GENERAL_PURPOSE_FLAG_BITS
                        364     BINARY_SUBSCR                   
                        366     LOAD_CONST                      18: 2048
                        368     BINARY_AND                      
                        370     POP_JUMP_IF_FALSE               192 (to 384)
                        372     LOAD_FAST                       8: fname
                        374     LOAD_METHOD                     34: decode
                        376     LOAD_CONST                      19: 'utf-8'
                        378     CALL_METHOD                     1
                        380     STORE_FAST                      9: fname_str
                        382     JUMP_FORWARD                    5 (to 394)
                        384     LOAD_FAST                       8: fname
                        386     LOAD_METHOD                     34: decode
                        388     LOAD_CONST                      20: 'cp437'
                        390     CALL_METHOD                     1
                        392     STORE_FAST                      9: fname_str
                        394     LOAD_FAST                       9: fname_str
                        396     LOAD_FAST                       5: zinfo
                        398     LOAD_ATTR                       35: orig_filename
                        400     COMPARE_OP                      3 (!=)
                        402     POP_JUMP_IF_FALSE               211 (to 422)
                        404     LOAD_GLOBAL                     23: BadZipFile
                        406     LOAD_CONST                      21: 'File name in directory %r and header %r differ.'
                        408     LOAD_FAST                       5: zinfo
                        410     LOAD_ATTR                       35: orig_filename
                        412     LOAD_FAST                       8: fname
                        414     BUILD_TUPLE                     2
                        416     BINARY_MODULO                   
                        418     CALL_FUNCTION                   1
                        420     RAISE_VARARGS                   1
                        422     LOAD_FAST                       5: zinfo
                        424     LOAD_ATTR                       36: _end_offset
                        426     LOAD_CONST                      22: None
                        428     IS_OP                           1 (is not)
                        430     POP_JUMP_IF_FALSE               235 (to 470)
                        432     LOAD_FAST                       6: zef_file
                        434     LOAD_METHOD                     37: tell
                        436     CALL_METHOD                     0
                        438     LOAD_FAST                       5: zinfo
                        440     LOAD_ATTR                       38: compress_size
                        442     BINARY_ADD                      
                        444     LOAD_FAST                       5: zinfo
                        446     LOAD_ATTR                       36: _end_offset
                        448     COMPARE_OP                      4 (>)
                        450     POP_JUMP_IF_FALSE               235 (to 470)
                        452     LOAD_GLOBAL                     23: BadZipFile
                        454     LOAD_CONST                      23: 'Overlapped entries: '
                        456     LOAD_FAST                       5: zinfo
                        458     LOAD_ATTR                       35: orig_filename
                        460     FORMAT_VALUE                    2 (FVC_REPR)
                        462     LOAD_CONST                      24: ' (possible zip bomb)'
                        464     BUILD_STRING                    3
                        466     CALL_FUNCTION                   1
                        468     RAISE_VARARGS                   1
                        470     LOAD_FAST                       5: zinfo
                        472     LOAD_ATTR                       31: flag_bits
                        474     LOAD_CONST                      9: 1
                        476     BINARY_AND                      
                        478     STORE_FAST                      10: is_encrypted
                        480     LOAD_FAST                       10: is_encrypted
                        482     POP_JUMP_IF_FALSE               258 (to 516)
                        486     LOAD_FAST                       3: pwd
                        488     POP_JUMP_IF_TRUE                248 (to 496)
                        490     LOAD_DEREF                      0: self
                        492     LOAD_ATTR                       39: pwd
                        494     STORE_FAST                      3: pwd
                        496     LOAD_FAST                       3: pwd
                        498     POP_JUMP_IF_TRUE                257 (to 514)
                        502     LOAD_GLOBAL                     40: RuntimeError
                        504     LOAD_CONST                      25: 'File %r is encrypted, password required for extraction'
                        506     LOAD_FAST                       1: name
                        508     BINARY_MODULO                   
                        510     CALL_FUNCTION                   1
                        512     RAISE_VARARGS                   1
                        514     JUMP_FORWARD                    2 (to 520)
                        516     LOAD_CONST                      22: None
                        518     STORE_FAST                      3: pwd
                        520     LOAD_GLOBAL                     41: ZipExtFile
                        522     LOAD_FAST                       6: zef_file
                        524     LOAD_FAST                       2: mode
                        526     LOAD_FAST                       5: zinfo
                        528     LOAD_FAST                       3: pwd
                        530     LOAD_CONST                      26: True
                        532     CALL_FUNCTION                   5
                        534     POP_BLOCK                       
                        536     RETURN_VALUE                    
                        538     POP_TOP                         
                        540     POP_TOP                         
                        542     POP_TOP                         
                        544     LOAD_FAST                       6: zef_file
                        546     LOAD_METHOD                     42: close
                        548     CALL_METHOD                     0
                        550     POP_TOP                         
                        552     RAISE_VARARGS                   0
                'ZipFile.open'
                [Code]
                    File Name: zipfile.py
                    Object Name: _open_to_write
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_allowZip64'
                        'ValueError'
                        '_writing'
                        'compress_size'
                        'CRC'
                        'flag_bits'
                        'compress_type'
                        'ZIP_LZMA'
                        '_seekable'
                        'external_attr'
                        'file_size'
                        'ZIP64_LIMIT'
                        'fp'
                        'seek'
                        'start_dir'
                        'tell'
                        'header_offset'
                        '_writecheck'
                        '_didModify'
                        'write'
                        'FileHeader'
                        '_ZipWriteFile'
                    [Var Names]
                        'self'
                        'zinfo'
                        'force_zip64'
                        'zip64'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'force_zip64 is True, but allowZip64 was False when opening the ZIP file.'
                        "Can't write to the ZIP file while there is another write handle open on it. Close the first handle before opening another."
                        0
                        2
                        8
                        25165824
                        1.05
                        True
                    [Disassembly]
                        0       LOAD_FAST                       2: force_zip64
                        2       POP_JUMP_IF_FALSE               9 (to 18)
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       0: _allowZip64
                        8       POP_JUMP_IF_TRUE                9 (to 18)
                        10      LOAD_GLOBAL                     1: ValueError
                        12      LOAD_CONST                      1: 'force_zip64 is True, but allowZip64 was False when opening the ZIP file.'
                        14      CALL_FUNCTION                   1
                        16      RAISE_VARARGS                   1
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       2: _writing
                        22      POP_JUMP_IF_FALSE               16 (to 32)
                        24      LOAD_GLOBAL                     1: ValueError
                        26      LOAD_CONST                      2: "Can't write to the ZIP file while there is another write handle open on it. Close the first handle before opening another."
                        28      CALL_FUNCTION                   1
                        30      RAISE_VARARGS                   1
                        32      LOAD_CONST                      3: 0
                        34      LOAD_FAST                       1: zinfo
                        36      STORE_ATTR                      3: compress_size
                        38      LOAD_CONST                      3: 0
                        40      LOAD_FAST                       1: zinfo
                        42      STORE_ATTR                      4: CRC
                        44      LOAD_CONST                      3: 0
                        46      LOAD_FAST                       1: zinfo
                        48      STORE_ATTR                      5: flag_bits
                        50      LOAD_FAST                       1: zinfo
                        52      LOAD_ATTR                       6: compress_type
                        54      LOAD_GLOBAL                     7: ZIP_LZMA
                        56      COMPARE_OP                      2 (==)
                        58      POP_JUMP_IF_FALSE               37 (to 74)
                        60      LOAD_FAST                       1: zinfo
                        62      DUP_TOP                         
                        64      LOAD_ATTR                       5: flag_bits
                        66      LOAD_CONST                      4: 2
                        68      INPLACE_OR                      
                        70      ROT_TWO                         
                        72      STORE_ATTR                      5: flag_bits
                        74      LOAD_FAST                       0: self
                        76      LOAD_ATTR                       8: _seekable
                        78      POP_JUMP_IF_TRUE                47 (to 94)
                        80      LOAD_FAST                       1: zinfo
                        82      DUP_TOP                         
                        84      LOAD_ATTR                       5: flag_bits
                        86      LOAD_CONST                      5: 8
                        88      INPLACE_OR                      
                        90      ROT_TWO                         
                        92      STORE_ATTR                      5: flag_bits
                        94      LOAD_FAST                       1: zinfo
                        96      LOAD_ATTR                       9: external_attr
                        98      POP_JUMP_IF_TRUE                53 (to 106)
                        100     LOAD_CONST                      6: 25165824
                        102     LOAD_FAST                       1: zinfo
                        104     STORE_ATTR                      9: external_attr
                        106     LOAD_FAST                       0: self
                        108     LOAD_ATTR                       0: _allowZip64
                        110     JUMP_IF_FALSE_OR_POP            64 (to 128)
                        112     LOAD_FAST                       2: force_zip64
                        114     JUMP_IF_TRUE_OR_POP             64 (to 128)
                        116     LOAD_FAST                       1: zinfo
                        118     LOAD_ATTR                       10: file_size
                        120     LOAD_CONST                      7: 1.05
                        122     BINARY_MULTIPLY                 
                        124     LOAD_GLOBAL                     11: ZIP64_LIMIT
                        126     COMPARE_OP                      4 (>)
                        128     STORE_FAST                      3: zip64
                        130     LOAD_FAST                       0: self
                        132     LOAD_ATTR                       8: _seekable
                        134     POP_JUMP_IF_FALSE               75 (to 150)
                        136     LOAD_FAST                       0: self
                        138     LOAD_ATTR                       12: fp
                        140     LOAD_METHOD                     13: seek
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       14: start_dir
                        146     CALL_METHOD                     1
                        148     POP_TOP                         
                        150     LOAD_FAST                       0: self
                        152     LOAD_ATTR                       12: fp
                        154     LOAD_METHOD                     15: tell
                        156     CALL_METHOD                     0
                        158     LOAD_FAST                       1: zinfo
                        160     STORE_ATTR                      16: header_offset
                        162     LOAD_FAST                       0: self
                        164     LOAD_METHOD                     17: _writecheck
                        166     LOAD_FAST                       1: zinfo
                        168     CALL_METHOD                     1
                        170     POP_TOP                         
                        172     LOAD_CONST                      8: True
                        174     LOAD_FAST                       0: self
                        176     STORE_ATTR                      18: _didModify
                        178     LOAD_FAST                       0: self
                        180     LOAD_ATTR                       12: fp
                        182     LOAD_METHOD                     19: write
                        184     LOAD_FAST                       1: zinfo
                        186     LOAD_METHOD                     20: FileHeader
                        188     LOAD_FAST                       3: zip64
                        190     CALL_METHOD                     1
                        192     CALL_METHOD                     1
                        194     POP_TOP                         
                        196     LOAD_CONST                      8: True
                        198     LOAD_FAST                       0: self
                        200     STORE_ATTR                      2: _writing
                        202     LOAD_GLOBAL                     21: _ZipWriteFile
                        204     LOAD_FAST                       0: self
                        206     LOAD_FAST                       1: zinfo
                        208     LOAD_FAST                       3: zip64
                        210     CALL_FUNCTION                   3
                        212     RETURN_VALUE                    
                'ZipFile._open_to_write'
                [Code]
                    File Name: zipfile.py
                    Object Name: extract
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'getcwd'
                        'fspath'
                        '_extract_member'
                    [Var Names]
                        'self'
                        'member'
                        'path'
                        'pwd'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Extract a member from the archive to the current working directory,\n           using its full name. Its file information is extracted as accurately\n           as possible. `member' may be a filename or a ZipInfo object. You can\n           specify a different directory using `path'.\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: path
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               9 (to 18)
                        8       LOAD_GLOBAL                     0: os
                        10      LOAD_METHOD                     1: getcwd
                        12      CALL_METHOD                     0
                        14      STORE_FAST                      2: path
                        16      JUMP_FORWARD                    5 (to 28)
                        18      LOAD_GLOBAL                     0: os
                        20      LOAD_METHOD                     2: fspath
                        22      LOAD_FAST                       2: path
                        24      CALL_METHOD                     1
                        26      STORE_FAST                      2: path
                        28      LOAD_FAST                       0: self
                        30      LOAD_METHOD                     3: _extract_member
                        32      LOAD_FAST                       1: member
                        34      LOAD_FAST                       2: path
                        36      LOAD_FAST                       3: pwd
                        38      CALL_METHOD                     3
                        40      RETURN_VALUE                    
                'ZipFile.extract'
                [Code]
                    File Name: zipfile.py
                    Object Name: extractall
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'namelist'
                        'os'
                        'getcwd'
                        'fspath'
                        '_extract_member'
                    [Var Names]
                        'self'
                        'path'
                        'members'
                        'pwd'
                        'zipinfo'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Extract all members from the archive to the current working\n           directory. `path' specifies a different directory to extract to.\n           `members' is optional and must be a subset of the list returned\n           by namelist().\n        "
                        None
                    [Disassembly]
                        0       LOAD_FAST                       2: members
                        2       LOAD_CONST                      1: None
                        4       IS_OP                           0 (is)
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     0: namelist
                        12      CALL_METHOD                     0
                        14      STORE_FAST                      2: members
                        16      LOAD_FAST                       1: path
                        18      LOAD_CONST                      1: None
                        20      IS_OP                           0 (is)
                        22      POP_JUMP_IF_FALSE               17 (to 34)
                        24      LOAD_GLOBAL                     1: os
                        26      LOAD_METHOD                     2: getcwd
                        28      CALL_METHOD                     0
                        30      STORE_FAST                      1: path
                        32      JUMP_FORWARD                    5 (to 44)
                        34      LOAD_GLOBAL                     1: os
                        36      LOAD_METHOD                     3: fspath
                        38      LOAD_FAST                       1: path
                        40      CALL_METHOD                     1
                        42      STORE_FAST                      1: path
                        44      LOAD_FAST                       2: members
                        46      GET_ITER                        
                        48      FOR_ITER                        9 (to 68)
                        50      STORE_FAST                      4: zipinfo
                        52      LOAD_FAST                       0: self
                        54      LOAD_METHOD                     4: _extract_member
                        56      LOAD_FAST                       4: zipinfo
                        58      LOAD_FAST                       1: path
                        60      LOAD_FAST                       3: pwd
                        62      CALL_METHOD                     3
                        64      POP_TOP                         
                        66      JUMP_ABSOLUTE                   24 (to 48)
                        68      LOAD_CONST                      1: None
                        70      RETURN_VALUE                    
                'ZipFile.extractall'
                [Code]
                    File Name: zipfile.py
                    Object Name: _sanitize_windows_name
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 6
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_windows_illegal_name_trans_table'
                        'str'
                        'maketrans'
                        'len'
                        'translate'
                        'split'
                        'join'
                    [Var Names]
                        'cls'
                        'arcname'
                        'pathsep'
                        'table'
                        'illegal'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Replace bad characters and remove trailing dots from parts.'
                        ':<>|"?*'
                        '_'
                        [Code]
                            File Name: zipfile.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 4
                            Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                            [Names]
                                'rstrip'
                            [Var Names]
                                '.0'
                                'x'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                '.'
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        8 (to 22)
                                6       STORE_FAST                      1: x
                                8       LOAD_FAST                       1: x
                                10      LOAD_METHOD                     0: rstrip
                                12      LOAD_CONST                      0: '.'
                                14      CALL_METHOD                     1
                                16      YIELD_VALUE                     
                                18      POP_TOP                         
                                20      JUMP_ABSOLUTE                   2 (to 4)
                                22      LOAD_CONST                      1: None
                                24      RETURN_VALUE                    
                        'ZipFile._sanitize_windows_name.<locals>.<genexpr>'
                        [Code]
                            File Name: zipfile.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 2
                            Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                            [Names]
                            [Var Names]
                                '.0'
                                'x'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        7 (to 20)
                                6       STORE_FAST                      1: x
                                8       LOAD_FAST                       1: x
                                10      POP_JUMP_IF_FALSE               2 (to 4)
                                12      LOAD_FAST                       1: x
                                14      YIELD_VALUE                     
                                16      POP_TOP                         
                                18      JUMP_ABSOLUTE                   2 (to 4)
                                20      LOAD_CONST                      0: None
                                22      RETURN_VALUE                    
                    [Disassembly]
                        0       LOAD_FAST                       0: cls
                        2       LOAD_ATTR                       0: _windows_illegal_name_trans_table
                        4       STORE_FAST                      3: table
                        6       LOAD_FAST                       3: table
                        8       POP_JUMP_IF_TRUE                20 (to 40)
                        10      LOAD_CONST                      1: ':<>|"?*'
                        12      STORE_FAST                      4: illegal
                        14      LOAD_GLOBAL                     1: str
                        16      LOAD_METHOD                     2: maketrans
                        18      LOAD_FAST                       4: illegal
                        20      LOAD_CONST                      2: '_'
                        22      LOAD_GLOBAL                     3: len
                        24      LOAD_FAST                       4: illegal
                        26      CALL_FUNCTION                   1
                        28      BINARY_MULTIPLY                 
                        30      CALL_METHOD                     2
                        32      STORE_FAST                      3: table
                        34      LOAD_FAST                       3: table
                        36      LOAD_FAST                       0: cls
                        38      STORE_ATTR                      0: _windows_illegal_name_trans_table
                        40      LOAD_FAST                       1: arcname
                        42      LOAD_METHOD                     4: translate
                        44      LOAD_FAST                       3: table
                        46      CALL_METHOD                     1
                        48      STORE_FAST                      1: arcname
                        50      LOAD_CONST                      3: <CODE> <genexpr>
                        52      LOAD_CONST                      4: 'ZipFile._sanitize_windows_name.<locals>.<genexpr>'
                        54      MAKE_FUNCTION                   0
                        56      LOAD_FAST                       1: arcname
                        58      LOAD_METHOD                     5: split
                        60      LOAD_FAST                       2: pathsep
                        62      CALL_METHOD                     1
                        64      GET_ITER                        
                        66      CALL_FUNCTION                   1
                        68      STORE_FAST                      1: arcname
                        70      LOAD_FAST                       2: pathsep
                        72      LOAD_METHOD                     6: join
                        74      LOAD_CONST                      5: <CODE> <genexpr>
                        76      LOAD_CONST                      4: 'ZipFile._sanitize_windows_name.<locals>.<genexpr>'
                        78      MAKE_FUNCTION                   0
                        80      LOAD_FAST                       1: arcname
                        82      GET_ITER                        
                        84      CALL_FUNCTION                   1
                        86      CALL_METHOD                     1
                        88      STORE_FAST                      1: arcname
                        90      LOAD_FAST                       1: arcname
                        92      RETURN_VALUE                    
                'ZipFile._sanitize_windows_name'
                [Code]
                    File Name: zipfile.py
                    Object Name: _extract_member
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 9
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'isinstance'
                        'ZipInfo'
                        'getinfo'
                        'filename'
                        'replace'
                        'os'
                        'path'
                        'sep'
                        'altsep'
                        'splitdrive'
                        'curdir'
                        'pardir'
                        'join'
                        'split'
                        '_sanitize_windows_name'
                        'normpath'
                        'dirname'
                        'exists'
                        'makedirs'
                        'is_dir'
                        'isdir'
                        'mkdir'
                        'open'
                        'shutil'
                        'copyfileobj'
                    [Var Names]
                        'self'
                        'member'
                        'targetpath'
                        'pwd'
                        'arcname'
                        'upperdirs'
                        'source'
                        'target'
                    [Free Vars]
                    [Cell Vars]
                        'invalid_path_parts'
                    [Constants]
                        "Extract the ZipInfo object 'member' to a physical\n           file on the path targetpath.\n        "
                        '/'
                        1
                        ''
                        [Code]
                            File Name: zipfile.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000033 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR)
                            [Names]
                            [Var Names]
                                '.0'
                                'x'
                            [Free Vars]
                                'invalid_path_parts'
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        9 (to 24)
                                6       STORE_FAST                      1: x
                                8       LOAD_FAST                       1: x
                                10      LOAD_DEREF                      0: invalid_path_parts
                                12      CONTAINS_OP                     1 (not in)
                                14      POP_JUMP_IF_FALSE               2 (to 4)
                                16      LOAD_FAST                       1: x
                                18      YIELD_VALUE                     
                                20      POP_TOP                         
                                22      JUMP_ABSOLUTE                   2 (to 4)
                                24      LOAD_CONST                      0: None
                                26      RETURN_VALUE                    
                        'ZipFile._extract_member.<locals>.<genexpr>'
                        '\\'
                        (
                            'pwd'
                        )
                        'wb'
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: member
                        4       LOAD_GLOBAL                     1: ZipInfo
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_TRUE                10 (to 20)
                        10      LOAD_FAST                       0: self
                        12      LOAD_METHOD                     2: getinfo
                        14      LOAD_FAST                       1: member
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      1: member
                        20      LOAD_FAST                       1: member
                        22      LOAD_ATTR                       3: filename
                        24      LOAD_METHOD                     4: replace
                        26      LOAD_CONST                      1: '/'
                        28      LOAD_GLOBAL                     5: os
                        30      LOAD_ATTR                       6: path
                        32      LOAD_ATTR                       7: sep
                        34      CALL_METHOD                     2
                        36      STORE_FAST                      4: arcname
                        38      LOAD_GLOBAL                     5: os
                        40      LOAD_ATTR                       6: path
                        42      LOAD_ATTR                       8: altsep
                        44      POP_JUMP_IF_FALSE               33 (to 66)
                        46      LOAD_FAST                       4: arcname
                        48      LOAD_METHOD                     4: replace
                        50      LOAD_GLOBAL                     5: os
                        52      LOAD_ATTR                       6: path
                        54      LOAD_ATTR                       8: altsep
                        56      LOAD_GLOBAL                     5: os
                        58      LOAD_ATTR                       6: path
                        60      LOAD_ATTR                       7: sep
                        62      CALL_METHOD                     2
                        64      STORE_FAST                      4: arcname
                        66      LOAD_GLOBAL                     5: os
                        68      LOAD_ATTR                       6: path
                        70      LOAD_METHOD                     9: splitdrive
                        72      LOAD_FAST                       4: arcname
                        74      CALL_METHOD                     1
                        76      LOAD_CONST                      2: 1
                        78      BINARY_SUBSCR                   
                        80      STORE_FAST                      4: arcname
                        82      LOAD_CONST                      3: ''
                        84      LOAD_GLOBAL                     5: os
                        86      LOAD_ATTR                       6: path
                        88      LOAD_ATTR                       10: curdir
                        90      LOAD_GLOBAL                     5: os
                        92      LOAD_ATTR                       6: path
                        94      LOAD_ATTR                       11: pardir
                        96      BUILD_TUPLE                     3
                        98      STORE_DEREF                     0: invalid_path_parts
                        100     LOAD_GLOBAL                     5: os
                        102     LOAD_ATTR                       6: path
                        104     LOAD_ATTR                       7: sep
                        106     LOAD_METHOD                     12: join
                        108     LOAD_CLOSURE                    0: invalid_path_parts
                        110     BUILD_TUPLE                     1
                        112     LOAD_CONST                      4: <CODE> <genexpr>
                        114     LOAD_CONST                      5: 'ZipFile._extract_member.<locals>.<genexpr>'
                        116     MAKE_FUNCTION                   8
                        118     LOAD_FAST                       4: arcname
                        120     LOAD_METHOD                     13: split
                        122     LOAD_GLOBAL                     5: os
                        124     LOAD_ATTR                       6: path
                        126     LOAD_ATTR                       7: sep
                        128     CALL_METHOD                     1
                        130     GET_ITER                        
                        132     CALL_FUNCTION                   1
                        134     CALL_METHOD                     1
                        136     STORE_FAST                      4: arcname
                        138     LOAD_GLOBAL                     5: os
                        140     LOAD_ATTR                       6: path
                        142     LOAD_ATTR                       7: sep
                        144     LOAD_CONST                      6: '\\'
                        146     COMPARE_OP                      2 (==)
                        148     POP_JUMP_IF_FALSE               83 (to 166)
                        150     LOAD_FAST                       0: self
                        152     LOAD_METHOD                     14: _sanitize_windows_name
                        154     LOAD_FAST                       4: arcname
                        156     LOAD_GLOBAL                     5: os
                        158     LOAD_ATTR                       6: path
                        160     LOAD_ATTR                       7: sep
                        162     CALL_METHOD                     2
                        164     STORE_FAST                      4: arcname
                        166     LOAD_GLOBAL                     5: os
                        168     LOAD_ATTR                       6: path
                        170     LOAD_METHOD                     12: join
                        172     LOAD_FAST                       2: targetpath
                        174     LOAD_FAST                       4: arcname
                        176     CALL_METHOD                     2
                        178     STORE_FAST                      2: targetpath
                        180     LOAD_GLOBAL                     5: os
                        182     LOAD_ATTR                       6: path
                        184     LOAD_METHOD                     15: normpath
                        186     LOAD_FAST                       2: targetpath
                        188     CALL_METHOD                     1
                        190     STORE_FAST                      2: targetpath
                        192     LOAD_GLOBAL                     5: os
                        194     LOAD_ATTR                       6: path
                        196     LOAD_METHOD                     16: dirname
                        198     LOAD_FAST                       2: targetpath
                        200     CALL_METHOD                     1
                        202     STORE_FAST                      5: upperdirs
                        204     LOAD_FAST                       5: upperdirs
                        206     POP_JUMP_IF_FALSE               115 (to 230)
                        208     LOAD_GLOBAL                     5: os
                        210     LOAD_ATTR                       6: path
                        212     LOAD_METHOD                     17: exists
                        214     LOAD_FAST                       5: upperdirs
                        216     CALL_METHOD                     1
                        218     POP_JUMP_IF_TRUE                115 (to 230)
                        220     LOAD_GLOBAL                     5: os
                        222     LOAD_METHOD                     18: makedirs
                        224     LOAD_FAST                       5: upperdirs
                        226     CALL_METHOD                     1
                        228     POP_TOP                         
                        230     LOAD_FAST                       1: member
                        232     LOAD_METHOD                     19: is_dir
                        234     CALL_METHOD                     0
                        236     POP_JUMP_IF_FALSE               132 (to 264)
                        238     LOAD_GLOBAL                     5: os
                        240     LOAD_ATTR                       6: path
                        242     LOAD_METHOD                     20: isdir
                        244     LOAD_FAST                       2: targetpath
                        246     CALL_METHOD                     1
                        248     POP_JUMP_IF_TRUE                130 (to 260)
                        250     LOAD_GLOBAL                     5: os
                        252     LOAD_METHOD                     21: mkdir
                        254     LOAD_FAST                       2: targetpath
                        256     CALL_METHOD                     1
                        258     POP_TOP                         
                        260     LOAD_FAST                       2: targetpath
                        262     RETURN_VALUE                    
                        264     LOAD_FAST                       0: self
                        266     LOAD_ATTR                       22: open
                        268     LOAD_FAST                       1: member
                        270     LOAD_FAST                       3: pwd
                        272     LOAD_CONST                      7: ('pwd',)
                        274     CALL_FUNCTION_KW                2
                        276     SETUP_WITH                      44 (to 366)
                        278     STORE_FAST                      6: source
                        280     LOAD_GLOBAL                     22: open
                        282     LOAD_FAST                       2: targetpath
                        284     LOAD_CONST                      8: 'wb'
                        286     CALL_FUNCTION                   2
                        288     SETUP_WITH                      14 (to 318)
                        290     STORE_FAST                      7: target
                        292     LOAD_GLOBAL                     23: shutil
                        294     LOAD_METHOD                     24: copyfileobj
                        296     LOAD_FAST                       6: source
                        298     LOAD_FAST                       7: target
                        300     CALL_METHOD                     2
                        302     POP_TOP                         
                        304     POP_BLOCK                       
                        306     LOAD_CONST                      9: None
                        308     DUP_TOP                         
                        310     DUP_TOP                         
                        312     CALL_FUNCTION                   3
                        314     POP_TOP                         
                        316     JUMP_FORWARD                    16 (to 350)
                        318     WITH_EXCEPT_START               
                        320     POP_JUMP_IF_TRUE                162 (to 324)
                        322     RERAISE                         1
                        324     POP_TOP                         
                        326     POP_TOP                         
                        328     POP_TOP                         
                        330     POP_EXCEPT                      
                        332     POP_TOP                         
                        334     POP_BLOCK                       
                        336     LOAD_CONST                      9: None
                        338     DUP_TOP                         
                        340     DUP_TOP                         
                        342     CALL_FUNCTION                   3
                        344     POP_TOP                         
                        346     LOAD_FAST                       2: targetpath
                        348     RETURN_VALUE                    
                        350     POP_BLOCK                       
                        352     LOAD_CONST                      9: None
                        354     DUP_TOP                         
                        356     DUP_TOP                         
                        358     CALL_FUNCTION                   3
                        360     POP_TOP                         
                        362     LOAD_FAST                       2: targetpath
                        364     RETURN_VALUE                    
                        366     WITH_EXCEPT_START               
                        368     POP_JUMP_IF_TRUE                186 (to 372)
                        370     RERAISE                         1
                        372     POP_TOP                         
                        374     POP_TOP                         
                        376     POP_TOP                         
                        378     POP_EXCEPT                      
                        380     POP_TOP                         
                        382     LOAD_FAST                       2: targetpath
                        384     RETURN_VALUE                    
                'ZipFile._extract_member'
                [Code]
                    File Name: zipfile.py
                    Object Name: _writecheck
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filename'
                        'NameToInfo'
                        'warnings'
                        'warn'
                        'mode'
                        'ValueError'
                        'fp'
                        '_check_compression'
                        'compress_type'
                        '_allowZip64'
                        'len'
                        'filelist'
                        'ZIP_FILECOUNT_LIMIT'
                        'file_size'
                        'ZIP64_LIMIT'
                        'header_offset'
                        'LargeZipFile'
                    [Var Names]
                        'self'
                        'zinfo'
                        'warnings'
                        'requires_zip64'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Check for errors before writing a file to the archive.'
                        0
                        None
                        'Duplicate name: %r'
                        3
                        (
                            'stacklevel'
                        )
                        (
                            'w'
                            'x'
                            'a'
                        )
                        "write() requires mode 'w', 'x', or 'a'"
                        'Attempt to write ZIP archive that was already closed'
                        'Files count'
                        'Filesize'
                        'Zipfile size'
                        ' would require ZIP64 extensions'
                    [Disassembly]
                        0       LOAD_FAST                       1: zinfo
                        2       LOAD_ATTR                       0: filename
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: NameToInfo
                        8       CONTAINS_OP                     0 (in)
                        10      POP_JUMP_IF_FALSE               20 (to 40)
                        12      LOAD_CONST                      1: 0
                        14      LOAD_CONST                      2: None
                        16      IMPORT_NAME                     2: warnings
                        18      STORE_FAST                      2: warnings
                        20      LOAD_FAST                       2: warnings
                        22      LOAD_ATTR                       3: warn
                        24      LOAD_CONST                      3: 'Duplicate name: %r'
                        26      LOAD_FAST                       1: zinfo
                        28      LOAD_ATTR                       0: filename
                        30      BINARY_MODULO                   
                        32      LOAD_CONST                      4: 3
                        34      LOAD_CONST                      5: ('stacklevel',)
                        36      CALL_FUNCTION_KW                2
                        38      POP_TOP                         
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       4: mode
                        44      LOAD_CONST                      6: ('w', 'x', 'a')
                        46      CONTAINS_OP                     1 (not in)
                        48      POP_JUMP_IF_FALSE               29 (to 58)
                        50      LOAD_GLOBAL                     5: ValueError
                        52      LOAD_CONST                      7: "write() requires mode 'w', 'x', or 'a'"
                        54      CALL_FUNCTION                   1
                        56      RAISE_VARARGS                   1
                        58      LOAD_FAST                       0: self
                        60      LOAD_ATTR                       6: fp
                        62      POP_JUMP_IF_TRUE                36 (to 72)
                        64      LOAD_GLOBAL                     5: ValueError
                        66      LOAD_CONST                      8: 'Attempt to write ZIP archive that was already closed'
                        68      CALL_FUNCTION                   1
                        70      RAISE_VARARGS                   1
                        72      LOAD_GLOBAL                     7: _check_compression
                        74      LOAD_FAST                       1: zinfo
                        76      LOAD_ATTR                       8: compress_type
                        78      CALL_FUNCTION                   1
                        80      POP_TOP                         
                        82      LOAD_FAST                       0: self
                        84      LOAD_ATTR                       9: _allowZip64
                        86      POP_JUMP_IF_TRUE                79 (to 158)
                        88      LOAD_CONST                      2: None
                        90      STORE_FAST                      3: requires_zip64
                        92      LOAD_GLOBAL                     10: len
                        94      LOAD_FAST                       0: self
                        96      LOAD_ATTR                       11: filelist
                        98      CALL_FUNCTION                   1
                        100     LOAD_GLOBAL                     12: ZIP_FILECOUNT_LIMIT
                        102     COMPARE_OP                      5 (>=)
                        104     POP_JUMP_IF_FALSE               56 (to 112)
                        106     LOAD_CONST                      9: 'Files count'
                        108     STORE_FAST                      3: requires_zip64
                        110     JUMP_FORWARD                    15 (to 142)
                        112     LOAD_FAST                       1: zinfo
                        114     LOAD_ATTR                       13: file_size
                        116     LOAD_GLOBAL                     14: ZIP64_LIMIT
                        118     COMPARE_OP                      4 (>)
                        120     POP_JUMP_IF_FALSE               64 (to 128)
                        122     LOAD_CONST                      10: 'Filesize'
                        124     STORE_FAST                      3: requires_zip64
                        126     JUMP_FORWARD                    7 (to 142)
                        128     LOAD_FAST                       1: zinfo
                        130     LOAD_ATTR                       15: header_offset
                        132     LOAD_GLOBAL                     14: ZIP64_LIMIT
                        134     COMPARE_OP                      4 (>)
                        136     POP_JUMP_IF_FALSE               71 (to 142)
                        138     LOAD_CONST                      11: 'Zipfile size'
                        140     STORE_FAST                      3: requires_zip64
                        142     LOAD_FAST                       3: requires_zip64
                        144     POP_JUMP_IF_FALSE               81 (to 162)
                        146     LOAD_GLOBAL                     16: LargeZipFile
                        148     LOAD_FAST                       3: requires_zip64
                        150     LOAD_CONST                      12: ' would require ZIP64 extensions'
                        152     BINARY_ADD                      
                        154     CALL_FUNCTION                   1
                        156     RAISE_VARARGS                   1
                        158     LOAD_CONST                      2: None
                        160     RETURN_VALUE                    
                        162     LOAD_CONST                      2: None
                        164     RETURN_VALUE                    
                'ZipFile._writecheck'
                [Code]
                    File Name: zipfile.py
                    Object Name: write
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 8
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        'ValueError'
                        '_writing'
                        'ZipInfo'
                        'from_file'
                        '_strict_timestamps'
                        'is_dir'
                        'compress_size'
                        'CRC'
                        'compress_type'
                        'compression'
                        '_compresslevel'
                        'compresslevel'
                        '_lock'
                        '_seekable'
                        'seek'
                        'start_dir'
                        'tell'
                        'header_offset'
                        'ZIP_LZMA'
                        'flag_bits'
                        '_writecheck'
                        '_didModify'
                        'filelist'
                        'append'
                        'NameToInfo'
                        'filename'
                        'write'
                        'FileHeader'
                        'open'
                        'shutil'
                        'copyfileobj'
                    [Var Names]
                        'self'
                        'filename'
                        'arcname'
                        'compress_type'
                        'compresslevel'
                        'zinfo'
                        'src'
                        'dest'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Put the bytes from filename into the archive under the name\n        arcname.'
                        'Attempt to write to ZIP archive that was already closed'
                        "Can't write to ZIP archive while an open writing handle exists"
                        (
                            'strict_timestamps'
                        )
                        0
                        None
                        2
                        True
                        False
                        'rb'
                        'w'
                        8192
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       POP_JUMP_IF_TRUE                7 (to 14)
                        6       LOAD_GLOBAL                     1: ValueError
                        8       LOAD_CONST                      1: 'Attempt to write to ZIP archive that was already closed'
                        10      CALL_FUNCTION                   1
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       2: _writing
                        18      POP_JUMP_IF_FALSE               14 (to 28)
                        20      LOAD_GLOBAL                     1: ValueError
                        22      LOAD_CONST                      2: "Can't write to ZIP archive while an open writing handle exists"
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      LOAD_GLOBAL                     3: ZipInfo
                        30      LOAD_ATTR                       4: from_file
                        32      LOAD_FAST                       1: filename
                        34      LOAD_FAST                       2: arcname
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       5: _strict_timestamps
                        40      LOAD_CONST                      3: ('strict_timestamps',)
                        42      CALL_FUNCTION_KW                3
                        44      STORE_FAST                      5: zinfo
                        46      LOAD_FAST                       5: zinfo
                        48      LOAD_METHOD                     6: is_dir
                        50      CALL_METHOD                     0
                        52      POP_JUMP_IF_FALSE               34 (to 68)
                        54      LOAD_CONST                      4: 0
                        56      LOAD_FAST                       5: zinfo
                        58      STORE_ATTR                      7: compress_size
                        60      LOAD_CONST                      4: 0
                        62      LOAD_FAST                       5: zinfo
                        64      STORE_ATTR                      8: CRC
                        66      JUMP_FORWARD                    24 (to 116)
                        68      LOAD_FAST                       3: compress_type
                        70      LOAD_CONST                      5: None
                        72      IS_OP                           1 (is not)
                        74      POP_JUMP_IF_FALSE               42 (to 84)
                        76      LOAD_FAST                       3: compress_type
                        78      LOAD_FAST                       5: zinfo
                        80      STORE_ATTR                      9: compress_type
                        82      JUMP_FORWARD                    4 (to 92)
                        84      LOAD_FAST                       0: self
                        86      LOAD_ATTR                       10: compression
                        88      LOAD_FAST                       5: zinfo
                        90      STORE_ATTR                      9: compress_type
                        92      LOAD_FAST                       4: compresslevel
                        94      LOAD_CONST                      5: None
                        96      IS_OP                           1 (is not)
                        98      POP_JUMP_IF_FALSE               54 (to 108)
                        100     LOAD_FAST                       4: compresslevel
                        102     LOAD_FAST                       5: zinfo
                        104     STORE_ATTR                      11: _compresslevel
                        106     JUMP_FORWARD                    4 (to 116)
                        108     LOAD_FAST                       0: self
                        110     LOAD_ATTR                       12: compresslevel
                        112     LOAD_FAST                       5: zinfo
                        114     STORE_ATTR                      11: _compresslevel
                        116     LOAD_FAST                       5: zinfo
                        118     LOAD_METHOD                     6: is_dir
                        120     CALL_METHOD                     0
                        122     POP_JUMP_IF_FALSE               147 (to 294)
                        124     LOAD_FAST                       0: self
                        126     LOAD_ATTR                       13: _lock
                        128     SETUP_WITH                      72 (to 274)
                        130     POP_TOP                         
                        132     LOAD_FAST                       0: self
                        134     LOAD_ATTR                       14: _seekable
                        136     POP_JUMP_IF_FALSE               76 (to 152)
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       0: fp
                        142     LOAD_METHOD                     15: seek
                        144     LOAD_FAST                       0: self
                        146     LOAD_ATTR                       16: start_dir
                        148     CALL_METHOD                     1
                        150     POP_TOP                         
                        152     LOAD_FAST                       0: self
                        154     LOAD_ATTR                       0: fp
                        156     LOAD_METHOD                     17: tell
                        158     CALL_METHOD                     0
                        160     LOAD_FAST                       5: zinfo
                        162     STORE_ATTR                      18: header_offset
                        164     LOAD_FAST                       5: zinfo
                        166     LOAD_ATTR                       9: compress_type
                        168     LOAD_GLOBAL                     19: ZIP_LZMA
                        170     COMPARE_OP                      2 (==)
                        172     POP_JUMP_IF_FALSE               94 (to 188)
                        174     LOAD_FAST                       5: zinfo
                        176     DUP_TOP                         
                        178     LOAD_ATTR                       20: flag_bits
                        180     LOAD_CONST                      6: 2
                        182     INPLACE_OR                      
                        184     ROT_TWO                         
                        186     STORE_ATTR                      20: flag_bits
                        188     LOAD_FAST                       0: self
                        190     LOAD_METHOD                     21: _writecheck
                        192     LOAD_FAST                       5: zinfo
                        194     CALL_METHOD                     1
                        196     POP_TOP                         
                        198     LOAD_CONST                      7: True
                        200     LOAD_FAST                       0: self
                        202     STORE_ATTR                      22: _didModify
                        204     LOAD_FAST                       0: self
                        206     LOAD_ATTR                       23: filelist
                        208     LOAD_METHOD                     24: append
                        210     LOAD_FAST                       5: zinfo
                        212     CALL_METHOD                     1
                        214     POP_TOP                         
                        216     LOAD_FAST                       5: zinfo
                        218     LOAD_FAST                       0: self
                        220     LOAD_ATTR                       25: NameToInfo
                        222     LOAD_FAST                       5: zinfo
                        224     LOAD_ATTR                       26: filename
                        226     STORE_SUBSCR                    
                        228     LOAD_FAST                       0: self
                        230     LOAD_ATTR                       0: fp
                        232     LOAD_METHOD                     27: write
                        234     LOAD_FAST                       5: zinfo
                        236     LOAD_METHOD                     28: FileHeader
                        238     LOAD_CONST                      8: False
                        240     CALL_METHOD                     1
                        242     CALL_METHOD                     1
                        244     POP_TOP                         
                        246     LOAD_FAST                       0: self
                        248     LOAD_ATTR                       0: fp
                        250     LOAD_METHOD                     17: tell
                        252     CALL_METHOD                     0
                        254     LOAD_FAST                       0: self
                        256     STORE_ATTR                      16: start_dir
                        258     POP_BLOCK                       
                        260     LOAD_CONST                      5: None
                        262     DUP_TOP                         
                        264     DUP_TOP                         
                        266     CALL_FUNCTION                   3
                        268     POP_TOP                         
                        270     LOAD_CONST                      5: None
                        272     RETURN_VALUE                    
                        274     WITH_EXCEPT_START               
                        276     POP_JUMP_IF_TRUE                140 (to 280)
                        278     RERAISE                         1
                        280     POP_TOP                         
                        282     POP_TOP                         
                        284     POP_TOP                         
                        286     POP_EXCEPT                      
                        288     POP_TOP                         
                        290     LOAD_CONST                      5: None
                        292     RETURN_VALUE                    
                        294     LOAD_GLOBAL                     29: open
                        296     LOAD_FAST                       1: filename
                        298     LOAD_CONST                      9: 'rb'
                        300     CALL_FUNCTION                   2
                        302     SETUP_WITH                      46 (to 396)
                        304     STORE_FAST                      6: src
                        306     LOAD_FAST                       0: self
                        308     LOAD_METHOD                     29: open
                        310     LOAD_FAST                       5: zinfo
                        312     LOAD_CONST                      10: 'w'
                        314     CALL_METHOD                     2
                        316     SETUP_WITH                      15 (to 348)
                        318     STORE_FAST                      7: dest
                        320     LOAD_GLOBAL                     30: shutil
                        322     LOAD_METHOD                     31: copyfileobj
                        324     LOAD_FAST                       6: src
                        326     LOAD_FAST                       7: dest
                        328     LOAD_CONST                      11: 8192
                        330     CALL_METHOD                     3
                        332     POP_TOP                         
                        334     POP_BLOCK                       
                        336     LOAD_CONST                      5: None
                        338     DUP_TOP                         
                        340     DUP_TOP                         
                        342     CALL_FUNCTION                   3
                        344     POP_TOP                         
                        346     JUMP_FORWARD                    16 (to 380)
                        348     WITH_EXCEPT_START               
                        350     POP_JUMP_IF_TRUE                177 (to 354)
                        352     RERAISE                         1
                        354     POP_TOP                         
                        356     POP_TOP                         
                        358     POP_TOP                         
                        360     POP_EXCEPT                      
                        362     POP_TOP                         
                        364     POP_BLOCK                       
                        366     LOAD_CONST                      5: None
                        368     DUP_TOP                         
                        370     DUP_TOP                         
                        372     CALL_FUNCTION                   3
                        374     POP_TOP                         
                        376     LOAD_CONST                      5: None
                        378     RETURN_VALUE                    
                        380     POP_BLOCK                       
                        382     LOAD_CONST                      5: None
                        384     DUP_TOP                         
                        386     DUP_TOP                         
                        388     CALL_FUNCTION                   3
                        390     POP_TOP                         
                        392     LOAD_CONST                      5: None
                        394     RETURN_VALUE                    
                        396     WITH_EXCEPT_START               
                        398     POP_JUMP_IF_TRUE                201 (to 402)
                        400     RERAISE                         1
                        402     POP_TOP                         
                        404     POP_TOP                         
                        406     POP_TOP                         
                        408     POP_EXCEPT                      
                        410     POP_TOP                         
                        412     LOAD_CONST                      5: None
                        414     RETURN_VALUE                    
                'ZipFile.write'
                [Code]
                    File Name: zipfile.py
                    Object Name: writestr
                    Arg Count: 5
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 7
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'str'
                        'encode'
                        'ZipInfo'
                        'time'
                        'localtime'
                        'compression'
                        'compress_type'
                        'compresslevel'
                        '_compresslevel'
                        'filename'
                        'external_attr'
                        'fp'
                        'ValueError'
                        '_writing'
                        'len'
                        'file_size'
                        '_lock'
                        'open'
                        'write'
                    [Var Names]
                        'self'
                        'zinfo_or_arcname'
                        'data'
                        'compress_type'
                        'compresslevel'
                        'zinfo'
                        'dest'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Write a file into the archive.  The contents is 'data', which\n        may be either a 'str' or a 'bytes' instance; if it is a 'str',\n        it is encoded as UTF-8 first.\n        'zinfo_or_arcname' is either a ZipInfo instance or\n        the name of the file in the archive."
                        'utf-8'
                        None
                        6
                        (
                            'filename'
                            'date_time'
                        )
                        -1
                        '/'
                        1107099648
                        16
                        25165824
                        'Attempt to write to ZIP archive that was already closed'
                        "Can't write to ZIP archive while an open writing handle exists."
                        'w'
                        (
                            'mode'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       2: data
                        4       LOAD_GLOBAL                     1: str
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               10 (to 20)
                        10      LOAD_FAST                       2: data
                        12      LOAD_METHOD                     2: encode
                        14      LOAD_CONST                      1: 'utf-8'
                        16      CALL_METHOD                     1
                        18      STORE_FAST                      2: data
                        20      LOAD_GLOBAL                     0: isinstance
                        22      LOAD_FAST                       1: zinfo_or_arcname
                        24      LOAD_GLOBAL                     3: ZipInfo
                        26      CALL_FUNCTION                   2
                        28      POP_JUMP_IF_TRUE                60 (to 120)
                        30      LOAD_GLOBAL                     3: ZipInfo
                        32      LOAD_FAST                       1: zinfo_or_arcname
                        34      LOAD_GLOBAL                     4: time
                        36      LOAD_METHOD                     5: localtime
                        38      LOAD_GLOBAL                     4: time
                        40      LOAD_METHOD                     4: time
                        42      CALL_METHOD                     0
                        44      CALL_METHOD                     1
                        46      LOAD_CONST                      2: None
                        48      LOAD_CONST                      3: 6
                        50      BUILD_SLICE                     2
                        52      BINARY_SUBSCR                   
                        54      LOAD_CONST                      4: ('filename', 'date_time')
                        56      CALL_FUNCTION_KW                2
                        58      STORE_FAST                      5: zinfo
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       6: compression
                        64      LOAD_FAST                       5: zinfo
                        66      STORE_ATTR                      7: compress_type
                        68      LOAD_FAST                       0: self
                        70      LOAD_ATTR                       8: compresslevel
                        72      LOAD_FAST                       5: zinfo
                        74      STORE_ATTR                      9: _compresslevel
                        76      LOAD_FAST                       5: zinfo
                        78      LOAD_ATTR                       10: filename
                        80      LOAD_CONST                      5: -1
                        82      BINARY_SUBSCR                   
                        84      LOAD_CONST                      6: '/'
                        86      COMPARE_OP                      2 (==)
                        88      POP_JUMP_IF_FALSE               56 (to 112)
                        90      LOAD_CONST                      7: 1107099648
                        92      LOAD_FAST                       5: zinfo
                        94      STORE_ATTR                      11: external_attr
                        96      LOAD_FAST                       5: zinfo
                        98      DUP_TOP                         
                        100     LOAD_ATTR                       11: external_attr
                        102     LOAD_CONST                      8: 16
                        104     INPLACE_OR                      
                        106     ROT_TWO                         
                        108     STORE_ATTR                      11: external_attr
                        110     JUMP_FORWARD                    6 (to 124)
                        112     LOAD_CONST                      9: 25165824
                        114     LOAD_FAST                       5: zinfo
                        116     STORE_ATTR                      11: external_attr
                        118     JUMP_FORWARD                    2 (to 124)
                        120     LOAD_FAST                       1: zinfo_or_arcname
                        122     STORE_FAST                      5: zinfo
                        124     LOAD_FAST                       0: self
                        126     LOAD_ATTR                       12: fp
                        128     POP_JUMP_IF_TRUE                69 (to 138)
                        130     LOAD_GLOBAL                     13: ValueError
                        132     LOAD_CONST                      10: 'Attempt to write to ZIP archive that was already closed'
                        134     CALL_FUNCTION                   1
                        136     RAISE_VARARGS                   1
                        138     LOAD_FAST                       0: self
                        140     LOAD_ATTR                       14: _writing
                        142     POP_JUMP_IF_FALSE               76 (to 152)
                        144     LOAD_GLOBAL                     13: ValueError
                        146     LOAD_CONST                      11: "Can't write to ZIP archive while an open writing handle exists."
                        148     CALL_FUNCTION                   1
                        150     RAISE_VARARGS                   1
                        152     LOAD_FAST                       3: compress_type
                        154     LOAD_CONST                      2: None
                        156     IS_OP                           1 (is not)
                        158     POP_JUMP_IF_FALSE               83 (to 166)
                        160     LOAD_FAST                       3: compress_type
                        162     LOAD_FAST                       5: zinfo
                        164     STORE_ATTR                      7: compress_type
                        166     LOAD_FAST                       4: compresslevel
                        168     LOAD_CONST                      2: None
                        170     IS_OP                           1 (is not)
                        172     POP_JUMP_IF_FALSE               90 (to 180)
                        174     LOAD_FAST                       4: compresslevel
                        176     LOAD_FAST                       5: zinfo
                        178     STORE_ATTR                      9: _compresslevel
                        180     LOAD_GLOBAL                     15: len
                        182     LOAD_FAST                       2: data
                        184     CALL_FUNCTION                   1
                        186     LOAD_FAST                       5: zinfo
                        188     STORE_ATTR                      16: file_size
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       17: _lock
                        194     SETUP_WITH                      45 (to 286)
                        196     POP_TOP                         
                        198     LOAD_FAST                       0: self
                        200     LOAD_ATTR                       18: open
                        202     LOAD_FAST                       5: zinfo
                        204     LOAD_CONST                      12: 'w'
                        206     LOAD_CONST                      13: ('mode',)
                        208     CALL_FUNCTION_KW                2
                        210     SETUP_WITH                      13 (to 238)
                        212     STORE_FAST                      6: dest
                        214     LOAD_FAST                       6: dest
                        216     LOAD_METHOD                     19: write
                        218     LOAD_FAST                       2: data
                        220     CALL_METHOD                     1
                        222     POP_TOP                         
                        224     POP_BLOCK                       
                        226     LOAD_CONST                      2: None
                        228     DUP_TOP                         
                        230     DUP_TOP                         
                        232     CALL_FUNCTION                   3
                        234     POP_TOP                         
                        236     JUMP_FORWARD                    16 (to 270)
                        238     WITH_EXCEPT_START               
                        240     POP_JUMP_IF_TRUE                122 (to 244)
                        242     RERAISE                         1
                        244     POP_TOP                         
                        246     POP_TOP                         
                        248     POP_TOP                         
                        250     POP_EXCEPT                      
                        252     POP_TOP                         
                        254     POP_BLOCK                       
                        256     LOAD_CONST                      2: None
                        258     DUP_TOP                         
                        260     DUP_TOP                         
                        262     CALL_FUNCTION                   3
                        264     POP_TOP                         
                        266     LOAD_CONST                      2: None
                        268     RETURN_VALUE                    
                        270     POP_BLOCK                       
                        272     LOAD_CONST                      2: None
                        274     DUP_TOP                         
                        276     DUP_TOP                         
                        278     CALL_FUNCTION                   3
                        280     POP_TOP                         
                        282     LOAD_CONST                      2: None
                        284     RETURN_VALUE                    
                        286     WITH_EXCEPT_START               
                        288     POP_JUMP_IF_TRUE                146 (to 292)
                        290     RERAISE                         1
                        292     POP_TOP                         
                        294     POP_TOP                         
                        296     POP_TOP                         
                        298     POP_EXCEPT                      
                        300     POP_TOP                         
                        302     LOAD_CONST                      2: None
                        304     RETURN_VALUE                    
                'ZipFile.writestr'
                [Code]
                    File Name: zipfile.py
                    Object Name: __del__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'close'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Call the "close()" method in case the user forgot.'
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: close
                        4       CALL_METHOD                     0
                        6       POP_TOP                         
                        8       LOAD_CONST                      1: None
                        10      RETURN_VALUE                    
                'ZipFile.__del__'
                [Code]
                    File Name: zipfile.py
                    Object Name: close
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'fp'
                        '_writing'
                        'ValueError'
                        'mode'
                        '_didModify'
                        '_lock'
                        '_seekable'
                        'seek'
                        'start_dir'
                        '_write_end_record'
                        '_fpclose'
                    [Var Names]
                        'self'
                        'fp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        "Close the file, and for mode 'w', 'x' and 'a' write the ending\n        records."
                        None
                        "Can't close the ZIP file while there is an open writing handle on it. Close the writing handle before closing the zip."
                        (
                            'w'
                            'x'
                            'a'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: fp
                        4       LOAD_CONST                      1: None
                        6       IS_OP                           0 (is)
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_CONST                      1: None
                        12      RETURN_VALUE                    
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       1: _writing
                        18      POP_JUMP_IF_FALSE               14 (to 28)
                        20      LOAD_GLOBAL                     2: ValueError
                        22      LOAD_CONST                      2: "Can't close the ZIP file while there is an open writing handle on it. Close the writing handle before closing the zip."
                        24      CALL_FUNCTION                   1
                        26      RAISE_VARARGS                   1
                        28      SETUP_FINALLY                   97 (to 224)
                        30      LOAD_FAST                       0: self
                        32      LOAD_ATTR                       3: mode
                        34      LOAD_CONST                      3: ('w', 'x', 'a')
                        36      CONTAINS_OP                     0 (in)
                        38      POP_JUMP_IF_FALSE               70 (to 140)
                        40      LOAD_FAST                       0: self
                        42      LOAD_ATTR                       4: _didModify
                        44      POP_JUMP_IF_FALSE               84 (to 168)
                        46      LOAD_FAST                       0: self
                        48      LOAD_ATTR                       5: _lock
                        50      SETUP_WITH                      22 (to 96)
                        52      POP_TOP                         
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       6: _seekable
                        58      POP_JUMP_IF_FALSE               37 (to 74)
                        60      LOAD_FAST                       0: self
                        62      LOAD_ATTR                       0: fp
                        64      LOAD_METHOD                     7: seek
                        66      LOAD_FAST                       0: self
                        68      LOAD_ATTR                       8: start_dir
                        70      CALL_METHOD                     1
                        72      POP_TOP                         
                        74      LOAD_FAST                       0: self
                        76      LOAD_METHOD                     9: _write_end_record
                        78      CALL_METHOD                     0
                        80      POP_TOP                         
                        82      POP_BLOCK                       
                        84      LOAD_CONST                      1: None
                        86      DUP_TOP                         
                        88      DUP_TOP                         
                        90      CALL_FUNCTION                   3
                        92      POP_TOP                         
                        94      JUMP_FORWARD                    50 (to 196)
                        96      WITH_EXCEPT_START               
                        98      POP_JUMP_IF_TRUE                51 (to 102)
                        100     RERAISE                         1
                        102     POP_TOP                         
                        104     POP_TOP                         
                        106     POP_TOP                         
                        108     POP_EXCEPT                      
                        110     POP_TOP                         
                        112     POP_BLOCK                       
                        114     LOAD_FAST                       0: self
                        116     LOAD_ATTR                       0: fp
                        118     STORE_FAST                      1: fp
                        120     LOAD_CONST                      1: None
                        122     LOAD_FAST                       0: self
                        124     STORE_ATTR                      0: fp
                        126     LOAD_FAST                       0: self
                        128     LOAD_METHOD                     10: _fpclose
                        130     LOAD_FAST                       1: fp
                        132     CALL_METHOD                     1
                        134     POP_TOP                         
                        136     LOAD_CONST                      1: None
                        138     RETURN_VALUE                    
                        140     POP_BLOCK                       
                        142     LOAD_FAST                       0: self
                        144     LOAD_ATTR                       0: fp
                        146     STORE_FAST                      1: fp
                        148     LOAD_CONST                      1: None
                        150     LOAD_FAST                       0: self
                        152     STORE_ATTR                      0: fp
                        154     LOAD_FAST                       0: self
                        156     LOAD_METHOD                     10: _fpclose
                        158     LOAD_FAST                       1: fp
                        160     CALL_METHOD                     1
                        162     POP_TOP                         
                        164     LOAD_CONST                      1: None
                        166     RETURN_VALUE                    
                        168     POP_BLOCK                       
                        170     LOAD_FAST                       0: self
                        172     LOAD_ATTR                       0: fp
                        174     STORE_FAST                      1: fp
                        176     LOAD_CONST                      1: None
                        178     LOAD_FAST                       0: self
                        180     STORE_ATTR                      0: fp
                        182     LOAD_FAST                       0: self
                        184     LOAD_METHOD                     10: _fpclose
                        186     LOAD_FAST                       1: fp
                        188     CALL_METHOD                     1
                        190     POP_TOP                         
                        192     LOAD_CONST                      1: None
                        194     RETURN_VALUE                    
                        196     POP_BLOCK                       
                        198     LOAD_FAST                       0: self
                        200     LOAD_ATTR                       0: fp
                        202     STORE_FAST                      1: fp
                        204     LOAD_CONST                      1: None
                        206     LOAD_FAST                       0: self
                        208     STORE_ATTR                      0: fp
                        210     LOAD_FAST                       0: self
                        212     LOAD_METHOD                     10: _fpclose
                        214     LOAD_FAST                       1: fp
                        216     CALL_METHOD                     1
                        218     POP_TOP                         
                        220     LOAD_CONST                      1: None
                        222     RETURN_VALUE                    
                        224     LOAD_FAST                       0: self
                        226     LOAD_ATTR                       0: fp
                        228     STORE_FAST                      1: fp
                        230     LOAD_CONST                      1: None
                        232     LOAD_FAST                       0: self
                        234     STORE_ATTR                      0: fp
                        236     LOAD_FAST                       0: self
                        238     LOAD_METHOD                     10: _fpclose
                        240     LOAD_FAST                       1: fp
                        242     CALL_METHOD                     1
                        244     POP_TOP                         
                        246     RERAISE                         0
                'ZipFile.close'
                [Code]
                    File Name: zipfile.py
                    Object Name: _write_end_record
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 24
                    Stack Size: 23
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'filelist'
                        'date_time'
                        'file_size'
                        'ZIP64_LIMIT'
                        'compress_size'
                        'append'
                        'header_offset'
                        'extra'
                        '_strip_extra'
                        'struct'
                        'pack'
                        'len'
                        'ZIP64_VERSION'
                        'compress_type'
                        'ZIP_BZIP2'
                        'max'
                        'BZIP2_VERSION'
                        'ZIP_LZMA'
                        'LZMA_VERSION'
                        'extract_version'
                        'create_version'
                        '_encodeFilenameFlags'
                        'structCentralDir'
                        'stringCentralDir'
                        'create_system'
                        'reserved'
                        'CRC'
                        'comment'
                        'internal_attr'
                        'external_attr'
                        'fp'
                        'write'
                        'tell'
                        'start_dir'
                        'ZIP_FILECOUNT_LIMIT'
                        '_allowZip64'
                        'LargeZipFile'
                        'structEndArchive64'
                        'stringEndArchive64'
                        'structEndArchive64Locator'
                        'stringEndArchive64Locator'
                        'min'
                        'structEndArchive'
                        'stringEndArchive'
                        '_comment'
                        'mode'
                        'truncate'
                        'flush'
                    [Var Names]
                        'self'
                        'zinfo'
                        'dt'
                        'dosdate'
                        'dostime'
                        'extra'
                        'file_size'
                        'compress_size'
                        'header_offset'
                        'extra_data'
                        'min_version'
                        'extract_version'
                        'create_version'
                        'filename'
                        'flag_bits'
                        'centdir'
                        'pos2'
                        'centDirCount'
                        'centDirSize'
                        'centDirOffset'
                        'requires_zip64'
                        'zip64endrec'
                        'zip64locrec'
                        'endrec'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        1980
                        9
                        1
                        5
                        2
                        3
                        11
                        4
                        0xFFFFFFFF
                        (
                            1
                        )
                        '<HH'
                        'Q'
                        8
                        'Files count'
                        'Central directory offset'
                        'Central directory size'
                        ' would require ZIP64 extensions'
                        44
                        45
                        65535
                        'a'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: filelist
                        4       GET_ITER                        
                        6       FOR_ITER                        231 (to 470)
                        8       STORE_FAST                      1: zinfo
                        10      LOAD_FAST                       1: zinfo
                        12      LOAD_ATTR                       1: date_time
                        14      STORE_FAST                      2: dt
                        16      LOAD_FAST                       2: dt
                        18      LOAD_CONST                      1: 0
                        20      BINARY_SUBSCR                   
                        22      LOAD_CONST                      2: 1980
                        24      BINARY_SUBTRACT                 
                        26      LOAD_CONST                      3: 9
                        28      BINARY_LSHIFT                   
                        30      LOAD_FAST                       2: dt
                        32      LOAD_CONST                      4: 1
                        34      BINARY_SUBSCR                   
                        36      LOAD_CONST                      5: 5
                        38      BINARY_LSHIFT                   
                        40      BINARY_OR                       
                        42      LOAD_FAST                       2: dt
                        44      LOAD_CONST                      6: 2
                        46      BINARY_SUBSCR                   
                        48      BINARY_OR                       
                        50      STORE_FAST                      3: dosdate
                        52      LOAD_FAST                       2: dt
                        54      LOAD_CONST                      7: 3
                        56      BINARY_SUBSCR                   
                        58      LOAD_CONST                      8: 11
                        60      BINARY_LSHIFT                   
                        62      LOAD_FAST                       2: dt
                        64      LOAD_CONST                      9: 4
                        66      BINARY_SUBSCR                   
                        68      LOAD_CONST                      5: 5
                        70      BINARY_LSHIFT                   
                        72      BINARY_OR                       
                        74      LOAD_FAST                       2: dt
                        76      LOAD_CONST                      5: 5
                        78      BINARY_SUBSCR                   
                        80      LOAD_CONST                      6: 2
                        82      BINARY_FLOOR_DIVIDE             
                        84      BINARY_OR                       
                        86      STORE_FAST                      4: dostime
                        88      BUILD_LIST                      0
                        90      STORE_FAST                      5: extra
                        92      LOAD_FAST                       1: zinfo
                        94      LOAD_ATTR                       2: file_size
                        96      LOAD_GLOBAL                     3: ZIP64_LIMIT
                        98      COMPARE_OP                      4 (>)
                        100     POP_JUMP_IF_TRUE                56 (to 112)
                        102     LOAD_FAST                       1: zinfo
                        104     LOAD_ATTR                       4: compress_size
                        106     LOAD_GLOBAL                     3: ZIP64_LIMIT
                        108     COMPARE_OP                      4 (>)
                        110     POP_JUMP_IF_FALSE               73 (to 146)
                        112     LOAD_FAST                       5: extra
                        114     LOAD_METHOD                     5: append
                        116     LOAD_FAST                       1: zinfo
                        118     LOAD_ATTR                       2: file_size
                        120     CALL_METHOD                     1
                        122     POP_TOP                         
                        124     LOAD_FAST                       5: extra
                        126     LOAD_METHOD                     5: append
                        128     LOAD_FAST                       1: zinfo
                        130     LOAD_ATTR                       4: compress_size
                        132     CALL_METHOD                     1
                        134     POP_TOP                         
                        136     LOAD_CONST                      10: 0xFFFFFFFF
                        138     STORE_FAST                      6: file_size
                        140     LOAD_CONST                      10: 0xFFFFFFFF
                        142     STORE_FAST                      7: compress_size
                        144     JUMP_FORWARD                    6 (to 158)
                        146     LOAD_FAST                       1: zinfo
                        148     LOAD_ATTR                       2: file_size
                        150     STORE_FAST                      6: file_size
                        152     LOAD_FAST                       1: zinfo
                        154     LOAD_ATTR                       4: compress_size
                        156     STORE_FAST                      7: compress_size
                        158     LOAD_FAST                       1: zinfo
                        160     LOAD_ATTR                       6: header_offset
                        162     LOAD_GLOBAL                     3: ZIP64_LIMIT
                        164     COMPARE_OP                      4 (>)
                        166     POP_JUMP_IF_FALSE               93 (to 186)
                        168     LOAD_FAST                       5: extra
                        170     LOAD_METHOD                     5: append
                        172     LOAD_FAST                       1: zinfo
                        174     LOAD_ATTR                       6: header_offset
                        176     CALL_METHOD                     1
                        178     POP_TOP                         
                        180     LOAD_CONST                      10: 0xFFFFFFFF
                        182     STORE_FAST                      8: header_offset
                        184     JUMP_FORWARD                    3 (to 192)
                        186     LOAD_FAST                       1: zinfo
                        188     LOAD_ATTR                       6: header_offset
                        190     STORE_FAST                      8: header_offset
                        192     LOAD_FAST                       1: zinfo
                        194     LOAD_ATTR                       7: extra
                        196     STORE_FAST                      9: extra_data
                        198     LOAD_CONST                      1: 0
                        200     STORE_FAST                      10: min_version
                        202     LOAD_FAST                       5: extra
                        204     POP_JUMP_IF_FALSE               133 (to 266)
                        206     LOAD_GLOBAL                     8: _strip_extra
                        208     LOAD_FAST                       9: extra_data
                        210     LOAD_CONST                      11: (1,)
                        212     CALL_FUNCTION                   2
                        214     STORE_FAST                      9: extra_data
                        216     LOAD_GLOBAL                     9: struct
                        218     LOAD_ATTR                       10: pack
                        220     LOAD_CONST                      12: '<HH'
                        222     LOAD_CONST                      13: 'Q'
                        224     LOAD_GLOBAL                     11: len
                        226     LOAD_FAST                       5: extra
                        228     CALL_FUNCTION                   1
                        230     BINARY_MULTIPLY                 
                        232     BINARY_ADD                      
                        234     LOAD_CONST                      4: 1
                        236     LOAD_CONST                      14: 8
                        238     LOAD_GLOBAL                     11: len
                        240     LOAD_FAST                       5: extra
                        242     CALL_FUNCTION                   1
                        244     BINARY_MULTIPLY                 
                        246     BUILD_LIST                      3
                        248     LOAD_FAST                       5: extra
                        250     LIST_EXTEND                     1
                        252     LIST_TO_TUPLE                   
                        254     CALL_FUNCTION_EX                0
                        256     LOAD_FAST                       9: extra_data
                        258     BINARY_ADD                      
                        260     STORE_FAST                      9: extra_data
                        262     LOAD_GLOBAL                     12: ZIP64_VERSION
                        264     STORE_FAST                      10: min_version
                        266     LOAD_FAST                       1: zinfo
                        268     LOAD_ATTR                       13: compress_type
                        270     LOAD_GLOBAL                     14: ZIP_BZIP2
                        272     COMPARE_OP                      2 (==)
                        274     POP_JUMP_IF_FALSE               144 (to 288)
                        276     LOAD_GLOBAL                     15: max
                        278     LOAD_GLOBAL                     16: BZIP2_VERSION
                        280     LOAD_FAST                       10: min_version
                        282     CALL_FUNCTION                   2
                        284     STORE_FAST                      10: min_version
                        286     JUMP_FORWARD                    10 (to 308)
                        288     LOAD_FAST                       1: zinfo
                        290     LOAD_ATTR                       13: compress_type
                        292     LOAD_GLOBAL                     17: ZIP_LZMA
                        294     COMPARE_OP                      2 (==)
                        296     POP_JUMP_IF_FALSE               154 (to 308)
                        298     LOAD_GLOBAL                     15: max
                        300     LOAD_GLOBAL                     18: LZMA_VERSION
                        302     LOAD_FAST                       10: min_version
                        304     CALL_FUNCTION                   2
                        306     STORE_FAST                      10: min_version
                        308     LOAD_GLOBAL                     15: max
                        310     LOAD_FAST                       10: min_version
                        312     LOAD_FAST                       1: zinfo
                        314     LOAD_ATTR                       19: extract_version
                        316     CALL_FUNCTION                   2
                        318     STORE_FAST                      11: extract_version
                        320     LOAD_GLOBAL                     15: max
                        322     LOAD_FAST                       10: min_version
                        324     LOAD_FAST                       1: zinfo
                        326     LOAD_ATTR                       20: create_version
                        328     CALL_FUNCTION                   2
                        330     STORE_FAST                      12: create_version
                        332     LOAD_FAST                       1: zinfo
                        334     LOAD_METHOD                     21: _encodeFilenameFlags
                        336     CALL_METHOD                     0
                        338     UNPACK_SEQUENCE                 2
                        340     STORE_FAST                      13: filename
                        342     STORE_FAST                      14: flag_bits
                        344     LOAD_GLOBAL                     9: struct
                        346     LOAD_METHOD                     10: pack
                        348     LOAD_GLOBAL                     22: structCentralDir
                        350     LOAD_GLOBAL                     23: stringCentralDir
                        352     LOAD_FAST                       12: create_version
                        354     LOAD_FAST                       1: zinfo
                        356     LOAD_ATTR                       24: create_system
                        358     LOAD_FAST                       11: extract_version
                        360     LOAD_FAST                       1: zinfo
                        362     LOAD_ATTR                       25: reserved
                        364     LOAD_FAST                       14: flag_bits
                        366     LOAD_FAST                       1: zinfo
                        368     LOAD_ATTR                       13: compress_type
                        370     LOAD_FAST                       4: dostime
                        372     LOAD_FAST                       3: dosdate
                        374     LOAD_FAST                       1: zinfo
                        376     LOAD_ATTR                       26: CRC
                        378     LOAD_FAST                       7: compress_size
                        380     LOAD_FAST                       6: file_size
                        382     LOAD_GLOBAL                     11: len
                        384     LOAD_FAST                       13: filename
                        386     CALL_FUNCTION                   1
                        388     LOAD_GLOBAL                     11: len
                        390     LOAD_FAST                       9: extra_data
                        392     CALL_FUNCTION                   1
                        394     LOAD_GLOBAL                     11: len
                        396     LOAD_FAST                       1: zinfo
                        398     LOAD_ATTR                       27: comment
                        400     CALL_FUNCTION                   1
                        402     LOAD_CONST                      1: 0
                        404     LOAD_FAST                       1: zinfo
                        406     LOAD_ATTR                       28: internal_attr
                        408     LOAD_FAST                       1: zinfo
                        410     LOAD_ATTR                       29: external_attr
                        412     LOAD_FAST                       8: header_offset
                        414     CALL_METHOD                     20
                        416     STORE_FAST                      15: centdir
                        418     LOAD_FAST                       0: self
                        420     LOAD_ATTR                       30: fp
                        422     LOAD_METHOD                     31: write
                        424     LOAD_FAST                       15: centdir
                        426     CALL_METHOD                     1
                        428     POP_TOP                         
                        430     LOAD_FAST                       0: self
                        432     LOAD_ATTR                       30: fp
                        434     LOAD_METHOD                     31: write
                        436     LOAD_FAST                       13: filename
                        438     CALL_METHOD                     1
                        440     POP_TOP                         
                        442     LOAD_FAST                       0: self
                        444     LOAD_ATTR                       30: fp
                        446     LOAD_METHOD                     31: write
                        448     LOAD_FAST                       9: extra_data
                        450     CALL_METHOD                     1
                        452     POP_TOP                         
                        454     LOAD_FAST                       0: self
                        456     LOAD_ATTR                       30: fp
                        458     LOAD_METHOD                     31: write
                        460     LOAD_FAST                       1: zinfo
                        462     LOAD_ATTR                       27: comment
                        464     CALL_METHOD                     1
                        466     POP_TOP                         
                        468     JUMP_ABSOLUTE                   3 (to 6)
                        470     LOAD_FAST                       0: self
                        472     LOAD_ATTR                       30: fp
                        474     LOAD_METHOD                     32: tell
                        476     CALL_METHOD                     0
                        478     STORE_FAST                      16: pos2
                        480     LOAD_GLOBAL                     11: len
                        482     LOAD_FAST                       0: self
                        484     LOAD_ATTR                       0: filelist
                        486     CALL_FUNCTION                   1
                        488     STORE_FAST                      17: centDirCount
                        490     LOAD_FAST                       16: pos2
                        492     LOAD_FAST                       0: self
                        494     LOAD_ATTR                       33: start_dir
                        496     BINARY_SUBTRACT                 
                        498     STORE_FAST                      18: centDirSize
                        500     LOAD_FAST                       0: self
                        502     LOAD_ATTR                       33: start_dir
                        504     STORE_FAST                      19: centDirOffset
                        506     LOAD_CONST                      0: None
                        508     STORE_FAST                      20: requires_zip64
                        510     LOAD_FAST                       17: centDirCount
                        512     LOAD_GLOBAL                     34: ZIP_FILECOUNT_LIMIT
                        514     COMPARE_OP                      4 (>)
                        516     POP_JUMP_IF_FALSE               263 (to 526)
                        520     LOAD_CONST                      15: 'Files count'
                        522     STORE_FAST                      20: requires_zip64
                        524     JUMP_FORWARD                    15 (to 556)
                        526     LOAD_FAST                       19: centDirOffset
                        528     LOAD_GLOBAL                     3: ZIP64_LIMIT
                        530     COMPARE_OP                      4 (>)
                        532     POP_JUMP_IF_FALSE               271 (to 542)
                        536     LOAD_CONST                      16: 'Central directory offset'
                        538     STORE_FAST                      20: requires_zip64
                        540     JUMP_FORWARD                    7 (to 556)
                        542     LOAD_FAST                       18: centDirSize
                        544     LOAD_GLOBAL                     3: ZIP64_LIMIT
                        546     COMPARE_OP                      4 (>)
                        548     POP_JUMP_IF_FALSE               278 (to 556)
                        552     LOAD_CONST                      17: 'Central directory size'
                        554     STORE_FAST                      20: requires_zip64
                        556     LOAD_FAST                       20: requires_zip64
                        558     POP_JUMP_IF_FALSE               342 (to 684)
                        562     LOAD_FAST                       0: self
                        564     LOAD_ATTR                       35: _allowZip64
                        566     POP_JUMP_IF_TRUE                291 (to 582)
                        570     LOAD_GLOBAL                     36: LargeZipFile
                        572     LOAD_FAST                       20: requires_zip64
                        574     LOAD_CONST                      18: ' would require ZIP64 extensions'
                        576     BINARY_ADD                      
                        578     CALL_FUNCTION                   1
                        580     RAISE_VARARGS                   1
                        582     LOAD_GLOBAL                     9: struct
                        584     LOAD_METHOD                     10: pack
                        586     LOAD_GLOBAL                     37: structEndArchive64
                        588     LOAD_GLOBAL                     38: stringEndArchive64
                        590     LOAD_CONST                      19: 44
                        592     LOAD_CONST                      20: 45
                        594     LOAD_CONST                      20: 45
                        596     LOAD_CONST                      1: 0
                        598     LOAD_CONST                      1: 0
                        600     LOAD_FAST                       17: centDirCount
                        602     LOAD_FAST                       17: centDirCount
                        604     LOAD_FAST                       18: centDirSize
                        606     LOAD_FAST                       19: centDirOffset
                        608     CALL_METHOD                     11
                        610     STORE_FAST                      21: zip64endrec
                        612     LOAD_FAST                       0: self
                        614     LOAD_ATTR                       30: fp
                        616     LOAD_METHOD                     31: write
                        618     LOAD_FAST                       21: zip64endrec
                        620     CALL_METHOD                     1
                        622     POP_TOP                         
                        624     LOAD_GLOBAL                     9: struct
                        626     LOAD_METHOD                     10: pack
                        628     LOAD_GLOBAL                     39: structEndArchive64Locator
                        630     LOAD_GLOBAL                     40: stringEndArchive64Locator
                        632     LOAD_CONST                      1: 0
                        634     LOAD_FAST                       16: pos2
                        636     LOAD_CONST                      4: 1
                        638     CALL_METHOD                     5
                        640     STORE_FAST                      22: zip64locrec
                        642     LOAD_FAST                       0: self
                        644     LOAD_ATTR                       30: fp
                        646     LOAD_METHOD                     31: write
                        648     LOAD_FAST                       22: zip64locrec
                        650     CALL_METHOD                     1
                        652     POP_TOP                         
                        654     LOAD_GLOBAL                     41: min
                        656     LOAD_FAST                       17: centDirCount
                        658     LOAD_CONST                      21: 65535
                        660     CALL_FUNCTION                   2
                        662     STORE_FAST                      17: centDirCount
                        664     LOAD_GLOBAL                     41: min
                        666     LOAD_FAST                       18: centDirSize
                        668     LOAD_CONST                      10: 0xFFFFFFFF
                        670     CALL_FUNCTION                   2
                        672     STORE_FAST                      18: centDirSize
                        674     LOAD_GLOBAL                     41: min
                        676     LOAD_FAST                       19: centDirOffset
                        678     LOAD_CONST                      10: 0xFFFFFFFF
                        680     CALL_FUNCTION                   2
                        682     STORE_FAST                      19: centDirOffset
                        684     LOAD_GLOBAL                     9: struct
                        686     LOAD_METHOD                     10: pack
                        688     LOAD_GLOBAL                     42: structEndArchive
                        690     LOAD_GLOBAL                     43: stringEndArchive
                        692     LOAD_CONST                      1: 0
                        694     LOAD_CONST                      1: 0
                        696     LOAD_FAST                       17: centDirCount
                        698     LOAD_FAST                       17: centDirCount
                        700     LOAD_FAST                       18: centDirSize
                        702     LOAD_FAST                       19: centDirOffset
                        704     LOAD_GLOBAL                     11: len
                        706     LOAD_FAST                       0: self
                        708     LOAD_ATTR                       44: _comment
                        710     CALL_FUNCTION                   1
                        712     CALL_METHOD                     9
                        714     STORE_FAST                      23: endrec
                        716     LOAD_FAST                       0: self
                        718     LOAD_ATTR                       30: fp
                        720     LOAD_METHOD                     31: write
                        722     LOAD_FAST                       23: endrec
                        724     CALL_METHOD                     1
                        726     POP_TOP                         
                        728     LOAD_FAST                       0: self
                        730     LOAD_ATTR                       30: fp
                        732     LOAD_METHOD                     31: write
                        734     LOAD_FAST                       0: self
                        736     LOAD_ATTR                       44: _comment
                        738     CALL_METHOD                     1
                        740     POP_TOP                         
                        742     LOAD_FAST                       0: self
                        744     LOAD_ATTR                       45: mode
                        746     LOAD_CONST                      22: 'a'
                        748     COMPARE_OP                      2 (==)
                        750     POP_JUMP_IF_FALSE               382 (to 764)
                        754     LOAD_FAST                       0: self
                        756     LOAD_ATTR                       30: fp
                        758     LOAD_METHOD                     46: truncate
                        760     CALL_METHOD                     0
                        762     POP_TOP                         
                        764     LOAD_FAST                       0: self
                        766     LOAD_ATTR                       30: fp
                        768     LOAD_METHOD                     47: flush
                        770     CALL_METHOD                     0
                        772     POP_TOP                         
                        774     LOAD_CONST                      0: None
                        776     RETURN_VALUE                    
                'ZipFile._write_end_record'
                [Code]
                    File Name: zipfile.py
                    Object Name: _fpclose
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_fileRefCnt'
                        '_filePassed'
                        'close'
                    [Var Names]
                        'self'
                        'fp'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        1
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _fileRefCnt
                        4       LOAD_CONST                      1: 0
                        6       COMPARE_OP                      4 (>)
                        8       POP_JUMP_IF_TRUE                7 (to 14)
                        10      LOAD_ASSERTION_ERROR            
                        12      RAISE_VARARGS                   1
                        14      LOAD_FAST                       0: self
                        16      DUP_TOP                         
                        18      LOAD_ATTR                       0: _fileRefCnt
                        20      LOAD_CONST                      2: 1
                        22      INPLACE_SUBTRACT                
                        24      ROT_TWO                         
                        26      STORE_ATTR                      0: _fileRefCnt
                        28      LOAD_FAST                       0: self
                        30      LOAD_ATTR                       0: _fileRefCnt
                        32      POP_JUMP_IF_TRUE                26 (to 52)
                        34      LOAD_FAST                       0: self
                        36      LOAD_ATTR                       1: _filePassed
                        38      POP_JUMP_IF_TRUE                28 (to 56)
                        40      LOAD_FAST                       1: fp
                        42      LOAD_METHOD                     2: close
                        44      CALL_METHOD                     0
                        46      POP_TOP                         
                        48      LOAD_CONST                      0: None
                        50      RETURN_VALUE                    
                        52      LOAD_CONST                      0: None
                        54      RETURN_VALUE                    
                        56      LOAD_CONST                      0: None
                        58      RETURN_VALUE                    
                'ZipFile._fpclose'
                (
                    None
                )
                (
                    'r'
                    None
                )
                (
                    False
                )
                (
                    None
                    None
                )
                (
                    None
                    None
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ZipFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: ' Class with methods to open, read, write, close, list zip files.\n\n    z = ZipFile(file, mode="r", compression=ZIP_STORED, allowZip64=True,\n                compresslevel=None)\n\n    file: Either the path to the file, or a file-like object.\n          If it is a path, the file will be opened and closed by ZipFile.\n    mode: The mode can be either read \'r\', write \'w\', exclusive create \'x\',\n          or append \'a\'.\n    compression: ZIP_STORED (no compression), ZIP_DEFLATED (requires zlib),\n                 ZIP_BZIP2 (requires bz2) or ZIP_LZMA (requires lzma).\n    allowZip64: if True ZipFile will create files with ZIP64 extensions when\n                needed, otherwise it will raise an exception when this would\n                be necessary.\n    compresslevel: None (default for the given compression type) or an integer\n                   specifying the level to pass to the compressor.\n                   When using ZIP_STORED or ZIP_LZMA this keyword has no effect.\n                   When using ZIP_DEFLATED integers 0 through 9 are accepted.\n                   When using ZIP_BZIP2 integers 1 through 9 are accepted.\n\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      STORE_NAME                      4: fp
                16      LOAD_CONST                      2: None
                18      STORE_NAME                      5: _windows_illegal_name_trans_table
                20      LOAD_CONST                      3: 'r'
                22      LOAD_NAME                       6: ZIP_STORED
                24      LOAD_CONST                      4: True
                26      LOAD_CONST                      2: None
                28      BUILD_TUPLE                     4
                30      LOAD_CONST                      4: True
                32      LOAD_CONST                      5: ('strict_timestamps',)
                34      BUILD_CONST_KEY_MAP             1
                36      LOAD_CONST                      6: <CODE> __init__
                38      LOAD_CONST                      7: 'ZipFile.__init__'
                40      MAKE_FUNCTION                   3
                42      STORE_NAME                      7: __init__
                44      LOAD_CONST                      8: <CODE> __enter__
                46      LOAD_CONST                      9: 'ZipFile.__enter__'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      8: __enter__
                52      LOAD_CONST                      10: <CODE> __exit__
                54      LOAD_CONST                      11: 'ZipFile.__exit__'
                56      MAKE_FUNCTION                   0
                58      STORE_NAME                      9: __exit__
                60      LOAD_CONST                      12: <CODE> __repr__
                62      LOAD_CONST                      13: 'ZipFile.__repr__'
                64      MAKE_FUNCTION                   0
                66      STORE_NAME                      10: __repr__
                68      LOAD_CONST                      14: <CODE> _RealGetContents
                70      LOAD_CONST                      15: 'ZipFile._RealGetContents'
                72      MAKE_FUNCTION                   0
                74      STORE_NAME                      11: _RealGetContents
                76      LOAD_CONST                      16: <CODE> namelist
                78      LOAD_CONST                      17: 'ZipFile.namelist'
                80      MAKE_FUNCTION                   0
                82      STORE_NAME                      12: namelist
                84      LOAD_CONST                      18: <CODE> infolist
                86      LOAD_CONST                      19: 'ZipFile.infolist'
                88      MAKE_FUNCTION                   0
                90      STORE_NAME                      13: infolist
                92      LOAD_CONST                      61: (None,)
                94      LOAD_CONST                      20: <CODE> printdir
                96      LOAD_CONST                      21: 'ZipFile.printdir'
                98      MAKE_FUNCTION                   1
                100     STORE_NAME                      14: printdir
                102     LOAD_CONST                      22: <CODE> testzip
                104     LOAD_CONST                      23: 'ZipFile.testzip'
                106     MAKE_FUNCTION                   0
                108     STORE_NAME                      15: testzip
                110     LOAD_CONST                      24: <CODE> getinfo
                112     LOAD_CONST                      25: 'ZipFile.getinfo'
                114     MAKE_FUNCTION                   0
                116     STORE_NAME                      16: getinfo
                118     LOAD_CONST                      26: <CODE> setpassword
                120     LOAD_CONST                      27: 'ZipFile.setpassword'
                122     MAKE_FUNCTION                   0
                124     STORE_NAME                      17: setpassword
                126     LOAD_NAME                       18: property
                128     LOAD_CONST                      28: <CODE> comment
                130     LOAD_CONST                      29: 'ZipFile.comment'
                132     MAKE_FUNCTION                   0
                134     CALL_FUNCTION                   1
                136     STORE_NAME                      19: comment
                138     LOAD_NAME                       19: comment
                140     LOAD_ATTR                       20: setter
                142     LOAD_CONST                      30: <CODE> comment
                144     LOAD_CONST                      29: 'ZipFile.comment'
                146     MAKE_FUNCTION                   0
                148     CALL_FUNCTION                   1
                150     STORE_NAME                      19: comment
                152     LOAD_CONST                      61: (None,)
                154     LOAD_CONST                      31: <CODE> read
                156     LOAD_CONST                      32: 'ZipFile.read'
                158     MAKE_FUNCTION                   1
                160     STORE_NAME                      21: read
                162     LOAD_CONST                      62: ('r', None)
                164     LOAD_CONST                      33: False
                166     LOAD_CONST                      34: ('force_zip64',)
                168     BUILD_CONST_KEY_MAP             1
                170     LOAD_CONST                      35: <CODE> open
                172     LOAD_CONST                      36: 'ZipFile.open'
                174     MAKE_FUNCTION                   3
                176     STORE_NAME                      22: open
                178     LOAD_CONST                      63: (False,)
                180     LOAD_CONST                      37: <CODE> _open_to_write
                182     LOAD_CONST                      38: 'ZipFile._open_to_write'
                184     MAKE_FUNCTION                   1
                186     STORE_NAME                      23: _open_to_write
                188     LOAD_CONST                      64: (None, None)
                190     LOAD_CONST                      39: <CODE> extract
                192     LOAD_CONST                      40: 'ZipFile.extract'
                194     MAKE_FUNCTION                   1
                196     STORE_NAME                      24: extract
                198     LOAD_CONST                      65: (None, None, None)
                200     LOAD_CONST                      41: <CODE> extractall
                202     LOAD_CONST                      42: 'ZipFile.extractall'
                204     MAKE_FUNCTION                   1
                206     STORE_NAME                      25: extractall
                208     LOAD_NAME                       26: classmethod
                210     LOAD_CONST                      43: <CODE> _sanitize_windows_name
                212     LOAD_CONST                      44: 'ZipFile._sanitize_windows_name'
                214     MAKE_FUNCTION                   0
                216     CALL_FUNCTION                   1
                218     STORE_NAME                      27: _sanitize_windows_name
                220     LOAD_CONST                      45: <CODE> _extract_member
                222     LOAD_CONST                      46: 'ZipFile._extract_member'
                224     MAKE_FUNCTION                   0
                226     STORE_NAME                      28: _extract_member
                228     LOAD_CONST                      47: <CODE> _writecheck
                230     LOAD_CONST                      48: 'ZipFile._writecheck'
                232     MAKE_FUNCTION                   0
                234     STORE_NAME                      29: _writecheck
                236     NOP                             
                238     NOP                             
                240     LOAD_CONST                      65: (None, None, None)
                242     LOAD_CONST                      49: <CODE> write
                244     LOAD_CONST                      50: 'ZipFile.write'
                246     MAKE_FUNCTION                   1
                248     STORE_NAME                      30: write
                250     NOP                             
                252     LOAD_CONST                      64: (None, None)
                254     LOAD_CONST                      51: <CODE> writestr
                256     LOAD_CONST                      52: 'ZipFile.writestr'
                258     MAKE_FUNCTION                   1
                260     STORE_NAME                      31: writestr
                262     LOAD_CONST                      53: <CODE> __del__
                264     LOAD_CONST                      54: 'ZipFile.__del__'
                266     MAKE_FUNCTION                   0
                268     STORE_NAME                      32: __del__
                270     LOAD_CONST                      55: <CODE> close
                272     LOAD_CONST                      56: 'ZipFile.close'
                274     MAKE_FUNCTION                   0
                276     STORE_NAME                      33: close
                278     LOAD_CONST                      57: <CODE> _write_end_record
                280     LOAD_CONST                      58: 'ZipFile._write_end_record'
                282     MAKE_FUNCTION                   0
                284     STORE_NAME                      34: _write_end_record
                286     LOAD_CONST                      59: <CODE> _fpclose
                288     LOAD_CONST                      60: 'ZipFile._fpclose'
                290     MAKE_FUNCTION                   0
                292     STORE_NAME                      35: _fpclose
                294     LOAD_CONST                      2: None
                296     RETURN_VALUE                    
        'ZipFile'
        [Code]
            File Name: zipfile.py
            Object Name: PyZipFile
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'ZIP_STORED'
                '__init__'
                'writepy'
                '_get_codename'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'PyZipFile'
                'Class to create ZIP archives with Python library files and packages.'
                'r'
                True
                -1
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 6
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 6
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'ZipFile'
                        '__init__'
                        '_optimize'
                    [Var Names]
                        'self'
                        'file'
                        'mode'
                        'compression'
                        'allowZip64'
                        'optimize'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'mode'
                            'compression'
                            'allowZip64'
                        )
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: ZipFile
                        2       LOAD_ATTR                       1: __init__
                        4       LOAD_FAST                       0: self
                        6       LOAD_FAST                       1: file
                        8       LOAD_FAST                       2: mode
                        10      LOAD_FAST                       3: compression
                        12      LOAD_FAST                       4: allowZip64
                        14      LOAD_CONST                      1: ('mode', 'compression', 'allowZip64')
                        16      CALL_FUNCTION_KW                5
                        18      POP_TOP                         
                        20      LOAD_FAST                       5: optimize
                        22      LOAD_FAST                       0: self
                        24      STORE_ATTR                      2: _optimize
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                'PyZipFile.__init__'
                ''
                None
                [Code]
                    File Name: zipfile.py
                    Object Name: writepy
                    Arg Count: 4
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 15
                    Stack Size: 7
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'fspath'
                        'debug'
                        'path'
                        'isdir'
                        'print'
                        'split'
                        'join'
                        'isfile'
                        '_get_codename'
                        'write'
                        'sorted'
                        'listdir'
                        'remove'
                        'splitext'
                        'writepy'
                        'RuntimeError'
                    [Var Names]
                        'self'
                        'pathname'
                        'basename'
                        'filterfunc'
                        'label'
                        'dir'
                        'name'
                        'initname'
                        'fname'
                        'arcname'
                        'dirlist'
                        'filename'
                        'path'
                        'root'
                        'ext'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'Add all files from "pathname" to the ZIP archive.\n\n        If pathname is a package directory, search the directory and\n        all package subdirectories recursively for all *.py and enter\n        the modules into the archive.  If pathname is a plain\n        directory, listdir *.py and enter all modules.  Else, pathname\n        must be a Python *.py file and the module will be put into the\n        archive.  Added modules are always module.pyc.\n        This method will compile the module.py into module.pyc if\n        necessary.\n        If filterfunc(pathname) is given, it is called with every argument.\n        When it is False, the file or directory is skipped.\n        '
                        'path'
                        'file'
                        '%s %r skipped by filterfunc'
                        None
                        '__init__.py'
                        '%s/%s'
                        'Adding package in'
                        'as'
                        0
                        -3
                        'Adding'
                        (
                            'filterfunc'
                        )
                        '.py'
                        'file %r skipped by filterfunc'
                        'Adding files from directory'
                        'Files added with writepy() must end with ".py"'
                        'Adding file'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_METHOD                     1: fspath
                        4       LOAD_FAST                       1: pathname
                        6       CALL_METHOD                     1
                        8       STORE_FAST                      1: pathname
                        10      LOAD_FAST                       3: filterfunc
                        12      POP_JUMP_IF_FALSE               34 (to 68)
                        14      LOAD_FAST                       3: filterfunc
                        16      LOAD_FAST                       1: pathname
                        18      CALL_FUNCTION                   1
                        20      POP_JUMP_IF_TRUE                34 (to 68)
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       2: debug
                        26      POP_JUMP_IF_FALSE               32 (to 64)
                        28      LOAD_GLOBAL                     0: os
                        30      LOAD_ATTR                       3: path
                        32      LOAD_METHOD                     4: isdir
                        34      LOAD_FAST                       1: pathname
                        36      CALL_METHOD                     1
                        38      POP_JUMP_IF_FALSE               22 (to 44)
                        40      LOAD_CONST                      1: 'path'
                        42      JUMP_FORWARD                    1 (to 46)
                        44      LOAD_CONST                      2: 'file'
                        46      STORE_FAST                      4: label
                        48      LOAD_GLOBAL                     5: print
                        50      LOAD_CONST                      3: '%s %r skipped by filterfunc'
                        52      LOAD_FAST                       4: label
                        54      LOAD_FAST                       1: pathname
                        56      BUILD_TUPLE                     2
                        58      BINARY_MODULO                   
                        60      CALL_FUNCTION                   1
                        62      POP_TOP                         
                        64      LOAD_CONST                      4: None
                        66      RETURN_VALUE                    
                        68      LOAD_GLOBAL                     0: os
                        70      LOAD_ATTR                       3: path
                        72      LOAD_METHOD                     6: split
                        74      LOAD_FAST                       1: pathname
                        76      CALL_METHOD                     1
                        78      UNPACK_SEQUENCE                 2
                        80      STORE_FAST                      5: dir
                        82      STORE_FAST                      6: name
                        84      LOAD_GLOBAL                     0: os
                        86      LOAD_ATTR                       3: path
                        88      LOAD_METHOD                     4: isdir
                        90      LOAD_FAST                       1: pathname
                        92      CALL_METHOD                     1
                        94      POP_JUMP_IF_FALSE               301 (to 602)
                        98      LOAD_GLOBAL                     0: os
                        100     LOAD_ATTR                       3: path
                        102     LOAD_METHOD                     7: join
                        104     LOAD_FAST                       1: pathname
                        106     LOAD_CONST                      5: '__init__.py'
                        108     CALL_METHOD                     2
                        110     STORE_FAST                      7: initname
                        112     LOAD_GLOBAL                     0: os
                        114     LOAD_ATTR                       3: path
                        116     LOAD_METHOD                     8: isfile
                        118     LOAD_FAST                       7: initname
                        120     CALL_METHOD                     1
                        122     POP_JUMP_IF_FALSE               215 (to 430)
                        124     LOAD_FAST                       2: basename
                        126     POP_JUMP_IF_FALSE               71 (to 142)
                        128     LOAD_CONST                      6: '%s/%s'
                        130     LOAD_FAST                       2: basename
                        132     LOAD_FAST                       6: name
                        134     BUILD_TUPLE                     2
                        136     BINARY_MODULO                   
                        138     STORE_FAST                      2: basename
                        140     JUMP_FORWARD                    2 (to 146)
                        142     LOAD_FAST                       6: name
                        144     STORE_FAST                      2: basename
                        146     LOAD_FAST                       0: self
                        148     LOAD_ATTR                       2: debug
                        150     POP_JUMP_IF_FALSE               83 (to 166)
                        152     LOAD_GLOBAL                     5: print
                        154     LOAD_CONST                      7: 'Adding package in'
                        156     LOAD_FAST                       1: pathname
                        158     LOAD_CONST                      8: 'as'
                        160     LOAD_FAST                       2: basename
                        162     CALL_FUNCTION                   4
                        164     POP_TOP                         
                        166     LOAD_FAST                       0: self
                        168     LOAD_METHOD                     9: _get_codename
                        170     LOAD_FAST                       7: initname
                        172     LOAD_CONST                      9: 0
                        174     LOAD_CONST                      10: -3
                        176     BUILD_SLICE                     2
                        178     BINARY_SUBSCR                   
                        180     LOAD_FAST                       2: basename
                        182     CALL_METHOD                     2
                        184     UNPACK_SEQUENCE                 2
                        186     STORE_FAST                      8: fname
                        188     STORE_FAST                      9: arcname
                        190     LOAD_FAST                       0: self
                        192     LOAD_ATTR                       2: debug
                        194     POP_JUMP_IF_FALSE               103 (to 206)
                        196     LOAD_GLOBAL                     5: print
                        198     LOAD_CONST                      11: 'Adding'
                        200     LOAD_FAST                       9: arcname
                        202     CALL_FUNCTION                   2
                        204     POP_TOP                         
                        206     LOAD_FAST                       0: self
                        208     LOAD_METHOD                     10: write
                        210     LOAD_FAST                       8: fname
                        212     LOAD_FAST                       9: arcname
                        214     CALL_METHOD                     2
                        216     POP_TOP                         
                        218     LOAD_GLOBAL                     11: sorted
                        220     LOAD_GLOBAL                     0: os
                        222     LOAD_METHOD                     12: listdir
                        224     LOAD_FAST                       1: pathname
                        226     CALL_METHOD                     1
                        228     CALL_FUNCTION                   1
                        230     STORE_FAST                      10: dirlist
                        232     LOAD_FAST                       10: dirlist
                        234     LOAD_METHOD                     13: remove
                        236     LOAD_CONST                      5: '__init__.py'
                        238     CALL_METHOD                     1
                        240     POP_TOP                         
                        242     LOAD_FAST                       10: dirlist
                        244     GET_ITER                        
                        246     FOR_ITER                        89 (to 426)
                        248     STORE_FAST                      11: filename
                        250     LOAD_GLOBAL                     0: os
                        252     LOAD_ATTR                       3: path
                        254     LOAD_METHOD                     7: join
                        256     LOAD_FAST                       1: pathname
                        258     LOAD_FAST                       11: filename
                        260     CALL_METHOD                     2
                        262     STORE_FAST                      12: path
                        264     LOAD_GLOBAL                     0: os
                        266     LOAD_ATTR                       3: path
                        268     LOAD_METHOD                     14: splitext
                        270     LOAD_FAST                       11: filename
                        272     CALL_METHOD                     1
                        274     UNPACK_SEQUENCE                 2
                        276     STORE_FAST                      13: root
                        278     STORE_FAST                      14: ext
                        280     LOAD_GLOBAL                     0: os
                        282     LOAD_ATTR                       3: path
                        284     LOAD_METHOD                     4: isdir
                        286     LOAD_FAST                       12: path
                        288     CALL_METHOD                     1
                        290     POP_JUMP_IF_FALSE               166 (to 332)
                        292     LOAD_GLOBAL                     0: os
                        294     LOAD_ATTR                       3: path
                        296     LOAD_METHOD                     8: isfile
                        298     LOAD_GLOBAL                     0: os
                        300     LOAD_ATTR                       3: path
                        302     LOAD_METHOD                     7: join
                        304     LOAD_FAST                       12: path
                        306     LOAD_CONST                      5: '__init__.py'
                        308     CALL_METHOD                     2
                        310     CALL_METHOD                     1
                        312     POP_JUMP_IF_FALSE               165 (to 330)
                        314     LOAD_FAST                       0: self
                        316     LOAD_ATTR                       15: writepy
                        318     LOAD_FAST                       12: path
                        320     LOAD_FAST                       2: basename
                        322     LOAD_FAST                       3: filterfunc
                        324     LOAD_CONST                      12: ('filterfunc',)
                        326     CALL_FUNCTION_KW                3
                        328     POP_TOP                         
                        330     JUMP_ABSOLUTE                   123 (to 246)
                        332     LOAD_FAST                       14: ext
                        334     LOAD_CONST                      13: '.py'
                        336     COMPARE_OP                      2 (==)
                        338     POP_JUMP_IF_FALSE               212 (to 424)
                        340     LOAD_FAST                       3: filterfunc
                        342     POP_JUMP_IF_FALSE               186 (to 372)
                        344     LOAD_FAST                       3: filterfunc
                        346     LOAD_FAST                       12: path
                        348     CALL_FUNCTION                   1
                        350     POP_JUMP_IF_TRUE                186 (to 372)
                        352     LOAD_FAST                       0: self
                        354     LOAD_ATTR                       2: debug
                        356     POP_JUMP_IF_FALSE               185 (to 370)
                        358     LOAD_GLOBAL                     5: print
                        360     LOAD_CONST                      14: 'file %r skipped by filterfunc'
                        362     LOAD_FAST                       12: path
                        364     BINARY_MODULO                   
                        366     CALL_FUNCTION                   1
                        368     POP_TOP                         
                        370     JUMP_ABSOLUTE                   123 (to 246)
                        372     LOAD_FAST                       0: self
                        374     LOAD_METHOD                     9: _get_codename
                        376     LOAD_FAST                       12: path
                        378     LOAD_CONST                      9: 0
                        380     LOAD_CONST                      10: -3
                        382     BUILD_SLICE                     2
                        384     BINARY_SUBSCR                   
                        386     LOAD_FAST                       2: basename
                        388     CALL_METHOD                     2
                        390     UNPACK_SEQUENCE                 2
                        392     STORE_FAST                      8: fname
                        394     STORE_FAST                      9: arcname
                        396     LOAD_FAST                       0: self
                        398     LOAD_ATTR                       2: debug
                        400     POP_JUMP_IF_FALSE               206 (to 412)
                        402     LOAD_GLOBAL                     5: print
                        404     LOAD_CONST                      11: 'Adding'
                        406     LOAD_FAST                       9: arcname
                        408     CALL_FUNCTION                   2
                        410     POP_TOP                         
                        412     LOAD_FAST                       0: self
                        414     LOAD_METHOD                     10: write
                        416     LOAD_FAST                       8: fname
                        418     LOAD_FAST                       9: arcname
                        420     CALL_METHOD                     2
                        422     POP_TOP                         
                        424     JUMP_ABSOLUTE                   123 (to 246)
                        426     LOAD_CONST                      4: None
                        428     RETURN_VALUE                    
                        430     LOAD_FAST                       0: self
                        432     LOAD_ATTR                       2: debug
                        434     POP_JUMP_IF_FALSE               223 (to 446)
                        436     LOAD_GLOBAL                     5: print
                        438     LOAD_CONST                      15: 'Adding files from directory'
                        440     LOAD_FAST                       1: pathname
                        442     CALL_FUNCTION                   2
                        444     POP_TOP                         
                        446     LOAD_GLOBAL                     11: sorted
                        448     LOAD_GLOBAL                     0: os
                        450     LOAD_METHOD                     12: listdir
                        452     LOAD_FAST                       1: pathname
                        454     CALL_METHOD                     1
                        456     CALL_FUNCTION                   1
                        458     GET_ITER                        
                        460     FOR_ITER                        68 (to 598)
                        462     STORE_FAST                      11: filename
                        464     LOAD_GLOBAL                     0: os
                        466     LOAD_ATTR                       3: path
                        468     LOAD_METHOD                     7: join
                        470     LOAD_FAST                       1: pathname
                        472     LOAD_FAST                       11: filename
                        474     CALL_METHOD                     2
                        476     STORE_FAST                      12: path
                        478     LOAD_GLOBAL                     0: os
                        480     LOAD_ATTR                       3: path
                        482     LOAD_METHOD                     14: splitext
                        484     LOAD_FAST                       11: filename
                        486     CALL_METHOD                     1
                        488     UNPACK_SEQUENCE                 2
                        490     STORE_FAST                      13: root
                        492     STORE_FAST                      14: ext
                        494     LOAD_FAST                       14: ext
                        496     LOAD_CONST                      13: '.py'
                        498     COMPARE_OP                      2 (==)
                        500     POP_JUMP_IF_FALSE               298 (to 596)
                        504     LOAD_FAST                       3: filterfunc
                        506     POP_JUMP_IF_FALSE               271 (to 542)
                        510     LOAD_FAST                       3: filterfunc
                        512     LOAD_FAST                       12: path
                        514     CALL_FUNCTION                   1
                        516     POP_JUMP_IF_TRUE                271 (to 542)
                        520     LOAD_FAST                       0: self
                        522     LOAD_ATTR                       2: debug
                        524     POP_JUMP_IF_FALSE               270 (to 540)
                        528     LOAD_GLOBAL                     5: print
                        530     LOAD_CONST                      14: 'file %r skipped by filterfunc'
                        532     LOAD_FAST                       12: path
                        534     BINARY_MODULO                   
                        536     CALL_FUNCTION                   1
                        538     POP_TOP                         
                        540     JUMP_ABSOLUTE                   230 (to 460)
                        542     LOAD_FAST                       0: self
                        544     LOAD_METHOD                     9: _get_codename
                        546     LOAD_FAST                       12: path
                        548     LOAD_CONST                      9: 0
                        550     LOAD_CONST                      10: -3
                        552     BUILD_SLICE                     2
                        554     BINARY_SUBSCR                   
                        556     LOAD_FAST                       2: basename
                        558     CALL_METHOD                     2
                        560     UNPACK_SEQUENCE                 2
                        562     STORE_FAST                      8: fname
                        564     STORE_FAST                      9: arcname
                        566     LOAD_FAST                       0: self
                        568     LOAD_ATTR                       2: debug
                        570     POP_JUMP_IF_FALSE               292 (to 584)
                        574     LOAD_GLOBAL                     5: print
                        576     LOAD_CONST                      11: 'Adding'
                        578     LOAD_FAST                       9: arcname
                        580     CALL_FUNCTION                   2
                        582     POP_TOP                         
                        584     LOAD_FAST                       0: self
                        586     LOAD_METHOD                     10: write
                        588     LOAD_FAST                       8: fname
                        590     LOAD_FAST                       9: arcname
                        592     CALL_METHOD                     2
                        594     POP_TOP                         
                        596     JUMP_ABSOLUTE                   230 (to 460)
                        598     LOAD_CONST                      4: None
                        600     RETURN_VALUE                    
                        602     LOAD_FAST                       1: pathname
                        604     LOAD_CONST                      10: -3
                        606     LOAD_CONST                      4: None
                        608     BUILD_SLICE                     2
                        610     BINARY_SUBSCR                   
                        612     LOAD_CONST                      13: '.py'
                        614     COMPARE_OP                      3 (!=)
                        616     POP_JUMP_IF_FALSE               314 (to 628)
                        620     LOAD_GLOBAL                     16: RuntimeError
                        622     LOAD_CONST                      16: 'Files added with writepy() must end with ".py"'
                        624     CALL_FUNCTION                   1
                        626     RAISE_VARARGS                   1
                        628     LOAD_FAST                       0: self
                        630     LOAD_METHOD                     9: _get_codename
                        632     LOAD_FAST                       1: pathname
                        634     LOAD_CONST                      9: 0
                        636     LOAD_CONST                      10: -3
                        638     BUILD_SLICE                     2
                        640     BINARY_SUBSCR                   
                        642     LOAD_FAST                       2: basename
                        644     CALL_METHOD                     2
                        646     UNPACK_SEQUENCE                 2
                        648     STORE_FAST                      8: fname
                        650     STORE_FAST                      9: arcname
                        652     LOAD_FAST                       0: self
                        654     LOAD_ATTR                       2: debug
                        656     POP_JUMP_IF_FALSE               335 (to 670)
                        660     LOAD_GLOBAL                     5: print
                        662     LOAD_CONST                      17: 'Adding file'
                        664     LOAD_FAST                       9: arcname
                        666     CALL_FUNCTION                   2
                        668     POP_TOP                         
                        670     LOAD_FAST                       0: self
                        672     LOAD_METHOD                     10: write
                        674     LOAD_FAST                       8: fname
                        676     LOAD_FAST                       9: arcname
                        678     CALL_METHOD                     2
                        680     POP_TOP                         
                        682     LOAD_CONST                      4: None
                        684     RETURN_VALUE                    
                'PyZipFile.writepy'
                [Code]
                    File Name: zipfile.py
                    Object Name: _get_codename
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 13
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'importlib'
                        'util'
                        'cache_from_source'
                        '_optimize'
                        'os'
                        'path'
                        'isfile'
                        'stat'
                        'st_mtime'
                        'sys'
                        'flags'
                        'optimize'
                        'format'
                        'ValueError'
                        'split'
                    [Var Names]
                        'self'
                        'pathname'
                        'basename'
                        '_compile'
                        'file_py'
                        'file_pyc'
                        'pycache_opt0'
                        'pycache_opt1'
                        'pycache_opt2'
                        'arcname'
                        'fname'
                        'msg'
                        'archivename'
                    [Free Vars]
                    [Cell Vars]
                        'self'
                    [Constants]
                        'Return (filename, archivename) for the path.\n\n        Given a module name path, return the correct file path and\n        archive name, compiling if necessary.  For example, given\n        /python/lib/string, return (/python/lib/string.pyc, string).\n        '
                        -1
                        [Code]
                            File Name: zipfile.py
                            Object Name: _compile
                            Arg Count: 2
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 4
                            Stack Size: 10
                            Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                            [Names]
                                'py_compile'
                                'debug'
                                'print'
                                'compile'
                                'PyCompileError'
                                'msg'
                            [Var Names]
                                'file'
                                'optimize'
                                'py_compile'
                                'err'
                            [Free Vars]
                                'self'
                            [Cell Vars]
                            [Constants]
                                None
                                0
                                'Compiling'
                                True
                                (
                                    'doraise'
                                    'optimize'
                                )
                                False
                            [Disassembly]
                                0       LOAD_CONST                      1: 0
                                2       LOAD_CONST                      0: None
                                4       IMPORT_NAME                     0: py_compile
                                6       STORE_FAST                      2: py_compile
                                8       LOAD_DEREF                      0: self
                                10      LOAD_ATTR                       1: debug
                                12      POP_JUMP_IF_FALSE               12 (to 24)
                                14      LOAD_GLOBAL                     2: print
                                16      LOAD_CONST                      2: 'Compiling'
                                18      LOAD_FAST                       0: file
                                20      CALL_FUNCTION                   2
                                22      POP_TOP                         
                                24      SETUP_FINALLY                   11 (to 48)
                                26      LOAD_FAST                       2: py_compile
                                28      LOAD_ATTR                       3: compile
                                30      LOAD_FAST                       0: file
                                32      LOAD_CONST                      3: True
                                34      LOAD_FAST                       1: optimize
                                36      LOAD_CONST                      4: ('doraise', 'optimize')
                                38      CALL_FUNCTION_KW                3
                                40      POP_TOP                         
                                42      POP_BLOCK                       
                                44      LOAD_CONST                      3: True
                                46      RETURN_VALUE                    
                                48      DUP_TOP                         
                                50      LOAD_FAST                       2: py_compile
                                52      LOAD_ATTR                       4: PyCompileError
                                54      JUMP_IF_NOT_EXC_MATCH           48 (to 96)
                                56      POP_TOP                         
                                58      STORE_FAST                      3: err
                                60      POP_TOP                         
                                62      SETUP_FINALLY                   12 (to 88)
                                64      LOAD_GLOBAL                     2: print
                                66      LOAD_FAST                       3: err
                                68      LOAD_ATTR                       5: msg
                                70      CALL_FUNCTION                   1
                                72      POP_TOP                         
                                74      POP_BLOCK                       
                                76      POP_EXCEPT                      
                                78      LOAD_CONST                      0: None
                                80      STORE_FAST                      3: err
                                82      DELETE_FAST                     3: err
                                84      LOAD_CONST                      5: False
                                86      RETURN_VALUE                    
                                88      LOAD_CONST                      0: None
                                90      STORE_FAST                      3: err
                                92      DELETE_FAST                     3: err
                                94      RERAISE                         1
                                96      RERAISE                         0
                        'PyZipFile._get_codename.<locals>._compile'
                        '.py'
                        '.pyc'
                        ''
                        (
                            'optimization'
                        )
                        1
                        2
                        0
                        "invalid value for 'optimize': {!r}"
                        (
                            'optimize'
                        )
                        '%s/%s'
                        None
                        (
                            -1
                        )
                    [Disassembly]
                        0       LOAD_CONST                      15: (-1,)
                        2       LOAD_CLOSURE                    0: self
                        4       BUILD_TUPLE                     1
                        6       LOAD_CONST                      2: <CODE> _compile
                        8       LOAD_CONST                      3: 'PyZipFile._get_codename.<locals>._compile'
                        10      MAKE_FUNCTION                   9
                        12      STORE_FAST                      3: _compile
                        14      LOAD_FAST                       1: pathname
                        16      LOAD_CONST                      4: '.py'
                        18      BINARY_ADD                      
                        20      STORE_FAST                      4: file_py
                        22      LOAD_FAST                       1: pathname
                        24      LOAD_CONST                      5: '.pyc'
                        26      BINARY_ADD                      
                        28      STORE_FAST                      5: file_pyc
                        30      LOAD_GLOBAL                     0: importlib
                        32      LOAD_ATTR                       1: util
                        34      LOAD_ATTR                       2: cache_from_source
                        36      LOAD_FAST                       4: file_py
                        38      LOAD_CONST                      6: ''
                        40      LOAD_CONST                      7: ('optimization',)
                        42      CALL_FUNCTION_KW                2
                        44      STORE_FAST                      6: pycache_opt0
                        46      LOAD_GLOBAL                     0: importlib
                        48      LOAD_ATTR                       1: util
                        50      LOAD_ATTR                       2: cache_from_source
                        52      LOAD_FAST                       4: file_py
                        54      LOAD_CONST                      8: 1
                        56      LOAD_CONST                      7: ('optimization',)
                        58      CALL_FUNCTION_KW                2
                        60      STORE_FAST                      7: pycache_opt1
                        62      LOAD_GLOBAL                     0: importlib
                        64      LOAD_ATTR                       1: util
                        66      LOAD_ATTR                       2: cache_from_source
                        68      LOAD_FAST                       4: file_py
                        70      LOAD_CONST                      9: 2
                        72      LOAD_CONST                      7: ('optimization',)
                        74      CALL_FUNCTION_KW                2
                        76      STORE_FAST                      8: pycache_opt2
                        78      LOAD_DEREF                      0: self
                        80      LOAD_ATTR                       3: _optimize
                        82      LOAD_CONST                      1: -1
                        84      COMPARE_OP                      2 (==)
                        86      POP_JUMP_IF_FALSE               168 (to 336)
                        88      LOAD_GLOBAL                     4: os
                        90      LOAD_ATTR                       5: path
                        92      LOAD_METHOD                     6: isfile
                        94      LOAD_FAST                       5: file_pyc
                        96      CALL_METHOD                     1
                        98      POP_JUMP_IF_FALSE               67 (to 134)
                        100     LOAD_GLOBAL                     4: os
                        102     LOAD_METHOD                     7: stat
                        104     LOAD_FAST                       5: file_pyc
                        106     CALL_METHOD                     1
                        108     LOAD_ATTR                       8: st_mtime
                        110     LOAD_GLOBAL                     4: os
                        112     LOAD_METHOD                     7: stat
                        114     LOAD_FAST                       4: file_py
                        116     CALL_METHOD                     1
                        118     LOAD_ATTR                       8: st_mtime
                        120     COMPARE_OP                      5 (>=)
                        122     POP_JUMP_IF_FALSE               67 (to 134)
                        124     LOAD_FAST                       5: file_pyc
                        126     DUP_TOP                         
                        128     STORE_FAST                      9: arcname
                        130     STORE_FAST                      10: fname
                        132     JUMP_FORWARD                    168 (to 470)
                        134     LOAD_GLOBAL                     4: os
                        136     LOAD_ATTR                       5: path
                        138     LOAD_METHOD                     6: isfile
                        140     LOAD_FAST                       6: pycache_opt0
                        142     CALL_METHOD                     1
                        144     POP_JUMP_IF_FALSE               90 (to 180)
                        146     LOAD_GLOBAL                     4: os
                        148     LOAD_METHOD                     7: stat
                        150     LOAD_FAST                       6: pycache_opt0
                        152     CALL_METHOD                     1
                        154     LOAD_ATTR                       8: st_mtime
                        156     LOAD_GLOBAL                     4: os
                        158     LOAD_METHOD                     7: stat
                        160     LOAD_FAST                       4: file_py
                        162     CALL_METHOD                     1
                        164     LOAD_ATTR                       8: st_mtime
                        166     COMPARE_OP                      5 (>=)
                        168     POP_JUMP_IF_FALSE               90 (to 180)
                        170     LOAD_FAST                       6: pycache_opt0
                        172     STORE_FAST                      10: fname
                        174     LOAD_FAST                       5: file_pyc
                        176     STORE_FAST                      9: arcname
                        178     JUMP_FORWARD                    145 (to 470)
                        180     LOAD_GLOBAL                     4: os
                        182     LOAD_ATTR                       5: path
                        184     LOAD_METHOD                     6: isfile
                        186     LOAD_FAST                       7: pycache_opt1
                        188     CALL_METHOD                     1
                        190     POP_JUMP_IF_FALSE               113 (to 226)
                        192     LOAD_GLOBAL                     4: os
                        194     LOAD_METHOD                     7: stat
                        196     LOAD_FAST                       7: pycache_opt1
                        198     CALL_METHOD                     1
                        200     LOAD_ATTR                       8: st_mtime
                        202     LOAD_GLOBAL                     4: os
                        204     LOAD_METHOD                     7: stat
                        206     LOAD_FAST                       4: file_py
                        208     CALL_METHOD                     1
                        210     LOAD_ATTR                       8: st_mtime
                        212     COMPARE_OP                      5 (>=)
                        214     POP_JUMP_IF_FALSE               113 (to 226)
                        216     LOAD_FAST                       7: pycache_opt1
                        218     STORE_FAST                      10: fname
                        220     LOAD_FAST                       5: file_pyc
                        222     STORE_FAST                      9: arcname
                        224     JUMP_FORWARD                    122 (to 470)
                        226     LOAD_GLOBAL                     4: os
                        228     LOAD_ATTR                       5: path
                        230     LOAD_METHOD                     6: isfile
                        232     LOAD_FAST                       8: pycache_opt2
                        234     CALL_METHOD                     1
                        236     POP_JUMP_IF_FALSE               136 (to 272)
                        238     LOAD_GLOBAL                     4: os
                        240     LOAD_METHOD                     7: stat
                        242     LOAD_FAST                       8: pycache_opt2
                        244     CALL_METHOD                     1
                        246     LOAD_ATTR                       8: st_mtime
                        248     LOAD_GLOBAL                     4: os
                        250     LOAD_METHOD                     7: stat
                        252     LOAD_FAST                       4: file_py
                        254     CALL_METHOD                     1
                        256     LOAD_ATTR                       8: st_mtime
                        258     COMPARE_OP                      5 (>=)
                        260     POP_JUMP_IF_FALSE               136 (to 272)
                        262     LOAD_FAST                       8: pycache_opt2
                        264     STORE_FAST                      10: fname
                        266     LOAD_FAST                       5: file_pyc
                        268     STORE_FAST                      9: arcname
                        270     JUMP_FORWARD                    99 (to 470)
                        272     LOAD_FAST                       3: _compile
                        274     LOAD_FAST                       4: file_py
                        276     CALL_FUNCTION                   1
                        278     POP_JUMP_IF_FALSE               163 (to 326)
                        280     LOAD_GLOBAL                     9: sys
                        282     LOAD_ATTR                       10: flags
                        284     LOAD_ATTR                       11: optimize
                        286     LOAD_CONST                      10: 0
                        288     COMPARE_OP                      2 (==)
                        290     POP_JUMP_IF_FALSE               149 (to 298)
                        292     LOAD_FAST                       6: pycache_opt0
                        294     STORE_FAST                      10: fname
                        296     JUMP_FORWARD                    11 (to 320)
                        298     LOAD_GLOBAL                     9: sys
                        300     LOAD_ATTR                       10: flags
                        302     LOAD_ATTR                       11: optimize
                        304     LOAD_CONST                      8: 1
                        306     COMPARE_OP                      2 (==)
                        308     POP_JUMP_IF_FALSE               158 (to 316)
                        310     LOAD_FAST                       7: pycache_opt1
                        312     STORE_FAST                      10: fname
                        314     JUMP_FORWARD                    2 (to 320)
                        316     LOAD_FAST                       8: pycache_opt2
                        318     STORE_FAST                      10: fname
                        320     LOAD_FAST                       5: file_pyc
                        322     STORE_FAST                      9: arcname
                        324     JUMP_FORWARD                    72 (to 470)
                        326     LOAD_FAST                       4: file_py
                        328     DUP_TOP                         
                        330     STORE_FAST                      10: fname
                        332     STORE_FAST                      9: arcname
                        334     JUMP_FORWARD                    67 (to 470)
                        336     LOAD_DEREF                      0: self
                        338     LOAD_ATTR                       3: _optimize
                        340     LOAD_CONST                      10: 0
                        342     COMPARE_OP                      2 (==)
                        344     POP_JUMP_IF_FALSE               178 (to 356)
                        346     LOAD_FAST                       6: pycache_opt0
                        348     STORE_FAST                      10: fname
                        350     LOAD_FAST                       5: file_pyc
                        352     STORE_FAST                      9: arcname
                        354     JUMP_FORWARD                    28 (to 412)
                        356     LOAD_FAST                       5: file_pyc
                        358     STORE_FAST                      9: arcname
                        360     LOAD_DEREF                      0: self
                        362     LOAD_ATTR                       3: _optimize
                        364     LOAD_CONST                      8: 1
                        366     COMPARE_OP                      2 (==)
                        368     POP_JUMP_IF_FALSE               188 (to 376)
                        370     LOAD_FAST                       7: pycache_opt1
                        372     STORE_FAST                      10: fname
                        374     JUMP_FORWARD                    18 (to 412)
                        376     LOAD_DEREF                      0: self
                        378     LOAD_ATTR                       3: _optimize
                        380     LOAD_CONST                      9: 2
                        382     COMPARE_OP                      2 (==)
                        384     POP_JUMP_IF_FALSE               196 (to 392)
                        386     LOAD_FAST                       8: pycache_opt2
                        388     STORE_FAST                      10: fname
                        390     JUMP_FORWARD                    10 (to 412)
                        392     LOAD_CONST                      11: "invalid value for 'optimize': {!r}"
                        394     LOAD_METHOD                     12: format
                        396     LOAD_DEREF                      0: self
                        398     LOAD_ATTR                       3: _optimize
                        400     CALL_METHOD                     1
                        402     STORE_FAST                      11: msg
                        404     LOAD_GLOBAL                     13: ValueError
                        406     LOAD_FAST                       11: msg
                        408     CALL_FUNCTION                   1
                        410     RAISE_VARARGS                   1
                        412     LOAD_GLOBAL                     4: os
                        414     LOAD_ATTR                       5: path
                        416     LOAD_METHOD                     6: isfile
                        418     LOAD_FAST                       10: fname
                        420     CALL_METHOD                     1
                        422     POP_JUMP_IF_FALSE               224 (to 448)
                        424     LOAD_GLOBAL                     4: os
                        426     LOAD_METHOD                     7: stat
                        428     LOAD_FAST                       10: fname
                        430     CALL_METHOD                     1
                        432     LOAD_ATTR                       8: st_mtime
                        434     LOAD_GLOBAL                     4: os
                        436     LOAD_METHOD                     7: stat
                        438     LOAD_FAST                       4: file_py
                        440     CALL_METHOD                     1
                        442     LOAD_ATTR                       8: st_mtime
                        444     COMPARE_OP                      5 (>=)
                        446     POP_JUMP_IF_TRUE                235 (to 470)
                        448     LOAD_FAST                       3: _compile
                        450     LOAD_FAST                       4: file_py
                        452     LOAD_DEREF                      0: self
                        454     LOAD_ATTR                       3: _optimize
                        456     LOAD_CONST                      12: ('optimize',)
                        458     CALL_FUNCTION_KW                2
                        460     POP_JUMP_IF_TRUE                235 (to 470)
                        462     LOAD_FAST                       4: file_py
                        464     DUP_TOP                         
                        466     STORE_FAST                      10: fname
                        468     STORE_FAST                      9: arcname
                        470     LOAD_GLOBAL                     4: os
                        472     LOAD_ATTR                       5: path
                        474     LOAD_METHOD                     14: split
                        476     LOAD_FAST                       9: arcname
                        478     CALL_METHOD                     1
                        480     LOAD_CONST                      8: 1
                        482     BINARY_SUBSCR                   
                        484     STORE_FAST                      12: archivename
                        486     LOAD_FAST                       2: basename
                        488     POP_JUMP_IF_FALSE               251 (to 502)
                        490     LOAD_CONST                      13: '%s/%s'
                        492     LOAD_FAST                       2: basename
                        494     LOAD_FAST                       12: archivename
                        496     BUILD_TUPLE                     2
                        498     BINARY_MODULO                   
                        500     STORE_FAST                      12: archivename
                        502     LOAD_FAST                       10: fname
                        504     LOAD_FAST                       12: archivename
                        506     BUILD_TUPLE                     2
                        508     RETURN_VALUE                    
                'PyZipFile._get_codename'
                (
                    ''
                    None
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'PyZipFile'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Class to create ZIP archives with Python library files and packages.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: 'r'
                14      LOAD_NAME                       4: ZIP_STORED
                16      LOAD_CONST                      3: True
                18      LOAD_CONST                      4: -1
                20      BUILD_TUPLE                     4
                22      LOAD_CONST                      5: <CODE> __init__
                24      LOAD_CONST                      6: 'PyZipFile.__init__'
                26      MAKE_FUNCTION                   1
                28      STORE_NAME                      5: __init__
                30      LOAD_CONST                      13: ('', None)
                32      LOAD_CONST                      9: <CODE> writepy
                34      LOAD_CONST                      10: 'PyZipFile.writepy'
                36      MAKE_FUNCTION                   1
                38      STORE_NAME                      6: writepy
                40      LOAD_CONST                      11: <CODE> _get_codename
                42      LOAD_CONST                      12: 'PyZipFile._get_codename'
                44      MAKE_FUNCTION                   0
                46      STORE_NAME                      7: _get_codename
                48      LOAD_CONST                      8: None
                50      RETURN_VALUE                    
        'PyZipFile'
        [Code]
            File Name: zipfile.py
            Object Name: _parents
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'itertools'
                'islice'
                '_ancestry'
            [Var Names]
                'path'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "\n    Given a path with elements separated by\n    posixpath.sep, generate all parents of that path.\n\n    >>> list(_parents('b/d'))\n    ['b']\n    >>> list(_parents('/b/d/'))\n    ['/b']\n    >>> list(_parents('b/d/f/'))\n    ['b/d', 'b']\n    >>> list(_parents('b'))\n    []\n    >>> list(_parents(''))\n    []\n    "
                1
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: itertools
                2       LOAD_METHOD                     1: islice
                4       LOAD_GLOBAL                     2: _ancestry
                6       LOAD_FAST                       0: path
                8       CALL_FUNCTION                   1
                10      LOAD_CONST                      1: 1
                12      LOAD_CONST                      2: None
                14      CALL_METHOD                     3
                16      RETURN_VALUE                    
        '_parents'
        [Code]
            File Name: zipfile.py
            Object Name: _ancestry
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000063 (CO_OPTIMIZED | CO_NEWLOCALS | CO_GENERATOR | CO_NOFREE)
            [Names]
                'rstrip'
                'posixpath'
                'sep'
                'split'
            [Var Names]
                'path'
                'tail'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "\n    Given a path with elements separated by\n    posixpath.sep, generate all elements of that path.\n\n    >>> list(_ancestry('b/d'))\n    ['b/d', 'b']\n    >>> list(_ancestry('/b/d/'))\n    ['/b/d', '/b']\n    >>> list(_ancestry('b/d/f/'))\n    ['b/d/f', 'b/d', 'b']\n    >>> list(_ancestry('b'))\n    ['b']\n    >>> list(_ancestry(''))\n    []\n\n    Multiple separators are treated like a single.\n\n    >>> list(_ancestry('//b//d///f//'))\n    ['//b//d///f', '//b//d', '//b']\n    "
                None
            [Disassembly]
                0       GEN_START                       0
                2       LOAD_FAST                       0: path
                4       LOAD_METHOD                     0: rstrip
                6       LOAD_GLOBAL                     1: posixpath
                8       LOAD_ATTR                       2: sep
                10      CALL_METHOD                     1
                12      STORE_FAST                      0: path
                14      LOAD_FAST                       0: path
                16      LOAD_METHOD                     0: rstrip
                18      LOAD_GLOBAL                     1: posixpath
                20      LOAD_ATTR                       2: sep
                22      CALL_METHOD                     1
                24      POP_JUMP_IF_FALSE               31 (to 62)
                26      LOAD_FAST                       0: path
                28      YIELD_VALUE                     
                30      POP_TOP                         
                32      LOAD_GLOBAL                     1: posixpath
                34      LOAD_METHOD                     3: split
                36      LOAD_FAST                       0: path
                38      CALL_METHOD                     1
                40      UNPACK_SEQUENCE                 2
                42      STORE_FAST                      0: path
                44      STORE_FAST                      1: tail
                46      LOAD_FAST                       0: path
                48      LOAD_METHOD                     0: rstrip
                50      LOAD_GLOBAL                     1: posixpath
                52      LOAD_ATTR                       2: sep
                54      CALL_METHOD                     1
                56      POP_JUMP_IF_TRUE                13 (to 26)
                58      LOAD_CONST                      1: None
                60      RETURN_VALUE                    
                62      LOAD_CONST                      1: None
                64      RETURN_VALUE                    
        '_ancestry'
        [Code]
            File Name: zipfile.py
            Object Name: _difference
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'itertools'
                'filterfalse'
                'set'
                '__contains__'
            [Var Names]
                'minuend'
                'subtrahend'
            [Free Vars]
            [Cell Vars]
            [Constants]
                '\n    Return items in minuend not in subtrahend, retaining order\n    with O(1) lookup.\n    '
            [Disassembly]
                0       LOAD_GLOBAL                     0: itertools
                2       LOAD_METHOD                     1: filterfalse
                4       LOAD_GLOBAL                     2: set
                6       LOAD_FAST                       1: subtrahend
                8       CALL_FUNCTION                   1
                10      LOAD_ATTR                       3: __contains__
                12      LOAD_FAST                       0: minuend
                14      CALL_METHOD                     2
                16      RETURN_VALUE                    
        '_difference'
        [Code]
            File Name: zipfile.py
            Object Name: CompleteDirs
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'staticmethod'
                '_implied_dirs'
                'namelist'
                '_name_set'
                'resolve_dir'
                'getinfo'
                'classmethod'
                'make'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'CompleteDirs'
                '\n    A ZipFile subclass that ensures that implied directories\n    are always included in the namelist.\n    '
                [Code]
                    File Name: zipfile.py
                    Object Name: _implied_dirs
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'itertools'
                        'chain'
                        'from_iterable'
                        'map'
                        '_parents'
                        '_dedupe'
                        '_difference'
                    [Var Names]
                        'names'
                        'parents'
                        'as_dirs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        [Code]
                            File Name: zipfile.py
                            Object Name: <genexpr>
                            Arg Count: 1
                            Pos Only Arg Count: 0
                            KW Only Arg Count: 0
                            Locals: 2
                            Stack Size: 3
                            Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                            [Names]
                                'posixpath'
                                'sep'
                            [Var Names]
                                '.0'
                                'p'
                            [Free Vars]
                            [Cell Vars]
                            [Constants]
                                None
                            [Disassembly]
                                0       GEN_START                       0
                                2       LOAD_FAST                       0: .0
                                4       FOR_ITER                        8 (to 22)
                                6       STORE_FAST                      1: p
                                8       LOAD_FAST                       1: p
                                10      LOAD_GLOBAL                     0: posixpath
                                12      LOAD_ATTR                       1: sep
                                14      BINARY_ADD                      
                                16      YIELD_VALUE                     
                                18      POP_TOP                         
                                20      JUMP_ABSOLUTE                   2 (to 4)
                                22      LOAD_CONST                      0: None
                                24      RETURN_VALUE                    
                        'CompleteDirs._implied_dirs.<locals>.<genexpr>'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: itertools
                        2       LOAD_ATTR                       1: chain
                        4       LOAD_METHOD                     2: from_iterable
                        6       LOAD_GLOBAL                     3: map
                        8       LOAD_GLOBAL                     4: _parents
                        10      LOAD_FAST                       0: names
                        12      CALL_FUNCTION                   2
                        14      CALL_METHOD                     1
                        16      STORE_FAST                      1: parents
                        18      LOAD_CONST                      1: <CODE> <genexpr>
                        20      LOAD_CONST                      2: 'CompleteDirs._implied_dirs.<locals>.<genexpr>'
                        22      MAKE_FUNCTION                   0
                        24      LOAD_FAST                       1: parents
                        26      GET_ITER                        
                        28      CALL_FUNCTION                   1
                        30      STORE_FAST                      2: as_dirs
                        32      LOAD_GLOBAL                     5: _dedupe
                        34      LOAD_GLOBAL                     6: _difference
                        36      LOAD_FAST                       2: as_dirs
                        38      LOAD_FAST                       0: names
                        40      CALL_FUNCTION                   2
                        42      CALL_FUNCTION                   1
                        44      RETURN_VALUE                    
                'CompleteDirs._implied_dirs'
                [Code]
                    File Name: zipfile.py
                    Object Name: namelist
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'super'
                        'CompleteDirs'
                        'namelist'
                        'list'
                        '_implied_dirs'
                    [Var Names]
                        'self'
                        'names'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: super
                        2       LOAD_GLOBAL                     1: CompleteDirs
                        4       LOAD_FAST                       0: self
                        6       CALL_FUNCTION                   2
                        8       LOAD_METHOD                     2: namelist
                        10      CALL_METHOD                     0
                        12      STORE_FAST                      1: names
                        14      LOAD_FAST                       1: names
                        16      LOAD_GLOBAL                     3: list
                        18      LOAD_FAST                       0: self
                        20      LOAD_METHOD                     4: _implied_dirs
                        22      LOAD_FAST                       1: names
                        24      CALL_METHOD                     1
                        26      CALL_FUNCTION                   1
                        28      BINARY_ADD                      
                        30      RETURN_VALUE                    
                'CompleteDirs.namelist'
                [Code]
                    File Name: zipfile.py
                    Object Name: _name_set
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'set'
                        'namelist'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: set
                        2       LOAD_FAST                       0: self
                        4       LOAD_METHOD                     1: namelist
                        6       CALL_METHOD                     0
                        8       CALL_FUNCTION                   1
                        10      RETURN_VALUE                    
                'CompleteDirs._name_set'
                [Code]
                    File Name: zipfile.py
                    Object Name: resolve_dir
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_name_set'
                    [Var Names]
                        'self'
                        'name'
                        'names'
                        'dirname'
                        'dir_match'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        If the name represents a directory, return that name\n        as a directory (with the trailing slash).\n        '
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: _name_set
                        4       CALL_METHOD                     0
                        6       STORE_FAST                      2: names
                        8       LOAD_FAST                       1: name
                        10      LOAD_CONST                      1: '/'
                        12      BINARY_ADD                      
                        14      STORE_FAST                      3: dirname
                        16      LOAD_FAST                       1: name
                        18      LOAD_FAST                       2: names
                        20      CONTAINS_OP                     1 (not in)
                        22      JUMP_IF_FALSE_OR_POP            15 (to 30)
                        24      LOAD_FAST                       3: dirname
                        26      LOAD_FAST                       2: names
                        28      CONTAINS_OP                     0 (in)
                        30      STORE_FAST                      4: dir_match
                        32      LOAD_FAST                       4: dir_match
                        34      POP_JUMP_IF_FALSE               20 (to 40)
                        36      LOAD_FAST                       3: dirname
                        38      RETURN_VALUE                    
                        40      LOAD_FAST                       1: name
                        42      RETURN_VALUE                    
                'CompleteDirs.resolve_dir'
                [Code]
                    File Name: zipfile.py
                    Object Name: getinfo
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'super'
                        'getinfo'
                        'KeyError'
                        'endswith'
                        '_name_set'
                        'ZipInfo'
                    [Var Names]
                        'self'
                        'name'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        '\n        Supplement getinfo for implied dirs.\n        '
                        '/'
                        (
                            'filename'
                        )
                    [Disassembly]
                        0       SETUP_FINALLY                   7 (to 16)
                        2       LOAD_GLOBAL                     0: super
                        4       CALL_FUNCTION                   0
                        6       LOAD_METHOD                     1: getinfo
                        8       LOAD_FAST                       1: name
                        10      CALL_METHOD                     1
                        12      POP_BLOCK                       
                        14      RETURN_VALUE                    
                        16      DUP_TOP                         
                        18      LOAD_GLOBAL                     2: KeyError
                        20      JUMP_IF_NOT_EXC_MATCH           33 (to 66)
                        22      POP_TOP                         
                        24      POP_TOP                         
                        26      POP_TOP                         
                        28      LOAD_FAST                       1: name
                        30      LOAD_METHOD                     3: endswith
                        32      LOAD_CONST                      1: '/'
                        34      CALL_METHOD                     1
                        36      POP_JUMP_IF_FALSE               25 (to 50)
                        38      LOAD_FAST                       1: name
                        40      LOAD_FAST                       0: self
                        42      LOAD_METHOD                     4: _name_set
                        44      CALL_METHOD                     0
                        46      CONTAINS_OP                     1 (not in)
                        48      POP_JUMP_IF_FALSE               26 (to 52)
                        50      RAISE_VARARGS                   0
                        52      LOAD_GLOBAL                     5: ZipInfo
                        54      LOAD_FAST                       1: name
                        56      LOAD_CONST                      2: ('filename',)
                        58      CALL_FUNCTION_KW                1
                        60      ROT_FOUR                        
                        62      POP_EXCEPT                      
                        64      RETURN_VALUE                    
                        66      RERAISE                         0
                'CompleteDirs.getinfo'
                [Code]
                    File Name: zipfile.py
                    Object Name: make
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'isinstance'
                        'CompleteDirs'
                        'ZipFile'
                        'mode'
                        '__class__'
                    [Var Names]
                        'cls'
                        'source'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Given a source (filename or zipfile), return an\n        appropriate CompleteDirs subclass.\n        '
                        'r'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: isinstance
                        2       LOAD_FAST                       1: source
                        4       LOAD_GLOBAL                     1: CompleteDirs
                        6       CALL_FUNCTION                   2
                        8       POP_JUMP_IF_FALSE               7 (to 14)
                        10      LOAD_FAST                       1: source
                        12      RETURN_VALUE                    
                        14      LOAD_GLOBAL                     0: isinstance
                        16      LOAD_FAST                       1: source
                        18      LOAD_GLOBAL                     2: ZipFile
                        20      CALL_FUNCTION                   2
                        22      POP_JUMP_IF_TRUE                16 (to 32)
                        24      LOAD_FAST                       0: cls
                        26      LOAD_FAST                       1: source
                        28      CALL_FUNCTION                   1
                        30      RETURN_VALUE                    
                        32      LOAD_CONST                      1: 'r'
                        34      LOAD_FAST                       1: source
                        36      LOAD_ATTR                       3: mode
                        38      CONTAINS_OP                     1 (not in)
                        40      POP_JUMP_IF_FALSE               23 (to 46)
                        42      LOAD_GLOBAL                     1: CompleteDirs
                        44      STORE_FAST                      0: cls
                        46      LOAD_FAST                       0: cls
                        48      LOAD_FAST                       1: source
                        50      STORE_ATTR                      4: __class__
                        52      LOAD_FAST                       1: source
                        54      RETURN_VALUE                    
                'CompleteDirs.make'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'CompleteDirs'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    A ZipFile subclass that ensures that implied directories\n    are always included in the namelist.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_NAME                       4: staticmethod
                14      LOAD_CONST                      2: <CODE> _implied_dirs
                16      LOAD_CONST                      3: 'CompleteDirs._implied_dirs'
                18      MAKE_FUNCTION                   0
                20      CALL_FUNCTION                   1
                22      STORE_NAME                      5: _implied_dirs
                24      LOAD_CLOSURE                    0: __class__
                26      BUILD_TUPLE                     1
                28      LOAD_CONST                      4: <CODE> namelist
                30      LOAD_CONST                      5: 'CompleteDirs.namelist'
                32      MAKE_FUNCTION                   8
                34      STORE_NAME                      6: namelist
                36      LOAD_CONST                      6: <CODE> _name_set
                38      LOAD_CONST                      7: 'CompleteDirs._name_set'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: _name_set
                44      LOAD_CONST                      8: <CODE> resolve_dir
                46      LOAD_CONST                      9: 'CompleteDirs.resolve_dir'
                48      MAKE_FUNCTION                   0
                50      STORE_NAME                      8: resolve_dir
                52      LOAD_CLOSURE                    0: __class__
                54      BUILD_TUPLE                     1
                56      LOAD_CONST                      10: <CODE> getinfo
                58      LOAD_CONST                      11: 'CompleteDirs.getinfo'
                60      MAKE_FUNCTION                   8
                62      STORE_NAME                      9: getinfo
                64      LOAD_NAME                       10: classmethod
                66      LOAD_CONST                      12: <CODE> make
                68      LOAD_CONST                      13: 'CompleteDirs.make'
                70      MAKE_FUNCTION                   0
                72      CALL_FUNCTION                   1
                74      STORE_NAME                      11: make
                76      LOAD_CLOSURE                    0: __class__
                78      DUP_TOP                         
                80      STORE_NAME                      12: __classcell__
                82      RETURN_VALUE                    
        'CompleteDirs'
        [Code]
            File Name: zipfile.py
            Object Name: FastLookup
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                'namelist'
                '_name_set'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'FastLookup'
                '\n    ZipFile subclass to ensure implicit\n    dirs exist and are resolved rapidly.\n    '
                [Code]
                    File Name: zipfile.py
                    Object Name: namelist
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'contextlib'
                        'suppress'
                        'AttributeError'
                        '_FastLookup__names'
                        'super'
                        'FastLookup'
                        'namelist'
                    [Var Names]
                        'self'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: contextlib
                        2       LOAD_METHOD                     1: suppress
                        4       LOAD_GLOBAL                     2: AttributeError
                        6       CALL_METHOD                     1
                        8       SETUP_WITH                      11 (to 32)
                        10      POP_TOP                         
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _FastLookup__names
                        16      POP_BLOCK                       
                        18      ROT_TWO                         
                        20      LOAD_CONST                      0: None
                        22      DUP_TOP                         
                        24      DUP_TOP                         
                        26      CALL_FUNCTION                   3
                        28      POP_TOP                         
                        30      RETURN_VALUE                    
                        32      WITH_EXCEPT_START               
                        34      POP_JUMP_IF_TRUE                19 (to 38)
                        36      RERAISE                         1
                        38      POP_TOP                         
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_EXCEPT                      
                        46      POP_TOP                         
                        48      LOAD_GLOBAL                     4: super
                        50      LOAD_GLOBAL                     5: FastLookup
                        52      LOAD_FAST                       0: self
                        54      CALL_FUNCTION                   2
                        56      LOAD_METHOD                     6: namelist
                        58      CALL_METHOD                     0
                        60      LOAD_FAST                       0: self
                        62      STORE_ATTR                      3: _FastLookup__names
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       3: _FastLookup__names
                        68      RETURN_VALUE                    
                'FastLookup.namelist'
                [Code]
                    File Name: zipfile.py
                    Object Name: _name_set
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 8
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'contextlib'
                        'suppress'
                        'AttributeError'
                        '_FastLookup__lookup'
                        'super'
                        'FastLookup'
                        '_name_set'
                    [Var Names]
                        'self'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: contextlib
                        2       LOAD_METHOD                     1: suppress
                        4       LOAD_GLOBAL                     2: AttributeError
                        6       CALL_METHOD                     1
                        8       SETUP_WITH                      11 (to 32)
                        10      POP_TOP                         
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _FastLookup__lookup
                        16      POP_BLOCK                       
                        18      ROT_TWO                         
                        20      LOAD_CONST                      0: None
                        22      DUP_TOP                         
                        24      DUP_TOP                         
                        26      CALL_FUNCTION                   3
                        28      POP_TOP                         
                        30      RETURN_VALUE                    
                        32      WITH_EXCEPT_START               
                        34      POP_JUMP_IF_TRUE                19 (to 38)
                        36      RERAISE                         1
                        38      POP_TOP                         
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_EXCEPT                      
                        46      POP_TOP                         
                        48      LOAD_GLOBAL                     4: super
                        50      LOAD_GLOBAL                     5: FastLookup
                        52      LOAD_FAST                       0: self
                        54      CALL_FUNCTION                   2
                        56      LOAD_METHOD                     6: _name_set
                        58      CALL_METHOD                     0
                        60      LOAD_FAST                       0: self
                        62      STORE_ATTR                      3: _FastLookup__lookup
                        64      LOAD_FAST                       0: self
                        66      LOAD_ATTR                       3: _FastLookup__lookup
                        68      RETURN_VALUE                    
                'FastLookup._name_set'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'FastLookup'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    ZipFile subclass to ensure implicit\n    dirs exist and are resolved rapidly.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CLOSURE                    0: __class__
                14      BUILD_TUPLE                     1
                16      LOAD_CONST                      2: <CODE> namelist
                18      LOAD_CONST                      3: 'FastLookup.namelist'
                20      MAKE_FUNCTION                   8
                22      STORE_NAME                      4: namelist
                24      LOAD_CLOSURE                    0: __class__
                26      BUILD_TUPLE                     1
                28      LOAD_CONST                      4: <CODE> _name_set
                30      LOAD_CONST                      5: 'FastLookup._name_set'
                32      MAKE_FUNCTION                   8
                34      STORE_NAME                      5: _name_set
                36      LOAD_CLOSURE                    0: __class__
                38      DUP_TOP                         
                40      STORE_NAME                      6: __classcell__
                42      RETURN_VALUE                    
        'FastLookup'
        [Code]
            File Name: zipfile.py
            Object Name: _extract_text_encoding
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 4
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
                'io'
                'text_encoding'
            [Var Names]
                'encoding'
                'args'
                'kwargs'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                3
            [Disassembly]
                0       LOAD_GLOBAL                     0: io
                2       LOAD_METHOD                     1: text_encoding
                4       LOAD_FAST                       0: encoding
                6       LOAD_CONST                      1: 3
                8       CALL_METHOD                     2
                10      LOAD_FAST                       1: args
                12      LOAD_FAST                       2: kwargs
                14      BUILD_TUPLE                     3
                16      RETURN_VALUE                    
        '_extract_text_encoding'
        [Code]
            File Name: zipfile.py
            Object Name: Path
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_Path__repr'
                '__init__'
                'open'
                'property'
                'name'
                'filename'
                'read_text'
                'read_bytes'
                '_is_child'
                '_next'
                'is_dir'
                'is_file'
                'exists'
                'iterdir'
                '__str__'
                '__repr__'
                'joinpath'
                '__truediv__'
                'parent'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Path'
                "\n    A pathlib-compatible interface for zip files.\n\n    Consider a zip file with this structure::\n\n        .\n        ├── a.txt\n        └── b\n            ├── c.txt\n            └── d\n                └── e.txt\n\n    >>> data = io.BytesIO()\n    >>> zf = ZipFile(data, 'w')\n    >>> zf.writestr('a.txt', 'content of a')\n    >>> zf.writestr('b/c.txt', 'content of c')\n    >>> zf.writestr('b/d/e.txt', 'content of e')\n    >>> zf.filename = 'mem/abcde.zip'\n\n    Path accepts the zipfile object itself or a filename\n\n    >>> root = Path(zf)\n\n    From there, several path operations are available.\n\n    Directory iteration (including the zip file itself):\n\n    >>> a, b = root.iterdir()\n    >>> a\n    Path('mem/abcde.zip', 'a.txt')\n    >>> b\n    Path('mem/abcde.zip', 'b/')\n\n    name property:\n\n    >>> b.name\n    'b'\n\n    join with divide operator:\n\n    >>> c = b / 'c.txt'\n    >>> c\n    Path('mem/abcde.zip', 'b/c.txt')\n    >>> c.name\n    'c.txt'\n\n    Read text:\n\n    >>> c.read_text()\n    'content of c'\n\n    existence:\n\n    >>> c.exists()\n    True\n    >>> (b / 'missing.txt').exists()\n    False\n\n    Coercion to string:\n\n    >>> import os\n    >>> str(c).replace(os.sep, posixpath.sep)\n    'mem/abcde.zip/b/c.txt'\n\n    At the root, ``name``, ``filename``, and ``parent``\n    resolve to the zipfile. Note these attributes are not\n    valid and will raise a ``ValueError`` if the zipfile\n    has no filename.\n\n    >>> root.name\n    'abcde.zip'\n    >>> str(root.filename).replace(os.sep, posixpath.sep)\n    'mem/abcde.zip'\n    >>> str(root.parent)\n    'mem'\n    "
                '{self.__class__.__name__}({self.root.filename!r}, {self.at!r})'
                ''
                [Code]
                    File Name: zipfile.py
                    Object Name: __init__
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'FastLookup'
                        'make'
                        'root'
                        'at'
                    [Var Names]
                        'self'
                        'root'
                        'at'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Construct a Path from a ZipFile or filename.\n\n        Note: When the source is an existing ZipFile object,\n        its type (__class__) will be mutated to a\n        specialized type. If the caller wishes to retain the\n        original type, the caller should either create a\n        separate ZipFile object or pass a filename.\n        '
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: FastLookup
                        2       LOAD_METHOD                     1: make
                        4       LOAD_FAST                       1: root
                        6       CALL_METHOD                     1
                        8       LOAD_FAST                       0: self
                        10      STORE_ATTR                      2: root
                        12      LOAD_FAST                       2: at
                        14      LOAD_FAST                       0: self
                        16      STORE_ATTR                      3: at
                        18      LOAD_CONST                      1: None
                        20      RETURN_VALUE                    
                'Path.__init__'
                'r'
                None
                (
                    'pwd'
                )
                [Code]
                    File Name: zipfile.py
                    Object Name: open
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 1
                    Locals: 8
                    Stack Size: 5
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        'is_dir'
                        'IsADirectoryError'
                        'exists'
                        'FileNotFoundError'
                        'root'
                        'open'
                        'at'
                        'ValueError'
                        '_extract_text_encoding'
                        'io'
                        'TextIOWrapper'
                    [Var Names]
                        'self'
                        'mode'
                        'pwd'
                        'args'
                        'kwargs'
                        'zip_mode'
                        'stream'
                        'encoding'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Open this entry as text or binary following the semantics\n        of ``pathlib.Path.open()`` by passing arguments through\n        to io.TextIOWrapper().\n        '
                        0
                        'r'
                        (
                            'pwd'
                        )
                        'b'
                        'encoding args invalid for binary operation'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: is_dir
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_FALSE               8 (to 16)
                        8       LOAD_GLOBAL                     1: IsADirectoryError
                        10      LOAD_FAST                       0: self
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_FAST                       1: mode
                        18      LOAD_CONST                      1: 0
                        20      BINARY_SUBSCR                   
                        22      STORE_FAST                      5: zip_mode
                        24      LOAD_FAST                       0: self
                        26      LOAD_METHOD                     2: exists
                        28      CALL_METHOD                     0
                        30      POP_JUMP_IF_TRUE                24 (to 48)
                        32      LOAD_FAST                       5: zip_mode
                        34      LOAD_CONST                      2: 'r'
                        36      COMPARE_OP                      2 (==)
                        38      POP_JUMP_IF_FALSE               24 (to 48)
                        40      LOAD_GLOBAL                     3: FileNotFoundError
                        42      LOAD_FAST                       0: self
                        44      CALL_FUNCTION                   1
                        46      RAISE_VARARGS                   1
                        48      LOAD_FAST                       0: self
                        50      LOAD_ATTR                       4: root
                        52      LOAD_ATTR                       5: open
                        54      LOAD_FAST                       0: self
                        56      LOAD_ATTR                       6: at
                        58      LOAD_FAST                       5: zip_mode
                        60      LOAD_FAST                       2: pwd
                        62      LOAD_CONST                      3: ('pwd',)
                        64      CALL_FUNCTION_KW                3
                        66      STORE_FAST                      6: stream
                        68      LOAD_CONST                      4: 'b'
                        70      LOAD_FAST                       1: mode
                        72      CONTAINS_OP                     0 (in)
                        74      POP_JUMP_IF_FALSE               48 (to 96)
                        76      LOAD_FAST                       3: args
                        78      POP_JUMP_IF_TRUE                42 (to 84)
                        80      LOAD_FAST                       4: kwargs
                        82      POP_JUMP_IF_FALSE               46 (to 92)
                        84      LOAD_GLOBAL                     7: ValueError
                        86      LOAD_CONST                      5: 'encoding args invalid for binary operation'
                        88      CALL_FUNCTION                   1
                        90      RAISE_VARARGS                   1
                        92      LOAD_FAST                       6: stream
                        94      RETURN_VALUE                    
                        96      LOAD_GLOBAL                     8: _extract_text_encoding
                        98      LOAD_FAST                       3: args
                        100     BUILD_MAP                       0
                        102     LOAD_FAST                       4: kwargs
                        104     DICT_MERGE                      1
                        106     CALL_FUNCTION_EX                1
                        108     UNPACK_SEQUENCE                 3
                        110     STORE_FAST                      7: encoding
                        112     STORE_FAST                      3: args
                        114     STORE_FAST                      4: kwargs
                        116     LOAD_GLOBAL                     9: io
                        118     LOAD_ATTR                       10: TextIOWrapper
                        120     LOAD_FAST                       6: stream
                        122     LOAD_FAST                       7: encoding
                        124     BUILD_LIST                      2
                        126     LOAD_FAST                       3: args
                        128     LIST_EXTEND                     1
                        130     LIST_TO_TUPLE                   
                        132     BUILD_MAP                       0
                        134     LOAD_FAST                       4: kwargs
                        136     DICT_MERGE                      1
                        138     CALL_FUNCTION_EX                1
                        140     RETURN_VALUE                    
                'Path.open'
                [Code]
                    File Name: zipfile.py
                    Object Name: name
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pathlib'
                        'Path'
                        'at'
                        'name'
                        'filename'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: pathlib
                        2       LOAD_METHOD                     1: Path
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: at
                        8       CALL_METHOD                     1
                        10      LOAD_ATTR                       3: name
                        12      JUMP_IF_TRUE_OR_POP             10 (to 20)
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       4: filename
                        18      LOAD_ATTR                       3: name
                        20      RETURN_VALUE                    
                'Path.name'
                [Code]
                    File Name: zipfile.py
                    Object Name: filename
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'pathlib'
                        'Path'
                        'root'
                        'filename'
                        'joinpath'
                        'at'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: pathlib
                        2       LOAD_METHOD                     1: Path
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: root
                        8       LOAD_ATTR                       3: filename
                        10      CALL_METHOD                     1
                        12      LOAD_METHOD                     4: joinpath
                        14      LOAD_FAST                       0: self
                        16      LOAD_ATTR                       5: at
                        18      CALL_METHOD                     1
                        20      RETURN_VALUE                    
                'Path.filename'
                [Code]
                    File Name: zipfile.py
                    Object Name: read_text
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 8
                    Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
                    [Names]
                        '_extract_text_encoding'
                        'open'
                        'read'
                    [Var Names]
                        'self'
                        'args'
                        'kwargs'
                        'encoding'
                        'strm'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'r'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _extract_text_encoding
                        2       LOAD_FAST                       1: args
                        4       BUILD_MAP                       0
                        6       LOAD_FAST                       2: kwargs
                        8       DICT_MERGE                      1
                        10      CALL_FUNCTION_EX                1
                        12      UNPACK_SEQUENCE                 3
                        14      STORE_FAST                      3: encoding
                        16      STORE_FAST                      1: args
                        18      STORE_FAST                      2: kwargs
                        20      LOAD_FAST                       0: self
                        22      LOAD_ATTR                       1: open
                        24      LOAD_CONST                      1: 'r'
                        26      LOAD_FAST                       3: encoding
                        28      BUILD_LIST                      2
                        30      LOAD_FAST                       1: args
                        32      LIST_EXTEND                     1
                        34      LIST_TO_TUPLE                   
                        36      BUILD_MAP                       0
                        38      LOAD_FAST                       2: kwargs
                        40      DICT_MERGE                      1
                        42      CALL_FUNCTION_EX                1
                        44      SETUP_WITH                      12 (to 70)
                        46      STORE_FAST                      4: strm
                        48      LOAD_FAST                       4: strm
                        50      LOAD_METHOD                     2: read
                        52      CALL_METHOD                     0
                        54      POP_BLOCK                       
                        56      ROT_TWO                         
                        58      LOAD_CONST                      0: None
                        60      DUP_TOP                         
                        62      DUP_TOP                         
                        64      CALL_FUNCTION                   3
                        66      POP_TOP                         
                        68      RETURN_VALUE                    
                        70      WITH_EXCEPT_START               
                        72      POP_JUMP_IF_TRUE                38 (to 76)
                        74      RERAISE                         1
                        76      POP_TOP                         
                        78      POP_TOP                         
                        80      POP_TOP                         
                        82      POP_EXCEPT                      
                        84      POP_TOP                         
                        86      LOAD_CONST                      0: None
                        88      RETURN_VALUE                    
                'Path.read_text'
                [Code]
                    File Name: zipfile.py
                    Object Name: read_bytes
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'open'
                        'read'
                    [Var Names]
                        'self'
                        'strm'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'rb'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: open
                        4       LOAD_CONST                      1: 'rb'
                        6       CALL_METHOD                     1
                        8       SETUP_WITH                      12 (to 34)
                        10      STORE_FAST                      1: strm
                        12      LOAD_FAST                       1: strm
                        14      LOAD_METHOD                     1: read
                        16      CALL_METHOD                     0
                        18      POP_BLOCK                       
                        20      ROT_TWO                         
                        22      LOAD_CONST                      0: None
                        24      DUP_TOP                         
                        26      DUP_TOP                         
                        28      CALL_FUNCTION                   3
                        30      POP_TOP                         
                        32      RETURN_VALUE                    
                        34      WITH_EXCEPT_START               
                        36      POP_JUMP_IF_TRUE                20 (to 40)
                        38      RERAISE                         1
                        40      POP_TOP                         
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_EXCEPT                      
                        48      POP_TOP                         
                        50      LOAD_CONST                      0: None
                        52      RETURN_VALUE                    
                'Path.read_bytes'
                [Code]
                    File Name: zipfile.py
                    Object Name: _is_child
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'posixpath'
                        'dirname'
                        'at'
                        'rstrip'
                    [Var Names]
                        'self'
                        'path'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '/'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: posixpath
                        2       LOAD_METHOD                     1: dirname
                        4       LOAD_FAST                       1: path
                        6       LOAD_ATTR                       2: at
                        8       LOAD_METHOD                     3: rstrip
                        10      LOAD_CONST                      1: '/'
                        12      CALL_METHOD                     1
                        14      CALL_METHOD                     1
                        16      LOAD_FAST                       0: self
                        18      LOAD_ATTR                       2: at
                        20      LOAD_METHOD                     3: rstrip
                        22      LOAD_CONST                      1: '/'
                        24      CALL_METHOD                     1
                        26      COMPARE_OP                      2 (==)
                        28      RETURN_VALUE                    
                'Path._is_child'
                [Code]
                    File Name: zipfile.py
                    Object Name: _next
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '__class__'
                        'root'
                    [Var Names]
                        'self'
                        'at'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: __class__
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: root
                        8       LOAD_FAST                       1: at
                        10      CALL_METHOD                     2
                        12      RETURN_VALUE                    
                'Path._next'
                [Code]
                    File Name: zipfile.py
                    Object Name: is_dir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'at'
                        'endswith'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: at
                        4       UNARY_NOT                       
                        6       JUMP_IF_TRUE_OR_POP             9 (to 18)
                        8       LOAD_FAST                       0: self
                        10      LOAD_ATTR                       0: at
                        12      LOAD_METHOD                     1: endswith
                        14      LOAD_CONST                      1: '/'
                        16      CALL_METHOD                     1
                        18      RETURN_VALUE                    
                'Path.is_dir'
                [Code]
                    File Name: zipfile.py
                    Object Name: is_file
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'exists'
                        'is_dir'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: exists
                        4       CALL_METHOD                     0
                        6       JUMP_IF_FALSE_OR_POP            8 (to 16)
                        8       LOAD_FAST                       0: self
                        10      LOAD_METHOD                     1: is_dir
                        12      CALL_METHOD                     0
                        14      UNARY_NOT                       
                        16      RETURN_VALUE                    
                'Path.is_file'
                [Code]
                    File Name: zipfile.py
                    Object Name: exists
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'at'
                        'root'
                        '_name_set'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: at
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       1: root
                        8       LOAD_METHOD                     2: _name_set
                        10      CALL_METHOD                     0
                        12      CONTAINS_OP                     0 (in)
                        14      RETURN_VALUE                    
                'Path.exists'
                [Code]
                    File Name: zipfile.py
                    Object Name: iterdir
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'is_dir'
                        'ValueError'
                        'map'
                        '_next'
                        'root'
                        'namelist'
                        'filter'
                        '_is_child'
                    [Var Names]
                        'self'
                        'subs'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        "Can't listdir a file"
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_METHOD                     0: is_dir
                        4       CALL_METHOD                     0
                        6       POP_JUMP_IF_TRUE                8 (to 16)
                        8       LOAD_GLOBAL                     1: ValueError
                        10      LOAD_CONST                      1: "Can't listdir a file"
                        12      CALL_FUNCTION                   1
                        14      RAISE_VARARGS                   1
                        16      LOAD_GLOBAL                     2: map
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       3: _next
                        22      LOAD_FAST                       0: self
                        24      LOAD_ATTR                       4: root
                        26      LOAD_METHOD                     5: namelist
                        28      CALL_METHOD                     0
                        30      CALL_FUNCTION                   2
                        32      STORE_FAST                      1: subs
                        34      LOAD_GLOBAL                     6: filter
                        36      LOAD_FAST                       0: self
                        38      LOAD_ATTR                       7: _is_child
                        40      LOAD_FAST                       1: subs
                        42      CALL_FUNCTION                   2
                        44      RETURN_VALUE                    
                'Path.iterdir'
                [Code]
                    File Name: zipfile.py
                    Object Name: __str__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'posixpath'
                        'join'
                        'root'
                        'filename'
                        'at'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: posixpath
                        2       LOAD_METHOD                     1: join
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: root
                        8       LOAD_ATTR                       3: filename
                        10      LOAD_FAST                       0: self
                        12      LOAD_ATTR                       4: at
                        14      CALL_METHOD                     2
                        16      RETURN_VALUE                    
                'Path.__str__'
                [Code]
                    File Name: zipfile.py
                    Object Name: __repr__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_Path__repr'
                        'format'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        (
                            'self'
                        )
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: _Path__repr
                        4       LOAD_ATTR                       1: format
                        6       LOAD_FAST                       0: self
                        8       LOAD_CONST                      1: ('self',)
                        10      CALL_FUNCTION_KW                1
                        12      RETURN_VALUE                    
                'Path.__repr__'
                [Code]
                    File Name: zipfile.py
                    Object Name: joinpath
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
                    [Names]
                        'posixpath'
                        'join'
                        'at'
                        '_next'
                        'root'
                        'resolve_dir'
                    [Var Names]
                        'self'
                        'other'
                        'next'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: posixpath
                        2       LOAD_ATTR                       1: join
                        4       LOAD_FAST                       0: self
                        6       LOAD_ATTR                       2: at
                        8       BUILD_LIST                      1
                        10      LOAD_FAST                       1: other
                        12      LIST_EXTEND                     1
                        14      LIST_TO_TUPLE                   
                        16      CALL_FUNCTION_EX                0
                        18      STORE_FAST                      2: next
                        20      LOAD_FAST                       0: self
                        22      LOAD_METHOD                     3: _next
                        24      LOAD_FAST                       0: self
                        26      LOAD_ATTR                       4: root
                        28      LOAD_METHOD                     5: resolve_dir
                        30      LOAD_FAST                       2: next
                        32      CALL_METHOD                     1
                        34      CALL_METHOD                     1
                        36      RETURN_VALUE                    
                'Path.joinpath'
                [Code]
                    File Name: zipfile.py
                    Object Name: parent
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'at'
                        'filename'
                        'parent'
                        'posixpath'
                        'dirname'
                        'rstrip'
                        '_next'
                    [Var Names]
                        'self'
                        'parent_at'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        '/'
                    [Disassembly]
                        0       LOAD_FAST                       0: self
                        2       LOAD_ATTR                       0: at
                        4       POP_JUMP_IF_TRUE                7 (to 14)
                        6       LOAD_FAST                       0: self
                        8       LOAD_ATTR                       1: filename
                        10      LOAD_ATTR                       2: parent
                        12      RETURN_VALUE                    
                        14      LOAD_GLOBAL                     3: posixpath
                        16      LOAD_METHOD                     4: dirname
                        18      LOAD_FAST                       0: self
                        20      LOAD_ATTR                       0: at
                        22      LOAD_METHOD                     5: rstrip
                        24      LOAD_CONST                      1: '/'
                        26      CALL_METHOD                     1
                        28      CALL_METHOD                     1
                        30      STORE_FAST                      1: parent_at
                        32      LOAD_FAST                       1: parent_at
                        34      POP_JUMP_IF_FALSE               22 (to 44)
                        36      LOAD_FAST                       1: parent_at
                        38      LOAD_CONST                      1: '/'
                        40      INPLACE_ADD                     
                        42      STORE_FAST                      1: parent_at
                        44      LOAD_FAST                       0: self
                        46      LOAD_METHOD                     6: _next
                        48      LOAD_FAST                       1: parent_at
                        50      CALL_METHOD                     1
                        52      RETURN_VALUE                    
                'Path.parent'
                (
                    ''
                )
                (
                    'r'
                )
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Path'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: "\n    A pathlib-compatible interface for zip files.\n\n    Consider a zip file with this structure::\n\n        .\n        ├── a.txt\n        └── b\n            ├── c.txt\n            └── d\n                └── e.txt\n\n    >>> data = io.BytesIO()\n    >>> zf = ZipFile(data, 'w')\n    >>> zf.writestr('a.txt', 'content of a')\n    >>> zf.writestr('b/c.txt', 'content of c')\n    >>> zf.writestr('b/d/e.txt', 'content of e')\n    >>> zf.filename = 'mem/abcde.zip'\n\n    Path accepts the zipfile object itself or a filename\n\n    >>> root = Path(zf)\n\n    From there, several path operations are available.\n\n    Directory iteration (including the zip file itself):\n\n    >>> a, b = root.iterdir()\n    >>> a\n    Path('mem/abcde.zip', 'a.txt')\n    >>> b\n    Path('mem/abcde.zip', 'b/')\n\n    name property:\n\n    >>> b.name\n    'b'\n\n    join with divide operator:\n\n    >>> c = b / 'c.txt'\n    >>> c\n    Path('mem/abcde.zip', 'b/c.txt')\n    >>> c.name\n    'c.txt'\n\n    Read text:\n\n    >>> c.read_text()\n    'content of c'\n\n    existence:\n\n    >>> c.exists()\n    True\n    >>> (b / 'missing.txt').exists()\n    False\n\n    Coercion to string:\n\n    >>> import os\n    >>> str(c).replace(os.sep, posixpath.sep)\n    'mem/abcde.zip/b/c.txt'\n\n    At the root, ``name``, ``filename``, and ``parent``\n    resolve to the zipfile. Note these attributes are not\n    valid and will raise a ``ValueError`` if the zipfile\n    has no filename.\n\n    >>> root.name\n    'abcde.zip'\n    >>> str(root.filename).replace(os.sep, posixpath.sep)\n    'mem/abcde.zip'\n    >>> str(root.parent)\n    'mem'\n    "
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: '{self.__class__.__name__}({self.root.filename!r}, {self.at!r})'
                14      STORE_NAME                      4: _Path__repr
                16      LOAD_CONST                      39: ('',)
                18      LOAD_CONST                      4: <CODE> __init__
                20      LOAD_CONST                      5: 'Path.__init__'
                22      MAKE_FUNCTION                   1
                24      STORE_NAME                      5: __init__
                26      LOAD_CONST                      40: ('r',)
                28      LOAD_CONST                      7: None
                30      LOAD_CONST                      8: ('pwd',)
                32      BUILD_CONST_KEY_MAP             1
                34      LOAD_CONST                      9: <CODE> open
                36      LOAD_CONST                      10: 'Path.open'
                38      MAKE_FUNCTION                   3
                40      STORE_NAME                      6: open
                42      LOAD_NAME                       7: property
                44      LOAD_CONST                      11: <CODE> name
                46      LOAD_CONST                      12: 'Path.name'
                48      MAKE_FUNCTION                   0
                50      CALL_FUNCTION                   1
                52      STORE_NAME                      8: name
                54      LOAD_NAME                       7: property
                56      LOAD_CONST                      13: <CODE> filename
                58      LOAD_CONST                      14: 'Path.filename'
                60      MAKE_FUNCTION                   0
                62      CALL_FUNCTION                   1
                64      STORE_NAME                      9: filename
                66      LOAD_CONST                      15: <CODE> read_text
                68      LOAD_CONST                      16: 'Path.read_text'
                70      MAKE_FUNCTION                   0
                72      STORE_NAME                      10: read_text
                74      LOAD_CONST                      17: <CODE> read_bytes
                76      LOAD_CONST                      18: 'Path.read_bytes'
                78      MAKE_FUNCTION                   0
                80      STORE_NAME                      11: read_bytes
                82      LOAD_CONST                      19: <CODE> _is_child
                84      LOAD_CONST                      20: 'Path._is_child'
                86      MAKE_FUNCTION                   0
                88      STORE_NAME                      12: _is_child
                90      LOAD_CONST                      21: <CODE> _next
                92      LOAD_CONST                      22: 'Path._next'
                94      MAKE_FUNCTION                   0
                96      STORE_NAME                      13: _next
                98      LOAD_CONST                      23: <CODE> is_dir
                100     LOAD_CONST                      24: 'Path.is_dir'
                102     MAKE_FUNCTION                   0
                104     STORE_NAME                      14: is_dir
                106     LOAD_CONST                      25: <CODE> is_file
                108     LOAD_CONST                      26: 'Path.is_file'
                110     MAKE_FUNCTION                   0
                112     STORE_NAME                      15: is_file
                114     LOAD_CONST                      27: <CODE> exists
                116     LOAD_CONST                      28: 'Path.exists'
                118     MAKE_FUNCTION                   0
                120     STORE_NAME                      16: exists
                122     LOAD_CONST                      29: <CODE> iterdir
                124     LOAD_CONST                      30: 'Path.iterdir'
                126     MAKE_FUNCTION                   0
                128     STORE_NAME                      17: iterdir
                130     LOAD_CONST                      31: <CODE> __str__
                132     LOAD_CONST                      32: 'Path.__str__'
                134     MAKE_FUNCTION                   0
                136     STORE_NAME                      18: __str__
                138     LOAD_CONST                      33: <CODE> __repr__
                140     LOAD_CONST                      34: 'Path.__repr__'
                142     MAKE_FUNCTION                   0
                144     STORE_NAME                      19: __repr__
                146     LOAD_CONST                      35: <CODE> joinpath
                148     LOAD_CONST                      36: 'Path.joinpath'
                150     MAKE_FUNCTION                   0
                152     STORE_NAME                      20: joinpath
                154     LOAD_NAME                       20: joinpath
                156     STORE_NAME                      21: __truediv__
                158     LOAD_NAME                       7: property
                160     LOAD_CONST                      37: <CODE> parent
                162     LOAD_CONST                      38: 'Path.parent'
                164     MAKE_FUNCTION                   0
                166     CALL_FUNCTION                   1
                168     STORE_NAME                      22: parent
                170     LOAD_CONST                      7: None
                172     RETURN_VALUE                    
        'Path'
        [Code]
            File Name: zipfile.py
            Object Name: main
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 13
            Stack Size: 8
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                'argparse'
                'ArgumentParser'
                'add_mutually_exclusive_group'
                'add_argument'
                'parse_args'
                'test'
                'ZipFile'
                'testzip'
                'print'
                'format'
                'list'
                'printdir'
                'extract'
                'extractall'
                'create'
                'pop'
                'os'
                'path'
                'basename'
                'dirname'
                'curdir'
                'pardir'
            [Var Names]
                'args'
                'argparse'
                'description'
                'parser'
                'group'
                'src'
                'zf'
                'badfile'
                'curdir'
                'zip_name'
                'files'
                'path'
                'zippath'
            [Free Vars]
            [Cell Vars]
                'addToZip'
            [Constants]
                None
                0
                'A simple command-line interface for zipfile module.'
                (
                    'description'
                )
                True
                (
                    'required'
                )
                '-l'
                '--list'
                '<zipfile>'
                'Show listing of a zipfile'
                (
                    'metavar'
                    'help'
                )
                '-e'
                '--extract'
                2
                (
                    '<zipfile>'
                    '<output_dir>'
                )
                'Extract zipfile into target dir'
                (
                    'nargs'
                    'metavar'
                    'help'
                )
                '-c'
                '--create'
                '+'
                (
                    '<name>'
                    '<file>'
                )
                'Create zipfile from sources'
                '-t'
                '--test'
                'Test if a zipfile is valid'
                'r'
                'The following enclosed file is corrupted: {!r}'
                'Done testing'
                [Code]
                    File Name: zipfile.py
                    Object Name: addToZip
                    Arg Count: 3
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 8
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'os'
                        'path'
                        'isfile'
                        'write'
                        'ZIP_DEFLATED'
                        'isdir'
                        'sorted'
                        'listdir'
                        'join'
                    [Var Names]
                        'zf'
                        'path'
                        'zippath'
                        'nm'
                    [Free Vars]
                        'addToZip'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_ATTR                       1: path
                        4       LOAD_METHOD                     2: isfile
                        6       LOAD_FAST                       1: path
                        8       CALL_METHOD                     1
                        10      POP_JUMP_IF_FALSE               15 (to 30)
                        12      LOAD_FAST                       0: zf
                        14      LOAD_METHOD                     3: write
                        16      LOAD_FAST                       1: path
                        18      LOAD_FAST                       2: zippath
                        20      LOAD_GLOBAL                     4: ZIP_DEFLATED
                        22      CALL_METHOD                     3
                        24      POP_TOP                         
                        26      LOAD_CONST                      0: None
                        28      RETURN_VALUE                    
                        30      LOAD_GLOBAL                     0: os
                        32      LOAD_ATTR                       1: path
                        34      LOAD_METHOD                     5: isdir
                        36      LOAD_FAST                       1: path
                        38      CALL_METHOD                     1
                        40      POP_JUMP_IF_FALSE               55 (to 110)
                        42      LOAD_FAST                       2: zippath
                        44      POP_JUMP_IF_FALSE               29 (to 58)
                        46      LOAD_FAST                       0: zf
                        48      LOAD_METHOD                     3: write
                        50      LOAD_FAST                       1: path
                        52      LOAD_FAST                       2: zippath
                        54      CALL_METHOD                     2
                        56      POP_TOP                         
                        58      LOAD_GLOBAL                     6: sorted
                        60      LOAD_GLOBAL                     0: os
                        62      LOAD_METHOD                     7: listdir
                        64      LOAD_FAST                       1: path
                        66      CALL_METHOD                     1
                        68      CALL_FUNCTION                   1
                        70      GET_ITER                        
                        72      FOR_ITER                        20 (to 114)
                        74      STORE_FAST                      3: nm
                        76      LOAD_DEREF                      0: addToZip
                        78      LOAD_FAST                       0: zf
                        80      LOAD_GLOBAL                     0: os
                        82      LOAD_ATTR                       1: path
                        84      LOAD_METHOD                     8: join
                        86      LOAD_FAST                       1: path
                        88      LOAD_FAST                       3: nm
                        90      CALL_METHOD                     2
                        92      LOAD_GLOBAL                     0: os
                        94      LOAD_ATTR                       1: path
                        96      LOAD_METHOD                     8: join
                        98      LOAD_FAST                       2: zippath
                        100     LOAD_FAST                       3: nm
                        102     CALL_METHOD                     2
                        104     CALL_FUNCTION                   3
                        106     POP_TOP                         
                        108     JUMP_ABSOLUTE                   36 (to 72)
                        110     LOAD_CONST                      0: None
                        112     RETURN_VALUE                    
                        114     LOAD_CONST                      0: None
                        116     RETURN_VALUE                    
                'main.<locals>.addToZip'
                'w'
                ''
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      0: None
                4       IMPORT_NAME                     0: argparse
                6       STORE_FAST                      1: argparse
                8       LOAD_CONST                      2: 'A simple command-line interface for zipfile module.'
                10      STORE_FAST                      2: description
                12      LOAD_FAST                       1: argparse
                14      LOAD_ATTR                       1: ArgumentParser
                16      LOAD_FAST                       2: description
                18      LOAD_CONST                      3: ('description',)
                20      CALL_FUNCTION_KW                1
                22      STORE_FAST                      3: parser
                24      LOAD_FAST                       3: parser
                26      LOAD_ATTR                       2: add_mutually_exclusive_group
                28      LOAD_CONST                      4: True
                30      LOAD_CONST                      5: ('required',)
                32      CALL_FUNCTION_KW                1
                34      STORE_FAST                      4: group
                36      LOAD_FAST                       4: group
                38      LOAD_ATTR                       3: add_argument
                40      LOAD_CONST                      6: '-l'
                42      LOAD_CONST                      7: '--list'
                44      LOAD_CONST                      8: '<zipfile>'
                46      LOAD_CONST                      9: 'Show listing of a zipfile'
                48      LOAD_CONST                      10: ('metavar', 'help')
                50      CALL_FUNCTION_KW                4
                52      POP_TOP                         
                54      LOAD_FAST                       4: group
                56      LOAD_ATTR                       3: add_argument
                58      LOAD_CONST                      11: '-e'
                60      LOAD_CONST                      12: '--extract'
                62      LOAD_CONST                      13: 2
                64      LOAD_CONST                      14: ('<zipfile>', '<output_dir>')
                66      LOAD_CONST                      15: 'Extract zipfile into target dir'
                68      LOAD_CONST                      16: ('nargs', 'metavar', 'help')
                70      CALL_FUNCTION_KW                5
                72      POP_TOP                         
                74      LOAD_FAST                       4: group
                76      LOAD_ATTR                       3: add_argument
                78      LOAD_CONST                      17: '-c'
                80      LOAD_CONST                      18: '--create'
                82      LOAD_CONST                      19: '+'
                84      LOAD_CONST                      20: ('<name>', '<file>')
                86      LOAD_CONST                      21: 'Create zipfile from sources'
                88      LOAD_CONST                      16: ('nargs', 'metavar', 'help')
                90      CALL_FUNCTION_KW                5
                92      POP_TOP                         
                94      LOAD_FAST                       4: group
                96      LOAD_ATTR                       3: add_argument
                98      LOAD_CONST                      22: '-t'
                100     LOAD_CONST                      23: '--test'
                102     LOAD_CONST                      8: '<zipfile>'
                104     LOAD_CONST                      24: 'Test if a zipfile is valid'
                106     LOAD_CONST                      10: ('metavar', 'help')
                108     CALL_FUNCTION_KW                4
                110     POP_TOP                         
                112     LOAD_FAST                       3: parser
                114     LOAD_METHOD                     4: parse_args
                116     LOAD_FAST                       0: args
                118     CALL_METHOD                     1
                120     STORE_FAST                      0: args
                122     LOAD_FAST                       0: args
                124     LOAD_ATTR                       5: test
                126     LOAD_CONST                      0: None
                128     IS_OP                           1 (is not)
                130     POP_JUMP_IF_FALSE               109 (to 218)
                132     LOAD_FAST                       0: args
                134     LOAD_ATTR                       5: test
                136     STORE_FAST                      5: src
                138     LOAD_GLOBAL                     6: ZipFile
                140     LOAD_FAST                       5: src
                142     LOAD_CONST                      25: 'r'
                144     CALL_FUNCTION                   2
                146     SETUP_WITH                      12 (to 172)
                148     STORE_FAST                      6: zf
                150     LOAD_FAST                       6: zf
                152     LOAD_METHOD                     7: testzip
                154     CALL_METHOD                     0
                156     STORE_FAST                      7: badfile
                158     POP_BLOCK                       
                160     LOAD_CONST                      0: None
                162     DUP_TOP                         
                164     DUP_TOP                         
                166     CALL_FUNCTION                   3
                168     POP_TOP                         
                170     JUMP_FORWARD                    8 (to 188)
                172     WITH_EXCEPT_START               
                174     POP_JUMP_IF_TRUE                89 (to 178)
                176     RERAISE                         1
                178     POP_TOP                         
                180     POP_TOP                         
                182     POP_TOP                         
                184     POP_EXCEPT                      
                186     POP_TOP                         
                188     LOAD_FAST                       7: badfile
                190     POP_JUMP_IF_FALSE               103 (to 206)
                192     LOAD_GLOBAL                     8: print
                194     LOAD_CONST                      26: 'The following enclosed file is corrupted: {!r}'
                196     LOAD_METHOD                     9: format
                198     LOAD_FAST                       7: badfile
                200     CALL_METHOD                     1
                202     CALL_FUNCTION                   1
                204     POP_TOP                         
                206     LOAD_GLOBAL                     8: print
                208     LOAD_CONST                      27: 'Done testing'
                210     CALL_FUNCTION                   1
                212     POP_TOP                         
                214     LOAD_CONST                      0: None
                216     RETURN_VALUE                    
                218     LOAD_FAST                       0: args
                220     LOAD_ATTR                       10: list
                222     LOAD_CONST                      0: None
                224     IS_OP                           1 (is not)
                226     POP_JUMP_IF_FALSE               145 (to 290)
                228     LOAD_FAST                       0: args
                230     LOAD_ATTR                       10: list
                232     STORE_FAST                      5: src
                234     LOAD_GLOBAL                     6: ZipFile
                236     LOAD_FAST                       5: src
                238     LOAD_CONST                      25: 'r'
                240     CALL_FUNCTION                   2
                242     SETUP_WITH                      13 (to 270)
                244     STORE_FAST                      6: zf
                246     LOAD_FAST                       6: zf
                248     LOAD_METHOD                     11: printdir
                250     CALL_METHOD                     0
                252     POP_TOP                         
                254     POP_BLOCK                       
                256     LOAD_CONST                      0: None
                258     DUP_TOP                         
                260     DUP_TOP                         
                262     CALL_FUNCTION                   3
                264     POP_TOP                         
                266     LOAD_CONST                      0: None
                268     RETURN_VALUE                    
                270     WITH_EXCEPT_START               
                272     POP_JUMP_IF_TRUE                138 (to 276)
                274     RERAISE                         1
                276     POP_TOP                         
                278     POP_TOP                         
                280     POP_TOP                         
                282     POP_EXCEPT                      
                284     POP_TOP                         
                286     LOAD_CONST                      0: None
                288     RETURN_VALUE                    
                290     LOAD_FAST                       0: args
                292     LOAD_ATTR                       12: extract
                294     LOAD_CONST                      0: None
                296     IS_OP                           1 (is not)
                298     POP_JUMP_IF_FALSE               184 (to 368)
                300     LOAD_FAST                       0: args
                302     LOAD_ATTR                       12: extract
                304     UNPACK_SEQUENCE                 2
                306     STORE_FAST                      5: src
                308     STORE_FAST                      8: curdir
                310     LOAD_GLOBAL                     6: ZipFile
                312     LOAD_FAST                       5: src
                314     LOAD_CONST                      25: 'r'
                316     CALL_FUNCTION                   2
                318     SETUP_WITH                      14 (to 348)
                320     STORE_FAST                      6: zf
                322     LOAD_FAST                       6: zf
                324     LOAD_METHOD                     13: extractall
                326     LOAD_FAST                       8: curdir
                328     CALL_METHOD                     1
                330     POP_TOP                         
                332     POP_BLOCK                       
                334     LOAD_CONST                      0: None
                336     DUP_TOP                         
                338     DUP_TOP                         
                340     CALL_FUNCTION                   3
                342     POP_TOP                         
                344     LOAD_CONST                      0: None
                346     RETURN_VALUE                    
                348     WITH_EXCEPT_START               
                350     POP_JUMP_IF_TRUE                177 (to 354)
                352     RERAISE                         1
                354     POP_TOP                         
                356     POP_TOP                         
                358     POP_TOP                         
                360     POP_EXCEPT                      
                362     POP_TOP                         
                364     LOAD_CONST                      0: None
                366     RETURN_VALUE                    
                368     LOAD_FAST                       0: args
                370     LOAD_ATTR                       14: create
                372     LOAD_CONST                      0: None
                374     IS_OP                           1 (is not)
                376     POP_JUMP_IF_FALSE               270 (to 540)
                380     LOAD_FAST                       0: args
                382     LOAD_ATTR                       14: create
                384     LOAD_METHOD                     15: pop
                386     LOAD_CONST                      1: 0
                388     CALL_METHOD                     1
                390     STORE_FAST                      9: zip_name
                392     LOAD_FAST                       0: args
                394     LOAD_ATTR                       14: create
                396     STORE_FAST                      10: files
                398     LOAD_CLOSURE                    0: addToZip
                400     BUILD_TUPLE                     1
                402     LOAD_CONST                      28: <CODE> addToZip
                404     LOAD_CONST                      29: 'main.<locals>.addToZip'
                406     MAKE_FUNCTION                   8
                408     STORE_DEREF                     0: addToZip
                410     LOAD_GLOBAL                     6: ZipFile
                412     LOAD_FAST                       9: zip_name
                414     LOAD_CONST                      30: 'w'
                416     CALL_FUNCTION                   2
                418     SETUP_WITH                      49 (to 518)
                420     STORE_FAST                      6: zf
                422     LOAD_FAST                       10: files
                424     GET_ITER                        
                426     FOR_ITER                        37 (to 502)
                428     STORE_FAST                      11: path
                430     LOAD_GLOBAL                     16: os
                432     LOAD_ATTR                       17: path
                434     LOAD_METHOD                     18: basename
                436     LOAD_FAST                       11: path
                438     CALL_METHOD                     1
                440     STORE_FAST                      12: zippath
                442     LOAD_FAST                       12: zippath
                444     POP_JUMP_IF_TRUE                233 (to 466)
                446     LOAD_GLOBAL                     16: os
                448     LOAD_ATTR                       17: path
                450     LOAD_METHOD                     18: basename
                452     LOAD_GLOBAL                     16: os
                454     LOAD_ATTR                       17: path
                456     LOAD_METHOD                     19: dirname
                458     LOAD_FAST                       11: path
                460     CALL_METHOD                     1
                462     CALL_METHOD                     1
                464     STORE_FAST                      12: zippath
                466     LOAD_FAST                       12: zippath
                468     LOAD_CONST                      31: ''
                470     LOAD_GLOBAL                     16: os
                472     LOAD_ATTR                       20: curdir
                474     LOAD_GLOBAL                     16: os
                476     LOAD_ATTR                       21: pardir
                478     BUILD_TUPLE                     3
                480     CONTAINS_OP                     0 (in)
                482     POP_JUMP_IF_FALSE               244 (to 488)
                484     LOAD_CONST                      31: ''
                486     STORE_FAST                      12: zippath
                488     LOAD_DEREF                      0: addToZip
                490     LOAD_FAST                       6: zf
                492     LOAD_FAST                       11: path
                494     LOAD_FAST                       12: zippath
                496     CALL_FUNCTION                   3
                498     POP_TOP                         
                500     JUMP_ABSOLUTE                   213 (to 426)
                502     POP_BLOCK                       
                504     LOAD_CONST                      0: None
                506     DUP_TOP                         
                508     DUP_TOP                         
                510     CALL_FUNCTION                   3
                512     POP_TOP                         
                514     LOAD_CONST                      0: None
                516     RETURN_VALUE                    
                518     WITH_EXCEPT_START               
                520     POP_JUMP_IF_TRUE                263 (to 526)
                524     RERAISE                         1
                526     POP_TOP                         
                528     POP_TOP                         
                530     POP_TOP                         
                532     POP_EXCEPT                      
                534     POP_TOP                         
                536     LOAD_CONST                      0: None
                538     RETURN_VALUE                    
                540     LOAD_CONST                      0: None
                542     RETURN_VALUE                    
        'main'
        '__main__'
        (
            None
        )
    [Disassembly]
        0       LOAD_CONST                      0: '\nRead and write ZIP files.\n\nXXX references to utf-8 need further investigation.\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: 0
        6       LOAD_CONST                      2: None
        8       IMPORT_NAME                     1: binascii
        10      STORE_NAME                      1: binascii
        12      LOAD_CONST                      1: 0
        14      LOAD_CONST                      2: None
        16      IMPORT_NAME                     2: importlib.util
        18      STORE_NAME                      3: importlib
        20      LOAD_CONST                      1: 0
        22      LOAD_CONST                      2: None
        24      IMPORT_NAME                     4: io
        26      STORE_NAME                      4: io
        28      LOAD_CONST                      1: 0
        30      LOAD_CONST                      2: None
        32      IMPORT_NAME                     5: itertools
        34      STORE_NAME                      5: itertools
        36      LOAD_CONST                      1: 0
        38      LOAD_CONST                      2: None
        40      IMPORT_NAME                     6: os
        42      STORE_NAME                      6: os
        44      LOAD_CONST                      1: 0
        46      LOAD_CONST                      2: None
        48      IMPORT_NAME                     7: posixpath
        50      STORE_NAME                      7: posixpath
        52      LOAD_CONST                      1: 0
        54      LOAD_CONST                      2: None
        56      IMPORT_NAME                     8: re
        58      STORE_NAME                      8: re
        60      LOAD_CONST                      1: 0
        62      LOAD_CONST                      2: None
        64      IMPORT_NAME                     9: shutil
        66      STORE_NAME                      9: shutil
        68      LOAD_CONST                      1: 0
        70      LOAD_CONST                      2: None
        72      IMPORT_NAME                     10: stat
        74      STORE_NAME                      10: stat
        76      LOAD_CONST                      1: 0
        78      LOAD_CONST                      2: None
        80      IMPORT_NAME                     11: struct
        82      STORE_NAME                      11: struct
        84      LOAD_CONST                      1: 0
        86      LOAD_CONST                      2: None
        88      IMPORT_NAME                     12: sys
        90      STORE_NAME                      12: sys
        92      LOAD_CONST                      1: 0
        94      LOAD_CONST                      2: None
        96      IMPORT_NAME                     13: threading
        98      STORE_NAME                      13: threading
        100     LOAD_CONST                      1: 0
        102     LOAD_CONST                      2: None
        104     IMPORT_NAME                     14: time
        106     STORE_NAME                      14: time
        108     LOAD_CONST                      1: 0
        110     LOAD_CONST                      2: None
        112     IMPORT_NAME                     15: contextlib
        114     STORE_NAME                      15: contextlib
        116     LOAD_CONST                      1: 0
        118     LOAD_CONST                      2: None
        120     IMPORT_NAME                     16: pathlib
        122     STORE_NAME                      16: pathlib
        124     SETUP_FINALLY                   9 (to 144)
        126     LOAD_CONST                      1: 0
        128     LOAD_CONST                      2: None
        130     IMPORT_NAME                     17: zlib
        132     STORE_NAME                      17: zlib
        134     LOAD_NAME                       17: zlib
        136     LOAD_ATTR                       18: crc32
        138     STORE_NAME                      18: crc32
        140     POP_BLOCK                       
        142     JUMP_FORWARD                    14 (to 172)
        144     DUP_TOP                         
        146     LOAD_NAME                       19: ImportError
        148     JUMP_IF_NOT_EXC_MATCH           85 (to 170)
        150     POP_TOP                         
        152     POP_TOP                         
        154     POP_TOP                         
        156     LOAD_CONST                      2: None
        158     STORE_NAME                      17: zlib
        160     LOAD_NAME                       1: binascii
        162     LOAD_ATTR                       18: crc32
        164     STORE_NAME                      18: crc32
        166     POP_EXCEPT                      
        168     JUMP_FORWARD                    1 (to 172)
        170     RERAISE                         0
        172     SETUP_FINALLY                   6 (to 186)
        174     LOAD_CONST                      1: 0
        176     LOAD_CONST                      2: None
        178     IMPORT_NAME                     20: bz2
        180     STORE_NAME                      20: bz2
        182     POP_BLOCK                       
        184     JUMP_FORWARD                    11 (to 208)
        186     DUP_TOP                         
        188     LOAD_NAME                       19: ImportError
        190     JUMP_IF_NOT_EXC_MATCH           103 (to 206)
        192     POP_TOP                         
        194     POP_TOP                         
        196     POP_TOP                         
        198     LOAD_CONST                      2: None
        200     STORE_NAME                      20: bz2
        202     POP_EXCEPT                      
        204     JUMP_FORWARD                    1 (to 208)
        206     RERAISE                         0
        208     SETUP_FINALLY                   6 (to 222)
        210     LOAD_CONST                      1: 0
        212     LOAD_CONST                      2: None
        214     IMPORT_NAME                     21: lzma
        216     STORE_NAME                      21: lzma
        218     POP_BLOCK                       
        220     JUMP_FORWARD                    11 (to 244)
        222     DUP_TOP                         
        224     LOAD_NAME                       19: ImportError
        226     JUMP_IF_NOT_EXC_MATCH           121 (to 242)
        228     POP_TOP                         
        230     POP_TOP                         
        232     POP_TOP                         
        234     LOAD_CONST                      2: None
        236     STORE_NAME                      21: lzma
        238     POP_EXCEPT                      
        240     JUMP_FORWARD                    1 (to 244)
        242     RERAISE                         0
        244     BUILD_LIST                      0
        246     LOAD_CONST                      3: ('BadZipFile', 'BadZipfile', 'error', 'ZIP_STORED', 'ZIP_DEFLATED', 'ZIP_BZIP2', 'ZIP_LZMA', 'is_zipfile', 'ZipInfo', 'ZipFile', 'PyZipFile', 'LargeZipFile', 'Path')
        248     LIST_EXTEND                     1
        250     STORE_NAME                      22: __all__
        252     LOAD_BUILD_CLASS                
        254     LOAD_CONST                      4: <CODE> BadZipFile
        256     LOAD_CONST                      5: 'BadZipFile'
        258     MAKE_FUNCTION                   0
        260     LOAD_CONST                      5: 'BadZipFile'
        262     LOAD_NAME                       23: Exception
        264     CALL_FUNCTION                   3
        266     STORE_NAME                      24: BadZipFile
        268     LOAD_BUILD_CLASS                
        270     LOAD_CONST                      6: <CODE> LargeZipFile
        272     LOAD_CONST                      7: 'LargeZipFile'
        274     MAKE_FUNCTION                   0
        276     LOAD_CONST                      7: 'LargeZipFile'
        278     LOAD_NAME                       23: Exception
        280     CALL_FUNCTION                   3
        282     STORE_NAME                      25: LargeZipFile
        284     LOAD_NAME                       24: BadZipFile
        286     DUP_TOP                         
        288     STORE_NAME                      26: error
        290     STORE_NAME                      27: BadZipfile
        292     LOAD_CONST                      8: 2147483647
        294     STORE_NAME                      28: ZIP64_LIMIT
        296     LOAD_CONST                      9: 65535
        298     STORE_NAME                      29: ZIP_FILECOUNT_LIMIT
        300     LOAD_CONST                      9: 65535
        302     STORE_NAME                      30: ZIP_MAX_COMMENT
        304     LOAD_CONST                      1: 0
        306     STORE_NAME                      31: ZIP_STORED
        308     LOAD_CONST                      10: 8
        310     STORE_NAME                      32: ZIP_DEFLATED
        312     LOAD_CONST                      11: 12
        314     STORE_NAME                      33: ZIP_BZIP2
        316     LOAD_CONST                      12: 14
        318     STORE_NAME                      34: ZIP_LZMA
        320     LOAD_CONST                      13: 20
        322     STORE_NAME                      35: DEFAULT_VERSION
        324     LOAD_CONST                      14: 45
        326     STORE_NAME                      36: ZIP64_VERSION
        328     LOAD_CONST                      15: 46
        330     STORE_NAME                      37: BZIP2_VERSION
        332     LOAD_CONST                      16: 63
        334     STORE_NAME                      38: LZMA_VERSION
        336     LOAD_CONST                      16: 63
        338     STORE_NAME                      39: MAX_EXTRACT_VERSION
        340     LOAD_CONST                      17: b'<4s4H2LH'
        342     STORE_NAME                      40: structEndArchive
        344     LOAD_CONST                      18: b'PK\x05\x06'
        346     STORE_NAME                      41: stringEndArchive
        348     LOAD_NAME                       11: struct
        350     LOAD_METHOD                     42: calcsize
        352     LOAD_NAME                       40: structEndArchive
        354     CALL_METHOD                     1
        356     STORE_NAME                      43: sizeEndCentDir
        358     LOAD_CONST                      1: 0
        360     STORE_NAME                      44: _ECD_SIGNATURE
        362     LOAD_CONST                      19: 1
        364     STORE_NAME                      45: _ECD_DISK_NUMBER
        366     LOAD_CONST                      20: 2
        368     STORE_NAME                      46: _ECD_DISK_START
        370     LOAD_CONST                      21: 3
        372     STORE_NAME                      47: _ECD_ENTRIES_THIS_DISK
        374     LOAD_CONST                      22: 4
        376     STORE_NAME                      48: _ECD_ENTRIES_TOTAL
        378     LOAD_CONST                      23: 5
        380     STORE_NAME                      49: _ECD_SIZE
        382     LOAD_CONST                      24: 6
        384     STORE_NAME                      50: _ECD_OFFSET
        386     LOAD_CONST                      25: 7
        388     STORE_NAME                      51: _ECD_COMMENT_SIZE
        390     LOAD_CONST                      10: 8
        392     STORE_NAME                      52: _ECD_COMMENT
        394     LOAD_CONST                      26: 9
        396     STORE_NAME                      53: _ECD_LOCATION
        398     LOAD_CONST                      27: '<4s4B4HL2L5H2L'
        400     STORE_NAME                      54: structCentralDir
        402     LOAD_CONST                      28: b'PK\x01\x02'
        404     STORE_NAME                      55: stringCentralDir
        406     LOAD_NAME                       11: struct
        408     LOAD_METHOD                     42: calcsize
        410     LOAD_NAME                       54: structCentralDir
        412     CALL_METHOD                     1
        414     STORE_NAME                      56: sizeCentralDir
        416     LOAD_CONST                      1: 0
        418     STORE_NAME                      57: _CD_SIGNATURE
        420     LOAD_CONST                      19: 1
        422     STORE_NAME                      58: _CD_CREATE_VERSION
        424     LOAD_CONST                      20: 2
        426     STORE_NAME                      59: _CD_CREATE_SYSTEM
        428     LOAD_CONST                      21: 3
        430     STORE_NAME                      60: _CD_EXTRACT_VERSION
        432     LOAD_CONST                      22: 4
        434     STORE_NAME                      61: _CD_EXTRACT_SYSTEM
        436     LOAD_CONST                      23: 5
        438     STORE_NAME                      62: _CD_FLAG_BITS
        440     LOAD_CONST                      24: 6
        442     STORE_NAME                      63: _CD_COMPRESS_TYPE
        444     LOAD_CONST                      25: 7
        446     STORE_NAME                      64: _CD_TIME
        448     LOAD_CONST                      10: 8
        450     STORE_NAME                      65: _CD_DATE
        452     LOAD_CONST                      26: 9
        454     STORE_NAME                      66: _CD_CRC
        456     LOAD_CONST                      29: 10
        458     STORE_NAME                      67: _CD_COMPRESSED_SIZE
        460     LOAD_CONST                      30: 11
        462     STORE_NAME                      68: _CD_UNCOMPRESSED_SIZE
        464     LOAD_CONST                      11: 12
        466     STORE_NAME                      69: _CD_FILENAME_LENGTH
        468     LOAD_CONST                      31: 13
        470     STORE_NAME                      70: _CD_EXTRA_FIELD_LENGTH
        472     LOAD_CONST                      12: 14
        474     STORE_NAME                      71: _CD_COMMENT_LENGTH
        476     LOAD_CONST                      32: 15
        478     STORE_NAME                      72: _CD_DISK_NUMBER_START
        480     LOAD_CONST                      33: 16
        482     STORE_NAME                      73: _CD_INTERNAL_FILE_ATTRIBUTES
        484     LOAD_CONST                      34: 17
        486     STORE_NAME                      74: _CD_EXTERNAL_FILE_ATTRIBUTES
        488     LOAD_CONST                      35: 18
        490     STORE_NAME                      75: _CD_LOCAL_HEADER_OFFSET
        492     LOAD_CONST                      36: '<4s2B4HL2L2H'
        494     STORE_NAME                      76: structFileHeader
        496     LOAD_CONST                      37: b'PK\x03\x04'
        498     STORE_NAME                      77: stringFileHeader
        500     LOAD_NAME                       11: struct
        502     LOAD_METHOD                     42: calcsize
        504     LOAD_NAME                       76: structFileHeader
        506     CALL_METHOD                     1
        508     STORE_NAME                      78: sizeFileHeader
        510     LOAD_CONST                      1: 0
        512     STORE_NAME                      79: _FH_SIGNATURE
        514     LOAD_CONST                      19: 1
        516     STORE_NAME                      80: _FH_EXTRACT_VERSION
        518     LOAD_CONST                      20: 2
        520     STORE_NAME                      81: _FH_EXTRACT_SYSTEM
        522     LOAD_CONST                      21: 3
        524     STORE_NAME                      82: _FH_GENERAL_PURPOSE_FLAG_BITS
        526     LOAD_CONST                      22: 4
        528     STORE_NAME                      83: _FH_COMPRESSION_METHOD
        530     LOAD_CONST                      23: 5
        532     STORE_NAME                      84: _FH_LAST_MOD_TIME
        534     LOAD_CONST                      24: 6
        536     STORE_NAME                      85: _FH_LAST_MOD_DATE
        538     LOAD_CONST                      25: 7
        540     STORE_NAME                      86: _FH_CRC
        542     LOAD_CONST                      10: 8
        544     STORE_NAME                      87: _FH_COMPRESSED_SIZE
        546     LOAD_CONST                      26: 9
        548     STORE_NAME                      88: _FH_UNCOMPRESSED_SIZE
        550     LOAD_CONST                      29: 10
        552     STORE_NAME                      89: _FH_FILENAME_LENGTH
        554     LOAD_CONST                      30: 11
        556     STORE_NAME                      90: _FH_EXTRA_FIELD_LENGTH
        558     LOAD_CONST                      38: '<4sLQL'
        560     STORE_NAME                      91: structEndArchive64Locator
        562     LOAD_CONST                      39: b'PK\x06\x07'
        564     STORE_NAME                      92: stringEndArchive64Locator
        566     LOAD_NAME                       11: struct
        568     LOAD_METHOD                     42: calcsize
        570     LOAD_NAME                       91: structEndArchive64Locator
        572     CALL_METHOD                     1
        574     STORE_NAME                      93: sizeEndCentDir64Locator
        576     LOAD_CONST                      40: '<4sQ2H2L4Q'
        578     STORE_NAME                      94: structEndArchive64
        580     LOAD_CONST                      41: b'PK\x06\x06'
        582     STORE_NAME                      95: stringEndArchive64
        584     LOAD_NAME                       11: struct
        586     LOAD_METHOD                     42: calcsize
        588     LOAD_NAME                       94: structEndArchive64
        590     CALL_METHOD                     1
        592     STORE_NAME                      96: sizeEndCentDir64
        594     LOAD_CONST                      1: 0
        596     STORE_NAME                      97: _CD64_SIGNATURE
        598     LOAD_CONST                      19: 1
        600     STORE_NAME                      98: _CD64_DIRECTORY_RECSIZE
        602     LOAD_CONST                      20: 2
        604     STORE_NAME                      99: _CD64_CREATE_VERSION
        606     LOAD_CONST                      21: 3
        608     STORE_NAME                      100: _CD64_EXTRACT_VERSION
        610     LOAD_CONST                      22: 4
        612     STORE_NAME                      101: _CD64_DISK_NUMBER
        614     LOAD_CONST                      23: 5
        616     STORE_NAME                      102: _CD64_DISK_NUMBER_START
        618     LOAD_CONST                      24: 6
        620     STORE_NAME                      103: _CD64_NUMBER_ENTRIES_THIS_DISK
        622     LOAD_CONST                      25: 7
        624     STORE_NAME                      104: _CD64_NUMBER_ENTRIES_TOTAL
        626     LOAD_CONST                      10: 8
        628     STORE_NAME                      105: _CD64_DIRECTORY_SIZE
        630     LOAD_CONST                      26: 9
        632     STORE_NAME                      106: _CD64_OFFSET_START_CENTDIR
        634     LOAD_CONST                      42: 134695760
        636     STORE_NAME                      107: _DD_SIGNATURE
        638     LOAD_NAME                       11: struct
        640     LOAD_METHOD                     108: Struct
        642     LOAD_CONST                      43: '<HH'
        644     CALL_METHOD                     1
        646     STORE_NAME                      109: _EXTRA_FIELD_STRUCT
        648     LOAD_CONST                      44: <CODE> _strip_extra
        650     LOAD_CONST                      45: '_strip_extra'
        652     MAKE_FUNCTION                   0
        654     STORE_NAME                      110: _strip_extra
        656     LOAD_CONST                      46: <CODE> _check_zipfile
        658     LOAD_CONST                      47: '_check_zipfile'
        660     MAKE_FUNCTION                   0
        662     STORE_NAME                      111: _check_zipfile
        664     LOAD_CONST                      48: <CODE> is_zipfile
        666     LOAD_CONST                      49: 'is_zipfile'
        668     MAKE_FUNCTION                   0
        670     STORE_NAME                      112: is_zipfile
        672     LOAD_CONST                      50: <CODE> _EndRecData64
        674     LOAD_CONST                      51: '_EndRecData64'
        676     MAKE_FUNCTION                   0
        678     STORE_NAME                      113: _EndRecData64
        680     LOAD_CONST                      52: <CODE> _EndRecData
        682     LOAD_CONST                      53: '_EndRecData'
        684     MAKE_FUNCTION                   0
        686     STORE_NAME                      114: _EndRecData
        688     LOAD_BUILD_CLASS                
        690     LOAD_CONST                      54: <CODE> ZipInfo
        692     LOAD_CONST                      55: 'ZipInfo'
        694     MAKE_FUNCTION                   0
        696     LOAD_CONST                      55: 'ZipInfo'
        698     LOAD_NAME                       115: object
        700     CALL_FUNCTION                   3
        702     STORE_NAME                      116: ZipInfo
        704     LOAD_CONST                      2: None
        706     STORE_GLOBAL                    117: _crctable
        708     LOAD_CONST                      56: <CODE> _gen_crc
        710     LOAD_CONST                      57: '_gen_crc'
        712     MAKE_FUNCTION                   0
        714     STORE_NAME                      118: _gen_crc
        716     LOAD_CONST                      58: <CODE> _ZipDecrypter
        718     LOAD_CONST                      59: '_ZipDecrypter'
        720     MAKE_FUNCTION                   0
        722     STORE_NAME                      119: _ZipDecrypter
        724     LOAD_BUILD_CLASS                
        726     LOAD_CONST                      60: <CODE> LZMACompressor
        728     LOAD_CONST                      61: 'LZMACompressor'
        730     MAKE_FUNCTION                   0
        732     LOAD_CONST                      61: 'LZMACompressor'
        734     CALL_FUNCTION                   2
        736     STORE_NAME                      120: LZMACompressor
        738     LOAD_BUILD_CLASS                
        740     LOAD_CONST                      62: <CODE> LZMADecompressor
        742     LOAD_CONST                      63: 'LZMADecompressor'
        744     MAKE_FUNCTION                   0
        746     LOAD_CONST                      63: 'LZMADecompressor'
        748     CALL_FUNCTION                   2
        750     STORE_NAME                      121: LZMADecompressor
        752     BUILD_MAP                       0
        754     LOAD_CONST                      1: 0
        756     LOAD_CONST                      64: 'store'
        758     MAP_ADD                         1
        760     LOAD_CONST                      19: 1
        762     LOAD_CONST                      65: 'shrink'
        764     MAP_ADD                         1
        766     LOAD_CONST                      20: 2
        768     LOAD_CONST                      66: 'reduce'
        770     MAP_ADD                         1
        772     LOAD_CONST                      21: 3
        774     LOAD_CONST                      66: 'reduce'
        776     MAP_ADD                         1
        778     LOAD_CONST                      22: 4
        780     LOAD_CONST                      66: 'reduce'
        782     MAP_ADD                         1
        784     LOAD_CONST                      23: 5
        786     LOAD_CONST                      66: 'reduce'
        788     MAP_ADD                         1
        790     LOAD_CONST                      24: 6
        792     LOAD_CONST                      67: 'implode'
        794     MAP_ADD                         1
        796     LOAD_CONST                      25: 7
        798     LOAD_CONST                      68: 'tokenize'
        800     MAP_ADD                         1
        802     LOAD_CONST                      10: 8
        804     LOAD_CONST                      69: 'deflate'
        806     MAP_ADD                         1
        808     LOAD_CONST                      26: 9
        810     LOAD_CONST                      70: 'deflate64'
        812     MAP_ADD                         1
        814     LOAD_CONST                      29: 10
        816     LOAD_CONST                      67: 'implode'
        818     MAP_ADD                         1
        820     LOAD_CONST                      11: 12
        822     LOAD_CONST                      71: 'bzip2'
        824     MAP_ADD                         1
        826     LOAD_CONST                      12: 14
        828     LOAD_CONST                      72: 'lzma'
        830     MAP_ADD                         1
        832     LOAD_CONST                      35: 18
        834     LOAD_CONST                      73: 'terse'
        836     MAP_ADD                         1
        838     LOAD_CONST                      74: 19
        840     LOAD_CONST                      75: 'lz77'
        842     MAP_ADD                         1
        844     LOAD_CONST                      76: 97
        846     LOAD_CONST                      77: 'wavpack'
        848     MAP_ADD                         1
        850     LOAD_CONST                      78: 98
        852     LOAD_CONST                      79: 'ppmd'
        854     MAP_ADD                         1
        856     STORE_NAME                      122: compressor_names
        858     LOAD_CONST                      80: <CODE> _check_compression
        860     LOAD_CONST                      81: '_check_compression'
        862     MAKE_FUNCTION                   0
        864     STORE_NAME                      123: _check_compression
        866     LOAD_CONST                      115: (None,)
        868     LOAD_CONST                      82: <CODE> _get_compressor
        870     LOAD_CONST                      83: '_get_compressor'
        872     MAKE_FUNCTION                   1
        874     STORE_NAME                      124: _get_compressor
        876     LOAD_CONST                      84: <CODE> _get_decompressor
        878     LOAD_CONST                      85: '_get_decompressor'
        880     MAKE_FUNCTION                   0
        882     STORE_NAME                      125: _get_decompressor
        884     LOAD_BUILD_CLASS                
        886     LOAD_CONST                      86: <CODE> _SharedFile
        888     LOAD_CONST                      87: '_SharedFile'
        890     MAKE_FUNCTION                   0
        892     LOAD_CONST                      87: '_SharedFile'
        894     CALL_FUNCTION                   2
        896     STORE_NAME                      126: _SharedFile
        898     LOAD_BUILD_CLASS                
        900     LOAD_CONST                      88: <CODE> _Tellable
        902     LOAD_CONST                      89: '_Tellable'
        904     MAKE_FUNCTION                   0
        906     LOAD_CONST                      89: '_Tellable'
        908     CALL_FUNCTION                   2
        910     STORE_NAME                      127: _Tellable
        912     LOAD_BUILD_CLASS                
        914     LOAD_CONST                      90: <CODE> ZipExtFile
        916     LOAD_CONST                      91: 'ZipExtFile'
        918     MAKE_FUNCTION                   0
        920     LOAD_CONST                      91: 'ZipExtFile'
        922     LOAD_NAME                       4: io
        924     LOAD_ATTR                       128: BufferedIOBase
        926     CALL_FUNCTION                   3
        928     STORE_NAME                      129: ZipExtFile
        930     LOAD_BUILD_CLASS                
        932     LOAD_CONST                      92: <CODE> _ZipWriteFile
        934     LOAD_CONST                      93: '_ZipWriteFile'
        936     MAKE_FUNCTION                   0
        938     LOAD_CONST                      93: '_ZipWriteFile'
        940     LOAD_NAME                       4: io
        942     LOAD_ATTR                       128: BufferedIOBase
        944     CALL_FUNCTION                   3
        946     STORE_NAME                      130: _ZipWriteFile
        948     LOAD_BUILD_CLASS                
        950     LOAD_CONST                      94: <CODE> ZipFile
        952     LOAD_CONST                      95: 'ZipFile'
        954     MAKE_FUNCTION                   0
        956     LOAD_CONST                      95: 'ZipFile'
        958     CALL_FUNCTION                   2
        960     STORE_NAME                      131: ZipFile
        962     LOAD_BUILD_CLASS                
        964     LOAD_CONST                      96: <CODE> PyZipFile
        966     LOAD_CONST                      97: 'PyZipFile'
        968     MAKE_FUNCTION                   0
        970     LOAD_CONST                      97: 'PyZipFile'
        972     LOAD_NAME                       131: ZipFile
        974     CALL_FUNCTION                   3
        976     STORE_NAME                      132: PyZipFile
        978     LOAD_CONST                      98: <CODE> _parents
        980     LOAD_CONST                      99: '_parents'
        982     MAKE_FUNCTION                   0
        984     STORE_NAME                      133: _parents
        986     LOAD_CONST                      100: <CODE> _ancestry
        988     LOAD_CONST                      101: '_ancestry'
        990     MAKE_FUNCTION                   0
        992     STORE_NAME                      134: _ancestry
        994     LOAD_NAME                       135: dict
        996     LOAD_ATTR                       136: fromkeys
        998     STORE_NAME                      137: _dedupe
        1000    NOP                             
        1002    LOAD_CONST                      102: <CODE> _difference
        1004    LOAD_CONST                      103: '_difference'
        1006    MAKE_FUNCTION                   0
        1008    STORE_NAME                      138: _difference
        1010    LOAD_BUILD_CLASS                
        1012    LOAD_CONST                      104: <CODE> CompleteDirs
        1014    LOAD_CONST                      105: 'CompleteDirs'
        1016    MAKE_FUNCTION                   0
        1018    LOAD_CONST                      105: 'CompleteDirs'
        1020    LOAD_NAME                       131: ZipFile
        1022    CALL_FUNCTION                   3
        1024    STORE_NAME                      139: CompleteDirs
        1026    LOAD_BUILD_CLASS                
        1028    LOAD_CONST                      106: <CODE> FastLookup
        1030    LOAD_CONST                      107: 'FastLookup'
        1032    MAKE_FUNCTION                   0
        1034    LOAD_CONST                      107: 'FastLookup'
        1036    LOAD_NAME                       139: CompleteDirs
        1038    CALL_FUNCTION                   3
        1040    STORE_NAME                      140: FastLookup
        1042    LOAD_CONST                      115: (None,)
        1044    LOAD_CONST                      108: <CODE> _extract_text_encoding
        1046    LOAD_CONST                      109: '_extract_text_encoding'
        1048    MAKE_FUNCTION                   1
        1050    STORE_NAME                      141: _extract_text_encoding
        1052    LOAD_BUILD_CLASS                
        1054    LOAD_CONST                      110: <CODE> Path
        1056    LOAD_CONST                      111: 'Path'
        1058    MAKE_FUNCTION                   0
        1060    LOAD_CONST                      111: 'Path'
        1062    CALL_FUNCTION                   2
        1064    STORE_NAME                      142: Path
        1066    LOAD_CONST                      115: (None,)
        1068    LOAD_CONST                      112: <CODE> main
        1070    LOAD_CONST                      113: 'main'
        1072    MAKE_FUNCTION                   1
        1074    STORE_NAME                      143: main
        1076    LOAD_NAME                       144: __name__
        1078    LOAD_CONST                      114: '__main__'
        1080    COMPARE_OP                      2 (==)
        1082    POP_JUMP_IF_FALSE               548 (to 1096)
        1086    LOAD_NAME                       143: main
        1088    CALL_FUNCTION                   0
        1090    POP_TOP                         
        1092    LOAD_CONST                      2: None
        1094    RETURN_VALUE                    
        1096    LOAD_CONST                      2: None
        1098    RETURN_VALUE                    
