platform.pyc (Python 3.10)
[Code]
    File Name: platform.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 12
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        '__copyright__'
        '__version__'
        'collections'
        'os'
        're'
        'sys'
        'subprocess'
        'functools'
        'itertools'
        '_ver_stages'
        'compile'
        '_component_re'
        '_comparable_version'
        'ASCII'
        '_libc_search'
        'libc_ver'
        '_norm_version'
        '_ver_output'
        '_syscmd_ver'
        '_WIN32_CLIENT_RELEASES'
        '_WIN32_SERVER_RELEASES'
        'win32_is_iot'
        'win32_edition'
        'win32_ver'
        '_mac_ver_xml'
        'mac_ver'
        '_java_getprop'
        'java_ver'
        'system_alias'
        '_platform'
        '_node'
        '_follow_symlinks'
        '_syscmd_file'
        '_default_architecture'
        'executable'
        'architecture'
        '_get_machine_win32'
        '_Processor'
        '_unknown_as_blank'
        'namedtuple'
        'uname_result'
        '_uname_cache'
        'uname'
        'system'
        'node'
        'release'
        'version'
        'machine'
        'processor'
        '_sys_version_parser'
        '_ironpython_sys_version_parser'
        '_ironpython26_sys_version_parser'
        '_pypy_sys_version_parser'
        '_sys_version_cache'
        '_sys_version'
        'python_implementation'
        'python_version'
        'python_version_tuple'
        'python_branch'
        'python_revision'
        'python_build'
        'python_compiler'
        '_platform_cache'
        'platform'
        '_os_release_line'
        '_os_release_unescape'
        '_os_release_candidates'
        '_os_release_cache'
        '_parse_os_release'
        'freedesktop_os_release'
        '__name__'
        'argv'
        'terse'
        'aliased'
        'print'
        'exit'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        ' This module tries to retrieve as much platform-identifying data as\n    possible. It makes this information available via function APIs.\n\n    If called from the command line, it prints the platform\n    information concatenated as single string to stdout. The output\n    format is useable as part of a filename.\n\n'
        '\n    Copyright (c) 1999-2000, Marc-Andre Lemburg; mailto:mal@lemburg.com\n    Copyright (c) 2000-2010, eGenix.com Software GmbH; mailto:info@egenix.com\n\n    Permission to use, copy, modify, and distribute this software and its\n    documentation for any purpose and without fee or royalty is hereby granted,\n    provided that the above copyright notice appear in all copies and that\n    both that copyright notice and this permission notice appear in\n    supporting documentation or portions thereof, including modifications,\n    that you make.\n\n    EGENIX.COM SOFTWARE GMBH DISCLAIMS ALL WARRANTIES WITH REGARD TO\n    THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n    FITNESS, IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,\n    INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING\n    FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\n    NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\n    WITH THE USE OR PERFORMANCE OF THIS SOFTWARE !\n\n'
        '1.0.8'
        0
        None
        10
        20
        30
        40
        50
        200
        (
            'dev'
            'alpha'
            'a'
            'beta'
            'b'
            'c'
            'RC'
            'rc'
            'pl'
            'p'
        )
        '([0-9]+|[._+-])'
        [Code]
            File Name: platform.py
            Object Name: _comparable_version
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_component_re'
                'split'
                'int'
                'ValueError'
                '_ver_stages'
                'get'
                'extend'
            [Var Names]
                'version'
                'result'
                'v'
                't'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '._+-'
                10
                100
                0
            [Disassembly]
                0       BUILD_LIST                      0
                2       STORE_FAST                      1: result
                4       LOAD_GLOBAL                     0: _component_re
                6       LOAD_METHOD                     1: split
                8       LOAD_FAST                       0: version
                10      CALL_METHOD                     1
                12      GET_ITER                        
                14      FOR_ITER                        38 (to 92)
                16      STORE_FAST                      2: v
                18      LOAD_FAST                       2: v
                20      LOAD_CONST                      1: '._+-'
                22      CONTAINS_OP                     1 (not in)
                24      POP_JUMP_IF_FALSE               45 (to 90)
                26      SETUP_FINALLY                   9 (to 46)
                28      LOAD_GLOBAL                     2: int
                30      LOAD_FAST                       2: v
                32      LOAD_CONST                      2: 10
                34      CALL_FUNCTION                   2
                36      STORE_FAST                      2: v
                38      LOAD_CONST                      3: 100
                40      STORE_FAST                      3: t
                42      POP_BLOCK                       
                44      JUMP_FORWARD                    15 (to 76)
                46      DUP_TOP                         
                48      LOAD_GLOBAL                     3: ValueError
                50      JUMP_IF_NOT_EXC_MATCH           37 (to 74)
                52      POP_TOP                         
                54      POP_TOP                         
                56      POP_TOP                         
                58      LOAD_GLOBAL                     4: _ver_stages
                60      LOAD_METHOD                     5: get
                62      LOAD_FAST                       2: v
                64      LOAD_CONST                      4: 0
                66      CALL_METHOD                     2
                68      STORE_FAST                      3: t
                70      POP_EXCEPT                      
                72      JUMP_FORWARD                    1 (to 76)
                74      RERAISE                         0
                76      LOAD_FAST                       1: result
                78      LOAD_METHOD                     6: extend
                80      LOAD_FAST                       3: t
                82      LOAD_FAST                       2: v
                84      BUILD_TUPLE                     2
                86      CALL_METHOD                     1
                88      POP_TOP                         
                90      JUMP_ABSOLUTE                   7 (to 14)
                92      LOAD_FAST                       1: result
                94      RETURN_VALUE                    
        '_comparable_version'
        b'(__libc_init)|(GLIBC_([0-9.]+))|(libc(_\\w+)?\\.so(?:\\.(\\d[0-9.]*))?)'
        ''
        16384
        [Code]
            File Name: platform.py
            Object Name: libc_ver
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 18
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'confstr'
                'split'
                'len'
                'tuple'
                'AttributeError'
                'ValueError'
                'OSError'
                'sys'
                'executable'
                '_comparable_version'
                'hasattr'
                'path'
                'realpath'
                'open'
                'read'
                '_libc_search'
                'search'
                'end'
                'max'
                'groups'
            [Var Names]
                'executable'
                'lib'
                'version'
                'chunksize'
                'ver'
                'parts'
                'V'
                'f'
                'binary'
                'pos'
                'm'
                'chunk'
                'libcinit'
                'glibc'
                'glibcversion'
                'so'
                'threads'
                'soversion'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Tries to determine the libc version that the file executable\n        (which defaults to the Python interpreter) is linked against.\n\n        Returns a tuple of strings (lib,version) which default to the\n        given parameters in case the lookup fails.\n\n        Note that the function has intimate knowledge of how different\n        libc versions add symbols to the executable and thus is probably\n        only useable for executables compiled using gcc.\n\n        The file is read and scanned in chunks of chunksize bytes.\n\n    '
                'CS_GNU_LIBC_VERSION'
                1
                (
                    'maxsplit'
                )
                2
                'realpath'
                'rb'
                0
                b'libc'
                b'GLIBC'
                None
                1000
                [Code]
                    File Name: platform.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'decode'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'latin1'
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        13 (to 32)
                        6       STORE_FAST                      1: s
                        8       LOAD_FAST                       1: s
                        10      LOAD_CONST                      0: None
                        12      IS_OP                           1 (is not)
                        14      POP_JUMP_IF_FALSE               13 (to 26)
                        16      LOAD_FAST                       1: s
                        18      LOAD_METHOD                     0: decode
                        20      LOAD_CONST                      1: 'latin1'
                        22      CALL_METHOD                     1
                        24      JUMP_FORWARD                    1 (to 28)
                        26      LOAD_FAST                       1: s
                        28      LIST_APPEND                     2
                        30      JUMP_ABSOLUTE                   2 (to 4)
                        32      RETURN_VALUE                    
                'libc_ver.<locals>.<listcomp>'
                'libc'
                'glibc'
            [Disassembly]
                0       LOAD_FAST                       0: executable
                2       POP_JUMP_IF_TRUE                42 (to 84)
                4       SETUP_FINALLY                   24 (to 54)
                6       LOAD_GLOBAL                     0: os
                8       LOAD_METHOD                     1: confstr
                10      LOAD_CONST                      1: 'CS_GNU_LIBC_VERSION'
                12      CALL_METHOD                     1
                14      STORE_FAST                      4: ver
                16      LOAD_FAST                       4: ver
                18      LOAD_ATTR                       2: split
                20      LOAD_CONST                      2: 1
                22      LOAD_CONST                      3: ('maxsplit',)
                24      CALL_FUNCTION_KW                1
                26      STORE_FAST                      5: parts
                28      LOAD_GLOBAL                     3: len
                30      LOAD_FAST                       5: parts
                32      CALL_FUNCTION                   1
                34      LOAD_CONST                      4: 2
                36      COMPARE_OP                      2 (==)
                38      POP_JUMP_IF_FALSE               25 (to 50)
                40      LOAD_GLOBAL                     4: tuple
                42      LOAD_FAST                       5: parts
                44      CALL_FUNCTION                   1
                46      POP_BLOCK                       
                48      RETURN_VALUE                    
                50      POP_BLOCK                       
                52      JUMP_FORWARD                    12 (to 78)
                54      DUP_TOP                         
                56      LOAD_GLOBAL                     5: AttributeError
                58      LOAD_GLOBAL                     6: ValueError
                60      LOAD_GLOBAL                     7: OSError
                62      BUILD_TUPLE                     3
                64      JUMP_IF_NOT_EXC_MATCH           38 (to 76)
                66      POP_TOP                         
                68      POP_TOP                         
                70      POP_TOP                         
                72      POP_EXCEPT                      
                74      JUMP_FORWARD                    1 (to 78)
                76      RERAISE                         0
                78      LOAD_GLOBAL                     8: sys
                80      LOAD_ATTR                       9: executable
                82      STORE_FAST                      0: executable
                84      LOAD_GLOBAL                     10: _comparable_version
                86      STORE_FAST                      6: V
                88      LOAD_GLOBAL                     11: hasattr
                90      LOAD_GLOBAL                     0: os
                92      LOAD_ATTR                       12: path
                94      LOAD_CONST                      5: 'realpath'
                96      CALL_FUNCTION                   2
                98      POP_JUMP_IF_FALSE               56 (to 112)
                100     LOAD_GLOBAL                     0: os
                102     LOAD_ATTR                       12: path
                104     LOAD_METHOD                     13: realpath
                106     LOAD_FAST                       0: executable
                108     CALL_METHOD                     1
                110     STORE_FAST                      0: executable
                112     LOAD_GLOBAL                     14: open
                114     LOAD_FAST                       0: executable
                116     LOAD_CONST                      6: 'rb'
                118     CALL_FUNCTION                   2
                120     SETUP_WITH                      192 (to 506)
                122     STORE_FAST                      7: f
                124     LOAD_FAST                       7: f
                126     LOAD_METHOD                     15: read
                128     LOAD_FAST                       3: chunksize
                130     CALL_METHOD                     1
                132     STORE_FAST                      8: binary
                134     LOAD_CONST                      7: 0
                136     STORE_FAST                      9: pos
                138     LOAD_FAST                       9: pos
                140     LOAD_GLOBAL                     3: len
                142     LOAD_FAST                       8: binary
                144     CALL_FUNCTION                   1
                146     COMPARE_OP                      0 (<)
                148     POP_JUMP_IF_FALSE               233 (to 466)
                150     LOAD_CONST                      8: b'libc'
                152     LOAD_FAST                       8: binary
                154     CONTAINS_OP                     0 (in)
                156     POP_JUMP_IF_TRUE                83 (to 166)
                158     LOAD_CONST                      9: b'GLIBC'
                160     LOAD_FAST                       8: binary
                162     CONTAINS_OP                     0 (in)
                164     POP_JUMP_IF_FALSE               90 (to 180)
                166     LOAD_GLOBAL                     16: _libc_search
                168     LOAD_METHOD                     17: search
                170     LOAD_FAST                       8: binary
                172     LOAD_FAST                       9: pos
                174     CALL_METHOD                     2
                176     STORE_FAST                      10: m
                178     JUMP_FORWARD                    2 (to 184)
                180     LOAD_CONST                      10: None
                182     STORE_FAST                      10: m
                184     LOAD_FAST                       10: m
                186     POP_JUMP_IF_FALSE               102 (to 204)
                188     LOAD_FAST                       10: m
                190     LOAD_METHOD                     18: end
                192     CALL_METHOD                     0
                194     LOAD_GLOBAL                     3: len
                196     LOAD_FAST                       8: binary
                198     CALL_FUNCTION                   1
                200     COMPARE_OP                      2 (==)
                202     POP_JUMP_IF_FALSE               130 (to 260)
                204     LOAD_FAST                       7: f
                206     LOAD_METHOD                     15: read
                208     LOAD_FAST                       3: chunksize
                210     CALL_METHOD                     1
                212     STORE_FAST                      11: chunk
                214     LOAD_FAST                       11: chunk
                216     POP_JUMP_IF_FALSE               127 (to 254)
                218     LOAD_FAST                       8: binary
                220     LOAD_GLOBAL                     19: max
                222     LOAD_FAST                       9: pos
                224     LOAD_GLOBAL                     3: len
                226     LOAD_FAST                       8: binary
                228     CALL_FUNCTION                   1
                230     LOAD_CONST                      11: 1000
                232     BINARY_SUBTRACT                 
                234     CALL_FUNCTION                   2
                236     LOAD_CONST                      10: None
                238     BUILD_SLICE                     2
                240     BINARY_SUBSCR                   
                242     LOAD_FAST                       11: chunk
                244     BINARY_ADD                      
                246     STORE_FAST                      8: binary
                248     LOAD_CONST                      7: 0
                250     STORE_FAST                      9: pos
                252     JUMP_ABSOLUTE                   69 (to 138)
                254     LOAD_FAST                       10: m
                256     POP_JUMP_IF_TRUE                130 (to 260)
                258     JUMP_FORWARD                    113 (to 486)
                260     LOAD_CONST                      12: <CODE> <listcomp>
                262     LOAD_CONST                      13: 'libc_ver.<locals>.<listcomp>'
                264     MAKE_FUNCTION                   0
                266     LOAD_FAST                       10: m
                268     LOAD_METHOD                     20: groups
                270     CALL_METHOD                     0
                272     GET_ITER                        
                274     CALL_FUNCTION                   1
                276     UNPACK_SEQUENCE                 6
                278     STORE_FAST                      12: libcinit
                280     STORE_FAST                      13: glibc
                282     STORE_FAST                      14: glibcversion
                284     STORE_FAST                      15: so
                286     STORE_FAST                      16: threads
                288     STORE_FAST                      17: soversion
                290     LOAD_FAST                       12: libcinit
                292     POP_JUMP_IF_FALSE               152 (to 304)
                294     LOAD_FAST                       1: lib
                296     POP_JUMP_IF_TRUE                152 (to 304)
                298     LOAD_CONST                      14: 'libc'
                300     STORE_FAST                      1: lib
                302     JUMP_FORWARD                    61 (to 426)
                304     LOAD_FAST                       13: glibc
                306     POP_JUMP_IF_FALSE               174 (to 348)
                308     LOAD_FAST                       1: lib
                310     LOAD_CONST                      15: 'glibc'
                312     COMPARE_OP                      3 (!=)
                314     POP_JUMP_IF_FALSE               163 (to 326)
                316     LOAD_CONST                      15: 'glibc'
                318     STORE_FAST                      1: lib
                320     LOAD_FAST                       14: glibcversion
                322     STORE_FAST                      2: version
                324     JUMP_FORWARD                    50 (to 426)
                326     LOAD_FAST                       6: V
                328     LOAD_FAST                       14: glibcversion
                330     CALL_FUNCTION                   1
                332     LOAD_FAST                       6: V
                334     LOAD_FAST                       2: version
                336     CALL_FUNCTION                   1
                338     COMPARE_OP                      4 (>)
                340     POP_JUMP_IF_FALSE               173 (to 346)
                342     LOAD_FAST                       14: glibcversion
                344     STORE_FAST                      2: version
                346     JUMP_FORWARD                    39 (to 426)
                348     LOAD_FAST                       15: so
                350     POP_JUMP_IF_FALSE               213 (to 426)
                352     LOAD_FAST                       1: lib
                354     LOAD_CONST                      15: 'glibc'
                356     COMPARE_OP                      3 (!=)
                358     POP_JUMP_IF_FALSE               213 (to 426)
                360     LOAD_CONST                      14: 'libc'
                362     STORE_FAST                      1: lib
                364     LOAD_FAST                       17: soversion
                366     POP_JUMP_IF_FALSE               196 (to 392)
                368     LOAD_FAST                       2: version
                370     POP_JUMP_IF_FALSE               194 (to 388)
                372     LOAD_FAST                       6: V
                374     LOAD_FAST                       17: soversion
                376     CALL_FUNCTION                   1
                378     LOAD_FAST                       6: V
                380     LOAD_FAST                       2: version
                382     CALL_FUNCTION                   1
                384     COMPARE_OP                      4 (>)
                386     POP_JUMP_IF_FALSE               196 (to 392)
                388     LOAD_FAST                       17: soversion
                390     STORE_FAST                      2: version
                392     LOAD_FAST                       16: threads
                394     POP_JUMP_IF_FALSE               213 (to 426)
                396     LOAD_FAST                       2: version
                398     LOAD_GLOBAL                     3: len
                400     LOAD_FAST                       16: threads
                402     CALL_FUNCTION                   1
                404     UNARY_NEGATIVE                  
                406     LOAD_CONST                      10: None
                408     BUILD_SLICE                     2
                410     BINARY_SUBSCR                   
                412     LOAD_FAST                       16: threads
                414     COMPARE_OP                      3 (!=)
                416     POP_JUMP_IF_FALSE               213 (to 426)
                418     LOAD_FAST                       2: version
                420     LOAD_FAST                       16: threads
                422     BINARY_ADD                      
                424     STORE_FAST                      2: version
                426     LOAD_FAST                       10: m
                428     LOAD_METHOD                     18: end
                430     CALL_METHOD                     0
                432     STORE_FAST                      9: pos
                434     LOAD_FAST                       9: pos
                436     LOAD_GLOBAL                     3: len
                438     LOAD_FAST                       8: binary
                440     CALL_FUNCTION                   1
                442     COMPARE_OP                      0 (<)
                444     POP_JUMP_IF_TRUE                75 (to 150)
                446     POP_BLOCK                       
                448     LOAD_CONST                      10: None
                450     DUP_TOP                         
                452     DUP_TOP                         
                454     CALL_FUNCTION                   3
                456     POP_TOP                         
                458     LOAD_FAST                       1: lib
                460     LOAD_FAST                       2: version
                462     BUILD_TUPLE                     2
                464     RETURN_VALUE                    
                466     POP_BLOCK                       
                468     LOAD_CONST                      10: None
                470     DUP_TOP                         
                472     DUP_TOP                         
                474     CALL_FUNCTION                   3
                476     POP_TOP                         
                478     LOAD_FAST                       1: lib
                480     LOAD_FAST                       2: version
                482     BUILD_TUPLE                     2
                484     RETURN_VALUE                    
                486     POP_BLOCK                       
                488     LOAD_CONST                      10: None
                490     DUP_TOP                         
                492     DUP_TOP                         
                494     CALL_FUNCTION                   3
                496     POP_TOP                         
                498     LOAD_FAST                       1: lib
                500     LOAD_FAST                       2: version
                502     BUILD_TUPLE                     2
                504     RETURN_VALUE                    
                506     WITH_EXCEPT_START               
                508     POP_JUMP_IF_TRUE                257 (to 514)
                512     RERAISE                         1
                514     POP_TOP                         
                516     POP_TOP                         
                518     POP_TOP                         
                520     POP_EXCEPT                      
                522     POP_TOP                         
                524     LOAD_FAST                       1: lib
                526     LOAD_FAST                       2: version
                528     BUILD_TUPLE                     2
                530     RETURN_VALUE                    
        'libc_ver'
        [Code]
            File Name: platform.py
            Object Name: _norm_version
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'split'
                'append'
                'list'
                'map'
                'str'
                'int'
                'ValueError'
                'join'
            [Var Names]
                'version'
                'build'
                'l'
                'strings'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Normalize the version and build strings and return a single\n        version string using the format major.minor.build (or patchlevel).\n    '
                '.'
                None
                3
            [Disassembly]
                0       LOAD_FAST                       0: version
                2       LOAD_METHOD                     0: split
                4       LOAD_CONST                      1: '.'
                6       CALL_METHOD                     1
                8       STORE_FAST                      2: l
                10      LOAD_FAST                       1: build
                12      POP_JUMP_IF_FALSE               12 (to 24)
                14      LOAD_FAST                       2: l
                16      LOAD_METHOD                     1: append
                18      LOAD_FAST                       1: build
                20      CALL_METHOD                     1
                22      POP_TOP                         
                24      SETUP_FINALLY                   12 (to 50)
                26      LOAD_GLOBAL                     2: list
                28      LOAD_GLOBAL                     3: map
                30      LOAD_GLOBAL                     4: str
                32      LOAD_GLOBAL                     3: map
                34      LOAD_GLOBAL                     5: int
                36      LOAD_FAST                       2: l
                38      CALL_FUNCTION                   2
                40      CALL_FUNCTION                   2
                42      CALL_FUNCTION                   1
                44      STORE_FAST                      3: strings
                46      POP_BLOCK                       
                48      JUMP_FORWARD                    11 (to 72)
                50      DUP_TOP                         
                52      LOAD_GLOBAL                     6: ValueError
                54      JUMP_IF_NOT_EXC_MATCH           35 (to 70)
                56      POP_TOP                         
                58      POP_TOP                         
                60      POP_TOP                         
                62      LOAD_FAST                       2: l
                64      STORE_FAST                      3: strings
                66      POP_EXCEPT                      
                68      JUMP_FORWARD                    1 (to 72)
                70      RERAISE                         0
                72      LOAD_CONST                      1: '.'
                74      LOAD_METHOD                     7: join
                76      LOAD_FAST                       3: strings
                78      LOAD_CONST                      2: None
                80      LOAD_CONST                      3: 3
                82      BUILD_SLICE                     2
                84      BINARY_SUBSCR                   
                86      CALL_METHOD                     1
                88      STORE_FAST                      0: version
                90      LOAD_FAST                       0: version
                92      RETURN_VALUE                    
        '_norm_version'
        '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
        (
            'win32'
            'win16'
            'dos'
        )
        [Code]
            File Name: platform.py
            Object Name: _syscmd_ver
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'platform'
                'subprocess'
                'check_output'
                'DEVNULL'
                'OSError'
                'CalledProcessError'
                'strip'
                '_ver_output'
                'match'
                'groups'
                '_norm_version'
            [Var Names]
                'system'
                'release'
                'version'
                'supported_platforms'
                'subprocess'
                'cmd'
                'info'
                'why'
                'm'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Tries to figure out the OS version used and returns\n        a tuple (system, release, version).\n\n        It uses the "ver" shell command for this which is known\n        to exists on Windows, DOS. XXX Others too ?\n\n        In case this fails, the given parameters are used as\n        defaults.\n\n    '
                0
                None
                (
                    'ver'
                    'command /c ver'
                    'cmd /c ver'
                )
                True
                (
                    'stdin'
                    'stderr'
                    'text'
                    'shell'
                )
                -1
                '.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_ATTR                       1: platform
                4       LOAD_FAST                       3: supported_platforms
                6       CONTAINS_OP                     1 (not in)
                8       POP_JUMP_IF_FALSE               10 (to 20)
                10      LOAD_FAST                       0: system
                12      LOAD_FAST                       1: release
                14      LOAD_FAST                       2: version
                16      BUILD_TUPLE                     3
                18      RETURN_VALUE                    
                20      LOAD_CONST                      1: 0
                22      LOAD_CONST                      2: None
                24      IMPORT_NAME                     2: subprocess
                26      STORE_FAST                      4: subprocess
                28      LOAD_CONST                      3: ('ver', 'command /c ver', 'cmd /c ver')
                30      GET_ITER                        
                32      FOR_ITER                        39 (to 112)
                34      STORE_FAST                      5: cmd
                36      SETUP_FINALLY                   14 (to 66)
                38      LOAD_FAST                       4: subprocess
                40      LOAD_ATTR                       3: check_output
                42      LOAD_FAST                       5: cmd
                44      LOAD_FAST                       4: subprocess
                46      LOAD_ATTR                       4: DEVNULL
                48      LOAD_FAST                       4: subprocess
                50      LOAD_ATTR                       4: DEVNULL
                52      LOAD_CONST                      4: True
                54      LOAD_CONST                      4: True
                56      LOAD_CONST                      5: ('stdin', 'stderr', 'text', 'shell')
                58      CALL_FUNCTION_KW                5
                60      STORE_FAST                      6: info
                62      POP_BLOCK                       
                64      JUMP_FORWARD                    21 (to 108)
                66      DUP_TOP                         
                68      LOAD_GLOBAL                     5: OSError
                70      LOAD_FAST                       4: subprocess
                72      LOAD_ATTR                       6: CalledProcessError
                74      BUILD_TUPLE                     2
                76      JUMP_IF_NOT_EXC_MATCH           53 (to 106)
                78      POP_TOP                         
                80      STORE_FAST                      7: why
                82      POP_TOP                         
                84      SETUP_FINALLY                   6 (to 98)
                86      POP_BLOCK                       
                88      POP_EXCEPT                      
                90      LOAD_CONST                      2: None
                92      STORE_FAST                      7: why
                94      DELETE_FAST                     7: why
                96      JUMP_ABSOLUTE                   16 (to 32)
                98      LOAD_CONST                      2: None
                100     STORE_FAST                      7: why
                102     DELETE_FAST                     7: why
                104     RERAISE                         1
                106     RERAISE                         0
                108     POP_TOP                         
                110     JUMP_FORWARD                    5 (to 122)
                112     LOAD_FAST                       0: system
                114     LOAD_FAST                       1: release
                116     LOAD_FAST                       2: version
                118     BUILD_TUPLE                     3
                120     RETURN_VALUE                    
                122     LOAD_FAST                       6: info
                124     LOAD_METHOD                     7: strip
                126     CALL_METHOD                     0
                128     STORE_FAST                      6: info
                130     LOAD_GLOBAL                     8: _ver_output
                132     LOAD_METHOD                     9: match
                134     LOAD_FAST                       6: info
                136     CALL_METHOD                     1
                138     STORE_FAST                      8: m
                140     LOAD_FAST                       8: m
                142     LOAD_CONST                      2: None
                144     IS_OP                           1 (is not)
                146     POP_JUMP_IF_FALSE               109 (to 218)
                148     LOAD_FAST                       8: m
                150     LOAD_METHOD                     10: groups
                152     CALL_METHOD                     0
                154     UNPACK_SEQUENCE                 3
                156     STORE_FAST                      0: system
                158     STORE_FAST                      1: release
                160     STORE_FAST                      2: version
                162     LOAD_FAST                       1: release
                164     LOAD_CONST                      6: -1
                166     BINARY_SUBSCR                   
                168     LOAD_CONST                      7: '.'
                170     COMPARE_OP                      2 (==)
                172     POP_JUMP_IF_FALSE               93 (to 186)
                174     LOAD_FAST                       1: release
                176     LOAD_CONST                      2: None
                178     LOAD_CONST                      6: -1
                180     BUILD_SLICE                     2
                182     BINARY_SUBSCR                   
                184     STORE_FAST                      1: release
                186     LOAD_FAST                       2: version
                188     LOAD_CONST                      6: -1
                190     BINARY_SUBSCR                   
                192     LOAD_CONST                      7: '.'
                194     COMPARE_OP                      2 (==)
                196     POP_JUMP_IF_FALSE               105 (to 210)
                198     LOAD_FAST                       2: version
                200     LOAD_CONST                      2: None
                202     LOAD_CONST                      6: -1
                204     BUILD_SLICE                     2
                206     BINARY_SUBSCR                   
                208     STORE_FAST                      2: version
                210     LOAD_GLOBAL                     11: _norm_version
                212     LOAD_FAST                       2: version
                214     CALL_FUNCTION                   1
                216     STORE_FAST                      2: version
                218     LOAD_FAST                       0: system
                220     LOAD_FAST                       1: release
                222     LOAD_FAST                       2: version
                224     BUILD_TUPLE                     3
                226     RETURN_VALUE                    
        '_syscmd_ver'
        '2000'
        'XP'
        '2003Server'
        'post2003'
        'Vista'
        '7'
        '8'
        '8.1'
        'post8.1'
        '10'
        'post10'
        (
            (
                5
                0
            )
            (
                5
                1
            )
            (
                5
                2
            )
            (
                5
                None
            )
            (
                6
                0
            )
            (
                6
                1
            )
            (
                6
                2
            )
            (
                6
                3
            )
            (
                6
                None
            )
            (
                10
                0
            )
            (
                10
                None
            )
        )
        '2008Server'
        '2008ServerR2'
        '2012Server'
        '2012ServerR2'
        'post2012ServerR2'
        (
            (
                5
                2
            )
            (
                6
                0
            )
            (
                6
                1
            )
            (
                6
                2
            )
            (
                6
                3
            )
            (
                6
                None
            )
        )
        [Code]
            File Name: platform.py
            Object Name: win32_is_iot
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'win32_edition'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                (
                    'IoTUAP'
                    'NanoServer'
                    'WindowsCoreHeadless'
                    'IoTEdgeOS'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: win32_edition
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: ('IoTUAP', 'NanoServer', 'WindowsCoreHeadless', 'IoTEdgeOS')
                6       CONTAINS_OP                     0 (in)
                8       RETURN_VALUE                    
        'win32_is_iot'
        [Code]
            File Name: platform.py
            Object Name: win32_edition
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'winreg'
                'ImportError'
                '_winreg'
                'OpenKeyEx'
                'HKEY_LOCAL_MACHINE'
                'QueryValueEx'
                'OSError'
            [Var Names]
                'winreg'
                'cvkey'
                'key'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'
                'EditionId'
            [Disassembly]
                0       SETUP_FINALLY                   22 (to 46)
                2       SETUP_FINALLY                   6 (to 16)
                4       LOAD_CONST                      1: 0
                6       LOAD_CONST                      0: None
                8       IMPORT_NAME                     0: winreg
                10      STORE_FAST                      0: winreg
                12      POP_BLOCK                       
                14      JUMP_FORWARD                    13 (to 42)
                16      DUP_TOP                         
                18      LOAD_GLOBAL                     1: ImportError
                20      JUMP_IF_NOT_EXC_MATCH           20 (to 40)
                22      POP_TOP                         
                24      POP_TOP                         
                26      POP_TOP                         
                28      LOAD_CONST                      1: 0
                30      LOAD_CONST                      0: None
                32      IMPORT_NAME                     2: _winreg
                34      STORE_FAST                      0: winreg
                36      POP_EXCEPT                      
                38      JUMP_FORWARD                    1 (to 42)
                40      RERAISE                         0
                42      POP_BLOCK                       
                44      JUMP_FORWARD                    10 (to 66)
                46      DUP_TOP                         
                48      LOAD_GLOBAL                     1: ImportError
                50      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                52      POP_TOP                         
                54      POP_TOP                         
                56      POP_TOP                         
                58      POP_EXCEPT                      
                60      LOAD_CONST                      0: None
                62      RETURN_VALUE                    
                64      RERAISE                         0
                66      SETUP_FINALLY                   37 (to 142)
                68      LOAD_CONST                      2: 'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'
                70      STORE_FAST                      1: cvkey
                72      LOAD_FAST                       0: winreg
                74      LOAD_METHOD                     3: OpenKeyEx
                76      LOAD_FAST                       0: winreg
                78      LOAD_ATTR                       4: HKEY_LOCAL_MACHINE
                80      LOAD_FAST                       1: cvkey
                82      CALL_METHOD                     2
                84      SETUP_WITH                      17 (to 120)
                86      STORE_FAST                      2: key
                88      LOAD_FAST                       0: winreg
                90      LOAD_METHOD                     5: QueryValueEx
                92      LOAD_FAST                       2: key
                94      LOAD_CONST                      3: 'EditionId'
                96      CALL_METHOD                     2
                98      LOAD_CONST                      1: 0
                100     BINARY_SUBSCR                   
                102     POP_BLOCK                       
                104     ROT_TWO                         
                106     LOAD_CONST                      0: None
                108     DUP_TOP                         
                110     DUP_TOP                         
                112     CALL_FUNCTION                   3
                114     POP_TOP                         
                116     POP_BLOCK                       
                118     RETURN_VALUE                    
                120     WITH_EXCEPT_START               
                122     POP_JUMP_IF_TRUE                63 (to 126)
                124     RERAISE                         1
                126     POP_TOP                         
                128     POP_TOP                         
                130     POP_TOP                         
                132     POP_EXCEPT                      
                134     POP_TOP                         
                136     POP_BLOCK                       
                138     LOAD_CONST                      0: None
                140     RETURN_VALUE                    
                142     DUP_TOP                         
                144     LOAD_GLOBAL                     6: OSError
                146     JUMP_IF_NOT_EXC_MATCH           80 (to 160)
                148     POP_TOP                         
                150     POP_TOP                         
                152     POP_TOP                         
                154     POP_EXCEPT                      
                156     LOAD_CONST                      0: None
                158     RETURN_VALUE                    
                160     RERAISE                         0
        'win32_edition'
        [Code]
            File Name: platform.py
            Object Name: win32_ver
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 12
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'getwindowsversion'
                'ImportError'
                'map'
                'int'
                '_syscmd_ver'
                'split'
                'ValueError'
                'platform_version'
                'format'
                '_WIN32_CLIENT_RELEASES'
                'get'
                'service_pack_major'
                'AttributeError'
                'getattr'
                '_WIN32_SERVER_RELEASES'
                'winreg'
                '_winreg'
                'OpenKeyEx'
                'HKEY_LOCAL_MACHINE'
                'QueryValueEx'
                'OSError'
            [Var Names]
                'release'
                'version'
                'csd'
                'ptype'
                'getwindowsversion'
                'winver'
                'major'
                'minor'
                'build'
                'winreg'
                'cvkey'
                'key'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                (
                    'getwindowsversion'
                )
                2
                '.'
                3
                '{0}.{1}.{2}'
                'SP{}'
                13
                'Service Pack '
                'SP'
                'product_type'
                'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'
                'CurrentType'
            [Disassembly]
                0       SETUP_FINALLY                   8 (to 18)
                2       LOAD_CONST                      1: 0
                4       LOAD_CONST                      2: ('getwindowsversion',)
                6       IMPORT_NAME                     0: sys
                8       IMPORT_FROM                     1: getwindowsversion
                10      STORE_FAST                      4: getwindowsversion
                12      POP_TOP                         
                14      POP_BLOCK                       
                16      JUMP_FORWARD                    15 (to 48)
                18      DUP_TOP                         
                20      LOAD_GLOBAL                     2: ImportError
                22      JUMP_IF_NOT_EXC_MATCH           23 (to 46)
                24      POP_TOP                         
                26      POP_TOP                         
                28      POP_TOP                         
                30      LOAD_FAST                       0: release
                32      LOAD_FAST                       1: version
                34      LOAD_FAST                       2: csd
                36      LOAD_FAST                       3: ptype
                38      BUILD_TUPLE                     4
                40      ROT_FOUR                        
                42      POP_EXCEPT                      
                44      RETURN_VALUE                    
                46      RERAISE                         0
                48      LOAD_FAST                       4: getwindowsversion
                50      CALL_FUNCTION                   0
                52      STORE_FAST                      5: winver
                54      SETUP_FINALLY                   16 (to 88)
                56      LOAD_GLOBAL                     3: map
                58      LOAD_GLOBAL                     4: int
                60      LOAD_GLOBAL                     5: _syscmd_ver
                62      CALL_FUNCTION                   0
                64      LOAD_CONST                      3: 2
                66      BINARY_SUBSCR                   
                68      LOAD_METHOD                     6: split
                70      LOAD_CONST                      4: '.'
                72      CALL_METHOD                     1
                74      CALL_FUNCTION                   2
                76      UNPACK_SEQUENCE                 3
                78      STORE_FAST                      6: major
                80      STORE_FAST                      7: minor
                82      STORE_FAST                      8: build
                84      POP_BLOCK                       
                86      JUMP_FORWARD                    21 (to 130)
                88      DUP_TOP                         
                90      LOAD_GLOBAL                     7: ValueError
                92      JUMP_IF_NOT_EXC_MATCH           64 (to 128)
                94      POP_TOP                         
                96      POP_TOP                         
                98      POP_TOP                         
                100     LOAD_FAST                       5: winver
                102     LOAD_ATTR                       8: platform_version
                104     JUMP_IF_TRUE_OR_POP             58 (to 116)
                106     LOAD_FAST                       5: winver
                108     LOAD_CONST                      0: None
                110     LOAD_CONST                      5: 3
                112     BUILD_SLICE                     2
                114     BINARY_SUBSCR                   
                116     UNPACK_SEQUENCE                 3
                118     STORE_FAST                      6: major
                120     STORE_FAST                      7: minor
                122     STORE_FAST                      8: build
                124     POP_EXCEPT                      
                126     JUMP_FORWARD                    1 (to 130)
                128     RERAISE                         0
                130     LOAD_CONST                      6: '{0}.{1}.{2}'
                132     LOAD_METHOD                     9: format
                134     LOAD_FAST                       6: major
                136     LOAD_FAST                       7: minor
                138     LOAD_FAST                       8: build
                140     CALL_METHOD                     3
                142     STORE_FAST                      1: version
                144     LOAD_GLOBAL                     10: _WIN32_CLIENT_RELEASES
                146     LOAD_METHOD                     11: get
                148     LOAD_FAST                       6: major
                150     LOAD_FAST                       7: minor
                152     BUILD_TUPLE                     2
                154     CALL_METHOD                     1
                156     JUMP_IF_TRUE_OR_POP             87 (to 174)
                158     LOAD_GLOBAL                     10: _WIN32_CLIENT_RELEASES
                160     LOAD_METHOD                     11: get
                162     LOAD_FAST                       6: major
                164     LOAD_CONST                      0: None
                166     BUILD_TUPLE                     2
                168     CALL_METHOD                     1
                170     JUMP_IF_TRUE_OR_POP             87 (to 174)
                172     LOAD_FAST                       0: release
                174     STORE_FAST                      0: release
                176     LOAD_FAST                       5: winver
                178     LOAD_CONST                      0: None
                180     LOAD_CONST                      3: 2
                182     BUILD_SLICE                     2
                184     BINARY_SUBSCR                   
                186     LOAD_FAST                       6: major
                188     LOAD_FAST                       7: minor
                190     BUILD_TUPLE                     2
                192     COMPARE_OP                      2 (==)
                194     POP_JUMP_IF_FALSE               132 (to 264)
                196     SETUP_FINALLY                   8 (to 214)
                198     LOAD_CONST                      7: 'SP{}'
                200     LOAD_METHOD                     9: format
                202     LOAD_FAST                       5: winver
                204     LOAD_ATTR                       12: service_pack_major
                206     CALL_METHOD                     1
                208     STORE_FAST                      2: csd
                210     POP_BLOCK                       
                212     JUMP_FORWARD                    25 (to 264)
                214     DUP_TOP                         
                216     LOAD_GLOBAL                     13: AttributeError
                218     JUMP_IF_NOT_EXC_MATCH           131 (to 262)
                220     POP_TOP                         
                222     POP_TOP                         
                224     POP_TOP                         
                226     LOAD_FAST                       2: csd
                228     LOAD_CONST                      0: None
                230     LOAD_CONST                      8: 13
                232     BUILD_SLICE                     2
                234     BINARY_SUBSCR                   
                236     LOAD_CONST                      9: 'Service Pack '
                238     COMPARE_OP                      2 (==)
                240     POP_JUMP_IF_FALSE               129 (to 258)
                242     LOAD_CONST                      10: 'SP'
                244     LOAD_FAST                       2: csd
                246     LOAD_CONST                      8: 13
                248     LOAD_CONST                      0: None
                250     BUILD_SLICE                     2
                252     BINARY_SUBSCR                   
                254     BINARY_ADD                      
                256     STORE_FAST                      2: csd
                258     POP_EXCEPT                      
                260     JUMP_FORWARD                    1 (to 264)
                262     RERAISE                         0
                264     LOAD_GLOBAL                     14: getattr
                266     LOAD_FAST                       5: winver
                268     LOAD_CONST                      11: 'product_type'
                270     LOAD_CONST                      0: None
                272     CALL_FUNCTION                   3
                274     LOAD_CONST                      5: 3
                276     COMPARE_OP                      2 (==)
                278     POP_JUMP_IF_FALSE               156 (to 312)
                280     LOAD_GLOBAL                     15: _WIN32_SERVER_RELEASES
                282     LOAD_METHOD                     11: get
                284     LOAD_FAST                       6: major
                286     LOAD_FAST                       7: minor
                288     BUILD_TUPLE                     2
                290     CALL_METHOD                     1
                292     JUMP_IF_TRUE_OR_POP             155 (to 310)
                294     LOAD_GLOBAL                     15: _WIN32_SERVER_RELEASES
                296     LOAD_METHOD                     11: get
                298     LOAD_FAST                       6: major
                300     LOAD_CONST                      0: None
                302     BUILD_TUPLE                     2
                304     CALL_METHOD                     1
                306     JUMP_IF_TRUE_OR_POP             155 (to 310)
                308     LOAD_FAST                       0: release
                310     STORE_FAST                      0: release
                312     SETUP_FINALLY                   22 (to 358)
                314     SETUP_FINALLY                   6 (to 328)
                316     LOAD_CONST                      1: 0
                318     LOAD_CONST                      0: None
                320     IMPORT_NAME                     16: winreg
                322     STORE_FAST                      9: winreg
                324     POP_BLOCK                       
                326     JUMP_FORWARD                    13 (to 354)
                328     DUP_TOP                         
                330     LOAD_GLOBAL                     2: ImportError
                332     JUMP_IF_NOT_EXC_MATCH           176 (to 352)
                334     POP_TOP                         
                336     POP_TOP                         
                338     POP_TOP                         
                340     LOAD_CONST                      1: 0
                342     LOAD_CONST                      0: None
                344     IMPORT_NAME                     17: _winreg
                346     STORE_FAST                      9: winreg
                348     POP_EXCEPT                      
                350     JUMP_FORWARD                    1 (to 354)
                352     RERAISE                         0
                354     POP_BLOCK                       
                356     JUMP_FORWARD                    9 (to 376)
                358     DUP_TOP                         
                360     LOAD_GLOBAL                     2: ImportError
                362     JUMP_IF_NOT_EXC_MATCH           187 (to 374)
                364     POP_TOP                         
                366     POP_TOP                         
                368     POP_TOP                         
                370     POP_EXCEPT                      
                372     JUMP_FORWARD                    46 (to 466)
                374     RERAISE                         0
                376     SETUP_FINALLY                   35 (to 448)
                378     LOAD_CONST                      12: 'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'
                380     STORE_FAST                      10: cvkey
                382     LOAD_FAST                       9: winreg
                384     LOAD_METHOD                     18: OpenKeyEx
                386     LOAD_FAST                       9: winreg
                388     LOAD_ATTR                       19: HKEY_LOCAL_MACHINE
                390     LOAD_FAST                       10: cvkey
                392     CALL_METHOD                     2
                394     SETUP_WITH                      16 (to 428)
                396     STORE_FAST                      11: key
                398     LOAD_FAST                       9: winreg
                400     LOAD_METHOD                     20: QueryValueEx
                402     LOAD_FAST                       11: key
                404     LOAD_CONST                      13: 'CurrentType'
                406     CALL_METHOD                     2
                408     LOAD_CONST                      1: 0
                410     BINARY_SUBSCR                   
                412     STORE_FAST                      3: ptype
                414     POP_BLOCK                       
                416     LOAD_CONST                      0: None
                418     DUP_TOP                         
                420     DUP_TOP                         
                422     CALL_FUNCTION                   3
                424     POP_TOP                         
                426     JUMP_FORWARD                    8 (to 444)
                428     WITH_EXCEPT_START               
                430     POP_JUMP_IF_TRUE                217 (to 434)
                432     RERAISE                         1
                434     POP_TOP                         
                436     POP_TOP                         
                438     POP_TOP                         
                440     POP_EXCEPT                      
                442     POP_TOP                         
                444     POP_BLOCK                       
                446     JUMP_FORWARD                    9 (to 466)
                448     DUP_TOP                         
                450     LOAD_GLOBAL                     21: OSError
                452     JUMP_IF_NOT_EXC_MATCH           232 (to 464)
                454     POP_TOP                         
                456     POP_TOP                         
                458     POP_TOP                         
                460     POP_EXCEPT                      
                462     JUMP_FORWARD                    1 (to 466)
                464     RERAISE                         0
                466     LOAD_FAST                       0: release
                468     LOAD_FAST                       1: version
                470     LOAD_FAST                       2: csd
                472     LOAD_FAST                       3: ptype
                474     BUILD_TUPLE                     4
                476     RETURN_VALUE                    
        'win32_ver'
        [Code]
            File Name: platform.py
            Object Name: _mac_ver_xml
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'exists'
                'plistlib'
                'ImportError'
                'open'
                'load'
                'uname'
                'machine'
            [Var Names]
                'fn'
                'plistlib'
                'f'
                'pl'
                'release'
                'versioninfo'
                'machine'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '/System/Library/CoreServices/SystemVersion.plist'
                0
                'rb'
                'ProductVersion'
                (
                    ''
                    ''
                    ''
                )
                (
                    'ppc'
                    'Power Macintosh'
                )
                'PowerPC'
            [Disassembly]
                0       LOAD_CONST                      1: '/System/Library/CoreServices/SystemVersion.plist'
                2       STORE_FAST                      0: fn
                4       LOAD_GLOBAL                     0: os
                6       LOAD_ATTR                       1: path
                8       LOAD_METHOD                     2: exists
                10      LOAD_FAST                       0: fn
                12      CALL_METHOD                     1
                14      POP_JUMP_IF_TRUE                10 (to 20)
                16      LOAD_CONST                      0: None
                18      RETURN_VALUE                    
                20      SETUP_FINALLY                   6 (to 34)
                22      LOAD_CONST                      2: 0
                24      LOAD_CONST                      0: None
                26      IMPORT_NAME                     3: plistlib
                28      STORE_FAST                      1: plistlib
                30      POP_BLOCK                       
                32      JUMP_FORWARD                    10 (to 54)
                34      DUP_TOP                         
                36      LOAD_GLOBAL                     4: ImportError
                38      JUMP_IF_NOT_EXC_MATCH           26 (to 52)
                40      POP_TOP                         
                42      POP_TOP                         
                44      POP_TOP                         
                46      POP_EXCEPT                      
                48      LOAD_CONST                      0: None
                50      RETURN_VALUE                    
                52      RERAISE                         0
                54      LOAD_GLOBAL                     5: open
                56      LOAD_FAST                       0: fn
                58      LOAD_CONST                      3: 'rb'
                60      CALL_FUNCTION                   2
                62      SETUP_WITH                      13 (to 90)
                64      STORE_FAST                      2: f
                66      LOAD_FAST                       1: plistlib
                68      LOAD_METHOD                     6: load
                70      LOAD_FAST                       2: f
                72      CALL_METHOD                     1
                74      STORE_FAST                      3: pl
                76      POP_BLOCK                       
                78      LOAD_CONST                      0: None
                80      DUP_TOP                         
                82      DUP_TOP                         
                84      CALL_FUNCTION                   3
                86      POP_TOP                         
                88      JUMP_FORWARD                    8 (to 106)
                90      WITH_EXCEPT_START               
                92      POP_JUMP_IF_TRUE                48 (to 96)
                94      RERAISE                         1
                96      POP_TOP                         
                98      POP_TOP                         
                100     POP_TOP                         
                102     POP_EXCEPT                      
                104     POP_TOP                         
                106     LOAD_FAST                       3: pl
                108     LOAD_CONST                      4: 'ProductVersion'
                110     BINARY_SUBSCR                   
                112     STORE_FAST                      4: release
                114     LOAD_CONST                      5: ('', '', '')
                116     STORE_FAST                      5: versioninfo
                118     LOAD_GLOBAL                     0: os
                120     LOAD_METHOD                     7: uname
                122     CALL_METHOD                     0
                124     LOAD_ATTR                       8: machine
                126     STORE_FAST                      6: machine
                128     LOAD_FAST                       6: machine
                130     LOAD_CONST                      6: ('ppc', 'Power Macintosh')
                132     CONTAINS_OP                     0 (in)
                134     POP_JUMP_IF_FALSE               70 (to 140)
                136     LOAD_CONST                      7: 'PowerPC'
                138     STORE_FAST                      6: machine
                140     LOAD_FAST                       4: release
                142     LOAD_FAST                       5: versioninfo
                144     LOAD_FAST                       6: machine
                146     BUILD_TUPLE                     3
                148     RETURN_VALUE                    
        '_mac_ver_xml'
        (
            ''
            ''
            ''
        )
        [Code]
            File Name: platform.py
            Object Name: mac_ver
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_mac_ver_xml'
            [Var Names]
                'release'
                'versioninfo'
                'machine'
                'info'
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Get macOS version information and return it as tuple (release,\n        versioninfo, machine) with versioninfo being a tuple (version,\n        dev_stage, non_release_version).\n\n        Entries which cannot be determined are set to the parameter values\n        which default to ''. All tuple entries are strings.\n    "
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _mac_ver_xml
                2       CALL_FUNCTION                   0
                4       STORE_FAST                      3: info
                6       LOAD_FAST                       3: info
                8       LOAD_CONST                      1: None
                10      IS_OP                           1 (is not)
                12      POP_JUMP_IF_FALSE               9 (to 18)
                14      LOAD_FAST                       3: info
                16      RETURN_VALUE                    
                18      LOAD_FAST                       0: release
                20      LOAD_FAST                       1: versioninfo
                22      LOAD_FAST                       2: machine
                24      BUILD_TUPLE                     3
                26      RETURN_VALUE                    
        'mac_ver'
        [Code]
            File Name: platform.py
            Object Name: _java_getprop
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'java.lang'
                'System'
                'getProperty'
                'AttributeError'
            [Var Names]
                'name'
                'default'
                'System'
                'value'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                (
                    'System'
                )
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      2: ('System',)
                4       IMPORT_NAME                     0: java.lang
                6       IMPORT_FROM                     1: System
                8       STORE_FAST                      2: System
                10      POP_TOP                         
                12      SETUP_FINALLY                   15 (to 44)
                14      LOAD_FAST                       2: System
                16      LOAD_METHOD                     2: getProperty
                18      LOAD_FAST                       0: name
                20      CALL_METHOD                     1
                22      STORE_FAST                      3: value
                24      LOAD_FAST                       3: value
                26      LOAD_CONST                      0: None
                28      IS_OP                           0 (is)
                30      POP_JUMP_IF_FALSE               19 (to 38)
                32      LOAD_FAST                       1: default
                34      POP_BLOCK                       
                36      RETURN_VALUE                    
                38      LOAD_FAST                       3: value
                40      POP_BLOCK                       
                42      RETURN_VALUE                    
                44      DUP_TOP                         
                46      LOAD_GLOBAL                     3: AttributeError
                48      JUMP_IF_NOT_EXC_MATCH           32 (to 64)
                50      POP_TOP                         
                52      POP_TOP                         
                54      POP_TOP                         
                56      LOAD_FAST                       1: default
                58      ROT_FOUR                        
                60      POP_EXCEPT                      
                62      RETURN_VALUE                    
                64      RERAISE                         0
        '_java_getprop'
        [Code]
            File Name: platform.py
            Object Name: java_ver
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 11
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'java.lang'
                'ImportError'
                '_java_getprop'
            [Var Names]
                'release'
                'vendor'
                'vminfo'
                'osinfo'
                'java'
                'vm_name'
                'vm_release'
                'vm_vendor'
                'os_name'
                'os_version'
                'os_arch'
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Version interface for Jython.\n\n        Returns a tuple (release, vendor, vminfo, osinfo) with vminfo being\n        a tuple (vm_name, vm_release, vm_vendor) and osinfo being a\n        tuple (os_name, os_version, os_arch).\n\n        Values which cannot be determined are set to the defaults\n        given as parameters (which all default to '').\n\n    "
                0
                None
                'java.vendor'
                'java.version'
                'java.vm.name'
                'java.vm.vendor'
                'java.vm.version'
                'java.os.arch'
                'java.os.name'
                'java.os.version'
            [Disassembly]
                0       SETUP_FINALLY                   6 (to 14)
                2       LOAD_CONST                      1: 0
                4       LOAD_CONST                      2: None
                6       IMPORT_NAME                     0: java.lang
                8       STORE_FAST                      4: java
                10      POP_BLOCK                       
                12      JUMP_FORWARD                    15 (to 44)
                14      DUP_TOP                         
                16      LOAD_GLOBAL                     1: ImportError
                18      JUMP_IF_NOT_EXC_MATCH           21 (to 42)
                20      POP_TOP                         
                22      POP_TOP                         
                24      POP_TOP                         
                26      LOAD_FAST                       0: release
                28      LOAD_FAST                       1: vendor
                30      LOAD_FAST                       2: vminfo
                32      LOAD_FAST                       3: osinfo
                34      BUILD_TUPLE                     4
                36      ROT_FOUR                        
                38      POP_EXCEPT                      
                40      RETURN_VALUE                    
                42      RERAISE                         0
                44      LOAD_GLOBAL                     2: _java_getprop
                46      LOAD_CONST                      3: 'java.vendor'
                48      LOAD_FAST                       1: vendor
                50      CALL_FUNCTION                   2
                52      STORE_FAST                      1: vendor
                54      LOAD_GLOBAL                     2: _java_getprop
                56      LOAD_CONST                      4: 'java.version'
                58      LOAD_FAST                       0: release
                60      CALL_FUNCTION                   2
                62      STORE_FAST                      0: release
                64      LOAD_FAST                       2: vminfo
                66      UNPACK_SEQUENCE                 3
                68      STORE_FAST                      5: vm_name
                70      STORE_FAST                      6: vm_release
                72      STORE_FAST                      7: vm_vendor
                74      LOAD_GLOBAL                     2: _java_getprop
                76      LOAD_CONST                      5: 'java.vm.name'
                78      LOAD_FAST                       5: vm_name
                80      CALL_FUNCTION                   2
                82      STORE_FAST                      5: vm_name
                84      LOAD_GLOBAL                     2: _java_getprop
                86      LOAD_CONST                      6: 'java.vm.vendor'
                88      LOAD_FAST                       7: vm_vendor
                90      CALL_FUNCTION                   2
                92      STORE_FAST                      7: vm_vendor
                94      LOAD_GLOBAL                     2: _java_getprop
                96      LOAD_CONST                      7: 'java.vm.version'
                98      LOAD_FAST                       6: vm_release
                100     CALL_FUNCTION                   2
                102     STORE_FAST                      6: vm_release
                104     LOAD_FAST                       5: vm_name
                106     LOAD_FAST                       6: vm_release
                108     LOAD_FAST                       7: vm_vendor
                110     BUILD_TUPLE                     3
                112     STORE_FAST                      2: vminfo
                114     LOAD_FAST                       3: osinfo
                116     UNPACK_SEQUENCE                 3
                118     STORE_FAST                      8: os_name
                120     STORE_FAST                      9: os_version
                122     STORE_FAST                      10: os_arch
                124     LOAD_GLOBAL                     2: _java_getprop
                126     LOAD_CONST                      8: 'java.os.arch'
                128     LOAD_FAST                       10: os_arch
                130     CALL_FUNCTION                   2
                132     STORE_FAST                      10: os_arch
                134     LOAD_GLOBAL                     2: _java_getprop
                136     LOAD_CONST                      9: 'java.os.name'
                138     LOAD_FAST                       8: os_name
                140     CALL_FUNCTION                   2
                142     STORE_FAST                      8: os_name
                144     LOAD_GLOBAL                     2: _java_getprop
                146     LOAD_CONST                      10: 'java.os.version'
                148     LOAD_FAST                       9: os_version
                150     CALL_FUNCTION                   2
                152     STORE_FAST                      9: os_version
                154     LOAD_FAST                       8: os_name
                156     LOAD_FAST                       9: os_version
                158     LOAD_FAST                       10: os_arch
                160     BUILD_TUPLE                     3
                162     STORE_FAST                      3: osinfo
                164     LOAD_FAST                       0: release
                166     LOAD_FAST                       1: vendor
                168     LOAD_FAST                       2: vminfo
                170     LOAD_FAST                       3: osinfo
                172     BUILD_TUPLE                     4
                174     RETURN_VALUE                    
        'java_ver'
        [Code]
            File Name: platform.py
            Object Name: system_alias
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'split'
                'int'
                'ValueError'
                'str'
                'join'
            [Var Names]
                'system'
                'release'
                'version'
                'l'
                'major'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns (system, release, version) aliased to common\n        marketing names used for some systems.\n\n        It also does some reordering of the information in some cases\n        where it would otherwise cause confusion.\n\n    '
                'SunOS'
                '5'
                '.'
                0
                3
                '6'
                'Solaris'
                (
                    'win32'
                    'win16'
                )
                'Windows'
            [Disassembly]
                0       LOAD_FAST                       0: system
                2       LOAD_CONST                      1: 'SunOS'
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               63 (to 126)
                8       LOAD_FAST                       1: release
                10      LOAD_CONST                      2: '5'
                12      COMPARE_OP                      0 (<)
                14      POP_JUMP_IF_FALSE               13 (to 26)
                16      LOAD_FAST                       0: system
                18      LOAD_FAST                       1: release
                20      LOAD_FAST                       2: version
                22      BUILD_TUPLE                     3
                24      RETURN_VALUE                    
                26      LOAD_FAST                       1: release
                28      LOAD_METHOD                     0: split
                30      LOAD_CONST                      3: '.'
                32      CALL_METHOD                     1
                34      STORE_FAST                      3: l
                36      LOAD_FAST                       3: l
                38      POP_JUMP_IF_FALSE               53 (to 106)
                40      SETUP_FINALLY                   8 (to 58)
                42      LOAD_GLOBAL                     1: int
                44      LOAD_FAST                       3: l
                46      LOAD_CONST                      4: 0
                48      BINARY_SUBSCR                   
                50      CALL_FUNCTION                   1
                52      STORE_FAST                      4: major
                54      POP_BLOCK                       
                56      JUMP_FORWARD                    9 (to 76)
                58      DUP_TOP                         
                60      LOAD_GLOBAL                     2: ValueError
                62      JUMP_IF_NOT_EXC_MATCH           37 (to 74)
                64      POP_TOP                         
                66      POP_TOP                         
                68      POP_TOP                         
                70      POP_EXCEPT                      
                72      JUMP_FORWARD                    16 (to 106)
                74      RERAISE                         0
                76      LOAD_FAST                       4: major
                78      LOAD_CONST                      5: 3
                80      BINARY_SUBTRACT                 
                82      STORE_FAST                      4: major
                84      LOAD_GLOBAL                     3: str
                86      LOAD_FAST                       4: major
                88      CALL_FUNCTION                   1
                90      LOAD_FAST                       3: l
                92      LOAD_CONST                      4: 0
                94      STORE_SUBSCR                    
                96      LOAD_CONST                      3: '.'
                98      LOAD_METHOD                     4: join
                100     LOAD_FAST                       3: l
                102     CALL_METHOD                     1
                104     STORE_FAST                      1: release
                106     LOAD_FAST                       1: release
                108     LOAD_CONST                      6: '6'
                110     COMPARE_OP                      0 (<)
                112     POP_JUMP_IF_FALSE               60 (to 120)
                114     LOAD_CONST                      7: 'Solaris'
                116     STORE_FAST                      0: system
                118     JUMP_FORWARD                    9 (to 138)
                120     LOAD_CONST                      7: 'Solaris'
                122     STORE_FAST                      0: system
                124     JUMP_FORWARD                    6 (to 138)
                126     LOAD_FAST                       0: system
                128     LOAD_CONST                      8: ('win32', 'win16')
                130     CONTAINS_OP                     0 (in)
                132     POP_JUMP_IF_FALSE               69 (to 138)
                134     LOAD_CONST                      9: 'Windows'
                136     STORE_FAST                      0: system
                138     LOAD_FAST                       0: system
                140     LOAD_FAST                       1: release
                142     LOAD_FAST                       2: version
                144     BUILD_TUPLE                     3
                146     RETURN_VALUE                    
        'system_alias'
        [Code]
            File Name: platform.py
            Object Name: _platform
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 6
            Flags: 0x00000047 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE)
            [Names]
                'join'
                'filter'
                'len'
                'replace'
            [Var Names]
                'args'
                'platform'
                'cleaned'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Helper to format the platform string in a filename\n        compatible format e.g. "system-version-machine".\n    '
                '-'
                [Code]
                    File Name: platform.py
                    Object Name: <genexpr>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                    [Names]
                        'strip'
                    [Var Names]
                        '.0'
                        'x'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        7 (to 20)
                        6       STORE_FAST                      1: x
                        8       LOAD_FAST                       1: x
                        10      LOAD_METHOD                     0: strip
                        12      CALL_METHOD                     0
                        14      YIELD_VALUE                     
                        16      POP_TOP                         
                        18      JUMP_ABSOLUTE                   2 (to 4)
                        20      LOAD_CONST                      0: None
                        22      RETURN_VALUE                    
                '_platform.<locals>.<genexpr>'
                ' '
                '_'
                '/'
                '\\'
                ':'
                ';'
                '"'
                '('
                ')'
                'unknown'
                ''
                1
                '--'
                -1
                None
            [Disassembly]
                0       LOAD_CONST                      1: '-'
                2       LOAD_METHOD                     0: join
                4       LOAD_CONST                      2: <CODE> <genexpr>
                6       LOAD_CONST                      3: '_platform.<locals>.<genexpr>'
                8       MAKE_FUNCTION                   0
                10      LOAD_GLOBAL                     1: filter
                12      LOAD_GLOBAL                     2: len
                14      LOAD_FAST                       0: args
                16      CALL_FUNCTION                   2
                18      GET_ITER                        
                20      CALL_FUNCTION                   1
                22      CALL_METHOD                     1
                24      STORE_FAST                      1: platform
                26      LOAD_FAST                       1: platform
                28      LOAD_METHOD                     3: replace
                30      LOAD_CONST                      4: ' '
                32      LOAD_CONST                      5: '_'
                34      CALL_METHOD                     2
                36      STORE_FAST                      1: platform
                38      LOAD_FAST                       1: platform
                40      LOAD_METHOD                     3: replace
                42      LOAD_CONST                      6: '/'
                44      LOAD_CONST                      1: '-'
                46      CALL_METHOD                     2
                48      STORE_FAST                      1: platform
                50      LOAD_FAST                       1: platform
                52      LOAD_METHOD                     3: replace
                54      LOAD_CONST                      7: '\\'
                56      LOAD_CONST                      1: '-'
                58      CALL_METHOD                     2
                60      STORE_FAST                      1: platform
                62      LOAD_FAST                       1: platform
                64      LOAD_METHOD                     3: replace
                66      LOAD_CONST                      8: ':'
                68      LOAD_CONST                      1: '-'
                70      CALL_METHOD                     2
                72      STORE_FAST                      1: platform
                74      LOAD_FAST                       1: platform
                76      LOAD_METHOD                     3: replace
                78      LOAD_CONST                      9: ';'
                80      LOAD_CONST                      1: '-'
                82      CALL_METHOD                     2
                84      STORE_FAST                      1: platform
                86      LOAD_FAST                       1: platform
                88      LOAD_METHOD                     3: replace
                90      LOAD_CONST                      10: '"'
                92      LOAD_CONST                      1: '-'
                94      CALL_METHOD                     2
                96      STORE_FAST                      1: platform
                98      LOAD_FAST                       1: platform
                100     LOAD_METHOD                     3: replace
                102     LOAD_CONST                      11: '('
                104     LOAD_CONST                      1: '-'
                106     CALL_METHOD                     2
                108     STORE_FAST                      1: platform
                110     LOAD_FAST                       1: platform
                112     LOAD_METHOD                     3: replace
                114     LOAD_CONST                      12: ')'
                116     LOAD_CONST                      1: '-'
                118     CALL_METHOD                     2
                120     STORE_FAST                      1: platform
                122     LOAD_FAST                       1: platform
                124     LOAD_METHOD                     3: replace
                126     LOAD_CONST                      13: 'unknown'
                128     LOAD_CONST                      14: ''
                130     CALL_METHOD                     2
                132     STORE_FAST                      1: platform
                134     NOP                             
                136     LOAD_FAST                       1: platform
                138     LOAD_METHOD                     3: replace
                140     LOAD_CONST                      16: '--'
                142     LOAD_CONST                      1: '-'
                144     CALL_METHOD                     2
                146     STORE_FAST                      2: cleaned
                148     LOAD_FAST                       2: cleaned
                150     LOAD_FAST                       1: platform
                152     COMPARE_OP                      2 (==)
                154     POP_JUMP_IF_FALSE               79 (to 158)
                156     JUMP_FORWARD                    3 (to 164)
                158     LOAD_FAST                       2: cleaned
                160     STORE_FAST                      1: platform
                162     JUMP_ABSOLUTE                   68 (to 136)
                164     LOAD_FAST                       1: platform
                166     LOAD_CONST                      17: -1
                168     BINARY_SUBSCR                   
                170     LOAD_CONST                      1: '-'
                172     COMPARE_OP                      2 (==)
                174     POP_JUMP_IF_FALSE               100 (to 200)
                176     LOAD_FAST                       1: platform
                178     LOAD_CONST                      18: None
                180     LOAD_CONST                      17: -1
                182     BUILD_SLICE                     2
                184     BINARY_SUBSCR                   
                186     STORE_FAST                      1: platform
                188     LOAD_FAST                       1: platform
                190     LOAD_CONST                      17: -1
                192     BINARY_SUBSCR                   
                194     LOAD_CONST                      1: '-'
                196     COMPARE_OP                      2 (==)
                198     POP_JUMP_IF_TRUE                88 (to 176)
                200     LOAD_FAST                       1: platform
                202     RETURN_VALUE                    
        '_platform'
        [Code]
            File Name: platform.py
            Object Name: _node
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'socket'
                'ImportError'
                'gethostname'
                'OSError'
            [Var Names]
                'default'
                'socket'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Helper to determine the node name of this machine.\n    '
                0
                None
            [Disassembly]
                0       SETUP_FINALLY                   6 (to 14)
                2       LOAD_CONST                      1: 0
                4       LOAD_CONST                      2: None
                6       IMPORT_NAME                     0: socket
                8       STORE_FAST                      1: socket
                10      POP_BLOCK                       
                12      JUMP_FORWARD                    11 (to 36)
                14      DUP_TOP                         
                16      LOAD_GLOBAL                     1: ImportError
                18      JUMP_IF_NOT_EXC_MATCH           17 (to 34)
                20      POP_TOP                         
                22      POP_TOP                         
                24      POP_TOP                         
                26      LOAD_FAST                       0: default
                28      ROT_FOUR                        
                30      POP_EXCEPT                      
                32      RETURN_VALUE                    
                34      RERAISE                         0
                36      SETUP_FINALLY                   5 (to 48)
                38      LOAD_FAST                       1: socket
                40      LOAD_METHOD                     2: gethostname
                42      CALL_METHOD                     0
                44      POP_BLOCK                       
                46      RETURN_VALUE                    
                48      DUP_TOP                         
                50      LOAD_GLOBAL                     3: OSError
                52      JUMP_IF_NOT_EXC_MATCH           34 (to 68)
                54      POP_TOP                         
                56      POP_TOP                         
                58      POP_TOP                         
                60      LOAD_FAST                       0: default
                62      ROT_FOUR                        
                64      POP_EXCEPT                      
                66      RETURN_VALUE                    
                68      RERAISE                         0
        '_node'
        [Code]
            File Name: platform.py
            Object Name: _follow_symlinks
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'abspath'
                'islink'
                'normpath'
                'join'
                'dirname'
                'readlink'
            [Var Names]
                'filepath'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' In case filepath is a symlink, follow it until a\n        real file is reached.\n    '
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: abspath
                6       LOAD_FAST                       0: filepath
                8       CALL_METHOD                     1
                10      STORE_FAST                      0: filepath
                12      LOAD_GLOBAL                     0: os
                14      LOAD_ATTR                       1: path
                16      LOAD_METHOD                     3: islink
                18      LOAD_FAST                       0: filepath
                20      CALL_METHOD                     1
                22      POP_JUMP_IF_FALSE               36 (to 72)
                24      LOAD_GLOBAL                     0: os
                26      LOAD_ATTR                       1: path
                28      LOAD_METHOD                     4: normpath
                30      LOAD_GLOBAL                     0: os
                32      LOAD_ATTR                       1: path
                34      LOAD_METHOD                     5: join
                36      LOAD_GLOBAL                     0: os
                38      LOAD_ATTR                       1: path
                40      LOAD_METHOD                     6: dirname
                42      LOAD_FAST                       0: filepath
                44      CALL_METHOD                     1
                46      LOAD_GLOBAL                     0: os
                48      LOAD_METHOD                     7: readlink
                50      LOAD_FAST                       0: filepath
                52      CALL_METHOD                     1
                54      CALL_METHOD                     2
                56      CALL_METHOD                     1
                58      STORE_FAST                      0: filepath
                60      LOAD_GLOBAL                     0: os
                62      LOAD_ATTR                       1: path
                64      LOAD_METHOD                     3: islink
                66      LOAD_FAST                       0: filepath
                68      CALL_METHOD                     1
                70      POP_JUMP_IF_TRUE                12 (to 24)
                72      LOAD_FAST                       0: filepath
                74      RETURN_VALUE                    
        '_follow_symlinks'
        [Code]
            File Name: platform.py
            Object Name: _syscmd_file
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'platform'
                'subprocess'
                '_follow_symlinks'
                'dict'
                'os'
                'environ'
                'check_output'
                'DEVNULL'
                'OSError'
                'CalledProcessError'
                'decode'
            [Var Names]
                'target'
                'default'
                'subprocess'
                'env'
                'output'
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Interface to the system's file command.\n\n        The function uses the -b option of the file command to have it\n        omit the filename in its output. Follow the symlinks. It returns\n        default in case the command should fail.\n\n    "
                (
                    'dos'
                    'win32'
                    'win16'
                )
                0
                None
                'C'
                (
                    'LC_ALL'
                )
                'file'
                '-b'
                (
                    'stderr'
                    'env'
                )
                'latin-1'
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_ATTR                       1: platform
                4       LOAD_CONST                      1: ('dos', 'win32', 'win16')
                6       CONTAINS_OP                     0 (in)
                8       POP_JUMP_IF_FALSE               7 (to 14)
                10      LOAD_FAST                       1: default
                12      RETURN_VALUE                    
                14      LOAD_CONST                      2: 0
                16      LOAD_CONST                      3: None
                18      IMPORT_NAME                     2: subprocess
                20      STORE_FAST                      2: subprocess
                22      LOAD_GLOBAL                     3: _follow_symlinks
                24      LOAD_FAST                       0: target
                26      CALL_FUNCTION                   1
                28      STORE_FAST                      0: target
                30      LOAD_GLOBAL                     4: dict
                32      LOAD_GLOBAL                     5: os
                34      LOAD_ATTR                       6: environ
                36      LOAD_CONST                      4: 'C'
                38      LOAD_CONST                      5: ('LC_ALL',)
                40      CALL_FUNCTION_KW                2
                42      STORE_FAST                      3: env
                44      SETUP_FINALLY                   14 (to 74)
                46      LOAD_FAST                       2: subprocess
                48      LOAD_ATTR                       7: check_output
                50      LOAD_CONST                      6: 'file'
                52      LOAD_CONST                      7: '-b'
                54      LOAD_FAST                       0: target
                56      BUILD_LIST                      3
                58      LOAD_FAST                       2: subprocess
                60      LOAD_ATTR                       8: DEVNULL
                62      LOAD_FAST                       3: env
                64      LOAD_CONST                      8: ('stderr', 'env')
                66      CALL_FUNCTION_KW                3
                68      STORE_FAST                      4: output
                70      POP_BLOCK                       
                72      JUMP_FORWARD                    14 (to 102)
                74      DUP_TOP                         
                76      LOAD_GLOBAL                     9: OSError
                78      LOAD_FAST                       2: subprocess
                80      LOAD_ATTR                       10: CalledProcessError
                82      BUILD_TUPLE                     2
                84      JUMP_IF_NOT_EXC_MATCH           50 (to 100)
                86      POP_TOP                         
                88      POP_TOP                         
                90      POP_TOP                         
                92      LOAD_FAST                       1: default
                94      ROT_FOUR                        
                96      POP_EXCEPT                      
                98      RETURN_VALUE                    
                100     RERAISE                         0
                102     LOAD_FAST                       4: output
                104     POP_JUMP_IF_TRUE                55 (to 110)
                106     LOAD_FAST                       1: default
                108     RETURN_VALUE                    
                110     LOAD_FAST                       4: output
                112     LOAD_METHOD                     11: decode
                114     LOAD_CONST                      9: 'latin-1'
                116     CALL_METHOD                     1
                118     RETURN_VALUE                    
        '_syscmd_file'
        (
            ''
            'WindowsPE'
        )
        (
            ''
            'Windows'
        )
        (
            ''
            'MSDOS'
        )
        [Code]
            File Name: platform.py
            Object Name: architecture
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'struct'
                'calcsize'
                'str'
                '_syscmd_file'
                'sys'
                'executable'
                'platform'
                '_default_architecture'
            [Var Names]
                'executable'
                'bits'
                'linkage'
                'struct'
                'size'
                'fileout'
                'b'
                'l'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Queries the given executable (defaults to the Python interpreter\n        binary) for various architecture information.\n\n        Returns a tuple (bits, linkage) which contains information about\n        the bit architecture and the linkage format used for the\n        executable. Both values are returned as strings.\n\n        Values that cannot be determined are returned as given by the\n        parameter presets. If bits is given as \'\', the sizeof(pointer)\n        (or sizeof(long) on Python version < 1.5.2) is used as\n        indicator for the supported pointer size.\n\n        The function relies on the system\'s "file" command to do the\n        actual work. This is available on most if not all Unix\n        platforms. On some non-Unix platforms where the "file" command\n        does not exist and the executable is set to the Python interpreter\n        binary defaults from _default_architecture are used.\n\n    '
                0
                None
                'P'
                8
                'bit'
                ''
                'executable'
                'shared object'
                '32-bit'
                '32bit'
                '64-bit'
                '64bit'
                'ELF'
                'PE'
                'Windows'
                'WindowsPE'
                'COFF'
                'MS-DOS'
                'MSDOS'
            [Disassembly]
                0       LOAD_FAST                       1: bits
                2       POP_JUMP_IF_TRUE                19 (to 38)
                4       LOAD_CONST                      1: 0
                6       LOAD_CONST                      2: None
                8       IMPORT_NAME                     0: struct
                10      STORE_FAST                      3: struct
                12      LOAD_FAST                       3: struct
                14      LOAD_METHOD                     1: calcsize
                16      LOAD_CONST                      3: 'P'
                18      CALL_METHOD                     1
                20      STORE_FAST                      4: size
                22      LOAD_GLOBAL                     2: str
                24      LOAD_FAST                       4: size
                26      LOAD_CONST                      4: 8
                28      BINARY_MULTIPLY                 
                30      CALL_FUNCTION                   1
                32      LOAD_CONST                      5: 'bit'
                34      BINARY_ADD                      
                36      STORE_FAST                      1: bits
                38      LOAD_FAST                       0: executable
                40      POP_JUMP_IF_FALSE               27 (to 54)
                42      LOAD_GLOBAL                     3: _syscmd_file
                44      LOAD_FAST                       0: executable
                46      LOAD_CONST                      6: ''
                48      CALL_FUNCTION                   2
                50      STORE_FAST                      5: fileout
                52      JUMP_FORWARD                    2 (to 58)
                54      LOAD_CONST                      6: ''
                56      STORE_FAST                      5: fileout
                58      LOAD_FAST                       5: fileout
                60      POP_JUMP_IF_TRUE                60 (to 120)
                62      LOAD_FAST                       0: executable
                64      LOAD_GLOBAL                     4: sys
                66      LOAD_ATTR                       5: executable
                68      COMPARE_OP                      2 (==)
                70      POP_JUMP_IF_FALSE               60 (to 120)
                72      LOAD_GLOBAL                     4: sys
                74      LOAD_ATTR                       6: platform
                76      LOAD_GLOBAL                     7: _default_architecture
                78      CONTAINS_OP                     0 (in)
                80      POP_JUMP_IF_FALSE               56 (to 112)
                82      LOAD_GLOBAL                     7: _default_architecture
                84      LOAD_GLOBAL                     4: sys
                86      LOAD_ATTR                       6: platform
                88      BINARY_SUBSCR                   
                90      UNPACK_SEQUENCE                 2
                92      STORE_FAST                      6: b
                94      STORE_FAST                      7: l
                96      LOAD_FAST                       6: b
                98      POP_JUMP_IF_FALSE               52 (to 104)
                100     LOAD_FAST                       6: b
                102     STORE_FAST                      1: bits
                104     LOAD_FAST                       7: l
                106     POP_JUMP_IF_FALSE               56 (to 112)
                108     LOAD_FAST                       7: l
                110     STORE_FAST                      2: linkage
                112     LOAD_FAST                       1: bits
                114     LOAD_FAST                       2: linkage
                116     BUILD_TUPLE                     2
                118     RETURN_VALUE                    
                120     LOAD_CONST                      7: 'executable'
                122     LOAD_FAST                       5: fileout
                124     CONTAINS_OP                     1 (not in)
                126     POP_JUMP_IF_FALSE               72 (to 144)
                128     LOAD_CONST                      8: 'shared object'
                130     LOAD_FAST                       5: fileout
                132     CONTAINS_OP                     1 (not in)
                134     POP_JUMP_IF_FALSE               72 (to 144)
                136     LOAD_FAST                       1: bits
                138     LOAD_FAST                       2: linkage
                140     BUILD_TUPLE                     2
                142     RETURN_VALUE                    
                144     LOAD_CONST                      9: '32-bit'
                146     LOAD_FAST                       5: fileout
                148     CONTAINS_OP                     0 (in)
                150     POP_JUMP_IF_FALSE               79 (to 158)
                152     LOAD_CONST                      10: '32bit'
                154     STORE_FAST                      1: bits
                156     JUMP_FORWARD                    6 (to 170)
                158     LOAD_CONST                      11: '64-bit'
                160     LOAD_FAST                       5: fileout
                162     CONTAINS_OP                     0 (in)
                164     POP_JUMP_IF_FALSE               85 (to 170)
                166     LOAD_CONST                      12: '64bit'
                168     STORE_FAST                      1: bits
                170     LOAD_CONST                      13: 'ELF'
                172     LOAD_FAST                       5: fileout
                174     CONTAINS_OP                     0 (in)
                176     POP_JUMP_IF_FALSE               95 (to 190)
                178     LOAD_CONST                      13: 'ELF'
                180     STORE_FAST                      2: linkage
                182     LOAD_FAST                       1: bits
                184     LOAD_FAST                       2: linkage
                186     BUILD_TUPLE                     2
                188     RETURN_VALUE                    
                190     LOAD_CONST                      14: 'PE'
                192     LOAD_FAST                       5: fileout
                194     CONTAINS_OP                     0 (in)
                196     POP_JUMP_IF_FALSE               115 (to 230)
                198     LOAD_CONST                      15: 'Windows'
                200     LOAD_FAST                       5: fileout
                202     CONTAINS_OP                     0 (in)
                204     POP_JUMP_IF_FALSE               109 (to 218)
                206     LOAD_CONST                      16: 'WindowsPE'
                208     STORE_FAST                      2: linkage
                210     LOAD_FAST                       1: bits
                212     LOAD_FAST                       2: linkage
                214     BUILD_TUPLE                     2
                216     RETURN_VALUE                    
                218     LOAD_CONST                      14: 'PE'
                220     STORE_FAST                      2: linkage
                222     LOAD_FAST                       1: bits
                224     LOAD_FAST                       2: linkage
                226     BUILD_TUPLE                     2
                228     RETURN_VALUE                    
                230     LOAD_CONST                      17: 'COFF'
                232     LOAD_FAST                       5: fileout
                234     CONTAINS_OP                     0 (in)
                236     POP_JUMP_IF_FALSE               125 (to 250)
                238     LOAD_CONST                      17: 'COFF'
                240     STORE_FAST                      2: linkage
                242     LOAD_FAST                       1: bits
                244     LOAD_FAST                       2: linkage
                246     BUILD_TUPLE                     2
                248     RETURN_VALUE                    
                250     LOAD_CONST                      18: 'MS-DOS'
                252     LOAD_FAST                       5: fileout
                254     CONTAINS_OP                     0 (in)
                256     POP_JUMP_IF_FALSE               135 (to 270)
                258     LOAD_CONST                      19: 'MSDOS'
                260     STORE_FAST                      2: linkage
                262     LOAD_FAST                       1: bits
                264     LOAD_FAST                       2: linkage
                266     BUILD_TUPLE                     2
                268     RETURN_VALUE                    
                270     NOP                             
                272     LOAD_FAST                       1: bits
                274     LOAD_FAST                       2: linkage
                276     BUILD_TUPLE                     2
                278     RETURN_VALUE                    
        'architecture'
        [Code]
            File Name: platform.py
            Object Name: _get_machine_win32
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'environ'
                'get'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'PROCESSOR_ARCHITEW6432'
                ''
                'PROCESSOR_ARCHITECTURE'
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: environ
                4       LOAD_METHOD                     2: get
                6       LOAD_CONST                      1: 'PROCESSOR_ARCHITEW6432'
                8       LOAD_CONST                      2: ''
                10      CALL_METHOD                     2
                12      JUMP_IF_TRUE_OR_POP             13 (to 26)
                14      LOAD_GLOBAL                     0: os
                16      LOAD_ATTR                       1: environ
                18      LOAD_METHOD                     2: get
                20      LOAD_CONST                      3: 'PROCESSOR_ARCHITECTURE'
                22      LOAD_CONST                      2: ''
                24      CALL_METHOD                     2
                26      RETURN_VALUE                    
        '_get_machine_win32'
        [Code]
            File Name: platform.py
            Object Name: _Processor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                'classmethod'
                'get'
                'get_win32'
                'get_OpenVMS'
                'from_subprocess'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_Processor'
                [Code]
                    File Name: platform.py
                    Object Name: get
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'getattr'
                        'sys'
                        'platform'
                        'from_subprocess'
                    [Var Names]
                        'cls'
                        'func'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'get_'
                        ''
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: getattr
                        2       LOAD_FAST                       0: cls
                        4       LOAD_CONST                      1: 'get_'
                        6       LOAD_GLOBAL                     1: sys
                        8       LOAD_ATTR                       2: platform
                        10      FORMAT_VALUE                    0 (FVC_NONE)
                        12      BUILD_STRING                    2
                        14      LOAD_FAST                       0: cls
                        16      LOAD_ATTR                       3: from_subprocess
                        18      CALL_FUNCTION                   3
                        20      STORE_FAST                      1: func
                        22      LOAD_FAST                       1: func
                        24      CALL_FUNCTION                   0
                        26      JUMP_IF_TRUE_OR_POP             15 (to 30)
                        28      LOAD_CONST                      2: ''
                        30      RETURN_VALUE                    
                '_Processor.get'
                [Code]
                    File Name: platform.py
                    Object Name: get_win32
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 0
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'os'
                        'environ'
                        'get'
                        '_get_machine_win32'
                    [Var Names]
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        'PROCESSOR_IDENTIFIER'
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: os
                        2       LOAD_ATTR                       1: environ
                        4       LOAD_METHOD                     2: get
                        6       LOAD_CONST                      1: 'PROCESSOR_IDENTIFIER'
                        8       LOAD_GLOBAL                     3: _get_machine_win32
                        10      CALL_FUNCTION                   0
                        12      CALL_METHOD                     2
                        14      RETURN_VALUE                    
                '_Processor.get_win32'
                [Code]
                    File Name: platform.py
                    Object Name: get_OpenVMS
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 8
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'vms_lib'
                        'ImportError'
                        'getsyi'
                    [Var Names]
                        'vms_lib'
                        'csid'
                        'cpu_number'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        0
                        'SYI$_CPU'
                        128
                        'Alpha'
                        'VAX'
                    [Disassembly]
                        0       SETUP_FINALLY                   6 (to 14)
                        2       LOAD_CONST                      1: 0
                        4       LOAD_CONST                      0: None
                        6       IMPORT_NAME                     0: vms_lib
                        8       STORE_FAST                      0: vms_lib
                        10      POP_BLOCK                       
                        12      JUMP_FORWARD                    10 (to 34)
                        14      DUP_TOP                         
                        16      LOAD_GLOBAL                     1: ImportError
                        18      JUMP_IF_NOT_EXC_MATCH           16 (to 32)
                        20      POP_TOP                         
                        22      POP_TOP                         
                        24      POP_TOP                         
                        26      POP_EXCEPT                      
                        28      LOAD_CONST                      0: None
                        30      RETURN_VALUE                    
                        32      RERAISE                         0
                        34      LOAD_FAST                       0: vms_lib
                        36      LOAD_METHOD                     2: getsyi
                        38      LOAD_CONST                      2: 'SYI$_CPU'
                        40      LOAD_CONST                      1: 0
                        42      CALL_METHOD                     2
                        44      UNPACK_SEQUENCE                 2
                        46      STORE_FAST                      1: csid
                        48      STORE_FAST                      2: cpu_number
                        50      LOAD_FAST                       2: cpu_number
                        52      LOAD_CONST                      3: 128
                        54      COMPARE_OP                      5 (>=)
                        56      POP_JUMP_IF_FALSE               31 (to 62)
                        58      LOAD_CONST                      4: 'Alpha'
                        60      RETURN_VALUE                    
                        62      LOAD_CONST                      5: 'VAX'
                        64      RETURN_VALUE                    
                '_Processor.get_OpenVMS'
                [Code]
                    File Name: platform.py
                    Object Name: from_subprocess
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 0
                    Stack Size: 9
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'subprocess'
                        'check_output'
                        'DEVNULL'
                        'strip'
                        'OSError'
                        'CalledProcessError'
                    [Var Names]
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '\n        Fall back to `uname -p`\n        '
                        'uname'
                        '-p'
                        True
                        (
                            'stderr'
                            'text'
                        )
                        None
                    [Disassembly]
                        0       SETUP_FINALLY                   14 (to 30)
                        2       LOAD_GLOBAL                     0: subprocess
                        4       LOAD_ATTR                       1: check_output
                        6       LOAD_CONST                      1: 'uname'
                        8       LOAD_CONST                      2: '-p'
                        10      BUILD_LIST                      2
                        12      LOAD_GLOBAL                     0: subprocess
                        14      LOAD_ATTR                       2: DEVNULL
                        16      LOAD_CONST                      3: True
                        18      LOAD_CONST                      4: ('stderr', 'text')
                        20      CALL_FUNCTION_KW                3
                        22      LOAD_METHOD                     3: strip
                        24      CALL_METHOD                     0
                        26      POP_BLOCK                       
                        28      RETURN_VALUE                    
                        30      DUP_TOP                         
                        32      LOAD_GLOBAL                     4: OSError
                        34      LOAD_GLOBAL                     0: subprocess
                        36      LOAD_ATTR                       5: CalledProcessError
                        38      BUILD_TUPLE                     2
                        40      JUMP_IF_NOT_EXC_MATCH           27 (to 54)
                        42      POP_TOP                         
                        44      POP_TOP                         
                        46      POP_TOP                         
                        48      POP_EXCEPT                      
                        50      LOAD_CONST                      5: None
                        52      RETURN_VALUE                    
                        54      RERAISE                         0
                '_Processor.from_subprocess'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_Processor'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_NAME                       3: classmethod
                10      LOAD_CONST                      1: <CODE> get
                12      LOAD_CONST                      2: '_Processor.get'
                14      MAKE_FUNCTION                   0
                16      CALL_FUNCTION                   1
                18      STORE_NAME                      4: get
                20      LOAD_CONST                      3: <CODE> get_win32
                22      LOAD_CONST                      4: '_Processor.get_win32'
                24      MAKE_FUNCTION                   0
                26      STORE_NAME                      5: get_win32
                28      LOAD_CONST                      5: <CODE> get_OpenVMS
                30      LOAD_CONST                      6: '_Processor.get_OpenVMS'
                32      MAKE_FUNCTION                   0
                34      STORE_NAME                      6: get_OpenVMS
                36      LOAD_CONST                      7: <CODE> from_subprocess
                38      LOAD_CONST                      8: '_Processor.from_subprocess'
                40      MAKE_FUNCTION                   0
                42      STORE_NAME                      7: from_subprocess
                44      LOAD_CONST                      9: None
                46      RETURN_VALUE                    
        '_Processor'
        [Code]
            File Name: platform.py
            Object Name: _unknown_as_blank
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
            [Var Names]
                'val'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'unknown'
                ''
            [Disassembly]
                0       LOAD_FAST                       0: val
                2       LOAD_CONST                      1: 'unknown'
                4       COMPARE_OP                      2 (==)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      2: ''
                10      RETURN_VALUE                    
                12      LOAD_FAST                       0: val
                14      RETURN_VALUE                    
        '_unknown_as_blank'
        [Code]
            File Name: platform.py
            Object Name: uname_result
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000000
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
                '_fields'
                'functools'
                'cached_property'
                'processor'
                '__iter__'
                'classmethod'
                '_make'
                '__getitem__'
                '__len__'
                '__reduce__'
                '__classcell__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
                '__class__'
            [Constants]
                'uname_result'
                '\n    A uname_result that\'s largely compatible with a\n    simple namedtuple except that \'processor\' is\n    resolved late and cached to avoid calling "uname"\n    except when needed.\n    '
                (
                    'system'
                    'node'
                    'release'
                    'version'
                    'machine'
                    'processor'
                )
                [Code]
                    File Name: platform.py
                    Object Name: processor
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 3
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        '_unknown_as_blank'
                        '_Processor'
                        'get'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: _unknown_as_blank
                        2       LOAD_GLOBAL                     1: _Processor
                        4       LOAD_METHOD                     2: get
                        6       CALL_METHOD                     0
                        8       CALL_FUNCTION                   1
                        10      RETURN_VALUE                    
                'uname_result.processor'
                [Code]
                    File Name: platform.py
                    Object Name: __iter__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
                    [Names]
                        'itertools'
                        'chain'
                        'super'
                        '__iter__'
                        'processor'
                    [Var Names]
                        'self'
                    [Free Vars]
                        '__class__'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: itertools
                        2       LOAD_METHOD                     1: chain
                        4       LOAD_GLOBAL                     2: super
                        6       CALL_FUNCTION                   0
                        8       LOAD_METHOD                     3: __iter__
                        10      CALL_METHOD                     0
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       4: processor
                        16      BUILD_TUPLE                     1
                        18      CALL_METHOD                     2
                        20      RETURN_VALUE                    
                'uname_result.__iter__'
                [Code]
                    File Name: platform.py
                    Object Name: _make
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 5
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        '_fields'
                        '__new__'
                        'TypeError'
                    [Var Names]
                        'cls'
                        'iterable'
                        'num_fields'
                        'result'
                        'msg'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                        'Expected '
                        ' arguments, got '
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_FAST                       0: cls
                        4       LOAD_ATTR                       1: _fields
                        6       CALL_FUNCTION                   1
                        8       LOAD_CONST                      1: 1
                        10      BINARY_SUBTRACT                 
                        12      STORE_FAST                      2: num_fields
                        14      LOAD_FAST                       0: cls
                        16      LOAD_ATTR                       2: __new__
                        18      LOAD_FAST                       0: cls
                        20      BUILD_LIST                      1
                        22      LOAD_FAST                       1: iterable
                        24      LIST_EXTEND                     1
                        26      LIST_TO_TUPLE                   
                        28      CALL_FUNCTION_EX                0
                        30      STORE_FAST                      3: result
                        32      LOAD_GLOBAL                     0: len
                        34      LOAD_FAST                       3: result
                        36      CALL_FUNCTION                   1
                        38      LOAD_FAST                       2: num_fields
                        40      LOAD_CONST                      1: 1
                        42      BINARY_ADD                      
                        44      COMPARE_OP                      3 (!=)
                        46      POP_JUMP_IF_FALSE               38 (to 76)
                        48      LOAD_CONST                      2: 'Expected '
                        50      LOAD_FAST                       2: num_fields
                        52      FORMAT_VALUE                    0 (FVC_NONE)
                        54      LOAD_CONST                      3: ' arguments, got '
                        56      LOAD_GLOBAL                     0: len
                        58      LOAD_FAST                       3: result
                        60      CALL_FUNCTION                   1
                        62      FORMAT_VALUE                    0 (FVC_NONE)
                        64      BUILD_STRING                    4
                        66      STORE_FAST                      4: msg
                        68      LOAD_GLOBAL                     3: TypeError
                        70      LOAD_FAST                       4: msg
                        72      CALL_FUNCTION                   1
                        74      RAISE_VARARGS                   1
                        76      LOAD_FAST                       3: result
                        78      RETURN_VALUE                    
                'uname_result._make'
                [Code]
                    File Name: platform.py
                    Object Name: __getitem__
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 2
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'tuple'
                    [Var Names]
                        'self'
                        'key'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: tuple
                        2       LOAD_FAST                       0: self
                        4       CALL_FUNCTION                   1
                        6       LOAD_FAST                       1: key
                        8       BINARY_SUBSCR                   
                        10      RETURN_VALUE                    
                'uname_result.__getitem__'
                [Code]
                    File Name: platform.py
                    Object Name: __len__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'len'
                        'tuple'
                        'iter'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: len
                        2       LOAD_GLOBAL                     1: tuple
                        4       LOAD_GLOBAL                     2: iter
                        6       LOAD_FAST                       0: self
                        8       CALL_FUNCTION                   1
                        10      CALL_FUNCTION                   1
                        12      CALL_FUNCTION                   1
                        14      RETURN_VALUE                    
                'uname_result.__len__'
                [Code]
                    File Name: platform.py
                    Object Name: __reduce__
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 5
                    Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
                    [Names]
                        'uname_result'
                        'tuple'
                        'len'
                        '_fields'
                    [Var Names]
                        'self'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                        1
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: uname_result
                        2       LOAD_GLOBAL                     1: tuple
                        4       LOAD_FAST                       0: self
                        6       CALL_FUNCTION                   1
                        8       LOAD_CONST                      0: None
                        10      LOAD_GLOBAL                     2: len
                        12      LOAD_FAST                       0: self
                        14      LOAD_ATTR                       3: _fields
                        16      CALL_FUNCTION                   1
                        18      LOAD_CONST                      1: 1
                        20      BINARY_SUBTRACT                 
                        22      BUILD_SLICE                     2
                        24      BINARY_SUBSCR                   
                        26      BUILD_TUPLE                     2
                        28      RETURN_VALUE                    
                'uname_result.__reduce__'
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'uname_result'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: '\n    A uname_result that\'s largely compatible with a\n    simple namedtuple except that \'processor\' is\n    resolved late and cached to avoid calling "uname"\n    except when needed.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: ('system', 'node', 'release', 'version', 'machine', 'processor')
                14      STORE_NAME                      4: _fields
                16      LOAD_NAME                       5: functools
                18      LOAD_ATTR                       6: cached_property
                20      LOAD_CONST                      3: <CODE> processor
                22      LOAD_CONST                      4: 'uname_result.processor'
                24      MAKE_FUNCTION                   0
                26      CALL_FUNCTION                   1
                28      STORE_NAME                      7: processor
                30      LOAD_CLOSURE                    0: __class__
                32      BUILD_TUPLE                     1
                34      LOAD_CONST                      5: <CODE> __iter__
                36      LOAD_CONST                      6: 'uname_result.__iter__'
                38      MAKE_FUNCTION                   8
                40      STORE_NAME                      8: __iter__
                42      LOAD_NAME                       9: classmethod
                44      LOAD_CONST                      7: <CODE> _make
                46      LOAD_CONST                      8: 'uname_result._make'
                48      MAKE_FUNCTION                   0
                50      CALL_FUNCTION                   1
                52      STORE_NAME                      10: _make
                54      LOAD_CONST                      9: <CODE> __getitem__
                56      LOAD_CONST                      10: 'uname_result.__getitem__'
                58      MAKE_FUNCTION                   0
                60      STORE_NAME                      11: __getitem__
                62      LOAD_CONST                      11: <CODE> __len__
                64      LOAD_CONST                      12: 'uname_result.__len__'
                66      MAKE_FUNCTION                   0
                68      STORE_NAME                      12: __len__
                70      LOAD_CONST                      13: <CODE> __reduce__
                72      LOAD_CONST                      14: 'uname_result.__reduce__'
                74      MAKE_FUNCTION                   0
                76      STORE_NAME                      13: __reduce__
                78      LOAD_CLOSURE                    0: __class__
                80      DUP_TOP                         
                82      STORE_NAME                      14: __classcell__
                84      RETURN_VALUE                    
        'uname_result'
        'uname_result_base'
        'system node release version machine'
        [Code]
            File Name: platform.py
            Object Name: uname
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 12
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_uname_cache'
                'os'
                'uname'
                'AttributeError'
                'sys'
                'platform'
                '_node'
                'any'
                'win32_ver'
                '_get_machine_win32'
                '_syscmd_ver'
                'java_ver'
                'join'
                'uname_result'
                'map'
                '_unknown_as_blank'
            [Var Names]
                'system'
                'node'
                'release'
                'version'
                'machine'
                'infos'
                'csd'
                'ptype'
                'vendor'
                'vminfo'
                'osinfo'
                'vals'
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Fairly portable uname interface. Returns a tuple\n        of strings (system, node, release, version, machine, processor)\n        identifying the underlying platform.\n\n        Note that unlike the os.uname function this also returns\n        possible processor information as an additional tuple entry.\n\n        Entries which cannot be determined are set to ''.\n\n    "
                None
                ''
                (
                )
                'win32'
                'Microsoft Windows'
                'Windows'
                'Microsoft'
                '6.0'
                3
                'Vista'
                (
                    'win32'
                    'win16'
                )
                '32bit'
                '16bit'
                4
                'java'
                'Java'
                ', '
                'OpenVMS'
                '0'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _uname_cache
                2       LOAD_CONST                      1: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_GLOBAL                     0: _uname_cache
                10      RETURN_VALUE                    
                12      SETUP_FINALLY                   13 (to 40)
                14      LOAD_GLOBAL                     1: os
                16      LOAD_METHOD                     2: uname
                18      CALL_METHOD                     0
                20      DUP_TOP                         
                22      UNPACK_SEQUENCE                 5
                24      STORE_FAST                      0: system
                26      STORE_FAST                      1: node
                28      STORE_FAST                      2: release
                30      STORE_FAST                      3: version
                32      STORE_FAST                      4: machine
                34      STORE_FAST                      5: infos
                36      POP_BLOCK                       
                38      JUMP_FORWARD                    23 (to 86)
                40      DUP_TOP                         
                42      LOAD_GLOBAL                     3: AttributeError
                44      JUMP_IF_NOT_EXC_MATCH           42 (to 84)
                46      POP_TOP                         
                48      POP_TOP                         
                50      POP_TOP                         
                52      LOAD_GLOBAL                     4: sys
                54      LOAD_ATTR                       5: platform
                56      STORE_FAST                      0: system
                58      LOAD_GLOBAL                     6: _node
                60      CALL_FUNCTION                   0
                62      STORE_FAST                      1: node
                64      LOAD_CONST                      2: ''
                66      DUP_TOP                         
                68      STORE_FAST                      2: release
                70      DUP_TOP                         
                72      STORE_FAST                      3: version
                74      STORE_FAST                      4: machine
                76      LOAD_CONST                      3: ()
                78      STORE_FAST                      5: infos
                80      POP_EXCEPT                      
                82      JUMP_FORWARD                    1 (to 86)
                84      RERAISE                         0
                86      LOAD_GLOBAL                     7: any
                88      LOAD_FAST                       5: infos
                90      CALL_FUNCTION                   1
                92      POP_JUMP_IF_TRUE                148 (to 296)
                94      LOAD_FAST                       0: system
                96      LOAD_CONST                      4: 'win32'
                98      COMPARE_OP                      2 (==)
                100     POP_JUMP_IF_FALSE               63 (to 126)
                102     LOAD_GLOBAL                     8: win32_ver
                104     CALL_FUNCTION                   0
                106     UNPACK_SEQUENCE                 4
                108     STORE_FAST                      2: release
                110     STORE_FAST                      3: version
                112     STORE_FAST                      6: csd
                114     STORE_FAST                      7: ptype
                116     LOAD_FAST                       4: machine
                118     JUMP_IF_TRUE_OR_POP             62 (to 124)
                120     LOAD_GLOBAL                     9: _get_machine_win32
                122     CALL_FUNCTION                   0
                124     STORE_FAST                      4: machine
                126     LOAD_FAST                       2: release
                128     POP_JUMP_IF_FALSE               67 (to 134)
                130     LOAD_FAST                       3: version
                132     POP_JUMP_IF_TRUE                104 (to 208)
                134     LOAD_GLOBAL                     10: _syscmd_ver
                136     LOAD_FAST                       0: system
                138     CALL_FUNCTION                   1
                140     UNPACK_SEQUENCE                 3
                142     STORE_FAST                      0: system
                144     STORE_FAST                      2: release
                146     STORE_FAST                      3: version
                148     LOAD_FAST                       0: system
                150     LOAD_CONST                      5: 'Microsoft Windows'
                152     COMPARE_OP                      2 (==)
                154     POP_JUMP_IF_FALSE               81 (to 162)
                156     LOAD_CONST                      6: 'Windows'
                158     STORE_FAST                      0: system
                160     JUMP_FORWARD                    23 (to 208)
                162     LOAD_FAST                       0: system
                164     LOAD_CONST                      7: 'Microsoft'
                166     COMPARE_OP                      2 (==)
                168     POP_JUMP_IF_FALSE               104 (to 208)
                170     LOAD_FAST                       2: release
                172     LOAD_CONST                      6: 'Windows'
                174     COMPARE_OP                      2 (==)
                176     POP_JUMP_IF_FALSE               104 (to 208)
                178     LOAD_CONST                      6: 'Windows'
                180     STORE_FAST                      0: system
                182     LOAD_CONST                      8: '6.0'
                184     LOAD_FAST                       3: version
                186     LOAD_CONST                      1: None
                188     LOAD_CONST                      9: 3
                190     BUILD_SLICE                     2
                192     BINARY_SUBSCR                   
                194     COMPARE_OP                      2 (==)
                196     POP_JUMP_IF_FALSE               102 (to 204)
                198     LOAD_CONST                      10: 'Vista'
                200     STORE_FAST                      2: release
                202     JUMP_FORWARD                    2 (to 208)
                204     LOAD_CONST                      2: ''
                206     STORE_FAST                      2: release
                208     LOAD_FAST                       0: system
                210     LOAD_CONST                      11: ('win32', 'win16')
                212     CONTAINS_OP                     0 (in)
                214     POP_JUMP_IF_FALSE               122 (to 244)
                216     LOAD_FAST                       3: version
                218     POP_JUMP_IF_TRUE                119 (to 238)
                220     LOAD_FAST                       0: system
                222     LOAD_CONST                      4: 'win32'
                224     COMPARE_OP                      2 (==)
                226     POP_JUMP_IF_FALSE               117 (to 234)
                228     LOAD_CONST                      12: '32bit'
                230     STORE_FAST                      3: version
                232     JUMP_FORWARD                    2 (to 238)
                234     LOAD_CONST                      13: '16bit'
                236     STORE_FAST                      3: version
                238     LOAD_CONST                      6: 'Windows'
                240     STORE_FAST                      0: system
                242     JUMP_FORWARD                    26 (to 296)
                244     LOAD_FAST                       0: system
                246     LOAD_CONST                      1: None
                248     LOAD_CONST                      14: 4
                250     BUILD_SLICE                     2
                252     BINARY_SUBSCR                   
                254     LOAD_CONST                      15: 'java'
                256     COMPARE_OP                      2 (==)
                258     POP_JUMP_IF_FALSE               148 (to 296)
                260     LOAD_GLOBAL                     11: java_ver
                262     CALL_FUNCTION                   0
                264     UNPACK_SEQUENCE                 4
                266     STORE_FAST                      2: release
                268     STORE_FAST                      8: vendor
                270     STORE_FAST                      9: vminfo
                272     STORE_FAST                      10: osinfo
                274     LOAD_CONST                      16: 'Java'
                276     STORE_FAST                      0: system
                278     LOAD_CONST                      17: ', '
                280     LOAD_METHOD                     12: join
                282     LOAD_FAST                       9: vminfo
                284     CALL_METHOD                     1
                286     STORE_FAST                      3: version
                288     LOAD_FAST                       3: version
                290     POP_JUMP_IF_TRUE                148 (to 296)
                292     LOAD_FAST                       8: vendor
                294     STORE_FAST                      3: version
                296     LOAD_FAST                       0: system
                298     LOAD_CONST                      18: 'OpenVMS'
                300     COMPARE_OP                      2 (==)
                302     POP_JUMP_IF_FALSE               162 (to 324)
                304     LOAD_FAST                       2: release
                306     POP_JUMP_IF_FALSE               158 (to 316)
                308     LOAD_FAST                       2: release
                310     LOAD_CONST                      19: '0'
                312     COMPARE_OP                      2 (==)
                314     POP_JUMP_IF_FALSE               162 (to 324)
                316     LOAD_FAST                       3: version
                318     STORE_FAST                      2: release
                320     LOAD_CONST                      2: ''
                322     STORE_FAST                      3: version
                324     LOAD_FAST                       0: system
                326     LOAD_CONST                      7: 'Microsoft'
                328     COMPARE_OP                      2 (==)
                330     POP_JUMP_IF_FALSE               174 (to 348)
                332     LOAD_FAST                       2: release
                334     LOAD_CONST                      6: 'Windows'
                336     COMPARE_OP                      2 (==)
                338     POP_JUMP_IF_FALSE               174 (to 348)
                340     LOAD_CONST                      6: 'Windows'
                342     STORE_FAST                      0: system
                344     LOAD_CONST                      10: 'Vista'
                346     STORE_FAST                      2: release
                348     LOAD_FAST                       0: system
                350     LOAD_FAST                       1: node
                352     LOAD_FAST                       2: release
                354     LOAD_FAST                       3: version
                356     LOAD_FAST                       4: machine
                358     BUILD_TUPLE                     5
                360     STORE_FAST                      11: vals
                362     LOAD_GLOBAL                     13: uname_result
                364     LOAD_GLOBAL                     14: map
                366     LOAD_GLOBAL                     15: _unknown_as_blank
                368     LOAD_FAST                       11: vals
                370     CALL_FUNCTION                   2
                372     CALL_FUNCTION_EX                0
                374     STORE_GLOBAL                    0: _uname_cache
                376     LOAD_GLOBAL                     0: _uname_cache
                378     RETURN_VALUE                    
        'uname'
        [Code]
            File Name: platform.py
            Object Name: system
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'system'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the system/OS name, e.g. 'Linux', 'Windows' or 'Java'.\n\n        An empty string is returned if the value cannot be determined.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: system
                6       RETURN_VALUE                    
        'system'
        [Code]
            File Name: platform.py
            Object Name: node
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'node'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the computer's network name (which may not be fully\n        qualified)\n\n        An empty string is returned if the value cannot be determined.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: node
                6       RETURN_VALUE                    
        'node'
        [Code]
            File Name: platform.py
            Object Name: release
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'release'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the system's release, e.g. '2.2.0' or 'NT'\n\n        An empty string is returned if the value cannot be determined.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: release
                6       RETURN_VALUE                    
        'release'
        [Code]
            File Name: platform.py
            Object Name: version
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the system's release version, e.g. '#3 on degas'\n\n        An empty string is returned if the value cannot be determined.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: version
                6       RETURN_VALUE                    
        'version'
        [Code]
            File Name: platform.py
            Object Name: machine
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'machine'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the machine type, e.g. 'i386'\n\n        An empty string is returned if the value cannot be determined.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: machine
                6       RETURN_VALUE                    
        'machine'
        [Code]
            File Name: platform.py
            Object Name: processor
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'uname'
                'processor'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the (true) processor name, e.g. 'amdk6'\n\n        An empty string is returned if the value cannot be\n        determined. Note that many platforms do not provide this\n        information or simply return the same value as for machine(),\n        e.g.  NetBSD does this.\n\n    "
            [Disassembly]
                0       LOAD_GLOBAL                     0: uname
                2       CALL_FUNCTION                   0
                4       LOAD_ATTR                       1: processor
                6       RETURN_VALUE                    
        'processor'
        '([\\w.+]+)\\s*\\(#?([^,]+)(?:,\\s*([\\w ]*)(?:,\\s*([\\w :]*))?)?\\)\\s*\\[([^\\]]+)\\]?'
        'IronPython\\s*([\\d\\.]+)(?: \\(([\\d\\.]+)\\))? on (.NET [\\d\\.]+)'
        '([\\d.]+)\\s*\\(IronPython\\s*[\\d.]+\\s*\\(([\\d.]+)\\) on ([\\w.]+ [\\d.]+(?: \\(\\d+-bit\\))?)\\)'
        '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'
        [Code]
            File Name: platform.py
            Object Name: _sys_version
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 14
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'version'
                '_sys_version_cache'
                'get'
                'startswith'
                '_ironpython_sys_version_parser'
                'match'
                '_ironpython26_sys_version_parser'
                'ValueError'
                'repr'
                'groups'
                'platform'
                '_sys_version_parser'
                '_pypy_sys_version_parser'
                'hasattr'
                '_git'
                '_mercurial'
                'split'
                'len'
                'append'
                'join'
            [Var Names]
                'sys_version'
                'result'
                'name'
                'match'
                'version'
                'alt_version'
                'compiler'
                'buildno'
                'builddate'
                'buildtime'
                '_'
                'branch'
                'revision'
                'l'
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns a parsed version of Python's sys.version as tuple\n        (name, version, branch, revision, buildno, builddate, compiler)\n        referring to the Python implementation name, version, branch,\n        revision, build number, build date/time as string and the compiler\n        identification string.\n\n        Note that unlike the Python sys.version, the returned value\n        for the Python version will always include the patchlevel (it\n        defaults to '.0').\n\n        The function returns empty strings for tuple entries that\n        cannot be determined.\n\n        sys_version may be given to parse an alternative version\n        string, e.g. if the version was read from a different Python\n        interpreter.\n\n    "
                None
                'IronPython'
                'failed to parse IronPython sys.version: %s'
                ''
                'java'
                'Jython'
                'failed to parse Jython sys.version: %s'
                'PyPy'
                'failed to parse PyPy sys.version: %s'
                'failed to parse CPython sys.version: %s'
                'CPython'
                ' '
                '_git'
                '_mercurial'
                '.'
                2
                '0'
            [Disassembly]
                0       LOAD_FAST                       0: sys_version
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               7 (to 14)
                8       LOAD_GLOBAL                     0: sys
                10      LOAD_ATTR                       1: version
                12      STORE_FAST                      0: sys_version
                14      LOAD_GLOBAL                     2: _sys_version_cache
                16      LOAD_METHOD                     3: get
                18      LOAD_FAST                       0: sys_version
                20      LOAD_CONST                      1: None
                22      CALL_METHOD                     2
                24      STORE_FAST                      1: result
                26      LOAD_FAST                       1: result
                28      LOAD_CONST                      1: None
                30      IS_OP                           1 (is not)
                32      POP_JUMP_IF_FALSE               19 (to 38)
                34      LOAD_FAST                       1: result
                36      RETURN_VALUE                    
                38      LOAD_CONST                      2: 'IronPython'
                40      LOAD_FAST                       0: sys_version
                42      CONTAINS_OP                     0 (in)
                44      POP_JUMP_IF_FALSE               65 (to 130)
                46      LOAD_CONST                      2: 'IronPython'
                48      STORE_FAST                      2: name
                50      LOAD_FAST                       0: sys_version
                52      LOAD_METHOD                     4: startswith
                54      LOAD_CONST                      2: 'IronPython'
                56      CALL_METHOD                     1
                58      POP_JUMP_IF_FALSE               36 (to 72)
                60      LOAD_GLOBAL                     5: _ironpython_sys_version_parser
                62      LOAD_METHOD                     6: match
                64      LOAD_FAST                       0: sys_version
                66      CALL_METHOD                     1
                68      STORE_FAST                      3: match
                70      JUMP_FORWARD                    5 (to 82)
                72      LOAD_GLOBAL                     7: _ironpython26_sys_version_parser
                74      LOAD_METHOD                     6: match
                76      LOAD_FAST                       0: sys_version
                78      CALL_METHOD                     1
                80      STORE_FAST                      3: match
                82      LOAD_FAST                       3: match
                84      LOAD_CONST                      1: None
                86      IS_OP                           0 (is)
                88      POP_JUMP_IF_FALSE               53 (to 106)
                90      LOAD_GLOBAL                     8: ValueError
                92      LOAD_CONST                      3: 'failed to parse IronPython sys.version: %s'
                94      LOAD_GLOBAL                     9: repr
                96      LOAD_FAST                       0: sys_version
                98      CALL_FUNCTION                   1
                100     BINARY_MODULO                   
                102     CALL_FUNCTION                   1
                104     RAISE_VARARGS                   1
                106     LOAD_FAST                       3: match
                108     LOAD_METHOD                     10: groups
                110     CALL_METHOD                     0
                112     UNPACK_SEQUENCE                 3
                114     STORE_FAST                      4: version
                116     STORE_FAST                      5: alt_version
                118     STORE_FAST                      6: compiler
                120     LOAD_CONST                      4: ''
                122     STORE_FAST                      7: buildno
                124     LOAD_CONST                      4: ''
                126     STORE_FAST                      8: builddate
                128     JUMP_FORWARD                    121 (to 372)
                130     LOAD_GLOBAL                     0: sys
                132     LOAD_ATTR                       11: platform
                134     LOAD_METHOD                     4: startswith
                136     LOAD_CONST                      5: 'java'
                138     CALL_METHOD                     1
                140     POP_JUMP_IF_FALSE               109 (to 218)
                142     LOAD_CONST                      6: 'Jython'
                144     STORE_FAST                      2: name
                146     LOAD_GLOBAL                     12: _sys_version_parser
                148     LOAD_METHOD                     6: match
                150     LOAD_FAST                       0: sys_version
                152     CALL_METHOD                     1
                154     STORE_FAST                      3: match
                156     LOAD_FAST                       3: match
                158     LOAD_CONST                      1: None
                160     IS_OP                           0 (is)
                162     POP_JUMP_IF_FALSE               90 (to 180)
                164     LOAD_GLOBAL                     8: ValueError
                166     LOAD_CONST                      7: 'failed to parse Jython sys.version: %s'
                168     LOAD_GLOBAL                     9: repr
                170     LOAD_FAST                       0: sys_version
                172     CALL_FUNCTION                   1
                174     BINARY_MODULO                   
                176     CALL_FUNCTION                   1
                178     RAISE_VARARGS                   1
                180     LOAD_FAST                       3: match
                182     LOAD_METHOD                     10: groups
                184     CALL_METHOD                     0
                186     UNPACK_SEQUENCE                 5
                188     STORE_FAST                      4: version
                190     STORE_FAST                      7: buildno
                192     STORE_FAST                      8: builddate
                194     STORE_FAST                      9: buildtime
                196     STORE_FAST                      10: _
                198     LOAD_FAST                       8: builddate
                200     LOAD_CONST                      1: None
                202     IS_OP                           0 (is)
                204     POP_JUMP_IF_FALSE               105 (to 210)
                206     LOAD_CONST                      4: ''
                208     STORE_FAST                      8: builddate
                210     LOAD_GLOBAL                     0: sys
                212     LOAD_ATTR                       11: platform
                214     STORE_FAST                      6: compiler
                216     JUMP_FORWARD                    77 (to 372)
                218     LOAD_CONST                      8: 'PyPy'
                220     LOAD_FAST                       0: sys_version
                222     CONTAINS_OP                     0 (in)
                224     POP_JUMP_IF_FALSE               143 (to 286)
                226     LOAD_CONST                      8: 'PyPy'
                228     STORE_FAST                      2: name
                230     LOAD_GLOBAL                     13: _pypy_sys_version_parser
                232     LOAD_METHOD                     6: match
                234     LOAD_FAST                       0: sys_version
                236     CALL_METHOD                     1
                238     STORE_FAST                      3: match
                240     LOAD_FAST                       3: match
                242     LOAD_CONST                      1: None
                244     IS_OP                           0 (is)
                246     POP_JUMP_IF_FALSE               132 (to 264)
                248     LOAD_GLOBAL                     8: ValueError
                250     LOAD_CONST                      9: 'failed to parse PyPy sys.version: %s'
                252     LOAD_GLOBAL                     9: repr
                254     LOAD_FAST                       0: sys_version
                256     CALL_FUNCTION                   1
                258     BINARY_MODULO                   
                260     CALL_FUNCTION                   1
                262     RAISE_VARARGS                   1
                264     LOAD_FAST                       3: match
                266     LOAD_METHOD                     10: groups
                268     CALL_METHOD                     0
                270     UNPACK_SEQUENCE                 4
                272     STORE_FAST                      4: version
                274     STORE_FAST                      7: buildno
                276     STORE_FAST                      8: builddate
                278     STORE_FAST                      9: buildtime
                280     LOAD_CONST                      4: ''
                282     STORE_FAST                      6: compiler
                284     JUMP_FORWARD                    43 (to 372)
                286     LOAD_GLOBAL                     12: _sys_version_parser
                288     LOAD_METHOD                     6: match
                290     LOAD_FAST                       0: sys_version
                292     CALL_METHOD                     1
                294     STORE_FAST                      3: match
                296     LOAD_FAST                       3: match
                298     LOAD_CONST                      1: None
                300     IS_OP                           0 (is)
                302     POP_JUMP_IF_FALSE               160 (to 320)
                304     LOAD_GLOBAL                     8: ValueError
                306     LOAD_CONST                      10: 'failed to parse CPython sys.version: %s'
                308     LOAD_GLOBAL                     9: repr
                310     LOAD_FAST                       0: sys_version
                312     CALL_FUNCTION                   1
                314     BINARY_MODULO                   
                316     CALL_FUNCTION                   1
                318     RAISE_VARARGS                   1
                320     LOAD_FAST                       3: match
                322     LOAD_METHOD                     10: groups
                324     CALL_METHOD                     0
                326     UNPACK_SEQUENCE                 5
                328     STORE_FAST                      4: version
                330     STORE_FAST                      7: buildno
                332     STORE_FAST                      8: builddate
                334     STORE_FAST                      9: buildtime
                336     STORE_FAST                      6: compiler
                338     LOAD_CONST                      11: 'CPython'
                340     STORE_FAST                      2: name
                342     LOAD_FAST                       8: builddate
                344     LOAD_CONST                      1: None
                346     IS_OP                           0 (is)
                348     POP_JUMP_IF_FALSE               178 (to 356)
                350     LOAD_CONST                      4: ''
                352     STORE_FAST                      8: builddate
                354     JUMP_FORWARD                    8 (to 372)
                356     LOAD_FAST                       9: buildtime
                358     POP_JUMP_IF_FALSE               186 (to 372)
                360     LOAD_FAST                       8: builddate
                362     LOAD_CONST                      12: ' '
                364     BINARY_ADD                      
                366     LOAD_FAST                       9: buildtime
                368     BINARY_ADD                      
                370     STORE_FAST                      8: builddate
                372     LOAD_GLOBAL                     14: hasattr
                374     LOAD_GLOBAL                     0: sys
                376     LOAD_CONST                      13: '_git'
                378     CALL_FUNCTION                   2
                380     POP_JUMP_IF_FALSE               198 (to 396)
                382     LOAD_GLOBAL                     0: sys
                384     LOAD_ATTR                       15: _git
                386     UNPACK_SEQUENCE                 3
                388     STORE_FAST                      10: _
                390     STORE_FAST                      11: branch
                392     STORE_FAST                      12: revision
                394     JUMP_FORWARD                    16 (to 428)
                396     LOAD_GLOBAL                     14: hasattr
                398     LOAD_GLOBAL                     0: sys
                400     LOAD_CONST                      14: '_mercurial'
                402     CALL_FUNCTION                   2
                404     POP_JUMP_IF_FALSE               210 (to 420)
                406     LOAD_GLOBAL                     0: sys
                408     LOAD_ATTR                       16: _mercurial
                410     UNPACK_SEQUENCE                 3
                412     STORE_FAST                      10: _
                414     STORE_FAST                      11: branch
                416     STORE_FAST                      12: revision
                418     JUMP_FORWARD                    4 (to 428)
                420     LOAD_CONST                      4: ''
                422     STORE_FAST                      11: branch
                424     LOAD_CONST                      4: ''
                426     STORE_FAST                      12: revision
                428     LOAD_FAST                       4: version
                430     LOAD_METHOD                     17: split
                432     LOAD_CONST                      15: '.'
                434     CALL_METHOD                     1
                436     STORE_FAST                      13: l
                438     LOAD_GLOBAL                     18: len
                440     LOAD_FAST                       13: l
                442     CALL_FUNCTION                   1
                444     LOAD_CONST                      16: 2
                446     COMPARE_OP                      2 (==)
                448     POP_JUMP_IF_FALSE               235 (to 470)
                450     LOAD_FAST                       13: l
                452     LOAD_METHOD                     19: append
                454     LOAD_CONST                      17: '0'
                456     CALL_METHOD                     1
                458     POP_TOP                         
                460     LOAD_CONST                      15: '.'
                462     LOAD_METHOD                     20: join
                464     LOAD_FAST                       13: l
                466     CALL_METHOD                     1
                468     STORE_FAST                      4: version
                470     LOAD_FAST                       2: name
                472     LOAD_FAST                       4: version
                474     LOAD_FAST                       11: branch
                476     LOAD_FAST                       12: revision
                478     LOAD_FAST                       7: buildno
                480     LOAD_FAST                       8: builddate
                482     LOAD_FAST                       6: compiler
                484     BUILD_TUPLE                     7
                486     STORE_FAST                      1: result
                488     LOAD_FAST                       1: result
                490     LOAD_GLOBAL                     2: _sys_version_cache
                492     LOAD_FAST                       0: sys_version
                494     STORE_SUBSCR                    
                496     LOAD_FAST                       1: result
                498     RETURN_VALUE                    
        '_sys_version'
        [Code]
            File Name: platform.py
            Object Name: python_implementation
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns a string identifying the Python implementation.\n\n        Currently, the following implementations are identified:\n          'CPython' (C implementation of Python),\n          'IronPython' (.NET implementation of Python),\n          'Jython' (Java implementation of Python),\n          'PyPy' (Python implementation of Python).\n\n    "
                0
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 0
                6       BINARY_SUBSCR                   
                8       RETURN_VALUE                    
        'python_implementation'
        [Code]
            File Name: platform.py
            Object Name: python_version
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                " Returns the Python version as string 'major.minor.patchlevel'\n\n        Note that unlike the Python sys.version, the returned value\n        will always include the patchlevel (it defaults to 0).\n\n    "
                1
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 1
                6       BINARY_SUBSCR                   
                8       RETURN_VALUE                    
        'python_version'
        [Code]
            File Name: platform.py
            Object Name: python_version_tuple
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'tuple'
                '_sys_version'
                'split'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns the Python version as tuple (major, minor, patchlevel)\n        of strings.\n\n        Note that unlike the Python sys.version, the returned value\n        will always include the patchlevel (it defaults to 0).\n\n    '
                1
                '.'
            [Disassembly]
                0       LOAD_GLOBAL                     0: tuple
                2       LOAD_GLOBAL                     1: _sys_version
                4       CALL_FUNCTION                   0
                6       LOAD_CONST                      1: 1
                8       BINARY_SUBSCR                   
                10      LOAD_METHOD                     2: split
                12      LOAD_CONST                      2: '.'
                14      CALL_METHOD                     1
                16      CALL_FUNCTION                   1
                18      RETURN_VALUE                    
        'python_version_tuple'
        [Code]
            File Name: platform.py
            Object Name: python_branch
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns a string identifying the Python implementation\n        branch.\n\n        For CPython this is the SCM branch from which the\n        Python binary was built.\n\n        If not available, an empty string is returned.\n\n    '
                2
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 2
                6       BINARY_SUBSCR                   
                8       RETURN_VALUE                    
        'python_branch'
        [Code]
            File Name: platform.py
            Object Name: python_revision
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns a string identifying the Python implementation\n        revision.\n\n        For CPython this is the SCM revision from which the\n        Python binary was built.\n\n        If not available, an empty string is returned.\n\n    '
                3
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 3
                6       BINARY_SUBSCR                   
                8       RETURN_VALUE                    
        'python_revision'
        [Code]
            File Name: platform.py
            Object Name: python_build
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns a tuple (buildno, builddate) stating the Python\n        build number and date as strings.\n\n    '
                4
                6
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 4
                6       LOAD_CONST                      2: 6
                8       BUILD_SLICE                     2
                10      BINARY_SUBSCR                   
                12      RETURN_VALUE                    
        'python_build'
        [Code]
            File Name: platform.py
            Object Name: python_compiler
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_sys_version'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns a string identifying the compiler used for compiling\n        Python.\n\n    '
                6
            [Disassembly]
                0       LOAD_GLOBAL                     0: _sys_version
                2       CALL_FUNCTION                   0
                4       LOAD_CONST                      1: 6
                6       BINARY_SUBSCR                   
                8       RETURN_VALUE                    
        'python_compiler'
        [Code]
            File Name: platform.py
            Object Name: platform
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 25
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_platform_cache'
                'get'
                'uname'
                'system_alias'
                'mac_ver'
                'win32_ver'
                '_platform'
                'libc_ver'
                'java_ver'
                'architecture'
                'sys'
                'executable'
            [Var Names]
                'aliased'
                'terse'
                'result'
                'system'
                'node'
                'release'
                'version'
                'machine'
                'processor'
                'macos_release'
                'rel'
                'vers'
                'csd'
                'ptype'
                'platform'
                'libcname'
                'libcversion'
                'r'
                'v'
                'vminfo'
                'os_name'
                'os_version'
                'os_arch'
                'bits'
                'linkage'
            [Free Vars]
            [Cell Vars]
            [Constants]
                ' Returns a single string identifying the underlying platform\n        with as much useful information as possible (but no more :).\n\n        The output is intended to be human readable rather than\n        machine parseable. It may look different on different\n        platforms and this is intended.\n\n        If "aliased" is true, the function will use aliases for\n        various platforms that report system names which differ from\n        their common names, e.g. SunOS will be reported as\n        Solaris. The system_alias() function is used to implement\n        this.\n\n        Setting terse to true causes the function to return only the\n        absolute minimum information needed to identify the platform.\n\n    '
                None
                ''
                'Darwin'
                0
                'macOS'
                'Windows'
                (
                    'Linux'
                )
                'with'
                'Java'
                'on'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _platform_cache
                2       LOAD_METHOD                     1: get
                4       LOAD_FAST                       0: aliased
                6       LOAD_FAST                       1: terse
                8       BUILD_TUPLE                     2
                10      LOAD_CONST                      1: None
                12      CALL_METHOD                     2
                14      STORE_FAST                      2: result
                16      LOAD_FAST                       2: result
                18      LOAD_CONST                      1: None
                20      IS_OP                           1 (is not)
                22      POP_JUMP_IF_FALSE               14 (to 28)
                24      LOAD_FAST                       2: result
                26      RETURN_VALUE                    
                28      LOAD_GLOBAL                     2: uname
                30      CALL_FUNCTION                   0
                32      UNPACK_SEQUENCE                 6
                34      STORE_FAST                      3: system
                36      STORE_FAST                      4: node
                38      STORE_FAST                      5: release
                40      STORE_FAST                      6: version
                42      STORE_FAST                      7: machine
                44      STORE_FAST                      8: processor
                46      LOAD_FAST                       7: machine
                48      LOAD_FAST                       8: processor
                50      COMPARE_OP                      2 (==)
                52      POP_JUMP_IF_FALSE               29 (to 58)
                54      LOAD_CONST                      2: ''
                56      STORE_FAST                      8: processor
                58      LOAD_FAST                       0: aliased
                60      POP_JUMP_IF_FALSE               40 (to 80)
                62      LOAD_GLOBAL                     3: system_alias
                64      LOAD_FAST                       3: system
                66      LOAD_FAST                       5: release
                68      LOAD_FAST                       6: version
                70      CALL_FUNCTION                   3
                72      UNPACK_SEQUENCE                 3
                74      STORE_FAST                      3: system
                76      STORE_FAST                      5: release
                78      STORE_FAST                      6: version
                80      LOAD_FAST                       3: system
                82      LOAD_CONST                      3: 'Darwin'
                84      COMPARE_OP                      2 (==)
                86      POP_JUMP_IF_FALSE               55 (to 110)
                88      LOAD_GLOBAL                     4: mac_ver
                90      CALL_FUNCTION                   0
                92      LOAD_CONST                      4: 0
                94      BINARY_SUBSCR                   
                96      STORE_FAST                      9: macos_release
                98      LOAD_FAST                       9: macos_release
                100     POP_JUMP_IF_FALSE               55 (to 110)
                102     LOAD_CONST                      5: 'macOS'
                104     STORE_FAST                      3: system
                106     LOAD_FAST                       9: macos_release
                108     STORE_FAST                      5: release
                110     LOAD_FAST                       3: system
                112     LOAD_CONST                      6: 'Windows'
                114     COMPARE_OP                      2 (==)
                116     POP_JUMP_IF_FALSE               83 (to 166)
                118     LOAD_GLOBAL                     5: win32_ver
                120     LOAD_FAST                       6: version
                122     CALL_FUNCTION                   1
                124     UNPACK_SEQUENCE                 4
                126     STORE_FAST                      10: rel
                128     STORE_FAST                      11: vers
                130     STORE_FAST                      12: csd
                132     STORE_FAST                      13: ptype
                134     LOAD_FAST                       1: terse
                136     POP_JUMP_IF_FALSE               75 (to 150)
                138     LOAD_GLOBAL                     6: _platform
                140     LOAD_FAST                       3: system
                142     LOAD_FAST                       5: release
                144     CALL_FUNCTION                   2
                146     STORE_FAST                      14: platform
                148     JUMP_FORWARD                    89 (to 328)
                150     LOAD_GLOBAL                     6: _platform
                152     LOAD_FAST                       3: system
                154     LOAD_FAST                       5: release
                156     LOAD_FAST                       6: version
                158     LOAD_FAST                       12: csd
                160     CALL_FUNCTION                   4
                162     STORE_FAST                      14: platform
                164     JUMP_FORWARD                    81 (to 328)
                166     LOAD_FAST                       3: system
                168     LOAD_CONST                      7: ('Linux',)
                170     CONTAINS_OP                     0 (in)
                172     POP_JUMP_IF_FALSE               104 (to 208)
                174     LOAD_GLOBAL                     7: libc_ver
                176     CALL_FUNCTION                   0
                178     UNPACK_SEQUENCE                 2
                180     STORE_FAST                      15: libcname
                182     STORE_FAST                      16: libcversion
                184     LOAD_GLOBAL                     6: _platform
                186     LOAD_FAST                       3: system
                188     LOAD_FAST                       5: release
                190     LOAD_FAST                       7: machine
                192     LOAD_FAST                       8: processor
                194     LOAD_CONST                      8: 'with'
                196     LOAD_FAST                       15: libcname
                198     LOAD_FAST                       16: libcversion
                200     BINARY_ADD                      
                202     CALL_FUNCTION                   6
                204     STORE_FAST                      14: platform
                206     JUMP_FORWARD                    60 (to 328)
                208     LOAD_FAST                       3: system
                210     LOAD_CONST                      9: 'Java'
                212     COMPARE_OP                      2 (==)
                214     POP_JUMP_IF_FALSE               140 (to 280)
                216     LOAD_GLOBAL                     8: java_ver
                218     CALL_FUNCTION                   0
                220     UNPACK_SEQUENCE                 4
                222     STORE_FAST                      17: r
                224     STORE_FAST                      18: v
                226     STORE_FAST                      19: vminfo
                228     UNPACK_SEQUENCE                 3
                230     STORE_FAST                      20: os_name
                232     STORE_FAST                      21: os_version
                234     STORE_FAST                      22: os_arch
                236     LOAD_FAST                       1: terse
                238     POP_JUMP_IF_TRUE                122 (to 244)
                240     LOAD_FAST                       20: os_name
                242     POP_JUMP_IF_TRUE                129 (to 258)
                244     LOAD_GLOBAL                     6: _platform
                246     LOAD_FAST                       3: system
                248     LOAD_FAST                       5: release
                250     LOAD_FAST                       6: version
                252     CALL_FUNCTION                   3
                254     STORE_FAST                      14: platform
                256     JUMP_FORWARD                    35 (to 328)
                258     LOAD_GLOBAL                     6: _platform
                260     LOAD_FAST                       3: system
                262     LOAD_FAST                       5: release
                264     LOAD_FAST                       6: version
                266     LOAD_CONST                      10: 'on'
                268     LOAD_FAST                       20: os_name
                270     LOAD_FAST                       21: os_version
                272     LOAD_FAST                       22: os_arch
                274     CALL_FUNCTION                   7
                276     STORE_FAST                      14: platform
                278     JUMP_FORWARD                    24 (to 328)
                280     LOAD_FAST                       1: terse
                282     POP_JUMP_IF_FALSE               148 (to 296)
                284     LOAD_GLOBAL                     6: _platform
                286     LOAD_FAST                       3: system
                288     LOAD_FAST                       5: release
                290     CALL_FUNCTION                   2
                292     STORE_FAST                      14: platform
                294     JUMP_FORWARD                    16 (to 328)
                296     LOAD_GLOBAL                     9: architecture
                298     LOAD_GLOBAL                     10: sys
                300     LOAD_ATTR                       11: executable
                302     CALL_FUNCTION                   1
                304     UNPACK_SEQUENCE                 2
                306     STORE_FAST                      23: bits
                308     STORE_FAST                      24: linkage
                310     LOAD_GLOBAL                     6: _platform
                312     LOAD_FAST                       3: system
                314     LOAD_FAST                       5: release
                316     LOAD_FAST                       7: machine
                318     LOAD_FAST                       8: processor
                320     LOAD_FAST                       23: bits
                322     LOAD_FAST                       24: linkage
                324     CALL_FUNCTION                   6
                326     STORE_FAST                      14: platform
                328     LOAD_FAST                       14: platform
                330     LOAD_GLOBAL                     0: _platform_cache
                332     LOAD_FAST                       0: aliased
                334     LOAD_FAST                       1: terse
                336     BUILD_TUPLE                     2
                338     STORE_SUBSCR                    
                340     LOAD_FAST                       14: platform
                342     RETURN_VALUE                    
        'platform'
        '^(?P<name>[a-zA-Z0-9_]+)=(?P<quote>["\']?)(?P<value>.*)(?P=quote)$'
        '\\\\([\\\\\\$\\"\\\'`])'
        (
            '/etc/os-release'
            '/usr/lib/os-release'
        )
        [Code]
            File Name: platform.py
            Object Name: _parse_os_release
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os_release_line'
                'match'
                '_os_release_unescape'
                'sub'
                'group'
            [Var Names]
                'lines'
                'info'
                'line'
                'mo'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'Linux'
                'linux'
                (
                    'NAME'
                    'ID'
                    'PRETTY_NAME'
                )
                '\\1'
                'value'
                'name'
            [Disassembly]
                0       LOAD_CONST                      1: 'Linux'
                2       LOAD_CONST                      2: 'linux'
                4       LOAD_CONST                      1: 'Linux'
                6       LOAD_CONST                      3: ('NAME', 'ID', 'PRETTY_NAME')
                8       BUILD_CONST_KEY_MAP             3
                10      STORE_FAST                      1: info
                12      LOAD_FAST                       0: lines
                14      GET_ITER                        
                16      FOR_ITER                        25 (to 68)
                18      STORE_FAST                      2: line
                20      LOAD_GLOBAL                     0: _os_release_line
                22      LOAD_METHOD                     1: match
                24      LOAD_FAST                       2: line
                26      CALL_METHOD                     1
                28      STORE_FAST                      3: mo
                30      LOAD_FAST                       3: mo
                32      LOAD_CONST                      0: None
                34      IS_OP                           1 (is not)
                36      POP_JUMP_IF_FALSE               33 (to 66)
                38      LOAD_GLOBAL                     2: _os_release_unescape
                40      LOAD_METHOD                     3: sub
                42      LOAD_CONST                      4: '\\1'
                44      LOAD_FAST                       3: mo
                46      LOAD_METHOD                     4: group
                48      LOAD_CONST                      5: 'value'
                50      CALL_METHOD                     1
                52      CALL_METHOD                     2
                54      LOAD_FAST                       1: info
                56      LOAD_FAST                       3: mo
                58      LOAD_METHOD                     4: group
                60      LOAD_CONST                      6: 'name'
                62      CALL_METHOD                     1
                64      STORE_SUBSCR                    
                66      JUMP_ABSOLUTE                   8 (to 16)
                68      LOAD_FAST                       1: info
                70      RETURN_VALUE                    
        '_parse_os_release'
        [Code]
            File Name: platform.py
            Object Name: freedesktop_os_release
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_os_release_cache'
                '_os_release_candidates'
                'open'
                '_parse_os_release'
                'OSError'
                'errno'
                'join'
                'copy'
            [Var Names]
                'errno'
                'candidate'
                'f'
                'e'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Return operation system identification from freedesktop.org os-release\n    '
                None
                'utf-8'
                (
                    'encoding'
                )
                'Unable to read files '
                ', '
            [Disassembly]
                0       LOAD_GLOBAL                     0: _os_release_cache
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               75 (to 150)
                8       LOAD_CONST                      1: None
                10      STORE_FAST                      0: errno
                12      LOAD_GLOBAL                     1: _os_release_candidates
                14      GET_ITER                        
                16      FOR_ITER                        55 (to 128)
                18      STORE_FAST                      1: candidate
                20      SETUP_FINALLY                   32 (to 86)
                22      LOAD_GLOBAL                     2: open
                24      LOAD_FAST                       1: candidate
                26      LOAD_CONST                      2: 'utf-8'
                28      LOAD_CONST                      3: ('encoding',)
                30      CALL_FUNCTION_KW                2
                32      SETUP_WITH                      12 (to 58)
                34      STORE_FAST                      2: f
                36      LOAD_GLOBAL                     3: _parse_os_release
                38      LOAD_FAST                       2: f
                40      CALL_FUNCTION                   1
                42      STORE_GLOBAL                    0: _os_release_cache
                44      POP_BLOCK                       
                46      LOAD_CONST                      1: None
                48      DUP_TOP                         
                50      DUP_TOP                         
                52      CALL_FUNCTION                   3
                54      POP_TOP                         
                56      JUMP_FORWARD                    8 (to 74)
                58      WITH_EXCEPT_START               
                60      POP_JUMP_IF_TRUE                32 (to 64)
                62      RERAISE                         1
                64      POP_TOP                         
                66      POP_TOP                         
                68      POP_TOP                         
                70      POP_EXCEPT                      
                72      POP_TOP                         
                74      POP_BLOCK                       
                76      POP_TOP                         
                78      LOAD_GLOBAL                     0: _os_release_cache
                80      LOAD_METHOD                     7: copy
                82      CALL_METHOD                     0
                84      RETURN_VALUE                    
                86      DUP_TOP                         
                88      LOAD_GLOBAL                     4: OSError
                90      JUMP_IF_NOT_EXC_MATCH           63 (to 126)
                92      POP_TOP                         
                94      STORE_FAST                      3: e
                96      POP_TOP                         
                98      SETUP_FINALLY                   9 (to 118)
                100     LOAD_FAST                       3: e
                102     LOAD_ATTR                       5: errno
                104     STORE_FAST                      0: errno
                106     POP_BLOCK                       
                108     POP_EXCEPT                      
                110     LOAD_CONST                      1: None
                112     STORE_FAST                      3: e
                114     DELETE_FAST                     3: e
                116     JUMP_ABSOLUTE                   8 (to 16)
                118     LOAD_CONST                      1: None
                120     STORE_FAST                      3: e
                122     DELETE_FAST                     3: e
                124     RERAISE                         1
                126     RERAISE                         0
                128     LOAD_GLOBAL                     4: OSError
                130     LOAD_FAST                       0: errno
                132     LOAD_CONST                      4: 'Unable to read files '
                134     LOAD_CONST                      5: ', '
                136     LOAD_METHOD                     6: join
                138     LOAD_GLOBAL                     1: _os_release_candidates
                140     CALL_METHOD                     1
                142     FORMAT_VALUE                    0 (FVC_NONE)
                144     BUILD_STRING                    2
                146     CALL_FUNCTION                   2
                148     RAISE_VARARGS                   1
                150     LOAD_GLOBAL                     0: _os_release_cache
                152     LOAD_METHOD                     7: copy
                154     CALL_METHOD                     0
                156     RETURN_VALUE                    
        'freedesktop_os_release'
        '__main__'
        'terse'
        '--terse'
        'nonaliased'
        '--nonaliased'
        (
            None
            ''
            ''
            16384
        )
        (
            ''
        )
        (
            ''
            ''
            ''
            (
                'win32'
                'win16'
                'dos'
            )
        )
        (
            ''
            ''
            ''
            ''
        )
        (
            ''
            (
                ''
                ''
                ''
            )
            ''
        )
        (
            ''
            ''
            (
                ''
                ''
                ''
            )
            (
                ''
                ''
                ''
            )
        )
        (
            None
        )
        (
            0
            0
        )
    [Disassembly]
        0       LOAD_CONST                      0: ' This module tries to retrieve as much platform-identifying data as\n    possible. It makes this information available via function APIs.\n\n    If called from the command line, it prints the platform\n    information concatenated as single string to stdout. The output\n    format is useable as part of a filename.\n\n'
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: '\n    Copyright (c) 1999-2000, Marc-Andre Lemburg; mailto:mal@lemburg.com\n    Copyright (c) 2000-2010, eGenix.com Software GmbH; mailto:info@egenix.com\n\n    Permission to use, copy, modify, and distribute this software and its\n    documentation for any purpose and without fee or royalty is hereby granted,\n    provided that the above copyright notice appear in all copies and that\n    both that copyright notice and this permission notice appear in\n    supporting documentation or portions thereof, including modifications,\n    that you make.\n\n    EGENIX.COM SOFTWARE GMBH DISCLAIMS ALL WARRANTIES WITH REGARD TO\n    THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n    FITNESS, IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,\n    INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING\n    FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\n    NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\n    WITH THE USE OR PERFORMANCE OF THIS SOFTWARE !\n\n'
        6       STORE_NAME                      1: __copyright__
        8       LOAD_CONST                      2: '1.0.8'
        10      STORE_NAME                      2: __version__
        12      LOAD_CONST                      3: 0
        14      LOAD_CONST                      4: None
        16      IMPORT_NAME                     3: collections
        18      STORE_NAME                      3: collections
        20      LOAD_CONST                      3: 0
        22      LOAD_CONST                      4: None
        24      IMPORT_NAME                     4: os
        26      STORE_NAME                      4: os
        28      LOAD_CONST                      3: 0
        30      LOAD_CONST                      4: None
        32      IMPORT_NAME                     5: re
        34      STORE_NAME                      5: re
        36      LOAD_CONST                      3: 0
        38      LOAD_CONST                      4: None
        40      IMPORT_NAME                     6: sys
        42      STORE_NAME                      6: sys
        44      LOAD_CONST                      3: 0
        46      LOAD_CONST                      4: None
        48      IMPORT_NAME                     7: subprocess
        50      STORE_NAME                      7: subprocess
        52      LOAD_CONST                      3: 0
        54      LOAD_CONST                      4: None
        56      IMPORT_NAME                     8: functools
        58      STORE_NAME                      8: functools
        60      LOAD_CONST                      3: 0
        62      LOAD_CONST                      4: None
        64      IMPORT_NAME                     9: itertools
        66      STORE_NAME                      9: itertools
        68      LOAD_CONST                      5: 10
        70      LOAD_CONST                      6: 20
        72      LOAD_CONST                      6: 20
        74      LOAD_CONST                      7: 30
        76      LOAD_CONST                      7: 30
        78      LOAD_CONST                      8: 40
        80      LOAD_CONST                      9: 50
        82      LOAD_CONST                      9: 50
        84      LOAD_CONST                      10: 200
        86      LOAD_CONST                      10: 200
        88      LOAD_CONST                      11: ('dev', 'alpha', 'a', 'beta', 'b', 'c', 'RC', 'rc', 'pl', 'p')
        90      BUILD_CONST_KEY_MAP             10
        92      STORE_NAME                      10: _ver_stages
        94      LOAD_NAME                       5: re
        96      LOAD_METHOD                     11: compile
        98      LOAD_CONST                      12: '([0-9]+|[._+-])'
        100     CALL_METHOD                     1
        102     STORE_NAME                      12: _component_re
        104     LOAD_CONST                      13: <CODE> _comparable_version
        106     LOAD_CONST                      14: '_comparable_version'
        108     MAKE_FUNCTION                   0
        110     STORE_NAME                      13: _comparable_version
        112     LOAD_NAME                       5: re
        114     LOAD_METHOD                     11: compile
        116     LOAD_CONST                      15: b'(__libc_init)|(GLIBC_([0-9.]+))|(libc(_\\w+)?\\.so(?:\\.(\\d[0-9.]*))?)'
        118     LOAD_NAME                       5: re
        120     LOAD_ATTR                       14: ASCII
        122     CALL_METHOD                     2
        124     STORE_NAME                      15: _libc_search
        126     LOAD_CONST                      132: (None, '', '', 16384)
        128     LOAD_CONST                      18: <CODE> libc_ver
        130     LOAD_CONST                      19: 'libc_ver'
        132     MAKE_FUNCTION                   1
        134     STORE_NAME                      16: libc_ver
        136     LOAD_CONST                      133: ('',)
        138     LOAD_CONST                      20: <CODE> _norm_version
        140     LOAD_CONST                      21: '_norm_version'
        142     MAKE_FUNCTION                   1
        144     STORE_NAME                      17: _norm_version
        146     LOAD_NAME                       5: re
        148     LOAD_METHOD                     11: compile
        150     LOAD_CONST                      22: '(?:([\\w ]+) ([\\w.]+) .*\\[.* ([\\d.]+)\\])'
        152     CALL_METHOD                     1
        154     STORE_NAME                      18: _ver_output
        156     NOP                             
        158     NOP                             
        160     LOAD_CONST                      134: ('', '', '', ('win32', 'win16', 'dos'))
        162     LOAD_CONST                      24: <CODE> _syscmd_ver
        164     LOAD_CONST                      25: '_syscmd_ver'
        166     MAKE_FUNCTION                   1
        168     STORE_NAME                      19: _syscmd_ver
        170     LOAD_CONST                      26: '2000'
        172     LOAD_CONST                      27: 'XP'
        174     LOAD_CONST                      28: '2003Server'
        176     LOAD_CONST                      29: 'post2003'
        178     LOAD_CONST                      30: 'Vista'
        180     LOAD_CONST                      31: '7'
        182     LOAD_CONST                      32: '8'
        184     LOAD_CONST                      33: '8.1'
        186     LOAD_CONST                      34: 'post8.1'
        188     LOAD_CONST                      35: '10'
        190     LOAD_CONST                      36: 'post10'
        192     LOAD_CONST                      37: ((5, 0), (5, 1), (5, 2), (5, None), (6, 0), (6, 1), (6, 2), (6, 3), (6, None), (10, 0), (10, None))
        194     BUILD_CONST_KEY_MAP             11
        196     STORE_NAME                      20: _WIN32_CLIENT_RELEASES
        198     LOAD_CONST                      28: '2003Server'
        200     LOAD_CONST                      38: '2008Server'
        202     LOAD_CONST                      39: '2008ServerR2'
        204     LOAD_CONST                      40: '2012Server'
        206     LOAD_CONST                      41: '2012ServerR2'
        208     LOAD_CONST                      42: 'post2012ServerR2'
        210     LOAD_CONST                      43: ((5, 2), (6, 0), (6, 1), (6, 2), (6, 3), (6, None))
        212     BUILD_CONST_KEY_MAP             6
        214     STORE_NAME                      21: _WIN32_SERVER_RELEASES
        216     LOAD_CONST                      44: <CODE> win32_is_iot
        218     LOAD_CONST                      45: 'win32_is_iot'
        220     MAKE_FUNCTION                   0
        222     STORE_NAME                      22: win32_is_iot
        224     LOAD_CONST                      46: <CODE> win32_edition
        226     LOAD_CONST                      47: 'win32_edition'
        228     MAKE_FUNCTION                   0
        230     STORE_NAME                      23: win32_edition
        232     LOAD_CONST                      135: ('', '', '', '')
        234     LOAD_CONST                      48: <CODE> win32_ver
        236     LOAD_CONST                      49: 'win32_ver'
        238     MAKE_FUNCTION                   1
        240     STORE_NAME                      24: win32_ver
        242     LOAD_CONST                      50: <CODE> _mac_ver_xml
        244     LOAD_CONST                      51: '_mac_ver_xml'
        246     MAKE_FUNCTION                   0
        248     STORE_NAME                      25: _mac_ver_xml
        250     LOAD_CONST                      136: ('', ('', '', ''), '')
        252     LOAD_CONST                      53: <CODE> mac_ver
        254     LOAD_CONST                      54: 'mac_ver'
        256     MAKE_FUNCTION                   1
        258     STORE_NAME                      26: mac_ver
        260     LOAD_CONST                      55: <CODE> _java_getprop
        262     LOAD_CONST                      56: '_java_getprop'
        264     MAKE_FUNCTION                   0
        266     STORE_NAME                      27: _java_getprop
        268     LOAD_CONST                      137: ('', '', ('', '', ''), ('', '', ''))
        270     LOAD_CONST                      57: <CODE> java_ver
        272     LOAD_CONST                      58: 'java_ver'
        274     MAKE_FUNCTION                   1
        276     STORE_NAME                      28: java_ver
        278     LOAD_CONST                      59: <CODE> system_alias
        280     LOAD_CONST                      60: 'system_alias'
        282     MAKE_FUNCTION                   0
        284     STORE_NAME                      29: system_alias
        286     LOAD_CONST                      61: <CODE> _platform
        288     LOAD_CONST                      62: '_platform'
        290     MAKE_FUNCTION                   0
        292     STORE_NAME                      30: _platform
        294     LOAD_CONST                      133: ('',)
        296     LOAD_CONST                      63: <CODE> _node
        298     LOAD_CONST                      64: '_node'
        300     MAKE_FUNCTION                   1
        302     STORE_NAME                      31: _node
        304     LOAD_CONST                      65: <CODE> _follow_symlinks
        306     LOAD_CONST                      66: '_follow_symlinks'
        308     MAKE_FUNCTION                   0
        310     STORE_NAME                      32: _follow_symlinks
        312     LOAD_CONST                      133: ('',)
        314     LOAD_CONST                      67: <CODE> _syscmd_file
        316     LOAD_CONST                      68: '_syscmd_file'
        318     MAKE_FUNCTION                   1
        320     STORE_NAME                      33: _syscmd_file
        322     LOAD_CONST                      69: ('', 'WindowsPE')
        324     LOAD_CONST                      70: ('', 'Windows')
        326     LOAD_CONST                      71: ('', 'MSDOS')
        328     LOAD_CONST                      23: ('win32', 'win16', 'dos')
        330     BUILD_CONST_KEY_MAP             3
        332     STORE_NAME                      34: _default_architecture
        334     LOAD_NAME                       6: sys
        336     LOAD_ATTR                       35: executable
        338     LOAD_CONST                      16: ''
        340     LOAD_CONST                      16: ''
        342     BUILD_TUPLE                     3
        344     LOAD_CONST                      72: <CODE> architecture
        346     LOAD_CONST                      73: 'architecture'
        348     MAKE_FUNCTION                   1
        350     STORE_NAME                      36: architecture
        352     LOAD_CONST                      74: <CODE> _get_machine_win32
        354     LOAD_CONST                      75: '_get_machine_win32'
        356     MAKE_FUNCTION                   0
        358     STORE_NAME                      37: _get_machine_win32
        360     LOAD_BUILD_CLASS                
        362     LOAD_CONST                      76: <CODE> _Processor
        364     LOAD_CONST                      77: '_Processor'
        366     MAKE_FUNCTION                   0
        368     LOAD_CONST                      77: '_Processor'
        370     CALL_FUNCTION                   2
        372     STORE_NAME                      38: _Processor
        374     LOAD_CONST                      78: <CODE> _unknown_as_blank
        376     LOAD_CONST                      79: '_unknown_as_blank'
        378     MAKE_FUNCTION                   0
        380     STORE_NAME                      39: _unknown_as_blank
        382     LOAD_BUILD_CLASS                
        384     LOAD_CONST                      80: <CODE> uname_result
        386     LOAD_CONST                      81: 'uname_result'
        388     MAKE_FUNCTION                   0
        390     LOAD_CONST                      81: 'uname_result'
        392     LOAD_NAME                       3: collections
        394     LOAD_METHOD                     40: namedtuple
        396     LOAD_CONST                      82: 'uname_result_base'
        398     LOAD_CONST                      83: 'system node release version machine'
        400     CALL_METHOD                     2
        402     CALL_FUNCTION                   3
        404     STORE_NAME                      41: uname_result
        406     LOAD_CONST                      4: None
        408     STORE_GLOBAL                    42: _uname_cache
        410     LOAD_CONST                      84: <CODE> uname
        412     LOAD_CONST                      85: 'uname'
        414     MAKE_FUNCTION                   0
        416     STORE_NAME                      43: uname
        418     LOAD_CONST                      86: <CODE> system
        420     LOAD_CONST                      87: 'system'
        422     MAKE_FUNCTION                   0
        424     STORE_NAME                      44: system
        426     LOAD_CONST                      88: <CODE> node
        428     LOAD_CONST                      89: 'node'
        430     MAKE_FUNCTION                   0
        432     STORE_NAME                      45: node
        434     LOAD_CONST                      90: <CODE> release
        436     LOAD_CONST                      91: 'release'
        438     MAKE_FUNCTION                   0
        440     STORE_NAME                      46: release
        442     LOAD_CONST                      92: <CODE> version
        444     LOAD_CONST                      93: 'version'
        446     MAKE_FUNCTION                   0
        448     STORE_NAME                      47: version
        450     LOAD_CONST                      94: <CODE> machine
        452     LOAD_CONST                      95: 'machine'
        454     MAKE_FUNCTION                   0
        456     STORE_NAME                      48: machine
        458     LOAD_CONST                      96: <CODE> processor
        460     LOAD_CONST                      97: 'processor'
        462     MAKE_FUNCTION                   0
        464     STORE_NAME                      49: processor
        466     LOAD_NAME                       5: re
        468     LOAD_METHOD                     11: compile
        470     LOAD_CONST                      98: '([\\w.+]+)\\s*\\(#?([^,]+)(?:,\\s*([\\w ]*)(?:,\\s*([\\w :]*))?)?\\)\\s*\\[([^\\]]+)\\]?'
        472     LOAD_NAME                       5: re
        474     LOAD_ATTR                       14: ASCII
        476     CALL_METHOD                     2
        478     STORE_NAME                      50: _sys_version_parser
        480     LOAD_NAME                       5: re
        482     LOAD_METHOD                     11: compile
        484     LOAD_CONST                      99: 'IronPython\\s*([\\d\\.]+)(?: \\(([\\d\\.]+)\\))? on (.NET [\\d\\.]+)'
        486     LOAD_NAME                       5: re
        488     LOAD_ATTR                       14: ASCII
        490     CALL_METHOD                     2
        492     STORE_NAME                      51: _ironpython_sys_version_parser
        494     LOAD_NAME                       5: re
        496     LOAD_METHOD                     11: compile
        498     LOAD_CONST                      100: '([\\d.]+)\\s*\\(IronPython\\s*[\\d.]+\\s*\\(([\\d.]+)\\) on ([\\w.]+ [\\d.]+(?: \\(\\d+-bit\\))?)\\)'
        500     CALL_METHOD                     1
        502     STORE_NAME                      52: _ironpython26_sys_version_parser
        504     LOAD_NAME                       5: re
        506     LOAD_METHOD                     11: compile
        508     LOAD_CONST                      101: '([\\w.+]+)\\s*\\(#?([^,]+),\\s*([\\w ]+),\\s*([\\w :]+)\\)\\s*\\[PyPy [^\\]]+\\]?'
        510     CALL_METHOD                     1
        512     STORE_NAME                      53: _pypy_sys_version_parser
        514     BUILD_MAP                       0
        516     STORE_NAME                      54: _sys_version_cache
        518     LOAD_CONST                      138: (None,)
        520     LOAD_CONST                      102: <CODE> _sys_version
        522     LOAD_CONST                      103: '_sys_version'
        524     MAKE_FUNCTION                   1
        526     STORE_NAME                      55: _sys_version
        528     LOAD_CONST                      104: <CODE> python_implementation
        530     LOAD_CONST                      105: 'python_implementation'
        532     MAKE_FUNCTION                   0
        534     STORE_NAME                      56: python_implementation
        536     LOAD_CONST                      106: <CODE> python_version
        538     LOAD_CONST                      107: 'python_version'
        540     MAKE_FUNCTION                   0
        542     STORE_NAME                      57: python_version
        544     LOAD_CONST                      108: <CODE> python_version_tuple
        546     LOAD_CONST                      109: 'python_version_tuple'
        548     MAKE_FUNCTION                   0
        550     STORE_NAME                      58: python_version_tuple
        552     LOAD_CONST                      110: <CODE> python_branch
        554     LOAD_CONST                      111: 'python_branch'
        556     MAKE_FUNCTION                   0
        558     STORE_NAME                      59: python_branch
        560     LOAD_CONST                      112: <CODE> python_revision
        562     LOAD_CONST                      113: 'python_revision'
        564     MAKE_FUNCTION                   0
        566     STORE_NAME                      60: python_revision
        568     LOAD_CONST                      114: <CODE> python_build
        570     LOAD_CONST                      115: 'python_build'
        572     MAKE_FUNCTION                   0
        574     STORE_NAME                      61: python_build
        576     LOAD_CONST                      116: <CODE> python_compiler
        578     LOAD_CONST                      117: 'python_compiler'
        580     MAKE_FUNCTION                   0
        582     STORE_NAME                      62: python_compiler
        584     BUILD_MAP                       0
        586     STORE_NAME                      63: _platform_cache
        588     LOAD_CONST                      139: (0, 0)
        590     LOAD_CONST                      118: <CODE> platform
        592     LOAD_CONST                      119: 'platform'
        594     MAKE_FUNCTION                   1
        596     STORE_NAME                      64: platform
        598     LOAD_NAME                       5: re
        600     LOAD_METHOD                     11: compile
        602     LOAD_CONST                      120: '^(?P<name>[a-zA-Z0-9_]+)=(?P<quote>["\']?)(?P<value>.*)(?P=quote)$'
        604     CALL_METHOD                     1
        606     STORE_NAME                      65: _os_release_line
        608     LOAD_NAME                       5: re
        610     LOAD_METHOD                     11: compile
        612     LOAD_CONST                      121: '\\\\([\\\\\\$\\"\\\'`])'
        614     CALL_METHOD                     1
        616     STORE_NAME                      66: _os_release_unescape
        618     LOAD_CONST                      122: ('/etc/os-release', '/usr/lib/os-release')
        620     STORE_NAME                      67: _os_release_candidates
        622     LOAD_CONST                      4: None
        624     STORE_GLOBAL                    68: _os_release_cache
        626     LOAD_CONST                      123: <CODE> _parse_os_release
        628     LOAD_CONST                      124: '_parse_os_release'
        630     MAKE_FUNCTION                   0
        632     STORE_NAME                      69: _parse_os_release
        634     LOAD_CONST                      125: <CODE> freedesktop_os_release
        636     LOAD_CONST                      126: 'freedesktop_os_release'
        638     MAKE_FUNCTION                   0
        640     STORE_NAME                      70: freedesktop_os_release
        642     LOAD_NAME                       71: __name__
        644     LOAD_CONST                      127: '__main__'
        646     COMPARE_OP                      2 (==)
        648     POP_JUMP_IF_FALSE               362 (to 724)
        652     LOAD_CONST                      128: 'terse'
        654     LOAD_NAME                       6: sys
        656     LOAD_ATTR                       72: argv
        658     CONTAINS_OP                     0 (in)
        660     JUMP_IF_TRUE_OR_POP             336 (to 672)
        664     LOAD_CONST                      129: '--terse'
        666     LOAD_NAME                       6: sys
        668     LOAD_ATTR                       72: argv
        670     CONTAINS_OP                     0 (in)
        672     STORE_NAME                      73: terse
        674     LOAD_CONST                      130: 'nonaliased'
        676     LOAD_NAME                       6: sys
        678     LOAD_ATTR                       72: argv
        680     CONTAINS_OP                     1 (not in)
        682     JUMP_IF_FALSE_OR_POP            347 (to 694)
        686     LOAD_CONST                      131: '--nonaliased'
        688     LOAD_NAME                       6: sys
        690     LOAD_ATTR                       72: argv
        692     CONTAINS_OP                     1 (not in)
        694     STORE_NAME                      74: aliased
        696     LOAD_NAME                       75: print
        698     LOAD_NAME                       64: platform
        700     LOAD_NAME                       74: aliased
        702     LOAD_NAME                       73: terse
        704     CALL_FUNCTION                   2
        706     CALL_FUNCTION                   1
        708     POP_TOP                         
        710     LOAD_NAME                       6: sys
        712     LOAD_METHOD                     76: exit
        714     LOAD_CONST                      3: 0
        716     CALL_METHOD                     1
        718     POP_TOP                         
        720     LOAD_CONST                      4: None
        722     RETURN_VALUE                    
        724     LOAD_CONST                      4: None
        726     RETURN_VALUE                    
