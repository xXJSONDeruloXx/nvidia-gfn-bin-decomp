shutil.pyc (Python 3.10)
[Code]
    File Name: shutil.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 8
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        '__doc__'
        'os'
        'sys'
        'stat'
        'fnmatch'
        'collections'
        'errno'
        'zlib'
        '_ZLIB_SUPPORTED'
        'ImportError'
        'bz2'
        '_BZ2_SUPPORTED'
        'lzma'
        '_LZMA_SUPPORTED'
        'name'
        '_WINDOWS'
        'posix'
        'nt'
        'COPY_BUFSIZE'
        'hasattr'
        'platform'
        'startswith'
        '_USE_CP_SENDFILE'
        '_HAS_FCOPYFILE'
        '_WIN_DEFAULT_PATHEXT'
        '__all__'
        'OSError'
        'Error'
        'SameFileError'
        'SpecialFileError'
        'ExecError'
        'ReadError'
        'Exception'
        'RegistryError'
        '_GiveupOnFastCopy'
        '_fastcopy_fcopyfile'
        '_fastcopy_sendfile'
        '_copyfileobj_readinto'
        'copyfileobj'
        '_samefile'
        '_stat'
        '_islink'
        'copyfile'
        'copymode'
        '_copyxattr'
        'copystat'
        'copy'
        'copy2'
        'ignore_patterns'
        '_copytree'
        'copytree'
        'stat_result'
        '_rmtree_isdir'
        '_rmtree_islink'
        '_rmtree_unsafe'
        '_rmtree_safe_fd'
        'open'
        'unlink'
        'rmdir'
        'supports_dir_fd'
        'scandir'
        'supports_fd'
        'supports_follow_symlinks'
        '_use_fd_functions'
        'rmtree'
        'avoids_symlink_attacks'
        '_basename'
        'move'
        '_destinsrc'
        '_is_immutable'
        '_get_gid'
        '_get_uid'
        '_make_tarball'
        '_make_zipfile'
        '_ARCHIVE_FORMATS'
        'get_archive_formats'
        'register_archive_format'
        'unregister_archive_format'
        'make_archive'
        'get_unpack_formats'
        '_check_unpack_options'
        'register_unpack_format'
        'unregister_unpack_format'
        '_ensure_directory'
        '_unpack_zipfile'
        '_unpack_tarfile'
        '_UNPACK_FORMATS'
        '_find_unpack_format'
        'unpack_archive'
        'append'
        'namedtuple'
        '_ntuple_diskusage'
        'total'
        'used'
        'free'
        'disk_usage'
        'chown'
        'get_terminal_size'
        '_access_check'
        'F_OK'
        'X_OK'
        'which'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        "Utility functions for copying and archiving files and directory trees.\n\nXXX The functions here don't copy the resource fork or other metadata on Mac.\n\n"
        0
        None
        True
        False
        'nt'
        'posix'
        1048576
        65536
        'sendfile'
        'linux'
        '_fcopyfile'
        '.COM;.EXE;.BAT;.CMD;.VBS;.JS;.WS;.MSC'
        (
            'copyfileobj'
            'copyfile'
            'copymode'
            'copystat'
            'copy'
            'copy2'
            'copytree'
            'move'
            'rmtree'
            'Error'
            'SpecialFileError'
            'ExecError'
            'make_archive'
            'get_archive_formats'
            'register_archive_format'
            'unregister_archive_format'
            'get_unpack_formats'
            'register_unpack_format'
            'unregister_unpack_format'
            'unpack_archive'
            'ignore_patterns'
            'chown'
            'which'
            'get_terminal_size'
            'SameFileError'
        )
        [Code]
            File Name: shutil.py
            Object Name: Error
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Error'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'Error'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
        'Error'
        [Code]
            File Name: shutil.py
            Object Name: SameFileError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'SameFileError'
                'Raised when source and destination are the same file.'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SameFileError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when source and destination are the same file.'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'SameFileError'
        [Code]
            File Name: shutil.py
            Object Name: SpecialFileError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'SpecialFileError'
                'Raised when trying to do a kind of operation (e.g. copying) which is\n    not supported on a special file (e.g. a named pipe)'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'SpecialFileError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when trying to do a kind of operation (e.g. copying) which is\n    not supported on a special file (e.g. a named pipe)'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'SpecialFileError'
        [Code]
            File Name: shutil.py
            Object Name: ExecError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ExecError'
                'Raised when a command could not be executed'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ExecError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when a command could not be executed'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'ExecError'
        [Code]
            File Name: shutil.py
            Object Name: ReadError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'ReadError'
                'Raised when an archive cannot be read'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'ReadError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when an archive cannot be read'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'ReadError'
        [Code]
            File Name: shutil.py
            Object Name: RegistryError
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                'RegistryError'
                'Raised when a registry operation with the archiving\n    and unpacking registries fails'
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: 'RegistryError'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised when a registry operation with the archiving\n    and unpacking registries fails'
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        'RegistryError'
        [Code]
            File Name: shutil.py
            Object Name: _GiveupOnFastCopy
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 0
            Stack Size: 1
            Flags: 0x00000040 (CO_NOFREE)
            [Names]
                '__name__'
                '__module__'
                '__qualname__'
                '__doc__'
            [Var Names]
            [Free Vars]
            [Cell Vars]
            [Constants]
                '_GiveupOnFastCopy'
                'Raised as a signal to fallback on using raw read()/write()\n    file copy when fast-copy functions fail to do so.\n    '
                None
            [Disassembly]
                0       LOAD_NAME                       0: __name__
                2       STORE_NAME                      1: __module__
                4       LOAD_CONST                      0: '_GiveupOnFastCopy'
                6       STORE_NAME                      2: __qualname__
                8       LOAD_CONST                      1: 'Raised as a signal to fallback on using raw read()/write()\n    file copy when fast-copy functions fail to do so.\n    '
                10      STORE_NAME                      3: __doc__
                12      LOAD_CONST                      2: None
                14      RETURN_VALUE                    
        '_GiveupOnFastCopy'
        [Code]
            File Name: shutil.py
            Object Name: _fastcopy_fcopyfile
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'fileno'
                'Exception'
                '_GiveupOnFastCopy'
                'posix'
                '_fcopyfile'
                'OSError'
                'name'
                'filename'
                'filename2'
                'errno'
                'EINVAL'
                'ENOTSUP'
            [Var Names]
                'fsrc'
                'fdst'
                'flags'
                'infd'
                'outfd'
                'err'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy a regular file content or metadata by using high-performance\n    fcopyfile(3) syscall (macOS).\n    '
                None
            [Disassembly]
                0       SETUP_FINALLY                   10 (to 22)
                2       LOAD_FAST                       0: fsrc
                4       LOAD_METHOD                     0: fileno
                6       CALL_METHOD                     0
                8       STORE_FAST                      3: infd
                10      LOAD_FAST                       1: fdst
                12      LOAD_METHOD                     0: fileno
                14      CALL_METHOD                     0
                16      STORE_FAST                      4: outfd
                18      POP_BLOCK                       
                20      JUMP_FORWARD                    16 (to 54)
                22      DUP_TOP                         
                24      LOAD_GLOBAL                     1: Exception
                26      JUMP_IF_NOT_EXC_MATCH           26 (to 52)
                28      POP_TOP                         
                30      STORE_FAST                      5: err
                32      POP_TOP                         
                34      SETUP_FINALLY                   4 (to 44)
                36      LOAD_GLOBAL                     2: _GiveupOnFastCopy
                38      LOAD_FAST                       5: err
                40      CALL_FUNCTION                   1
                42      RAISE_VARARGS                   1
                44      LOAD_CONST                      1: None
                46      STORE_FAST                      5: err
                48      DELETE_FAST                     5: err
                50      RERAISE                         1
                52      RERAISE                         0
                54      SETUP_FINALLY                   10 (to 76)
                56      LOAD_GLOBAL                     3: posix
                58      LOAD_METHOD                     4: _fcopyfile
                60      LOAD_FAST                       3: infd
                62      LOAD_FAST                       4: outfd
                64      LOAD_FAST                       2: flags
                66      CALL_METHOD                     3
                68      POP_TOP                         
                70      POP_BLOCK                       
                72      LOAD_CONST                      1: None
                74      RETURN_VALUE                    
                76      DUP_TOP                         
                78      LOAD_GLOBAL                     5: OSError
                80      JUMP_IF_NOT_EXC_MATCH           73 (to 146)
                82      POP_TOP                         
                84      STORE_FAST                      5: err
                86      POP_TOP                         
                88      SETUP_FINALLY                   24 (to 138)
                90      LOAD_FAST                       0: fsrc
                92      LOAD_ATTR                       6: name
                94      LOAD_FAST                       5: err
                96      STORE_ATTR                      7: filename
                98      LOAD_FAST                       1: fdst
                100     LOAD_ATTR                       6: name
                102     LOAD_FAST                       5: err
                104     STORE_ATTR                      8: filename2
                106     LOAD_FAST                       5: err
                108     LOAD_ATTR                       9: errno
                110     LOAD_GLOBAL                     9: errno
                112     LOAD_ATTR                       10: EINVAL
                114     LOAD_GLOBAL                     9: errno
                116     LOAD_ATTR                       11: ENOTSUP
                118     BUILD_SET                       2
                120     CONTAINS_OP                     0 (in)
                122     POP_JUMP_IF_FALSE               66 (to 132)
                124     LOAD_GLOBAL                     2: _GiveupOnFastCopy
                126     LOAD_FAST                       5: err
                128     CALL_FUNCTION                   1
                130     RAISE_VARARGS                   1
                132     LOAD_FAST                       5: err
                134     LOAD_CONST                      1: None
                136     RAISE_VARARGS                   2
                138     LOAD_CONST                      1: None
                140     STORE_FAST                      5: err
                142     DELETE_FAST                     5: err
                144     RERAISE                         1
                146     RERAISE                         0
        '_fastcopy_fcopyfile'
        [Code]
            File Name: shutil.py
            Object Name: _fastcopy_sendfile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'fileno'
                'Exception'
                '_GiveupOnFastCopy'
                'max'
                'os'
                'fstat'
                'st_size'
                'OSError'
                'sys'
                'maxsize'
                'min'
                'sendfile'
                'name'
                'filename'
                'filename2'
                'errno'
                'ENOTSOCK'
                '_USE_CP_SENDFILE'
                'ENOSPC'
                'lseek'
                'SEEK_CUR'
            [Var Names]
                'fsrc'
                'fdst'
                'infd'
                'outfd'
                'err'
                'blocksize'
                'offset'
                'sent'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy data from one regular mmap-like fd to another by using\n    high-performance sendfile(2) syscall.\n    This should work on Linux >= 2.6.33 only.\n    '
                None
                8388608
                134217728
                0x100000000
                1073741824
                0
                True
                False
            [Disassembly]
                0       SETUP_FINALLY                   10 (to 22)
                2       LOAD_FAST                       0: fsrc
                4       LOAD_METHOD                     0: fileno
                6       CALL_METHOD                     0
                8       STORE_FAST                      2: infd
                10      LOAD_FAST                       1: fdst
                12      LOAD_METHOD                     0: fileno
                14      CALL_METHOD                     0
                16      STORE_FAST                      3: outfd
                18      POP_BLOCK                       
                20      JUMP_FORWARD                    16 (to 54)
                22      DUP_TOP                         
                24      LOAD_GLOBAL                     1: Exception
                26      JUMP_IF_NOT_EXC_MATCH           26 (to 52)
                28      POP_TOP                         
                30      STORE_FAST                      4: err
                32      POP_TOP                         
                34      SETUP_FINALLY                   4 (to 44)
                36      LOAD_GLOBAL                     2: _GiveupOnFastCopy
                38      LOAD_FAST                       4: err
                40      CALL_FUNCTION                   1
                42      RAISE_VARARGS                   1
                44      LOAD_CONST                      1: None
                46      STORE_FAST                      4: err
                48      DELETE_FAST                     4: err
                50      RERAISE                         1
                52      RERAISE                         0
                54      SETUP_FINALLY                   11 (to 78)
                56      LOAD_GLOBAL                     3: max
                58      LOAD_GLOBAL                     4: os
                60      LOAD_METHOD                     5: fstat
                62      LOAD_FAST                       2: infd
                64      CALL_METHOD                     1
                66      LOAD_ATTR                       6: st_size
                68      LOAD_CONST                      2: 8388608
                70      CALL_FUNCTION                   2
                72      STORE_FAST                      5: blocksize
                74      POP_BLOCK                       
                76      JUMP_FORWARD                    11 (to 100)
                78      DUP_TOP                         
                80      LOAD_GLOBAL                     7: OSError
                82      JUMP_IF_NOT_EXC_MATCH           49 (to 98)
                84      POP_TOP                         
                86      POP_TOP                         
                88      POP_TOP                         
                90      LOAD_CONST                      3: 134217728
                92      STORE_FAST                      5: blocksize
                94      POP_EXCEPT                      
                96      JUMP_FORWARD                    1 (to 100)
                98      RERAISE                         0
                100     LOAD_GLOBAL                     8: sys
                102     LOAD_ATTR                       9: maxsize
                104     LOAD_CONST                      4: 0x100000000
                106     COMPARE_OP                      0 (<)
                108     POP_JUMP_IF_FALSE               60 (to 120)
                110     LOAD_GLOBAL                     10: min
                112     LOAD_FAST                       5: blocksize
                114     LOAD_CONST                      5: 1073741824
                116     CALL_FUNCTION                   2
                118     STORE_FAST                      5: blocksize
                120     LOAD_CONST                      6: 0
                122     STORE_FAST                      6: offset
                124     NOP                             
                126     SETUP_FINALLY                   10 (to 148)
                128     LOAD_GLOBAL                     4: os
                130     LOAD_METHOD                     11: sendfile
                132     LOAD_FAST                       3: outfd
                134     LOAD_FAST                       2: infd
                136     LOAD_FAST                       6: offset
                138     LOAD_FAST                       5: blocksize
                140     CALL_METHOD                     4
                142     STORE_FAST                      7: sent
                144     POP_BLOCK                       
                146     JUMP_FORWARD                    61 (to 270)
                148     DUP_TOP                         
                150     LOAD_GLOBAL                     7: OSError
                152     JUMP_IF_NOT_EXC_MATCH           134 (to 268)
                154     POP_TOP                         
                156     STORE_FAST                      4: err
                158     POP_TOP                         
                160     SETUP_FINALLY                   49 (to 260)
                162     LOAD_FAST                       0: fsrc
                164     LOAD_ATTR                       12: name
                166     LOAD_FAST                       4: err
                168     STORE_ATTR                      13: filename
                170     LOAD_FAST                       1: fdst
                172     LOAD_ATTR                       12: name
                174     LOAD_FAST                       4: err
                176     STORE_ATTR                      14: filename2
                178     LOAD_FAST                       4: err
                180     LOAD_ATTR                       15: errno
                182     LOAD_GLOBAL                     15: errno
                184     LOAD_ATTR                       16: ENOTSOCK
                186     COMPARE_OP                      2 (==)
                188     POP_JUMP_IF_FALSE               101 (to 202)
                190     LOAD_CONST                      8: False
                192     STORE_GLOBAL                    17: _USE_CP_SENDFILE
                194     LOAD_GLOBAL                     2: _GiveupOnFastCopy
                196     LOAD_FAST                       4: err
                198     CALL_FUNCTION                   1
                200     RAISE_VARARGS                   1
                202     LOAD_FAST                       4: err
                204     LOAD_ATTR                       15: errno
                206     LOAD_GLOBAL                     15: errno
                208     LOAD_ATTR                       18: ENOSPC
                210     COMPARE_OP                      2 (==)
                212     POP_JUMP_IF_FALSE               110 (to 220)
                214     LOAD_FAST                       4: err
                216     LOAD_CONST                      1: None
                218     RAISE_VARARGS                   2
                220     LOAD_FAST                       6: offset
                222     LOAD_CONST                      6: 0
                224     COMPARE_OP                      2 (==)
                226     POP_JUMP_IF_FALSE               128 (to 256)
                228     LOAD_GLOBAL                     4: os
                230     LOAD_METHOD                     19: lseek
                232     LOAD_FAST                       3: outfd
                234     LOAD_CONST                      6: 0
                236     LOAD_GLOBAL                     4: os
                238     LOAD_ATTR                       20: SEEK_CUR
                240     CALL_METHOD                     3
                242     LOAD_CONST                      6: 0
                244     COMPARE_OP                      2 (==)
                246     POP_JUMP_IF_FALSE               128 (to 256)
                248     LOAD_GLOBAL                     2: _GiveupOnFastCopy
                250     LOAD_FAST                       4: err
                252     CALL_FUNCTION                   1
                254     RAISE_VARARGS                   1
                256     LOAD_FAST                       4: err
                258     RAISE_VARARGS                   1
                260     LOAD_CONST                      1: None
                262     STORE_FAST                      4: err
                264     DELETE_FAST                     4: err
                266     RERAISE                         1
                268     RERAISE                         0
                270     LOAD_FAST                       7: sent
                272     LOAD_CONST                      6: 0
                274     COMPARE_OP                      2 (==)
                276     POP_JUMP_IF_FALSE               141 (to 282)
                278     LOAD_CONST                      1: None
                280     RETURN_VALUE                    
                282     LOAD_FAST                       6: offset
                284     LOAD_FAST                       7: sent
                286     INPLACE_ADD                     
                288     STORE_FAST                      6: offset
                290     JUMP_ABSOLUTE                   63 (to 126)
        '_fastcopy_sendfile'
        [Code]
            File Name: shutil.py
            Object Name: _copyfileobj_readinto
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'readinto'
                'write'
                'memoryview'
                'bytearray'
            [Var Names]
                'fsrc'
                'fdst'
                'length'
                'fsrc_readinto'
                'fdst_write'
                'mv'
                'n'
                'smv'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'readinto()/memoryview() based variant of copyfileobj().\n    *fsrc* must support readinto() method and both files must be\n    open in binary mode.\n    '
                True
                None
            [Disassembly]
                0       LOAD_FAST                       0: fsrc
                2       LOAD_ATTR                       0: readinto
                4       STORE_FAST                      3: fsrc_readinto
                6       LOAD_FAST                       1: fdst
                8       LOAD_ATTR                       1: write
                10      STORE_FAST                      4: fdst_write
                12      LOAD_GLOBAL                     2: memoryview
                14      LOAD_GLOBAL                     3: bytearray
                16      LOAD_FAST                       2: length
                18      CALL_FUNCTION                   1
                20      CALL_FUNCTION                   1
                22      SETUP_WITH                      54 (to 132)
                24      STORE_FAST                      5: mv
                26      NOP                             
                28      LOAD_FAST                       3: fsrc_readinto
                30      LOAD_FAST                       5: mv
                32      CALL_FUNCTION                   1
                34      STORE_FAST                      6: n
                36      LOAD_FAST                       6: n
                38      POP_JUMP_IF_TRUE                21 (to 42)
                40      JUMP_FORWARD                    37 (to 116)
                42      LOAD_FAST                       6: n
                44      LOAD_FAST                       2: length
                46      COMPARE_OP                      0 (<)
                48      POP_JUMP_IF_FALSE               53 (to 106)
                50      LOAD_FAST                       5: mv
                52      LOAD_CONST                      2: None
                54      LOAD_FAST                       6: n
                56      BUILD_SLICE                     2
                58      BINARY_SUBSCR                   
                60      SETUP_WITH                      13 (to 88)
                62      STORE_FAST                      7: smv
                64      LOAD_FAST                       1: fdst
                66      LOAD_METHOD                     1: write
                68      LOAD_FAST                       7: smv
                70      CALL_METHOD                     1
                72      POP_TOP                         
                74      POP_BLOCK                       
                76      LOAD_CONST                      2: None
                78      DUP_TOP                         
                80      DUP_TOP                         
                82      CALL_FUNCTION                   3
                84      POP_TOP                         
                86      JUMP_FORWARD                    8 (to 104)
                88      WITH_EXCEPT_START               
                90      POP_JUMP_IF_TRUE                47 (to 94)
                92      RERAISE                         1
                94      POP_TOP                         
                96      POP_TOP                         
                98      POP_TOP                         
                100     POP_EXCEPT                      
                102     POP_TOP                         
                104     JUMP_FORWARD                    4 (to 114)
                106     LOAD_FAST                       4: fdst_write
                108     LOAD_FAST                       5: mv
                110     CALL_FUNCTION                   1
                112     POP_TOP                         
                114     JUMP_ABSOLUTE                   14 (to 28)
                116     POP_BLOCK                       
                118     LOAD_CONST                      2: None
                120     DUP_TOP                         
                122     DUP_TOP                         
                124     CALL_FUNCTION                   3
                126     POP_TOP                         
                128     LOAD_CONST                      2: None
                130     RETURN_VALUE                    
                132     WITH_EXCEPT_START               
                134     POP_JUMP_IF_TRUE                69 (to 138)
                136     RERAISE                         1
                138     POP_TOP                         
                140     POP_TOP                         
                142     POP_TOP                         
                144     POP_EXCEPT                      
                146     POP_TOP                         
                148     LOAD_CONST                      2: None
                150     RETURN_VALUE                    
        '_copyfileobj_readinto'
        [Code]
            File Name: shutil.py
            Object Name: copyfileobj
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'COPY_BUFSIZE'
                'read'
                'write'
            [Var Names]
                'fsrc'
                'fdst'
                'length'
                'fsrc_read'
                'fdst_write'
                'buf'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'copy data from file-like object fsrc to file-like object fdst'
                True
                None
            [Disassembly]
                0       LOAD_FAST                       2: length
                2       POP_JUMP_IF_TRUE                4 (to 8)
                4       LOAD_GLOBAL                     0: COPY_BUFSIZE
                6       STORE_FAST                      2: length
                8       LOAD_FAST                       0: fsrc
                10      LOAD_ATTR                       1: read
                12      STORE_FAST                      3: fsrc_read
                14      LOAD_FAST                       1: fdst
                16      LOAD_ATTR                       2: write
                18      STORE_FAST                      4: fdst_write
                20      NOP                             
                22      LOAD_FAST                       3: fsrc_read
                24      LOAD_FAST                       2: length
                26      CALL_FUNCTION                   1
                28      STORE_FAST                      5: buf
                30      LOAD_FAST                       5: buf
                32      POP_JUMP_IF_TRUE                19 (to 38)
                34      LOAD_CONST                      2: None
                36      RETURN_VALUE                    
                38      LOAD_FAST                       4: fdst_write
                40      LOAD_FAST                       5: buf
                42      CALL_FUNCTION                   1
                44      POP_TOP                         
                46      JUMP_ABSOLUTE                   11 (to 22)
        'copyfileobj'
        [Code]
            File Name: shutil.py
            Object Name: _samefile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'os'
                'DirEntry'
                'hasattr'
                'path'
                'samestat'
                'stat'
                'OSError'
                'samefile'
                'normcase'
                'abspath'
            [Var Names]
                'src'
                'dst'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'samestat'
                False
                'samefile'
            [Disassembly]
                0       LOAD_GLOBAL                     0: isinstance
                2       LOAD_FAST                       0: src
                4       LOAD_GLOBAL                     1: os
                6       LOAD_ATTR                       2: DirEntry
                8       CALL_FUNCTION                   2
                10      POP_JUMP_IF_FALSE               36 (to 72)
                12      LOAD_GLOBAL                     3: hasattr
                14      LOAD_GLOBAL                     1: os
                16      LOAD_ATTR                       4: path
                18      LOAD_CONST                      1: 'samestat'
                20      CALL_FUNCTION                   2
                22      POP_JUMP_IF_FALSE               36 (to 72)
                24      SETUP_FINALLY                   13 (to 52)
                26      LOAD_GLOBAL                     1: os
                28      LOAD_ATTR                       4: path
                30      LOAD_METHOD                     5: samestat
                32      LOAD_FAST                       0: src
                34      LOAD_METHOD                     6: stat
                36      CALL_METHOD                     0
                38      LOAD_GLOBAL                     1: os
                40      LOAD_METHOD                     6: stat
                42      LOAD_FAST                       1: dst
                44      CALL_METHOD                     1
                46      CALL_METHOD                     2
                48      POP_BLOCK                       
                50      RETURN_VALUE                    
                52      DUP_TOP                         
                54      LOAD_GLOBAL                     7: OSError
                56      JUMP_IF_NOT_EXC_MATCH           35 (to 70)
                58      POP_TOP                         
                60      POP_TOP                         
                62      POP_TOP                         
                64      POP_EXCEPT                      
                66      LOAD_CONST                      2: False
                68      RETURN_VALUE                    
                70      RERAISE                         0
                72      LOAD_GLOBAL                     3: hasattr
                74      LOAD_GLOBAL                     1: os
                76      LOAD_ATTR                       4: path
                78      LOAD_CONST                      3: 'samefile'
                80      CALL_FUNCTION                   2
                82      POP_JUMP_IF_FALSE               61 (to 122)
                84      SETUP_FINALLY                   8 (to 102)
                86      LOAD_GLOBAL                     1: os
                88      LOAD_ATTR                       4: path
                90      LOAD_METHOD                     8: samefile
                92      LOAD_FAST                       0: src
                94      LOAD_FAST                       1: dst
                96      CALL_METHOD                     2
                98      POP_BLOCK                       
                100     RETURN_VALUE                    
                102     DUP_TOP                         
                104     LOAD_GLOBAL                     7: OSError
                106     JUMP_IF_NOT_EXC_MATCH           60 (to 120)
                108     POP_TOP                         
                110     POP_TOP                         
                112     POP_TOP                         
                114     POP_EXCEPT                      
                116     LOAD_CONST                      2: False
                118     RETURN_VALUE                    
                120     RERAISE                         0
                122     LOAD_GLOBAL                     1: os
                124     LOAD_ATTR                       4: path
                126     LOAD_METHOD                     9: normcase
                128     LOAD_GLOBAL                     1: os
                130     LOAD_ATTR                       4: path
                132     LOAD_METHOD                     10: abspath
                134     LOAD_FAST                       0: src
                136     CALL_METHOD                     1
                138     CALL_METHOD                     1
                140     LOAD_GLOBAL                     1: os
                142     LOAD_ATTR                       4: path
                144     LOAD_METHOD                     9: normcase
                146     LOAD_GLOBAL                     1: os
                148     LOAD_ATTR                       4: path
                150     LOAD_METHOD                     10: abspath
                152     LOAD_FAST                       1: dst
                154     CALL_METHOD                     1
                156     CALL_METHOD                     1
                158     COMPARE_OP                      2 (==)
                160     RETURN_VALUE                    
        '_samefile'
        [Code]
            File Name: shutil.py
            Object Name: _stat
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'os'
                'DirEntry'
                'stat'
            [Var Names]
                'fn'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: isinstance
                2       LOAD_FAST                       0: fn
                4       LOAD_GLOBAL                     1: os
                6       LOAD_ATTR                       2: DirEntry
                8       CALL_FUNCTION                   2
                10      POP_JUMP_IF_FALSE               10 (to 20)
                12      LOAD_FAST                       0: fn
                14      LOAD_METHOD                     3: stat
                16      CALL_METHOD                     0
                18      RETURN_VALUE                    
                20      LOAD_GLOBAL                     1: os
                22      LOAD_METHOD                     3: stat
                24      LOAD_FAST                       0: fn
                26      CALL_METHOD                     1
                28      RETURN_VALUE                    
        '_stat'
        [Code]
            File Name: shutil.py
            Object Name: _islink
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isinstance'
                'os'
                'DirEntry'
                'is_symlink'
                'path'
                'islink'
            [Var Names]
                'fn'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: isinstance
                2       LOAD_FAST                       0: fn
                4       LOAD_GLOBAL                     1: os
                6       LOAD_ATTR                       2: DirEntry
                8       CALL_FUNCTION                   2
                10      POP_JUMP_IF_FALSE               10 (to 20)
                12      LOAD_FAST                       0: fn
                14      LOAD_METHOD                     3: is_symlink
                16      CALL_METHOD                     0
                18      RETURN_VALUE                    
                20      LOAD_GLOBAL                     1: os
                22      LOAD_ATTR                       4: path
                24      LOAD_METHOD                     5: islink
                26      LOAD_FAST                       0: fn
                28      CALL_METHOD                     1
                30      RETURN_VALUE                    
        '_islink'
        (
            'follow_symlinks'
        )
        [Code]
            File Name: shutil.py
            Object Name: copyfile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 10
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                '_samefile'
                'SameFileError'
                'format'
                'enumerate'
                '_stat'
                'OSError'
                'stat'
                'S_ISFIFO'
                'st_mode'
                'isinstance'
                'os'
                'DirEntry'
                'path'
                'SpecialFileError'
                '_WINDOWS'
                'st_size'
                '_islink'
                'symlink'
                'readlink'
                'open'
                '_HAS_FCOPYFILE'
                '_fastcopy_fcopyfile'
                'posix'
                '_COPYFILE_DATA'
                '_GiveupOnFastCopy'
                '_USE_CP_SENDFILE'
                '_fastcopy_sendfile'
                '_copyfileobj_readinto'
                'min'
                'COPY_BUFSIZE'
                'copyfileobj'
                'IsADirectoryError'
                'exists'
                'FileNotFoundError'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
                'file_size'
                'i'
                'fn'
                'st'
                'fsrc'
                'fdst'
                'e'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy data from src to dst in the most efficient way possible.\n\n    If follow_symlinks is not set and src is a symbolic link, a new\n    symlink will be created instead of copying the file it points to.\n\n    '
                'shutil.copyfile'
                '{!r} and {!r} are the same file'
                0
                '`%s` is a named pipe'
                'rb'
                'wb'
                None
                'Directory does not exist: '
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.copyfile'
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       1: dst
                10      CALL_METHOD                     3
                12      POP_TOP                         
                14      LOAD_GLOBAL                     2: _samefile
                16      LOAD_FAST                       0: src
                18      LOAD_FAST                       1: dst
                20      CALL_FUNCTION                   2
                22      POP_JUMP_IF_FALSE               20 (to 40)
                24      LOAD_GLOBAL                     3: SameFileError
                26      LOAD_CONST                      2: '{!r} and {!r} are the same file'
                28      LOAD_METHOD                     4: format
                30      LOAD_FAST                       0: src
                32      LOAD_FAST                       1: dst
                34      CALL_METHOD                     2
                36      CALL_FUNCTION                   1
                38      RAISE_VARARGS                   1
                40      LOAD_CONST                      3: 0
                42      STORE_FAST                      3: file_size
                44      LOAD_GLOBAL                     5: enumerate
                46      LOAD_FAST                       0: src
                48      LOAD_FAST                       1: dst
                50      BUILD_LIST                      2
                52      CALL_FUNCTION                   1
                54      GET_ITER                        
                56      FOR_ITER                        52 (to 162)
                58      UNPACK_SEQUENCE                 2
                60      STORE_FAST                      4: i
                62      STORE_FAST                      5: fn
                64      SETUP_FINALLY                   6 (to 78)
                66      LOAD_GLOBAL                     6: _stat
                68      LOAD_FAST                       5: fn
                70      CALL_FUNCTION                   1
                72      STORE_FAST                      6: st
                74      POP_BLOCK                       
                76      JUMP_FORWARD                    9 (to 96)
                78      DUP_TOP                         
                80      LOAD_GLOBAL                     7: OSError
                82      JUMP_IF_NOT_EXC_MATCH           47 (to 94)
                84      POP_TOP                         
                86      POP_TOP                         
                88      POP_TOP                         
                90      POP_EXCEPT                      
                92      JUMP_ABSOLUTE                   28 (to 56)
                94      RERAISE                         0
                96      LOAD_GLOBAL                     8: stat
                98      LOAD_METHOD                     9: S_ISFIFO
                100     LOAD_FAST                       6: st
                102     LOAD_ATTR                       10: st_mode
                104     CALL_METHOD                     1
                106     POP_JUMP_IF_FALSE               71 (to 142)
                108     LOAD_GLOBAL                     11: isinstance
                110     LOAD_FAST                       5: fn
                112     LOAD_GLOBAL                     12: os
                114     LOAD_ATTR                       13: DirEntry
                116     CALL_FUNCTION                   2
                118     POP_JUMP_IF_FALSE               63 (to 126)
                120     LOAD_FAST                       5: fn
                122     LOAD_ATTR                       14: path
                124     JUMP_FORWARD                    1 (to 128)
                126     LOAD_FAST                       5: fn
                128     STORE_FAST                      5: fn
                130     LOAD_GLOBAL                     15: SpecialFileError
                132     LOAD_CONST                      4: '`%s` is a named pipe'
                134     LOAD_FAST                       5: fn
                136     BINARY_MODULO                   
                138     CALL_FUNCTION                   1
                140     RAISE_VARARGS                   1
                142     LOAD_GLOBAL                     16: _WINDOWS
                144     POP_JUMP_IF_FALSE               80 (to 160)
                146     LOAD_FAST                       4: i
                148     LOAD_CONST                      3: 0
                150     COMPARE_OP                      2 (==)
                152     POP_JUMP_IF_FALSE               80 (to 160)
                154     LOAD_FAST                       6: st
                156     LOAD_ATTR                       17: st_size
                158     STORE_FAST                      3: file_size
                160     JUMP_ABSOLUTE                   28 (to 56)
                162     LOAD_FAST                       2: follow_symlinks
                164     POP_JUMP_IF_TRUE                98 (to 196)
                166     LOAD_GLOBAL                     18: _islink
                168     LOAD_FAST                       0: src
                170     CALL_FUNCTION                   1
                172     POP_JUMP_IF_FALSE               98 (to 196)
                174     LOAD_GLOBAL                     12: os
                176     LOAD_METHOD                     19: symlink
                178     LOAD_GLOBAL                     12: os
                180     LOAD_METHOD                     20: readlink
                182     LOAD_FAST                       0: src
                184     CALL_METHOD                     1
                186     LOAD_FAST                       1: dst
                188     CALL_METHOD                     2
                190     POP_TOP                         
                192     LOAD_FAST                       1: dst
                194     RETURN_VALUE                    
                196     LOAD_GLOBAL                     21: open
                198     LOAD_FAST                       0: src
                200     LOAD_CONST                      5: 'rb'
                202     CALL_FUNCTION                   2
                204     SETUP_WITH                      171 (to 548)
                206     STORE_FAST                      7: fsrc
                208     SETUP_FINALLY                   132 (to 474)
                210     LOAD_GLOBAL                     21: open
                212     LOAD_FAST                       1: dst
                214     LOAD_CONST                      6: 'wb'
                216     CALL_FUNCTION                   2
                218     SETUP_WITH                      117 (to 454)
                220     STORE_FAST                      8: fdst
                222     LOAD_GLOBAL                     22: _HAS_FCOPYFILE
                224     POP_JUMP_IF_FALSE               148 (to 296)
                226     SETUP_FINALLY                   25 (to 278)
                228     LOAD_GLOBAL                     23: _fastcopy_fcopyfile
                230     LOAD_FAST                       7: fsrc
                232     LOAD_FAST                       8: fdst
                234     LOAD_GLOBAL                     24: posix
                236     LOAD_ATTR                       25: _COPYFILE_DATA
                238     CALL_FUNCTION                   3
                240     POP_TOP                         
                242     LOAD_FAST                       1: dst
                244     POP_BLOCK                       
                246     POP_BLOCK                       
                248     ROT_TWO                         
                250     LOAD_CONST                      7: None
                252     DUP_TOP                         
                254     DUP_TOP                         
                256     CALL_FUNCTION                   3
                258     POP_TOP                         
                260     POP_BLOCK                       
                262     POP_BLOCK                       
                264     ROT_TWO                         
                266     LOAD_CONST                      7: None
                268     DUP_TOP                         
                270     DUP_TOP                         
                272     CALL_FUNCTION                   3
                274     POP_TOP                         
                276     RETURN_VALUE                    
                278     DUP_TOP                         
                280     LOAD_GLOBAL                     26: _GiveupOnFastCopy
                282     JUMP_IF_NOT_EXC_MATCH           147 (to 294)
                284     POP_TOP                         
                286     POP_TOP                         
                288     POP_TOP                         
                290     POP_EXCEPT                      
                292     JUMP_FORWARD                    68 (to 430)
                294     RERAISE                         0
                296     LOAD_GLOBAL                     27: _USE_CP_SENDFILE
                298     POP_JUMP_IF_FALSE               183 (to 366)
                300     SETUP_FINALLY                   23 (to 348)
                302     LOAD_GLOBAL                     28: _fastcopy_sendfile
                304     LOAD_FAST                       7: fsrc
                306     LOAD_FAST                       8: fdst
                308     CALL_FUNCTION                   2
                310     POP_TOP                         
                312     LOAD_FAST                       1: dst
                314     POP_BLOCK                       
                316     POP_BLOCK                       
                318     ROT_TWO                         
                320     LOAD_CONST                      7: None
                322     DUP_TOP                         
                324     DUP_TOP                         
                326     CALL_FUNCTION                   3
                328     POP_TOP                         
                330     POP_BLOCK                       
                332     POP_BLOCK                       
                334     ROT_TWO                         
                336     LOAD_CONST                      7: None
                338     DUP_TOP                         
                340     DUP_TOP                         
                342     CALL_FUNCTION                   3
                344     POP_TOP                         
                346     RETURN_VALUE                    
                348     DUP_TOP                         
                350     LOAD_GLOBAL                     26: _GiveupOnFastCopy
                352     JUMP_IF_NOT_EXC_MATCH           182 (to 364)
                354     POP_TOP                         
                356     POP_TOP                         
                358     POP_TOP                         
                360     POP_EXCEPT                      
                362     JUMP_FORWARD                    33 (to 430)
                364     RERAISE                         0
                366     LOAD_GLOBAL                     16: _WINDOWS
                368     POP_JUMP_IF_FALSE               215 (to 430)
                370     LOAD_FAST                       3: file_size
                372     LOAD_CONST                      3: 0
                374     COMPARE_OP                      4 (>)
                376     POP_JUMP_IF_FALSE               215 (to 430)
                378     LOAD_GLOBAL                     29: _copyfileobj_readinto
                380     LOAD_FAST                       7: fsrc
                382     LOAD_FAST                       8: fdst
                384     LOAD_GLOBAL                     30: min
                386     LOAD_FAST                       3: file_size
                388     LOAD_GLOBAL                     31: COPY_BUFSIZE
                390     CALL_FUNCTION                   2
                392     CALL_FUNCTION                   3
                394     POP_TOP                         
                396     LOAD_FAST                       1: dst
                398     POP_BLOCK                       
                400     ROT_TWO                         
                402     LOAD_CONST                      7: None
                404     DUP_TOP                         
                406     DUP_TOP                         
                408     CALL_FUNCTION                   3
                410     POP_TOP                         
                412     POP_BLOCK                       
                414     POP_BLOCK                       
                416     ROT_TWO                         
                418     LOAD_CONST                      7: None
                420     DUP_TOP                         
                422     DUP_TOP                         
                424     CALL_FUNCTION                   3
                426     POP_TOP                         
                428     RETURN_VALUE                    
                430     LOAD_GLOBAL                     32: copyfileobj
                432     LOAD_FAST                       7: fsrc
                434     LOAD_FAST                       8: fdst
                436     CALL_FUNCTION                   2
                438     POP_TOP                         
                440     POP_BLOCK                       
                442     LOAD_CONST                      7: None
                444     DUP_TOP                         
                446     DUP_TOP                         
                448     CALL_FUNCTION                   3
                450     POP_TOP                         
                452     JUMP_FORWARD                    8 (to 470)
                454     WITH_EXCEPT_START               
                456     POP_JUMP_IF_TRUE                230 (to 460)
                458     RERAISE                         1
                460     POP_TOP                         
                462     POP_TOP                         
                464     POP_TOP                         
                466     POP_EXCEPT                      
                468     POP_TOP                         
                470     POP_BLOCK                       
                472     JUMP_FORWARD                    29 (to 532)
                474     DUP_TOP                         
                476     LOAD_GLOBAL                     33: IsADirectoryError
                478     JUMP_IF_NOT_EXC_MATCH           265 (to 530)
                482     POP_TOP                         
                484     STORE_FAST                      9: e
                486     POP_TOP                         
                488     SETUP_FINALLY                   16 (to 522)
                490     LOAD_GLOBAL                     12: os
                492     LOAD_ATTR                       14: path
                494     LOAD_METHOD                     34: exists
                496     LOAD_FAST                       1: dst
                498     CALL_METHOD                     1
                500     POP_JUMP_IF_TRUE                260 (to 520)
                504     LOAD_GLOBAL                     35: FileNotFoundError
                506     LOAD_CONST                      8: 'Directory does not exist: '
                508     LOAD_FAST                       1: dst
                510     FORMAT_VALUE                    0 (FVC_NONE)
                512     BUILD_STRING                    2
                514     CALL_FUNCTION                   1
                516     LOAD_FAST                       9: e
                518     RAISE_VARARGS                   2
                520     RAISE_VARARGS                   0
                522     LOAD_CONST                      7: None
                524     STORE_FAST                      9: e
                526     DELETE_FAST                     9: e
                528     RERAISE                         1
                530     RERAISE                         0
                532     POP_BLOCK                       
                534     LOAD_CONST                      7: None
                536     DUP_TOP                         
                538     DUP_TOP                         
                540     CALL_FUNCTION                   3
                542     POP_TOP                         
                544     LOAD_FAST                       1: dst
                546     RETURN_VALUE                    
                548     WITH_EXCEPT_START               
                550     POP_JUMP_IF_TRUE                278 (to 556)
                554     RERAISE                         1
                556     POP_TOP                         
                558     POP_TOP                         
                560     POP_TOP                         
                562     POP_EXCEPT                      
                564     POP_TOP                         
                566     LOAD_FAST                       1: dst
                568     RETURN_VALUE                    
        'copyfile'
        [Code]
            File Name: shutil.py
            Object Name: copymode
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 6
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                '_islink'
                'os'
                'path'
                'islink'
                'hasattr'
                'lstat'
                'lchmod'
                '_stat'
                'chmod'
                'stat'
                'S_IMODE'
                'st_mode'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
                'stat_func'
                'chmod_func'
                'st'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Copy mode bits from src to dst.\n\n    If follow_symlinks is not set, symlinks aren't followed if and only\n    if both `src` and `dst` are symlinks.  If `lchmod` isn't available\n    (e.g. Linux) this method does nothing.\n\n    "
                'shutil.copymode'
                'lchmod'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.copymode'
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       1: dst
                10      CALL_METHOD                     3
                12      POP_TOP                         
                14      LOAD_FAST                       2: follow_symlinks
                16      POP_JUMP_IF_TRUE                34 (to 68)
                18      LOAD_GLOBAL                     2: _islink
                20      LOAD_FAST                       0: src
                22      CALL_FUNCTION                   1
                24      POP_JUMP_IF_FALSE               34 (to 68)
                26      LOAD_GLOBAL                     3: os
                28      LOAD_ATTR                       4: path
                30      LOAD_METHOD                     5: islink
                32      LOAD_FAST                       1: dst
                34      CALL_METHOD                     1
                36      POP_JUMP_IF_FALSE               34 (to 68)
                38      LOAD_GLOBAL                     6: hasattr
                40      LOAD_GLOBAL                     3: os
                42      LOAD_CONST                      2: 'lchmod'
                44      CALL_FUNCTION                   2
                46      POP_JUMP_IF_FALSE               32 (to 64)
                48      LOAD_GLOBAL                     3: os
                50      LOAD_ATTR                       7: lstat
                52      LOAD_GLOBAL                     3: os
                54      LOAD_ATTR                       8: lchmod
                56      ROT_TWO                         
                58      STORE_FAST                      3: stat_func
                60      STORE_FAST                      4: chmod_func
                62      JUMP_FORWARD                    8 (to 80)
                64      LOAD_CONST                      3: None
                66      RETURN_VALUE                    
                68      LOAD_GLOBAL                     9: _stat
                70      LOAD_GLOBAL                     3: os
                72      LOAD_ATTR                       10: chmod
                74      ROT_TWO                         
                76      STORE_FAST                      3: stat_func
                78      STORE_FAST                      4: chmod_func
                80      LOAD_FAST                       3: stat_func
                82      LOAD_FAST                       0: src
                84      CALL_FUNCTION                   1
                86      STORE_FAST                      5: st
                88      LOAD_FAST                       4: chmod_func
                90      LOAD_FAST                       1: dst
                92      LOAD_GLOBAL                     11: stat
                94      LOAD_METHOD                     12: S_IMODE
                96      LOAD_FAST                       5: st
                98      LOAD_ATTR                       13: st_mode
                100     CALL_METHOD                     1
                102     CALL_FUNCTION                   2
                104     POP_TOP                         
                106     LOAD_CONST                      3: None
                108     RETURN_VALUE                    
        'copymode'
        'listxattr'
        [Code]
            File Name: shutil.py
            Object Name: _copyxattr
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 7
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'listxattr'
                'OSError'
                'errno'
                'ENOTSUP'
                'ENODATA'
                'EINVAL'
                'getxattr'
                'setxattr'
                'EPERM'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
                'names'
                'e'
                'name'
                'value'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Copy extended filesystem attributes from `src` to `dst`.\n\n        Overwrite existing attributes.\n\n        If `follow_symlinks` is false, symlinks won't be followed.\n\n        "
                (
                    'follow_symlinks'
                )
                None
            [Disassembly]
                0       SETUP_FINALLY                   9 (to 20)
                2       LOAD_GLOBAL                     0: os
                4       LOAD_ATTR                       1: listxattr
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       2: follow_symlinks
                10      LOAD_CONST                      1: ('follow_symlinks',)
                12      CALL_FUNCTION_KW                2
                14      STORE_FAST                      3: names
                16      POP_BLOCK                       
                18      JUMP_FORWARD                    31 (to 82)
                20      DUP_TOP                         
                22      LOAD_GLOBAL                     2: OSError
                24      JUMP_IF_NOT_EXC_MATCH           40 (to 80)
                26      POP_TOP                         
                28      STORE_FAST                      4: e
                30      POP_TOP                         
                32      SETUP_FINALLY                   19 (to 72)
                34      LOAD_FAST                       4: e
                36      LOAD_ATTR                       3: errno
                38      LOAD_GLOBAL                     3: errno
                40      LOAD_ATTR                       4: ENOTSUP
                42      LOAD_GLOBAL                     3: errno
                44      LOAD_ATTR                       5: ENODATA
                46      LOAD_GLOBAL                     3: errno
                48      LOAD_ATTR                       6: EINVAL
                50      BUILD_TUPLE                     3
                52      CONTAINS_OP                     1 (not in)
                54      POP_JUMP_IF_FALSE               29 (to 58)
                56      RAISE_VARARGS                   0
                58      POP_BLOCK                       
                60      POP_EXCEPT                      
                62      LOAD_CONST                      2: None
                64      STORE_FAST                      4: e
                66      DELETE_FAST                     4: e
                68      LOAD_CONST                      2: None
                70      RETURN_VALUE                    
                72      LOAD_CONST                      2: None
                74      STORE_FAST                      4: e
                76      DELETE_FAST                     4: e
                78      RERAISE                         1
                80      RERAISE                         0
                82      LOAD_FAST                       3: names
                84      GET_ITER                        
                86      FOR_ITER                        53 (to 194)
                88      STORE_FAST                      5: name
                90      SETUP_FINALLY                   19 (to 130)
                92      LOAD_GLOBAL                     0: os
                94      LOAD_ATTR                       7: getxattr
                96      LOAD_FAST                       0: src
                98      LOAD_FAST                       5: name
                100     LOAD_FAST                       2: follow_symlinks
                102     LOAD_CONST                      1: ('follow_symlinks',)
                104     CALL_FUNCTION_KW                3
                106     STORE_FAST                      6: value
                108     LOAD_GLOBAL                     0: os
                110     LOAD_ATTR                       8: setxattr
                112     LOAD_FAST                       1: dst
                114     LOAD_FAST                       5: name
                116     LOAD_FAST                       6: value
                118     LOAD_FAST                       2: follow_symlinks
                120     LOAD_CONST                      1: ('follow_symlinks',)
                122     CALL_FUNCTION_KW                4
                124     POP_TOP                         
                126     POP_BLOCK                       
                128     JUMP_ABSOLUTE                   43 (to 86)
                130     DUP_TOP                         
                132     LOAD_GLOBAL                     2: OSError
                134     JUMP_IF_NOT_EXC_MATCH           96 (to 192)
                136     POP_TOP                         
                138     STORE_FAST                      4: e
                140     POP_TOP                         
                142     SETUP_FINALLY                   20 (to 184)
                144     LOAD_FAST                       4: e
                146     LOAD_ATTR                       3: errno
                148     LOAD_GLOBAL                     3: errno
                150     LOAD_ATTR                       9: EPERM
                152     LOAD_GLOBAL                     3: errno
                154     LOAD_ATTR                       4: ENOTSUP
                156     LOAD_GLOBAL                     3: errno
                158     LOAD_ATTR                       5: ENODATA
                160     LOAD_GLOBAL                     3: errno
                162     LOAD_ATTR                       6: EINVAL
                164     BUILD_TUPLE                     4
                166     CONTAINS_OP                     1 (not in)
                168     POP_JUMP_IF_FALSE               86 (to 172)
                170     RAISE_VARARGS                   0
                172     POP_BLOCK                       
                174     POP_EXCEPT                      
                176     LOAD_CONST                      2: None
                178     STORE_FAST                      4: e
                180     DELETE_FAST                     4: e
                182     JUMP_ABSOLUTE                   43 (to 86)
                184     LOAD_CONST                      2: None
                186     STORE_FAST                      4: e
                188     DELETE_FAST                     4: e
                190     RERAISE                         1
                192     RERAISE                         0
                194     LOAD_CONST                      2: None
                196     RETURN_VALUE                    
        '_copyxattr'
        [Code]
            File Name: shutil.py
            Object Name: _copyxattr
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 1
            Flags: 0x0000004F (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE)
            [Names]
            [Var Names]
                'args'
                'kwargs'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_CONST                      0: None
                2       RETURN_VALUE                    
        [Code]
            File Name: shutil.py
            Object Name: copystat
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 9
            Stack Size: 10
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                'sys'
                'audit'
                '_islink'
                'os'
                'path'
                'islink'
                'isinstance'
                'DirEntry'
                'stat'
                'S_IMODE'
                'st_mode'
                'st_atime_ns'
                'st_mtime_ns'
                '_copyxattr'
                'NotImplementedError'
                'hasattr'
                'st_flags'
                'OSError'
                'errno'
                'getattr'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
                'follow'
                'lookup'
                'st'
                'mode'
                'why'
                'err'
            [Free Vars]
            [Cell Vars]
                '_nop'
            [Constants]
                'Copy file metadata\n\n    Copy the permission bits, last access time, last modification time, and\n    flags from `src` to `dst`. On Linux, copystat() also copies the "extended\n    attributes" where possible. The file contents, owner, and group are\n    unaffected. `src` and `dst` are path-like objects or path names given as\n    strings.\n\n    If the optional flag `follow_symlinks` is not set, symlinks aren\'t\n    followed if and only if both `src` and `dst` are symlinks.\n    '
                'shutil.copystat'
                None
                (
                    'ns'
                    'follow_symlinks'
                )
                [Code]
                    File Name: shutil.py
                    Object Name: _nop
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 2
                    Locals: 3
                    Stack Size: 1
                    Flags: 0x00000057 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'ns'
                        'follow_symlinks'
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       RETURN_VALUE                    
                'copystat.<locals>._nop'
                [Code]
                    File Name: shutil.py
                    Object Name: lookup
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 4
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'getattr'
                        'os'
                    [Var Names]
                        'name'
                    [Free Vars]
                        '_nop'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: getattr
                        2       LOAD_GLOBAL                     1: os
                        4       LOAD_FAST                       0: name
                        6       LOAD_DEREF                      0: _nop
                        8       CALL_FUNCTION                   3
                        10      RETURN_VALUE                    
                'copystat.<locals>.lookup'
                [Code]
                    File Name: shutil.py
                    Object Name: lookup
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'getattr'
                        'os'
                        'supports_follow_symlinks'
                    [Var Names]
                        'name'
                        'fn'
                    [Free Vars]
                        '_nop'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_GLOBAL                     0: getattr
                        2       LOAD_GLOBAL                     1: os
                        4       LOAD_FAST                       0: name
                        6       LOAD_DEREF                      0: _nop
                        8       CALL_FUNCTION                   3
                        10      STORE_FAST                      1: fn
                        12      LOAD_FAST                       1: fn
                        14      LOAD_GLOBAL                     1: os
                        16      LOAD_ATTR                       2: supports_follow_symlinks
                        18      CONTAINS_OP                     0 (in)
                        20      POP_JUMP_IF_FALSE               13 (to 26)
                        22      LOAD_FAST                       1: fn
                        24      RETURN_VALUE                    
                        26      LOAD_DEREF                      0: _nop
                        28      RETURN_VALUE                    
                (
                    'follow_symlinks'
                )
                'stat'
                'utime'
                'chmod'
                'st_flags'
                'chflags'
                (
                    'EOPNOTSUPP'
                    'ENOTSUP'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.copystat'
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       1: dst
                10      CALL_METHOD                     3
                12      POP_TOP                         
                14      LOAD_CONST                      2: None
                16      LOAD_CONST                      2: None
                18      LOAD_CONST                      3: ('ns', 'follow_symlinks')
                20      BUILD_CONST_KEY_MAP             2
                22      LOAD_CONST                      4: <CODE> _nop
                24      LOAD_CONST                      5: 'copystat.<locals>._nop'
                26      MAKE_FUNCTION                   2
                28      STORE_DEREF                     0: _nop
                30      LOAD_FAST                       2: follow_symlinks
                32      JUMP_IF_TRUE_OR_POP             27 (to 54)
                34      LOAD_GLOBAL                     2: _islink
                36      LOAD_FAST                       0: src
                38      CALL_FUNCTION                   1
                40      JUMP_IF_FALSE_OR_POP            26 (to 52)
                42      LOAD_GLOBAL                     3: os
                44      LOAD_ATTR                       4: path
                46      LOAD_METHOD                     5: islink
                48      LOAD_FAST                       1: dst
                50      CALL_METHOD                     1
                52      UNARY_NOT                       
                54      STORE_FAST                      3: follow
                56      LOAD_FAST                       3: follow
                58      POP_JUMP_IF_FALSE               37 (to 74)
                60      LOAD_CLOSURE                    0: _nop
                62      BUILD_TUPLE                     1
                64      LOAD_CONST                      6: <CODE> lookup
                66      LOAD_CONST                      7: 'copystat.<locals>.lookup'
                68      MAKE_FUNCTION                   8
                70      STORE_FAST                      4: lookup
                72      JUMP_FORWARD                    6 (to 86)
                74      LOAD_CLOSURE                    0: _nop
                76      BUILD_TUPLE                     1
                78      LOAD_CONST                      8: <CODE> lookup
                80      LOAD_CONST                      7: 'copystat.<locals>.lookup'
                82      MAKE_FUNCTION                   8
                84      STORE_FAST                      4: lookup
                86      LOAD_GLOBAL                     6: isinstance
                88      LOAD_FAST                       0: src
                90      LOAD_GLOBAL                     3: os
                92      LOAD_ATTR                       7: DirEntry
                94      CALL_FUNCTION                   2
                96      POP_JUMP_IF_FALSE               56 (to 112)
                98      LOAD_FAST                       0: src
                100     LOAD_ATTR                       8: stat
                102     LOAD_FAST                       3: follow
                104     LOAD_CONST                      9: ('follow_symlinks',)
                106     CALL_FUNCTION_KW                1
                108     STORE_FAST                      5: st
                110     JUMP_FORWARD                    8 (to 128)
                112     LOAD_FAST                       4: lookup
                114     LOAD_CONST                      10: 'stat'
                116     CALL_FUNCTION                   1
                118     LOAD_FAST                       0: src
                120     LOAD_FAST                       3: follow
                122     LOAD_CONST                      9: ('follow_symlinks',)
                124     CALL_FUNCTION_KW                2
                126     STORE_FAST                      5: st
                128     LOAD_GLOBAL                     8: stat
                130     LOAD_METHOD                     9: S_IMODE
                132     LOAD_FAST                       5: st
                134     LOAD_ATTR                       10: st_mode
                136     CALL_METHOD                     1
                138     STORE_FAST                      6: mode
                140     LOAD_FAST                       4: lookup
                142     LOAD_CONST                      11: 'utime'
                144     CALL_FUNCTION                   1
                146     LOAD_FAST                       1: dst
                148     LOAD_FAST                       5: st
                150     LOAD_ATTR                       11: st_atime_ns
                152     LOAD_FAST                       5: st
                154     LOAD_ATTR                       12: st_mtime_ns
                156     BUILD_TUPLE                     2
                158     LOAD_FAST                       3: follow
                160     LOAD_CONST                      3: ('ns', 'follow_symlinks')
                162     CALL_FUNCTION_KW                3
                164     POP_TOP                         
                166     LOAD_GLOBAL                     13: _copyxattr
                168     LOAD_FAST                       0: src
                170     LOAD_FAST                       1: dst
                172     LOAD_FAST                       3: follow
                174     LOAD_CONST                      9: ('follow_symlinks',)
                176     CALL_FUNCTION_KW                3
                178     POP_TOP                         
                180     SETUP_FINALLY                   11 (to 204)
                182     LOAD_FAST                       4: lookup
                184     LOAD_CONST                      12: 'chmod'
                186     CALL_FUNCTION                   1
                188     LOAD_FAST                       1: dst
                190     LOAD_FAST                       6: mode
                192     LOAD_FAST                       3: follow
                194     LOAD_CONST                      9: ('follow_symlinks',)
                196     CALL_FUNCTION_KW                3
                198     POP_TOP                         
                200     POP_BLOCK                       
                202     JUMP_FORWARD                    9 (to 222)
                204     DUP_TOP                         
                206     LOAD_GLOBAL                     14: NotImplementedError
                208     JUMP_IF_NOT_EXC_MATCH           110 (to 220)
                210     POP_TOP                         
                212     POP_TOP                         
                214     POP_TOP                         
                216     POP_EXCEPT                      
                218     JUMP_FORWARD                    1 (to 222)
                220     RERAISE                         0
                222     LOAD_GLOBAL                     15: hasattr
                224     LOAD_FAST                       5: st
                226     LOAD_CONST                      13: 'st_flags'
                228     CALL_FUNCTION                   2
                230     POP_JUMP_IF_FALSE               170 (to 340)
                232     SETUP_FINALLY                   13 (to 260)
                234     LOAD_FAST                       4: lookup
                236     LOAD_CONST                      14: 'chflags'
                238     CALL_FUNCTION                   1
                240     LOAD_FAST                       1: dst
                242     LOAD_FAST                       5: st
                244     LOAD_ATTR                       16: st_flags
                246     LOAD_FAST                       3: follow
                248     LOAD_CONST                      9: ('follow_symlinks',)
                250     CALL_FUNCTION_KW                3
                252     POP_TOP                         
                254     POP_BLOCK                       
                256     LOAD_CONST                      2: None
                258     RETURN_VALUE                    
                260     DUP_TOP                         
                262     LOAD_GLOBAL                     17: OSError
                264     JUMP_IF_NOT_EXC_MATCH           169 (to 338)
                266     POP_TOP                         
                268     STORE_FAST                      7: why
                270     POP_TOP                         
                272     SETUP_FINALLY                   28 (to 330)
                274     LOAD_CONST                      15: ('EOPNOTSUPP', 'ENOTSUP')
                276     GET_ITER                        
                278     FOR_ITER                        17 (to 314)
                280     STORE_FAST                      8: err
                282     LOAD_GLOBAL                     15: hasattr
                284     LOAD_GLOBAL                     18: errno
                286     LOAD_FAST                       8: err
                288     CALL_FUNCTION                   2
                290     POP_JUMP_IF_FALSE               156 (to 312)
                292     LOAD_FAST                       7: why
                294     LOAD_ATTR                       18: errno
                296     LOAD_GLOBAL                     19: getattr
                298     LOAD_GLOBAL                     18: errno
                300     LOAD_FAST                       8: err
                302     CALL_FUNCTION                   2
                304     COMPARE_OP                      2 (==)
                306     POP_JUMP_IF_FALSE               156 (to 312)
                308     POP_TOP                         
                310     JUMP_FORWARD                    2 (to 316)
                312     JUMP_ABSOLUTE                   139 (to 278)
                314     RAISE_VARARGS                   0
                316     POP_BLOCK                       
                318     POP_EXCEPT                      
                320     LOAD_CONST                      2: None
                322     STORE_FAST                      7: why
                324     DELETE_FAST                     7: why
                326     LOAD_CONST                      2: None
                328     RETURN_VALUE                    
                330     LOAD_CONST                      2: None
                332     STORE_FAST                      7: why
                334     DELETE_FAST                     7: why
                336     RERAISE                         1
                338     RERAISE                         0
                340     LOAD_CONST                      2: None
                342     RETURN_VALUE                    
        'copystat'
        [Code]
            File Name: shutil.py
            Object Name: copy
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 3
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'isdir'
                'join'
                'basename'
                'copyfile'
                'copymode'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy data and mode bits ("cp src dst"). Return the file\'s destination.\n\n    The destination may be a directory.\n\n    If follow_symlinks is false, symlinks won\'t be followed. This\n    resembles GNU\'s "cp -P src dst".\n\n    If source and destination are the same file, a SameFileError will be\n    raised.\n\n    '
                (
                    'follow_symlinks'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: isdir
                6       LOAD_FAST                       1: dst
                8       CALL_METHOD                     1
                10      POP_JUMP_IF_FALSE               17 (to 34)
                12      LOAD_GLOBAL                     0: os
                14      LOAD_ATTR                       1: path
                16      LOAD_METHOD                     3: join
                18      LOAD_FAST                       1: dst
                20      LOAD_GLOBAL                     0: os
                22      LOAD_ATTR                       1: path
                24      LOAD_METHOD                     4: basename
                26      LOAD_FAST                       0: src
                28      CALL_METHOD                     1
                30      CALL_METHOD                     2
                32      STORE_FAST                      1: dst
                34      LOAD_GLOBAL                     5: copyfile
                36      LOAD_FAST                       0: src
                38      LOAD_FAST                       1: dst
                40      LOAD_FAST                       2: follow_symlinks
                42      LOAD_CONST                      1: ('follow_symlinks',)
                44      CALL_FUNCTION_KW                3
                46      POP_TOP                         
                48      LOAD_GLOBAL                     6: copymode
                50      LOAD_FAST                       0: src
                52      LOAD_FAST                       1: dst
                54      LOAD_FAST                       2: follow_symlinks
                56      LOAD_CONST                      1: ('follow_symlinks',)
                58      CALL_FUNCTION_KW                3
                60      POP_TOP                         
                62      LOAD_FAST                       1: dst
                64      RETURN_VALUE                    
        'copy'
        [Code]
            File Name: shutil.py
            Object Name: copy2
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 3
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'isdir'
                'join'
                'basename'
                'copyfile'
                'copystat'
            [Var Names]
                'src'
                'dst'
                'follow_symlinks'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Copy data and metadata. Return the file\'s destination.\n\n    Metadata is copied with copystat(). Please see the copystat function\n    for more information.\n\n    The destination may be a directory.\n\n    If follow_symlinks is false, symlinks won\'t be followed. This\n    resembles GNU\'s "cp -P src dst".\n    '
                (
                    'follow_symlinks'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: isdir
                6       LOAD_FAST                       1: dst
                8       CALL_METHOD                     1
                10      POP_JUMP_IF_FALSE               17 (to 34)
                12      LOAD_GLOBAL                     0: os
                14      LOAD_ATTR                       1: path
                16      LOAD_METHOD                     3: join
                18      LOAD_FAST                       1: dst
                20      LOAD_GLOBAL                     0: os
                22      LOAD_ATTR                       1: path
                24      LOAD_METHOD                     4: basename
                26      LOAD_FAST                       0: src
                28      CALL_METHOD                     1
                30      CALL_METHOD                     2
                32      STORE_FAST                      1: dst
                34      LOAD_GLOBAL                     5: copyfile
                36      LOAD_FAST                       0: src
                38      LOAD_FAST                       1: dst
                40      LOAD_FAST                       2: follow_symlinks
                42      LOAD_CONST                      1: ('follow_symlinks',)
                44      CALL_FUNCTION_KW                3
                46      POP_TOP                         
                48      LOAD_GLOBAL                     6: copystat
                50      LOAD_FAST                       0: src
                52      LOAD_FAST                       1: dst
                54      LOAD_FAST                       2: follow_symlinks
                56      LOAD_CONST                      1: ('follow_symlinks',)
                58      CALL_FUNCTION_KW                3
                60      POP_TOP                         
                62      LOAD_FAST                       1: dst
                64      RETURN_VALUE                    
        'copy2'
        [Code]
            File Name: shutil.py
            Object Name: ignore_patterns
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000007 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS)
            [Names]
            [Var Names]
                'patterns'
                '_ignore_patterns'
            [Free Vars]
            [Cell Vars]
                'patterns'
            [Constants]
                'Function that can be used as copytree() ignore parameter.\n\n    Patterns is a sequence of glob-style patterns\n    that are used to exclude files'
                [Code]
                    File Name: shutil.py
                    Object Name: _ignore_patterns
                    Arg Count: 2
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 4
                    Stack Size: 7
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'extend'
                        'fnmatch'
                        'filter'
                        'set'
                    [Var Names]
                        'path'
                        'names'
                        'ignored_names'
                        'pattern'
                    [Free Vars]
                        'patterns'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       STORE_FAST                      2: ignored_names
                        4       LOAD_DEREF                      0: patterns
                        6       GET_ITER                        
                        8       FOR_ITER                        11 (to 32)
                        10      STORE_FAST                      3: pattern
                        12      LOAD_FAST                       2: ignored_names
                        14      LOAD_METHOD                     0: extend
                        16      LOAD_GLOBAL                     1: fnmatch
                        18      LOAD_METHOD                     2: filter
                        20      LOAD_FAST                       1: names
                        22      LOAD_FAST                       3: pattern
                        24      CALL_METHOD                     2
                        26      CALL_METHOD                     1
                        28      POP_TOP                         
                        30      JUMP_ABSOLUTE                   4 (to 8)
                        32      LOAD_GLOBAL                     3: set
                        34      LOAD_FAST                       2: ignored_names
                        36      CALL_FUNCTION                   1
                        38      RETURN_VALUE                    
                'ignore_patterns.<locals>._ignore_patterns'
            [Disassembly]
                0       LOAD_CLOSURE                    0: patterns
                2       BUILD_TUPLE                     1
                4       LOAD_CONST                      1: <CODE> _ignore_patterns
                6       LOAD_CONST                      2: 'ignore_patterns.<locals>._ignore_patterns'
                8       MAKE_FUNCTION                   8
                10      STORE_FAST                      1: _ignore_patterns
                12      LOAD_FAST                       1: _ignore_patterns
                14      RETURN_VALUE                    
        'ignore_patterns'
        [Code]
            File Name: shutil.py
            Object Name: _copytree
            Arg Count: 8
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 20
            Stack Size: 11
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'fspath'
                'set'
                'makedirs'
                'copy2'
                'copy'
                'name'
                'path'
                'join'
                'is_symlink'
                'stat'
                'st_reparse_tag'
                'IO_REPARSE_TAG_MOUNT_POINT'
                'readlink'
                'symlink'
                'copystat'
                'exists'
                'is_dir'
                'copytree'
                'Error'
                'extend'
                'args'
                'OSError'
                'append'
                'str'
                'getattr'
            [Var Names]
                'entries'
                'src'
                'dst'
                'symlinks'
                'ignore'
                'copy_function'
                'ignore_dangling_symlinks'
                'dirs_exist_ok'
                'ignored_names'
                'errors'
                'use_srcentry'
                'srcentry'
                'srcname'
                'dstname'
                'srcobj'
                'is_symlink'
                'lstat'
                'linkto'
                'err'
                'why'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        '.0'
                        'x'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        5 (to 16)
                        6       STORE_FAST                      1: x
                        8       LOAD_FAST                       1: x
                        10      LOAD_ATTR                       0: name
                        12      LIST_APPEND                     2
                        14      JUMP_ABSOLUTE                   2 (to 4)
                        16      RETURN_VALUE                    
                '_copytree.<locals>.<listcomp>'
                (
                    'exist_ok'
                )
                'nt'
                False
                (
                    'follow_symlinks'
                )
                0
                'winerror'
            [Disassembly]
                0       LOAD_FAST                       4: ignore
                2       LOAD_CONST                      0: None
                4       IS_OP                           1 (is not)
                6       POP_JUMP_IF_FALSE               18 (to 36)
                8       LOAD_FAST                       4: ignore
                10      LOAD_GLOBAL                     0: os
                12      LOAD_METHOD                     1: fspath
                14      LOAD_FAST                       1: src
                16      CALL_METHOD                     1
                18      LOAD_CONST                      1: <CODE> <listcomp>
                20      LOAD_CONST                      2: '_copytree.<locals>.<listcomp>'
                22      MAKE_FUNCTION                   0
                24      LOAD_FAST                       0: entries
                26      GET_ITER                        
                28      CALL_FUNCTION                   1
                30      CALL_FUNCTION                   2
                32      STORE_FAST                      8: ignored_names
                34      JUMP_FORWARD                    3 (to 42)
                36      LOAD_GLOBAL                     2: set
                38      CALL_FUNCTION                   0
                40      STORE_FAST                      8: ignored_names
                42      LOAD_GLOBAL                     0: os
                44      LOAD_ATTR                       3: makedirs
                46      LOAD_FAST                       2: dst
                48      LOAD_FAST                       7: dirs_exist_ok
                50      LOAD_CONST                      3: ('exist_ok',)
                52      CALL_FUNCTION_KW                2
                54      POP_TOP                         
                56      BUILD_LIST                      0
                58      STORE_FAST                      9: errors
                60      LOAD_FAST                       5: copy_function
                62      LOAD_GLOBAL                     4: copy2
                64      IS_OP                           0 (is)
                66      JUMP_IF_TRUE_OR_POP             37 (to 74)
                68      LOAD_FAST                       5: copy_function
                70      LOAD_GLOBAL                     5: copy
                72      IS_OP                           0 (is)
                74      STORE_FAST                      10: use_srcentry
                76      LOAD_FAST                       0: entries
                78      GET_ITER                        
                80      FOR_ITER                        185 (to 452)
                82      STORE_FAST                      11: srcentry
                84      LOAD_FAST                       11: srcentry
                86      LOAD_ATTR                       6: name
                88      LOAD_FAST                       8: ignored_names
                90      CONTAINS_OP                     0 (in)
                92      POP_JUMP_IF_FALSE               48 (to 96)
                94      JUMP_ABSOLUTE                   40 (to 80)
                96      LOAD_GLOBAL                     0: os
                98      LOAD_ATTR                       7: path
                100     LOAD_METHOD                     8: join
                102     LOAD_FAST                       1: src
                104     LOAD_FAST                       11: srcentry
                106     LOAD_ATTR                       6: name
                108     CALL_METHOD                     2
                110     STORE_FAST                      12: srcname
                112     LOAD_GLOBAL                     0: os
                114     LOAD_ATTR                       7: path
                116     LOAD_METHOD                     8: join
                118     LOAD_FAST                       2: dst
                120     LOAD_FAST                       11: srcentry
                122     LOAD_ATTR                       6: name
                124     CALL_METHOD                     2
                126     STORE_FAST                      13: dstname
                128     LOAD_FAST                       10: use_srcentry
                130     POP_JUMP_IF_FALSE               68 (to 136)
                132     LOAD_FAST                       11: srcentry
                134     JUMP_FORWARD                    1 (to 138)
                136     LOAD_FAST                       12: srcname
                138     STORE_FAST                      14: srcobj
                140     SETUP_FINALLY                   102 (to 346)
                142     LOAD_FAST                       11: srcentry
                144     LOAD_METHOD                     9: is_symlink
                146     CALL_METHOD                     0
                148     STORE_FAST                      15: is_symlink
                150     LOAD_FAST                       15: is_symlink
                152     POP_JUMP_IF_FALSE               96 (to 192)
                154     LOAD_GLOBAL                     0: os
                156     LOAD_ATTR                       6: name
                158     LOAD_CONST                      4: 'nt'
                160     COMPARE_OP                      2 (==)
                162     POP_JUMP_IF_FALSE               96 (to 192)
                164     LOAD_FAST                       11: srcentry
                166     LOAD_ATTR                       10: stat
                168     LOAD_CONST                      5: False
                170     LOAD_CONST                      6: ('follow_symlinks',)
                172     CALL_FUNCTION_KW                1
                174     STORE_FAST                      16: lstat
                176     LOAD_FAST                       16: lstat
                178     LOAD_ATTR                       11: st_reparse_tag
                180     LOAD_GLOBAL                     10: stat
                182     LOAD_ATTR                       12: IO_REPARSE_TAG_MOUNT_POINT
                184     COMPARE_OP                      2 (==)
                186     POP_JUMP_IF_FALSE               96 (to 192)
                188     LOAD_CONST                      5: False
                190     STORE_FAST                      15: is_symlink
                192     LOAD_FAST                       15: is_symlink
                194     POP_JUMP_IF_FALSE               151 (to 302)
                196     LOAD_GLOBAL                     0: os
                198     LOAD_METHOD                     13: readlink
                200     LOAD_FAST                       12: srcname
                202     CALL_METHOD                     1
                204     STORE_FAST                      17: linkto
                206     LOAD_FAST                       3: symlinks
                208     POP_JUMP_IF_FALSE               120 (to 240)
                210     LOAD_GLOBAL                     0: os
                212     LOAD_METHOD                     14: symlink
                214     LOAD_FAST                       17: linkto
                216     LOAD_FAST                       13: dstname
                218     CALL_METHOD                     2
                220     POP_TOP                         
                222     LOAD_GLOBAL                     15: copystat
                224     LOAD_FAST                       14: srcobj
                226     LOAD_FAST                       13: dstname
                228     LOAD_FAST                       3: symlinks
                230     UNARY_NOT                       
                232     LOAD_CONST                      6: ('follow_symlinks',)
                234     CALL_FUNCTION_KW                3
                236     POP_TOP                         
                238     JUMP_FORWARD                    51 (to 342)
                240     LOAD_GLOBAL                     0: os
                242     LOAD_ATTR                       7: path
                244     LOAD_METHOD                     16: exists
                246     LOAD_FAST                       17: linkto
                248     CALL_METHOD                     1
                250     POP_JUMP_IF_TRUE                130 (to 260)
                252     LOAD_FAST                       6: ignore_dangling_symlinks
                254     POP_JUMP_IF_FALSE               130 (to 260)
                256     POP_BLOCK                       
                258     JUMP_ABSOLUTE                   40 (to 80)
                260     LOAD_FAST                       11: srcentry
                262     LOAD_METHOD                     17: is_dir
                264     CALL_METHOD                     0
                266     POP_JUMP_IF_FALSE               145 (to 290)
                268     LOAD_GLOBAL                     18: copytree
                270     LOAD_FAST                       14: srcobj
                272     LOAD_FAST                       13: dstname
                274     LOAD_FAST                       3: symlinks
                276     LOAD_FAST                       4: ignore
                278     LOAD_FAST                       5: copy_function
                280     LOAD_FAST                       6: ignore_dangling_symlinks
                282     LOAD_FAST                       7: dirs_exist_ok
                284     CALL_FUNCTION                   7
                286     POP_TOP                         
                288     JUMP_FORWARD                    26 (to 342)
                290     LOAD_FAST                       5: copy_function
                292     LOAD_FAST                       14: srcobj
                294     LOAD_FAST                       13: dstname
                296     CALL_FUNCTION                   2
                298     POP_TOP                         
                300     JUMP_FORWARD                    20 (to 342)
                302     LOAD_FAST                       11: srcentry
                304     LOAD_METHOD                     17: is_dir
                306     CALL_METHOD                     0
                308     POP_JUMP_IF_FALSE               166 (to 332)
                310     LOAD_GLOBAL                     18: copytree
                312     LOAD_FAST                       14: srcobj
                314     LOAD_FAST                       13: dstname
                316     LOAD_FAST                       3: symlinks
                318     LOAD_FAST                       4: ignore
                320     LOAD_FAST                       5: copy_function
                322     LOAD_FAST                       6: ignore_dangling_symlinks
                324     LOAD_FAST                       7: dirs_exist_ok
                326     CALL_FUNCTION                   7
                328     POP_TOP                         
                330     JUMP_FORWARD                    5 (to 342)
                332     LOAD_FAST                       5: copy_function
                334     LOAD_FAST                       14: srcobj
                336     LOAD_FAST                       13: dstname
                338     CALL_FUNCTION                   2
                340     POP_TOP                         
                342     POP_BLOCK                       
                344     JUMP_ABSOLUTE                   40 (to 80)
                346     DUP_TOP                         
                348     LOAD_GLOBAL                     19: Error
                350     JUMP_IF_NOT_EXC_MATCH           198 (to 396)
                352     POP_TOP                         
                354     STORE_FAST                      18: err
                356     POP_TOP                         
                358     SETUP_FINALLY                   14 (to 388)
                360     LOAD_FAST                       9: errors
                362     LOAD_METHOD                     20: extend
                364     LOAD_FAST                       18: err
                366     LOAD_ATTR                       21: args
                368     LOAD_CONST                      7: 0
                370     BINARY_SUBSCR                   
                372     CALL_METHOD                     1
                374     POP_TOP                         
                376     POP_BLOCK                       
                378     POP_EXCEPT                      
                380     LOAD_CONST                      0: None
                382     STORE_FAST                      18: err
                384     DELETE_FAST                     18: err
                386     JUMP_ABSOLUTE                   40 (to 80)
                388     LOAD_CONST                      0: None
                390     STORE_FAST                      18: err
                392     DELETE_FAST                     18: err
                394     RERAISE                         1
                396     DUP_TOP                         
                398     LOAD_GLOBAL                     22: OSError
                400     JUMP_IF_NOT_EXC_MATCH           225 (to 450)
                402     POP_TOP                         
                404     STORE_FAST                      19: why
                406     POP_TOP                         
                408     SETUP_FINALLY                   16 (to 442)
                410     LOAD_FAST                       9: errors
                412     LOAD_METHOD                     23: append
                414     LOAD_FAST                       12: srcname
                416     LOAD_FAST                       13: dstname
                418     LOAD_GLOBAL                     24: str
                420     LOAD_FAST                       19: why
                422     CALL_FUNCTION                   1
                424     BUILD_TUPLE                     3
                426     CALL_METHOD                     1
                428     POP_TOP                         
                430     POP_BLOCK                       
                432     POP_EXCEPT                      
                434     LOAD_CONST                      0: None
                436     STORE_FAST                      19: why
                438     DELETE_FAST                     19: why
                440     JUMP_ABSOLUTE                   40 (to 80)
                442     LOAD_CONST                      0: None
                444     STORE_FAST                      19: why
                446     DELETE_FAST                     19: why
                448     RERAISE                         1
                450     RERAISE                         0
                452     SETUP_FINALLY                   7 (to 468)
                454     LOAD_GLOBAL                     15: copystat
                456     LOAD_FAST                       1: src
                458     LOAD_FAST                       2: dst
                460     CALL_FUNCTION                   2
                462     POP_TOP                         
                464     POP_BLOCK                       
                466     JUMP_FORWARD                    38 (to 544)
                468     DUP_TOP                         
                470     LOAD_GLOBAL                     22: OSError
                472     JUMP_IF_NOT_EXC_MATCH           271 (to 542)
                476     POP_TOP                         
                478     STORE_FAST                      19: why
                480     POP_TOP                         
                482     SETUP_FINALLY                   25 (to 534)
                484     LOAD_GLOBAL                     25: getattr
                486     LOAD_FAST                       19: why
                488     LOAD_CONST                      8: 'winerror'
                490     LOAD_CONST                      0: None
                492     CALL_FUNCTION                   3
                494     LOAD_CONST                      0: None
                496     IS_OP                           0 (is)
                498     POP_JUMP_IF_FALSE               261 (to 522)
                502     LOAD_FAST                       9: errors
                504     LOAD_METHOD                     23: append
                506     LOAD_FAST                       1: src
                508     LOAD_FAST                       2: dst
                510     LOAD_GLOBAL                     24: str
                512     LOAD_FAST                       19: why
                514     CALL_FUNCTION                   1
                516     BUILD_TUPLE                     3
                518     CALL_METHOD                     1
                520     POP_TOP                         
                522     POP_BLOCK                       
                524     POP_EXCEPT                      
                526     LOAD_CONST                      0: None
                528     STORE_FAST                      19: why
                530     DELETE_FAST                     19: why
                532     JUMP_FORWARD                    5 (to 544)
                534     LOAD_CONST                      0: None
                536     STORE_FAST                      19: why
                538     DELETE_FAST                     19: why
                540     RERAISE                         1
                542     RERAISE                         0
                544     LOAD_FAST                       9: errors
                546     POP_JUMP_IF_FALSE               279 (to 558)
                550     LOAD_GLOBAL                     19: Error
                552     LOAD_FAST                       9: errors
                554     CALL_FUNCTION                   1
                556     RAISE_VARARGS                   1
                558     LOAD_FAST                       2: dst
                560     RETURN_VALUE                    
        '_copytree'
        [Code]
            File Name: shutil.py
            Object Name: copytree
            Arg Count: 7
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                'os'
                'scandir'
                'list'
                '_copytree'
            [Var Names]
                'src'
                'dst'
                'symlinks'
                'ignore'
                'copy_function'
                'ignore_dangling_symlinks'
                'dirs_exist_ok'
                'itr'
                'entries'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Recursively copy a directory tree and return the destination directory.\n\n    If exception(s) occur, an Error is raised with a list of reasons.\n\n    If the optional symlinks flag is true, symbolic links in the\n    source tree result in symbolic links in the destination tree; if\n    it is false, the contents of the files pointed to by symbolic\n    links are copied. If the file pointed by the symlink doesn't\n    exist, an exception will be added in the list of errors raised in\n    an Error exception at the end of the copy process.\n\n    You can set the optional ignore_dangling_symlinks flag to true if you\n    want to silence this exception. Notice that this has no effect on\n    platforms that don't support os.symlink.\n\n    The optional ignore argument is a callable. If given, it\n    is called with the `src` parameter, which is the directory\n    being visited by copytree(), and `names` which is the list of\n    `src` contents, as returned by os.listdir():\n\n        callable(src, names) -> ignored_names\n\n    Since copytree() is called recursively, the callable will be\n    called once for each directory that is copied. It returns a\n    list of names relative to the `src` directory that should\n    not be copied.\n\n    The optional copy_function argument is a callable that will be used\n    to copy each file. It will be called with the source path and the\n    destination path as arguments. By default, copy2() is used, but any\n    function that supports the same signature (like copy()) can be used.\n\n    If dirs_exist_ok is false (the default) and `dst` already exists, a\n    `FileExistsError` is raised. If `dirs_exist_ok` is true, the copying\n    operation will continue if it encounters existing directories, and files\n    within the `dst` tree will be overwritten by corresponding files from the\n    `src` tree.\n    "
                'shutil.copytree'
                None
                (
                    'entries'
                    'src'
                    'dst'
                    'symlinks'
                    'ignore'
                    'copy_function'
                    'ignore_dangling_symlinks'
                    'dirs_exist_ok'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.copytree'
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       1: dst
                10      CALL_METHOD                     3
                12      POP_TOP                         
                14      LOAD_GLOBAL                     2: os
                16      LOAD_METHOD                     3: scandir
                18      LOAD_FAST                       0: src
                20      CALL_METHOD                     1
                22      SETUP_WITH                      12 (to 48)
                24      STORE_FAST                      7: itr
                26      LOAD_GLOBAL                     4: list
                28      LOAD_FAST                       7: itr
                30      CALL_FUNCTION                   1
                32      STORE_FAST                      8: entries
                34      POP_BLOCK                       
                36      LOAD_CONST                      2: None
                38      DUP_TOP                         
                40      DUP_TOP                         
                42      CALL_FUNCTION                   3
                44      POP_TOP                         
                46      JUMP_FORWARD                    8 (to 64)
                48      WITH_EXCEPT_START               
                50      POP_JUMP_IF_TRUE                27 (to 54)
                52      RERAISE                         1
                54      POP_TOP                         
                56      POP_TOP                         
                58      POP_TOP                         
                60      POP_EXCEPT                      
                62      POP_TOP                         
                64      LOAD_GLOBAL                     5: _copytree
                66      LOAD_FAST                       8: entries
                68      LOAD_FAST                       0: src
                70      LOAD_FAST                       1: dst
                72      LOAD_FAST                       2: symlinks
                74      LOAD_FAST                       3: ignore
                76      LOAD_FAST                       4: copy_function
                78      LOAD_FAST                       5: ignore_dangling_symlinks
                80      LOAD_FAST                       6: dirs_exist_ok
                82      LOAD_CONST                      3: ('entries', 'src', 'dst', 'symlinks', 'ignore', 'copy_function', 'ignore_dangling_symlinks', 'dirs_exist_ok')
                84      CALL_FUNCTION_KW                8
                86      RETURN_VALUE                    
        'copytree'
        'st_file_attributes'
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_isdir
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'stat'
                'S_ISDIR'
                'st_mode'
                'st_file_attributes'
                'FILE_ATTRIBUTE_REPARSE_POINT'
                'st_reparse_tag'
                'IO_REPARSE_TAG_MOUNT_POINT'
                'OSError'
            [Var Names]
                'entry'
                'st'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                (
                    'follow_symlinks'
                )
            [Disassembly]
                0       SETUP_FINALLY                   26 (to 54)
                2       LOAD_FAST                       0: entry
                4       LOAD_ATTR                       0: stat
                6       LOAD_CONST                      1: False
                8       LOAD_CONST                      2: ('follow_symlinks',)
                10      CALL_FUNCTION_KW                1
                12      STORE_FAST                      1: st
                14      LOAD_GLOBAL                     0: stat
                16      LOAD_METHOD                     1: S_ISDIR
                18      LOAD_FAST                       1: st
                20      LOAD_ATTR                       2: st_mode
                22      CALL_METHOD                     1
                24      JUMP_IF_FALSE_OR_POP            25 (to 50)
                26      LOAD_FAST                       1: st
                28      LOAD_ATTR                       3: st_file_attributes
                30      LOAD_GLOBAL                     0: stat
                32      LOAD_ATTR                       4: FILE_ATTRIBUTE_REPARSE_POINT
                34      BINARY_AND                      
                36      JUMP_IF_FALSE_OR_POP            24 (to 48)
                38      LOAD_FAST                       1: st
                40      LOAD_ATTR                       5: st_reparse_tag
                42      LOAD_GLOBAL                     0: stat
                44      LOAD_ATTR                       6: IO_REPARSE_TAG_MOUNT_POINT
                46      COMPARE_OP                      2 (==)
                48      UNARY_NOT                       
                50      POP_BLOCK                       
                52      RETURN_VALUE                    
                54      DUP_TOP                         
                56      LOAD_GLOBAL                     7: OSError
                58      JUMP_IF_NOT_EXC_MATCH           36 (to 72)
                60      POP_TOP                         
                62      POP_TOP                         
                64      POP_TOP                         
                66      POP_EXCEPT                      
                68      LOAD_CONST                      1: False
                70      RETURN_VALUE                    
                72      RERAISE                         0
        '_rmtree_isdir'
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_islink
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'lstat'
                'stat'
                'S_ISLNK'
                'st_mode'
                'st_file_attributes'
                'FILE_ATTRIBUTE_REPARSE_POINT'
                'st_reparse_tag'
                'IO_REPARSE_TAG_MOUNT_POINT'
                'OSError'
            [Var Names]
                'path'
                'st'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
            [Disassembly]
                0       SETUP_FINALLY                   24 (to 50)
                2       LOAD_GLOBAL                     0: os
                4       LOAD_METHOD                     1: lstat
                6       LOAD_FAST                       0: path
                8       CALL_METHOD                     1
                10      STORE_FAST                      1: st
                12      LOAD_GLOBAL                     2: stat
                14      LOAD_METHOD                     3: S_ISLNK
                16      LOAD_FAST                       1: st
                18      LOAD_ATTR                       4: st_mode
                20      CALL_METHOD                     1
                22      JUMP_IF_TRUE_OR_POP             23 (to 46)
                24      LOAD_FAST                       1: st
                26      LOAD_ATTR                       5: st_file_attributes
                28      LOAD_GLOBAL                     2: stat
                30      LOAD_ATTR                       6: FILE_ATTRIBUTE_REPARSE_POINT
                32      BINARY_AND                      
                34      JUMP_IF_FALSE_OR_POP            23 (to 46)
                36      LOAD_FAST                       1: st
                38      LOAD_ATTR                       7: st_reparse_tag
                40      LOAD_GLOBAL                     2: stat
                42      LOAD_ATTR                       8: IO_REPARSE_TAG_MOUNT_POINT
                44      COMPARE_OP                      2 (==)
                46      POP_BLOCK                       
                48      RETURN_VALUE                    
                50      DUP_TOP                         
                52      LOAD_GLOBAL                     9: OSError
                54      JUMP_IF_NOT_EXC_MATCH           34 (to 68)
                56      POP_TOP                         
                58      POP_TOP                         
                60      POP_TOP                         
                62      POP_EXCEPT                      
                64      LOAD_CONST                      1: False
                66      RETURN_VALUE                    
                68      RERAISE                         0
        '_rmtree_islink'
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_isdir
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'is_dir'
                'OSError'
            [Var Names]
                'entry'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                (
                    'follow_symlinks'
                )
            [Disassembly]
                0       SETUP_FINALLY                   7 (to 16)
                2       LOAD_FAST                       0: entry
                4       LOAD_ATTR                       0: is_dir
                6       LOAD_CONST                      1: False
                8       LOAD_CONST                      2: ('follow_symlinks',)
                10      CALL_FUNCTION_KW                1
                12      POP_BLOCK                       
                14      RETURN_VALUE                    
                16      DUP_TOP                         
                18      LOAD_GLOBAL                     1: OSError
                20      JUMP_IF_NOT_EXC_MATCH           17 (to 34)
                22      POP_TOP                         
                24      POP_TOP                         
                26      POP_TOP                         
                28      POP_EXCEPT                      
                30      LOAD_CONST                      1: False
                32      RETURN_VALUE                    
                34      RERAISE                         0
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_islink
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'islink'
            [Var Names]
                'path'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: islink
                6       LOAD_FAST                       0: path
                8       CALL_METHOD                     1
                10      RETURN_VALUE                    
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_unsafe
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'scandir'
                'list'
                'OSError'
                'sys'
                'exc_info'
                'path'
                '_rmtree_isdir'
                'is_symlink'
                'islink'
                '_rmtree_unsafe'
                'unlink'
                'rmdir'
            [Var Names]
                'path'
                'onerror'
                'scandir_it'
                'entries'
                'entry'
                'fullname'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'Cannot call rmtree on a symbolic link'
            [Disassembly]
                0       SETUP_FINALLY                   27 (to 56)
                2       LOAD_GLOBAL                     0: os
                4       LOAD_METHOD                     1: scandir
                6       LOAD_FAST                       0: path
                8       CALL_METHOD                     1
                10      SETUP_WITH                      12 (to 36)
                12      STORE_FAST                      2: scandir_it
                14      LOAD_GLOBAL                     2: list
                16      LOAD_FAST                       2: scandir_it
                18      CALL_FUNCTION                   1
                20      STORE_FAST                      3: entries
                22      POP_BLOCK                       
                24      LOAD_CONST                      0: None
                26      DUP_TOP                         
                28      DUP_TOP                         
                30      CALL_FUNCTION                   3
                32      POP_TOP                         
                34      JUMP_FORWARD                    8 (to 52)
                36      WITH_EXCEPT_START               
                38      POP_JUMP_IF_TRUE                21 (to 42)
                40      RERAISE                         1
                42      POP_TOP                         
                44      POP_TOP                         
                46      POP_TOP                         
                48      POP_EXCEPT                      
                50      POP_TOP                         
                52      POP_BLOCK                       
                54      JUMP_FORWARD                    20 (to 96)
                56      DUP_TOP                         
                58      LOAD_GLOBAL                     3: OSError
                60      JUMP_IF_NOT_EXC_MATCH           47 (to 94)
                62      POP_TOP                         
                64      POP_TOP                         
                66      POP_TOP                         
                68      LOAD_FAST                       1: onerror
                70      LOAD_GLOBAL                     0: os
                72      LOAD_ATTR                       1: scandir
                74      LOAD_FAST                       0: path
                76      LOAD_GLOBAL                     4: sys
                78      LOAD_METHOD                     5: exc_info
                80      CALL_METHOD                     0
                82      CALL_FUNCTION                   3
                84      POP_TOP                         
                86      BUILD_LIST                      0
                88      STORE_FAST                      3: entries
                90      POP_EXCEPT                      
                92      JUMP_FORWARD                    1 (to 96)
                94      RERAISE                         0
                96      LOAD_FAST                       3: entries
                98      GET_ITER                        
                100     FOR_ITER                        70 (to 242)
                102     STORE_FAST                      4: entry
                104     LOAD_FAST                       4: entry
                106     LOAD_ATTR                       6: path
                108     STORE_FAST                      5: fullname
                110     LOAD_GLOBAL                     7: _rmtree_isdir
                112     LOAD_FAST                       4: entry
                114     CALL_FUNCTION                   1
                116     POP_JUMP_IF_FALSE               95 (to 190)
                118     SETUP_FINALLY                   10 (to 140)
                120     LOAD_FAST                       4: entry
                122     LOAD_METHOD                     8: is_symlink
                124     CALL_METHOD                     0
                126     POP_JUMP_IF_FALSE               68 (to 136)
                128     LOAD_GLOBAL                     3: OSError
                130     LOAD_CONST                      1: 'Cannot call rmtree on a symbolic link'
                132     CALL_FUNCTION                   1
                134     RAISE_VARARGS                   1
                136     POP_BLOCK                       
                138     JUMP_FORWARD                    19 (to 178)
                140     DUP_TOP                         
                142     LOAD_GLOBAL                     3: OSError
                144     JUMP_IF_NOT_EXC_MATCH           88 (to 176)
                146     POP_TOP                         
                148     POP_TOP                         
                150     POP_TOP                         
                152     LOAD_FAST                       1: onerror
                154     LOAD_GLOBAL                     0: os
                156     LOAD_ATTR                       6: path
                158     LOAD_ATTR                       9: islink
                160     LOAD_FAST                       5: fullname
                162     LOAD_GLOBAL                     4: sys
                164     LOAD_METHOD                     5: exc_info
                166     CALL_METHOD                     0
                168     CALL_FUNCTION                   3
                170     POP_TOP                         
                172     POP_EXCEPT                      
                174     JUMP_ABSOLUTE                   50 (to 100)
                176     RERAISE                         0
                178     LOAD_GLOBAL                     10: _rmtree_unsafe
                180     LOAD_FAST                       5: fullname
                182     LOAD_FAST                       1: onerror
                184     CALL_FUNCTION                   2
                186     POP_TOP                         
                188     JUMP_ABSOLUTE                   50 (to 100)
                190     SETUP_FINALLY                   7 (to 206)
                192     LOAD_GLOBAL                     0: os
                194     LOAD_METHOD                     11: unlink
                196     LOAD_FAST                       5: fullname
                198     CALL_METHOD                     1
                200     POP_TOP                         
                202     POP_BLOCK                       
                204     JUMP_ABSOLUTE                   50 (to 100)
                206     DUP_TOP                         
                208     LOAD_GLOBAL                     3: OSError
                210     JUMP_IF_NOT_EXC_MATCH           120 (to 240)
                212     POP_TOP                         
                214     POP_TOP                         
                216     POP_TOP                         
                218     LOAD_FAST                       1: onerror
                220     LOAD_GLOBAL                     0: os
                222     LOAD_ATTR                       11: unlink
                224     LOAD_FAST                       5: fullname
                226     LOAD_GLOBAL                     4: sys
                228     LOAD_METHOD                     5: exc_info
                230     CALL_METHOD                     0
                232     CALL_FUNCTION                   3
                234     POP_TOP                         
                236     POP_EXCEPT                      
                238     JUMP_ABSOLUTE                   50 (to 100)
                240     RERAISE                         0
                242     SETUP_FINALLY                   8 (to 260)
                244     LOAD_GLOBAL                     0: os
                246     LOAD_METHOD                     12: rmdir
                248     LOAD_FAST                       0: path
                250     CALL_METHOD                     1
                252     POP_TOP                         
                254     POP_BLOCK                       
                256     LOAD_CONST                      0: None
                258     RETURN_VALUE                    
                260     DUP_TOP                         
                262     LOAD_GLOBAL                     3: OSError
                264     JUMP_IF_NOT_EXC_MATCH           148 (to 296)
                266     POP_TOP                         
                268     POP_TOP                         
                270     POP_TOP                         
                272     LOAD_FAST                       1: onerror
                274     LOAD_GLOBAL                     0: os
                276     LOAD_ATTR                       12: rmdir
                278     LOAD_FAST                       0: path
                280     LOAD_GLOBAL                     4: sys
                282     LOAD_METHOD                     5: exc_info
                284     CALL_METHOD                     0
                286     CALL_FUNCTION                   3
                288     POP_TOP                         
                290     POP_EXCEPT                      
                292     LOAD_CONST                      0: None
                294     RETURN_VALUE                    
                296     RERAISE                         0
        '_rmtree_unsafe'
        [Code]
            File Name: shutil.py
            Object Name: _rmtree_safe_fd
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 12
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'scandir'
                'list'
                'OSError'
                'filename'
                'sys'
                'exc_info'
                'path'
                'join'
                'name'
                'is_dir'
                'stat'
                'S_ISDIR'
                'st_mode'
                'lstat'
                'open'
                'O_RDONLY'
                'samestat'
                'fstat'
                '_rmtree_safe_fd'
                'close'
                'rmdir'
                'islink'
                'unlink'
            [Var Names]
                'topfd'
                'path'
                'onerror'
                'scandir_it'
                'entries'
                'err'
                'entry'
                'fullname'
                'is_dir'
                'orig_st'
                'dirfd'
                'dirfd_closed'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                False
                (
                    'follow_symlinks'
                )
                (
                    'dir_fd'
                )
                True
                'Cannot call rmtree on a symbolic link'
            [Disassembly]
                0       SETUP_FINALLY                   27 (to 56)
                2       LOAD_GLOBAL                     0: os
                4       LOAD_METHOD                     1: scandir
                6       LOAD_FAST                       0: topfd
                8       CALL_METHOD                     1
                10      SETUP_WITH                      12 (to 36)
                12      STORE_FAST                      3: scandir_it
                14      LOAD_GLOBAL                     2: list
                16      LOAD_FAST                       3: scandir_it
                18      CALL_FUNCTION                   1
                20      STORE_FAST                      4: entries
                22      POP_BLOCK                       
                24      LOAD_CONST                      0: None
                26      DUP_TOP                         
                28      DUP_TOP                         
                30      CALL_FUNCTION                   3
                32      POP_TOP                         
                34      JUMP_FORWARD                    8 (to 52)
                36      WITH_EXCEPT_START               
                38      POP_JUMP_IF_TRUE                21 (to 42)
                40      RERAISE                         1
                42      POP_TOP                         
                44      POP_TOP                         
                46      POP_TOP                         
                48      POP_EXCEPT                      
                50      POP_TOP                         
                52      POP_BLOCK                       
                54      JUMP_FORWARD                    31 (to 118)
                56      DUP_TOP                         
                58      LOAD_GLOBAL                     3: OSError
                60      JUMP_IF_NOT_EXC_MATCH           58 (to 116)
                62      POP_TOP                         
                64      STORE_FAST                      5: err
                66      POP_TOP                         
                68      SETUP_FINALLY                   19 (to 108)
                70      LOAD_FAST                       1: path
                72      LOAD_FAST                       5: err
                74      STORE_ATTR                      4: filename
                76      LOAD_FAST                       2: onerror
                78      LOAD_GLOBAL                     0: os
                80      LOAD_ATTR                       1: scandir
                82      LOAD_FAST                       1: path
                84      LOAD_GLOBAL                     5: sys
                86      LOAD_METHOD                     6: exc_info
                88      CALL_METHOD                     0
                90      CALL_FUNCTION                   3
                92      POP_TOP                         
                94      POP_BLOCK                       
                96      POP_EXCEPT                      
                98      LOAD_CONST                      0: None
                100     STORE_FAST                      5: err
                102     DELETE_FAST                     5: err
                104     LOAD_CONST                      0: None
                106     RETURN_VALUE                    
                108     LOAD_CONST                      0: None
                110     STORE_FAST                      5: err
                112     DELETE_FAST                     5: err
                114     RERAISE                         1
                116     RERAISE                         0
                118     LOAD_FAST                       4: entries
                120     GET_ITER                        
                122     FOR_ITER                        226 (to 576)
                124     STORE_FAST                      6: entry
                126     LOAD_GLOBAL                     0: os
                128     LOAD_ATTR                       7: path
                130     LOAD_METHOD                     8: join
                132     LOAD_FAST                       1: path
                134     LOAD_FAST                       6: entry
                136     LOAD_ATTR                       9: name
                138     CALL_METHOD                     2
                140     STORE_FAST                      7: fullname
                142     SETUP_FINALLY                   8 (to 160)
                144     LOAD_FAST                       6: entry
                146     LOAD_ATTR                       10: is_dir
                148     LOAD_CONST                      1: False
                150     LOAD_CONST                      2: ('follow_symlinks',)
                152     CALL_FUNCTION_KW                1
                154     STORE_FAST                      8: is_dir
                156     POP_BLOCK                       
                158     JUMP_FORWARD                    11 (to 182)
                160     DUP_TOP                         
                162     LOAD_GLOBAL                     3: OSError
                164     JUMP_IF_NOT_EXC_MATCH           90 (to 180)
                166     POP_TOP                         
                168     POP_TOP                         
                170     POP_TOP                         
                172     LOAD_CONST                      1: False
                174     STORE_FAST                      8: is_dir
                176     POP_EXCEPT                      
                178     JUMP_FORWARD                    36 (to 252)
                180     RERAISE                         0
                182     LOAD_FAST                       8: is_dir
                184     POP_JUMP_IF_FALSE               126 (to 252)
                186     SETUP_FINALLY                   14 (to 216)
                188     LOAD_FAST                       6: entry
                190     LOAD_ATTR                       11: stat
                192     LOAD_CONST                      1: False
                194     LOAD_CONST                      2: ('follow_symlinks',)
                196     CALL_FUNCTION_KW                1
                198     STORE_FAST                      9: orig_st
                200     LOAD_GLOBAL                     11: stat
                202     LOAD_METHOD                     12: S_ISDIR
                204     LOAD_FAST                       9: orig_st
                206     LOAD_ATTR                       13: st_mode
                208     CALL_METHOD                     1
                210     STORE_FAST                      8: is_dir
                212     POP_BLOCK                       
                214     JUMP_FORWARD                    18 (to 252)
                216     DUP_TOP                         
                218     LOAD_GLOBAL                     3: OSError
                220     JUMP_IF_NOT_EXC_MATCH           125 (to 250)
                222     POP_TOP                         
                224     POP_TOP                         
                226     POP_TOP                         
                228     LOAD_FAST                       2: onerror
                230     LOAD_GLOBAL                     0: os
                232     LOAD_ATTR                       14: lstat
                234     LOAD_FAST                       7: fullname
                236     LOAD_GLOBAL                     5: sys
                238     LOAD_METHOD                     6: exc_info
                240     CALL_METHOD                     0
                242     CALL_FUNCTION                   3
                244     POP_TOP                         
                246     POP_EXCEPT                      
                248     JUMP_ABSOLUTE                   61 (to 122)
                250     RERAISE                         0
                252     LOAD_FAST                       8: is_dir
                254     POP_JUMP_IF_FALSE               258 (to 516)
                258     SETUP_FINALLY                   14 (to 288)
                260     LOAD_GLOBAL                     0: os
                262     LOAD_ATTR                       15: open
                264     LOAD_FAST                       6: entry
                266     LOAD_ATTR                       9: name
                268     LOAD_GLOBAL                     0: os
                270     LOAD_ATTR                       16: O_RDONLY
                272     LOAD_FAST                       0: topfd
                274     LOAD_CONST                      3: ('dir_fd',)
                276     CALL_FUNCTION_KW                3
                278     STORE_FAST                      10: dirfd
                280     LOAD_CONST                      1: False
                282     STORE_FAST                      11: dirfd_closed
                284     POP_BLOCK                       
                286     JUMP_FORWARD                    18 (to 324)
                288     DUP_TOP                         
                290     LOAD_GLOBAL                     3: OSError
                292     JUMP_IF_NOT_EXC_MATCH           161 (to 322)
                294     POP_TOP                         
                296     POP_TOP                         
                298     POP_TOP                         
                300     LOAD_FAST                       2: onerror
                302     LOAD_GLOBAL                     0: os
                304     LOAD_ATTR                       15: open
                306     LOAD_FAST                       7: fullname
                308     LOAD_GLOBAL                     5: sys
                310     LOAD_METHOD                     6: exc_info
                312     CALL_METHOD                     0
                314     CALL_FUNCTION                   3
                316     POP_TOP                         
                318     POP_EXCEPT                      
                320     JUMP_ABSOLUTE                   61 (to 122)
                322     RERAISE                         0
                324     SETUP_FINALLY                   85 (to 496)
                326     LOAD_GLOBAL                     0: os
                328     LOAD_ATTR                       7: path
                330     LOAD_METHOD                     17: samestat
                332     LOAD_FAST                       9: orig_st
                334     LOAD_GLOBAL                     0: os
                336     LOAD_METHOD                     18: fstat
                338     LOAD_FAST                       10: dirfd
                340     CALL_METHOD                     1
                342     CALL_METHOD                     2
                344     POP_JUMP_IF_FALSE               215 (to 430)
                346     LOAD_GLOBAL                     19: _rmtree_safe_fd
                348     LOAD_FAST                       10: dirfd
                350     LOAD_FAST                       7: fullname
                352     LOAD_FAST                       2: onerror
                354     CALL_FUNCTION                   3
                356     POP_TOP                         
                358     SETUP_FINALLY                   17 (to 394)
                360     LOAD_GLOBAL                     0: os
                362     LOAD_METHOD                     20: close
                364     LOAD_FAST                       10: dirfd
                366     CALL_METHOD                     1
                368     POP_TOP                         
                370     LOAD_CONST                      4: True
                372     STORE_FAST                      11: dirfd_closed
                374     LOAD_GLOBAL                     0: os
                376     LOAD_ATTR                       21: rmdir
                378     LOAD_FAST                       6: entry
                380     LOAD_ATTR                       9: name
                382     LOAD_FAST                       0: topfd
                384     LOAD_CONST                      3: ('dir_fd',)
                386     CALL_FUNCTION_KW                2
                388     POP_TOP                         
                390     POP_BLOCK                       
                392     JUMP_FORWARD                    42 (to 478)
                394     DUP_TOP                         
                396     LOAD_GLOBAL                     3: OSError
                398     JUMP_IF_NOT_EXC_MATCH           214 (to 428)
                400     POP_TOP                         
                402     POP_TOP                         
                404     POP_TOP                         
                406     LOAD_FAST                       2: onerror
                408     LOAD_GLOBAL                     0: os
                410     LOAD_ATTR                       21: rmdir
                412     LOAD_FAST                       7: fullname
                414     LOAD_GLOBAL                     5: sys
                416     LOAD_METHOD                     6: exc_info
                418     CALL_METHOD                     0
                420     CALL_FUNCTION                   3
                422     POP_TOP                         
                424     POP_EXCEPT                      
                426     JUMP_FORWARD                    25 (to 478)
                428     RERAISE                         0
                430     SETUP_FINALLY                   4 (to 440)
                432     LOAD_GLOBAL                     3: OSError
                434     LOAD_CONST                      5: 'Cannot call rmtree on a symbolic link'
                436     CALL_FUNCTION                   1
                438     RAISE_VARARGS                   1
                440     DUP_TOP                         
                442     LOAD_GLOBAL                     3: OSError
                444     JUMP_IF_NOT_EXC_MATCH           238 (to 476)
                446     POP_TOP                         
                448     POP_TOP                         
                450     POP_TOP                         
                452     LOAD_FAST                       2: onerror
                454     LOAD_GLOBAL                     0: os
                456     LOAD_ATTR                       7: path
                458     LOAD_ATTR                       22: islink
                460     LOAD_FAST                       7: fullname
                462     LOAD_GLOBAL                     5: sys
                464     LOAD_METHOD                     6: exc_info
                466     CALL_METHOD                     0
                468     CALL_FUNCTION                   3
                470     POP_TOP                         
                472     POP_EXCEPT                      
                474     JUMP_FORWARD                    1 (to 478)
                476     RERAISE                         0
                478     POP_BLOCK                       
                480     LOAD_FAST                       11: dirfd_closed
                482     POP_JUMP_IF_TRUE                247 (to 494)
                484     LOAD_GLOBAL                     0: os
                486     LOAD_METHOD                     20: close
                488     LOAD_FAST                       10: dirfd
                490     CALL_METHOD                     1
                492     POP_TOP                         
                494     JUMP_ABSOLUTE                   61 (to 122)
                496     LOAD_FAST                       11: dirfd_closed
                498     POP_JUMP_IF_TRUE                257 (to 514)
                502     LOAD_GLOBAL                     0: os
                504     LOAD_METHOD                     20: close
                506     LOAD_FAST                       10: dirfd
                508     CALL_METHOD                     1
                510     POP_TOP                         
                512     RERAISE                         0
                514     RERAISE                         0
                516     SETUP_FINALLY                   10 (to 538)
                518     LOAD_GLOBAL                     0: os
                520     LOAD_ATTR                       23: unlink
                522     LOAD_FAST                       6: entry
                524     LOAD_ATTR                       9: name
                526     LOAD_FAST                       0: topfd
                528     LOAD_CONST                      3: ('dir_fd',)
                530     CALL_FUNCTION_KW                2
                532     POP_TOP                         
                534     POP_BLOCK                       
                536     JUMP_ABSOLUTE                   61 (to 122)
                538     DUP_TOP                         
                540     LOAD_GLOBAL                     3: OSError
                542     JUMP_IF_NOT_EXC_MATCH           287 (to 574)
                546     POP_TOP                         
                548     POP_TOP                         
                550     POP_TOP                         
                552     LOAD_FAST                       2: onerror
                554     LOAD_GLOBAL                     0: os
                556     LOAD_ATTR                       23: unlink
                558     LOAD_FAST                       7: fullname
                560     LOAD_GLOBAL                     5: sys
                562     LOAD_METHOD                     6: exc_info
                564     CALL_METHOD                     0
                566     CALL_FUNCTION                   3
                568     POP_TOP                         
                570     POP_EXCEPT                      
                572     JUMP_ABSOLUTE                   61 (to 122)
                574     RERAISE                         0
                576     LOAD_CONST                      0: None
                578     RETURN_VALUE                    
        '_rmtree_safe_fd'
        [Code]
            File Name: shutil.py
            Object Name: rmtree
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                '_use_fd_functions'
                'isinstance'
                'bytes'
                'os'
                'fsdecode'
                'lstat'
                'Exception'
                'exc_info'
                'open'
                'O_RDONLY'
                'path'
                'samestat'
                'fstat'
                '_rmtree_safe_fd'
                'close'
                'rmdir'
                'OSError'
                'islink'
                '_rmtree_islink'
                '_rmtree_unsafe'
            [Var Names]
                'path'
                'ignore_errors'
                'onerror'
                'orig_st'
                'fd'
                'fd_closed'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Recursively delete a directory tree.\n\n    If ignore_errors is set, errors are ignored; otherwise, if onerror\n    is set, it is called to handle the error with arguments (func,\n    path, exc_info) where func is platform and implementation dependent;\n    path is the argument to that function that caused it to fail; and\n    exc_info is a tuple returned by sys.exc_info().  If ignore_errors\n    is false and onerror is None, an exception is raised.\n\n    '
                'shutil.rmtree'
                [Code]
                    File Name: shutil.py
                    Object Name: onerror
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000057 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_CONST                      0: None
                        2       RETURN_VALUE                    
                'rmtree.<locals>.onerror'
                None
                [Code]
                    File Name: shutil.py
                    Object Name: onerror
                    Arg Count: 0
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 0
                    Flags: 0x00000057 (CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        'args'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       RAISE_VARARGS                   0
                False
                True
                'Cannot call rmtree on a symbolic link'
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.rmtree'
                6       LOAD_FAST                       0: path
                8       CALL_METHOD                     2
                10      POP_TOP                         
                12      LOAD_FAST                       1: ignore_errors
                14      POP_JUMP_IF_FALSE               13 (to 26)
                16      LOAD_CONST                      2: <CODE> onerror
                18      LOAD_CONST                      3: 'rmtree.<locals>.onerror'
                20      MAKE_FUNCTION                   0
                22      STORE_FAST                      2: onerror
                24      JUMP_FORWARD                    8 (to 42)
                26      LOAD_FAST                       2: onerror
                28      LOAD_CONST                      4: None
                30      IS_OP                           0 (is)
                32      POP_JUMP_IF_FALSE               21 (to 42)
                34      LOAD_CONST                      5: <CODE> onerror
                36      LOAD_CONST                      3: 'rmtree.<locals>.onerror'
                38      MAKE_FUNCTION                   0
                40      STORE_FAST                      2: onerror
                42      LOAD_GLOBAL                     2: _use_fd_functions
                44      POP_JUMP_IF_FALSE               186 (to 372)
                46      LOAD_GLOBAL                     3: isinstance
                48      LOAD_FAST                       0: path
                50      LOAD_GLOBAL                     4: bytes
                52      CALL_FUNCTION                   2
                54      POP_JUMP_IF_FALSE               33 (to 66)
                56      LOAD_GLOBAL                     5: os
                58      LOAD_METHOD                     6: fsdecode
                60      LOAD_FAST                       0: path
                62      CALL_METHOD                     1
                64      STORE_FAST                      0: path
                66      SETUP_FINALLY                   7 (to 82)
                68      LOAD_GLOBAL                     5: os
                70      LOAD_METHOD                     7: lstat
                72      LOAD_FAST                       0: path
                74      CALL_METHOD                     1
                76      STORE_FAST                      3: orig_st
                78      POP_BLOCK                       
                80      JUMP_FORWARD                    19 (to 120)
                82      DUP_TOP                         
                84      LOAD_GLOBAL                     8: Exception
                86      JUMP_IF_NOT_EXC_MATCH           59 (to 118)
                88      POP_TOP                         
                90      POP_TOP                         
                92      POP_TOP                         
                94      LOAD_FAST                       2: onerror
                96      LOAD_GLOBAL                     5: os
                98      LOAD_ATTR                       7: lstat
                100     LOAD_FAST                       0: path
                102     LOAD_GLOBAL                     0: sys
                104     LOAD_METHOD                     9: exc_info
                106     CALL_METHOD                     0
                108     CALL_FUNCTION                   3
                110     POP_TOP                         
                112     POP_EXCEPT                      
                114     LOAD_CONST                      4: None
                116     RETURN_VALUE                    
                118     RERAISE                         0
                120     SETUP_FINALLY                   11 (to 144)
                122     LOAD_GLOBAL                     5: os
                124     LOAD_METHOD                     10: open
                126     LOAD_FAST                       0: path
                128     LOAD_GLOBAL                     5: os
                130     LOAD_ATTR                       11: O_RDONLY
                132     CALL_METHOD                     2
                134     STORE_FAST                      4: fd
                136     LOAD_CONST                      6: False
                138     STORE_FAST                      5: fd_closed
                140     POP_BLOCK                       
                142     JUMP_FORWARD                    19 (to 182)
                144     DUP_TOP                         
                146     LOAD_GLOBAL                     8: Exception
                148     JUMP_IF_NOT_EXC_MATCH           90 (to 180)
                150     POP_TOP                         
                152     POP_TOP                         
                154     POP_TOP                         
                156     LOAD_FAST                       2: onerror
                158     LOAD_GLOBAL                     5: os
                160     LOAD_ATTR                       10: open
                162     LOAD_FAST                       0: path
                164     LOAD_GLOBAL                     0: sys
                166     LOAD_METHOD                     9: exc_info
                168     CALL_METHOD                     0
                170     CALL_FUNCTION                   3
                172     POP_TOP                         
                174     POP_EXCEPT                      
                176     LOAD_CONST                      4: None
                178     RETURN_VALUE                    
                180     RERAISE                         0
                182     SETUP_FINALLY                   85 (to 354)
                184     LOAD_GLOBAL                     5: os
                186     LOAD_ATTR                       12: path
                188     LOAD_METHOD                     13: samestat
                190     LOAD_FAST                       3: orig_st
                192     LOAD_GLOBAL                     5: os
                194     LOAD_METHOD                     14: fstat
                196     LOAD_FAST                       4: fd
                198     CALL_METHOD                     1
                200     CALL_METHOD                     2
                202     POP_JUMP_IF_FALSE               141 (to 282)
                204     LOAD_GLOBAL                     15: _rmtree_safe_fd
                206     LOAD_FAST                       4: fd
                208     LOAD_FAST                       0: path
                210     LOAD_FAST                       2: onerror
                212     CALL_FUNCTION                   3
                214     POP_TOP                         
                216     SETUP_FINALLY                   14 (to 246)
                218     LOAD_GLOBAL                     5: os
                220     LOAD_METHOD                     16: close
                222     LOAD_FAST                       4: fd
                224     CALL_METHOD                     1
                226     POP_TOP                         
                228     LOAD_CONST                      7: True
                230     STORE_FAST                      5: fd_closed
                232     LOAD_GLOBAL                     5: os
                234     LOAD_METHOD                     17: rmdir
                236     LOAD_FAST                       0: path
                238     CALL_METHOD                     1
                240     POP_TOP                         
                242     POP_BLOCK                       
                244     JUMP_FORWARD                    42 (to 330)
                246     DUP_TOP                         
                248     LOAD_GLOBAL                     18: OSError
                250     JUMP_IF_NOT_EXC_MATCH           140 (to 280)
                252     POP_TOP                         
                254     POP_TOP                         
                256     POP_TOP                         
                258     LOAD_FAST                       2: onerror
                260     LOAD_GLOBAL                     5: os
                262     LOAD_ATTR                       17: rmdir
                264     LOAD_FAST                       0: path
                266     LOAD_GLOBAL                     0: sys
                268     LOAD_METHOD                     9: exc_info
                270     CALL_METHOD                     0
                272     CALL_FUNCTION                   3
                274     POP_TOP                         
                276     POP_EXCEPT                      
                278     JUMP_FORWARD                    25 (to 330)
                280     RERAISE                         0
                282     SETUP_FINALLY                   4 (to 292)
                284     LOAD_GLOBAL                     18: OSError
                286     LOAD_CONST                      8: 'Cannot call rmtree on a symbolic link'
                288     CALL_FUNCTION                   1
                290     RAISE_VARARGS                   1
                292     DUP_TOP                         
                294     LOAD_GLOBAL                     18: OSError
                296     JUMP_IF_NOT_EXC_MATCH           164 (to 328)
                298     POP_TOP                         
                300     POP_TOP                         
                302     POP_TOP                         
                304     LOAD_FAST                       2: onerror
                306     LOAD_GLOBAL                     5: os
                308     LOAD_ATTR                       12: path
                310     LOAD_ATTR                       19: islink
                312     LOAD_FAST                       0: path
                314     LOAD_GLOBAL                     0: sys
                316     LOAD_METHOD                     9: exc_info
                318     CALL_METHOD                     0
                320     CALL_FUNCTION                   3
                322     POP_TOP                         
                324     POP_EXCEPT                      
                326     JUMP_FORWARD                    1 (to 330)
                328     RERAISE                         0
                330     POP_BLOCK                       
                332     LOAD_FAST                       5: fd_closed
                334     POP_JUMP_IF_TRUE                175 (to 350)
                336     LOAD_GLOBAL                     5: os
                338     LOAD_METHOD                     16: close
                340     LOAD_FAST                       4: fd
                342     CALL_METHOD                     1
                344     POP_TOP                         
                346     LOAD_CONST                      4: None
                348     RETURN_VALUE                    
                350     LOAD_CONST                      4: None
                352     RETURN_VALUE                    
                354     LOAD_FAST                       5: fd_closed
                356     POP_JUMP_IF_TRUE                185 (to 370)
                358     LOAD_GLOBAL                     5: os
                360     LOAD_METHOD                     16: close
                362     LOAD_FAST                       4: fd
                364     CALL_METHOD                     1
                366     POP_TOP                         
                368     RERAISE                         0
                370     RERAISE                         0
                372     SETUP_FINALLY                   10 (to 394)
                374     LOAD_GLOBAL                     20: _rmtree_islink
                376     LOAD_FAST                       0: path
                378     CALL_FUNCTION                   1
                380     POP_JUMP_IF_FALSE               195 (to 390)
                382     LOAD_GLOBAL                     18: OSError
                384     LOAD_CONST                      8: 'Cannot call rmtree on a symbolic link'
                386     CALL_FUNCTION                   1
                388     RAISE_VARARGS                   1
                390     POP_BLOCK                       
                392     JUMP_FORWARD                    20 (to 434)
                394     DUP_TOP                         
                396     LOAD_GLOBAL                     18: OSError
                398     JUMP_IF_NOT_EXC_MATCH           216 (to 432)
                400     POP_TOP                         
                402     POP_TOP                         
                404     POP_TOP                         
                406     LOAD_FAST                       2: onerror
                408     LOAD_GLOBAL                     5: os
                410     LOAD_ATTR                       12: path
                412     LOAD_ATTR                       19: islink
                414     LOAD_FAST                       0: path
                416     LOAD_GLOBAL                     0: sys
                418     LOAD_METHOD                     9: exc_info
                420     CALL_METHOD                     0
                422     CALL_FUNCTION                   3
                424     POP_TOP                         
                426     POP_EXCEPT                      
                428     LOAD_CONST                      4: None
                430     RETURN_VALUE                    
                432     RERAISE                         0
                434     LOAD_GLOBAL                     21: _rmtree_unsafe
                436     LOAD_FAST                       0: path
                438     LOAD_FAST                       2: onerror
                440     CALL_FUNCTION                   2
                442     RETURN_VALUE                    
        'rmtree'
        [Code]
            File Name: shutil.py
            Object Name: _basename
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'fspath'
                'path'
                'sep'
                'altsep'
                'basename'
                'rstrip'
            [Var Names]
                'path'
                'sep'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "A basename() variant which first strips the trailing slash, if present.\n    Thus we always get the last component of the path, even for directories.\n\n    path: Union[PathLike, str]\n\n    e.g.\n    >>> os.path.basename('/bar/foo')\n    'foo'\n    >>> os.path.basename('/bar/foo/')\n    ''\n    >>> _basename('/bar/foo/')\n    'foo'\n    "
                ''
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_METHOD                     1: fspath
                4       LOAD_FAST                       0: path
                6       CALL_METHOD                     1
                8       STORE_FAST                      0: path
                10      LOAD_GLOBAL                     0: os
                12      LOAD_ATTR                       2: path
                14      LOAD_ATTR                       3: sep
                16      LOAD_GLOBAL                     0: os
                18      LOAD_ATTR                       2: path
                20      LOAD_ATTR                       4: altsep
                22      JUMP_IF_TRUE_OR_POP             13 (to 26)
                24      LOAD_CONST                      1: ''
                26      BINARY_ADD                      
                28      STORE_FAST                      1: sep
                30      LOAD_GLOBAL                     0: os
                32      LOAD_ATTR                       2: path
                34      LOAD_METHOD                     5: basename
                36      LOAD_FAST                       0: path
                38      LOAD_METHOD                     6: rstrip
                40      LOAD_FAST                       1: sep
                42      CALL_METHOD                     1
                44      CALL_METHOD                     1
                46      RETURN_VALUE                    
        '_basename'
        [Code]
            File Name: shutil.py
            Object Name: move
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 9
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                'os'
                'path'
                'isdir'
                '_samefile'
                'rename'
                'join'
                '_basename'
                'exists'
                'Error'
                'OSError'
                'islink'
                'readlink'
                'symlink'
                'unlink'
                '_destinsrc'
                '_is_immutable'
                'access'
                'W_OK'
                'listdir'
                'platform'
                'PermissionError'
                'copytree'
                'rmtree'
            [Var Names]
                'src'
                'dst'
                'copy_function'
                'real_dst'
                'linkto'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Recursively move a file or directory to another location. This is\n    similar to the Unix "mv" command. Return the file or directory\'s\n    destination.\n\n    If the destination is a directory or a symlink to a directory, the source\n    is moved inside the directory. The destination path must not already\n    exist.\n\n    If the destination already exists but is not a directory, it may be\n    overwritten depending on os.rename() semantics.\n\n    If the destination is on our current filesystem, then rename() is used.\n    Otherwise, src is copied to the destination and then removed. Symlinks are\n    recreated under the new name if os.rename() fails because of cross\n    filesystem renames.\n\n    The optional `copy_function` argument is a callable that will be used\n    to copy the source or it will be delegated to `copytree`.\n    By default, copy2() is used, but any function that supports the same\n    signature (like copy()) can be used.\n\n    A lot more could be done here...  A look at a mv.c shows a lot of\n    the issues this implementation glosses over.\n\n    '
                'shutil.move'
                None
                "Destination path '%s' already exists"
                "Cannot move a directory '%s' into itself '%s'."
                'darwin'
                "Cannot move the non-empty directory '%s': Lacking write permission to '%s'."
                True
                (
                    'copy_function'
                    'symlinks'
                )
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.move'
                6       LOAD_FAST                       0: src
                8       LOAD_FAST                       1: dst
                10      CALL_METHOD                     3
                12      POP_TOP                         
                14      LOAD_FAST                       1: dst
                16      STORE_FAST                      3: real_dst
                18      LOAD_GLOBAL                     2: os
                20      LOAD_ATTR                       3: path
                22      LOAD_METHOD                     4: isdir
                24      LOAD_FAST                       1: dst
                26      CALL_METHOD                     1
                28      POP_JUMP_IF_FALSE               49 (to 98)
                30      LOAD_GLOBAL                     5: _samefile
                32      LOAD_FAST                       0: src
                34      LOAD_FAST                       1: dst
                36      CALL_FUNCTION                   2
                38      POP_JUMP_IF_FALSE               28 (to 56)
                40      LOAD_GLOBAL                     2: os
                42      LOAD_METHOD                     6: rename
                44      LOAD_FAST                       0: src
                46      LOAD_FAST                       1: dst
                48      CALL_METHOD                     2
                50      POP_TOP                         
                52      LOAD_CONST                      2: None
                54      RETURN_VALUE                    
                56      LOAD_GLOBAL                     2: os
                58      LOAD_ATTR                       3: path
                60      LOAD_METHOD                     7: join
                62      LOAD_FAST                       1: dst
                64      LOAD_GLOBAL                     8: _basename
                66      LOAD_FAST                       0: src
                68      CALL_FUNCTION                   1
                70      CALL_METHOD                     2
                72      STORE_FAST                      3: real_dst
                74      LOAD_GLOBAL                     2: os
                76      LOAD_ATTR                       3: path
                78      LOAD_METHOD                     9: exists
                80      LOAD_FAST                       3: real_dst
                82      CALL_METHOD                     1
                84      POP_JUMP_IF_FALSE               49 (to 98)
                86      LOAD_GLOBAL                     10: Error
                88      LOAD_CONST                      3: "Destination path '%s' already exists"
                90      LOAD_FAST                       3: real_dst
                92      BINARY_MODULO                   
                94      CALL_FUNCTION                   1
                96      RAISE_VARARGS                   1
                98      SETUP_FINALLY                   9 (to 118)
                100     LOAD_GLOBAL                     2: os
                102     LOAD_METHOD                     6: rename
                104     LOAD_FAST                       0: src
                106     LOAD_FAST                       3: real_dst
                108     CALL_METHOD                     2
                110     POP_TOP                         
                112     POP_BLOCK                       
                114     LOAD_FAST                       3: real_dst
                116     RETURN_VALUE                    
                118     DUP_TOP                         
                120     LOAD_GLOBAL                     11: OSError
                122     JUMP_IF_NOT_EXC_MATCH           166 (to 332)
                124     POP_TOP                         
                126     POP_TOP                         
                128     POP_TOP                         
                130     LOAD_GLOBAL                     2: os
                132     LOAD_ATTR                       3: path
                134     LOAD_METHOD                     12: islink
                136     LOAD_FAST                       0: src
                138     CALL_METHOD                     1
                140     POP_JUMP_IF_FALSE               90 (to 180)
                142     LOAD_GLOBAL                     2: os
                144     LOAD_METHOD                     13: readlink
                146     LOAD_FAST                       0: src
                148     CALL_METHOD                     1
                150     STORE_FAST                      4: linkto
                152     LOAD_GLOBAL                     2: os
                154     LOAD_METHOD                     14: symlink
                156     LOAD_FAST                       4: linkto
                158     LOAD_FAST                       3: real_dst
                160     CALL_METHOD                     2
                162     POP_TOP                         
                164     LOAD_GLOBAL                     2: os
                166     LOAD_METHOD                     15: unlink
                168     LOAD_FAST                       0: src
                170     CALL_METHOD                     1
                172     POP_TOP                         
                174     POP_EXCEPT                      
                176     LOAD_FAST                       3: real_dst
                178     RETURN_VALUE                    
                180     LOAD_GLOBAL                     2: os
                182     LOAD_ATTR                       3: path
                184     LOAD_METHOD                     4: isdir
                186     LOAD_FAST                       0: src
                188     CALL_METHOD                     1
                190     POP_JUMP_IF_FALSE               153 (to 306)
                192     LOAD_GLOBAL                     16: _destinsrc
                194     LOAD_FAST                       0: src
                196     LOAD_FAST                       1: dst
                198     CALL_FUNCTION                   2
                200     POP_JUMP_IF_FALSE               109 (to 218)
                202     LOAD_GLOBAL                     10: Error
                204     LOAD_CONST                      4: "Cannot move a directory '%s' into itself '%s'."
                206     LOAD_FAST                       0: src
                208     LOAD_FAST                       1: dst
                210     BUILD_TUPLE                     2
                212     BINARY_MODULO                   
                214     CALL_FUNCTION                   1
                216     RAISE_VARARGS                   1
                218     LOAD_GLOBAL                     17: _is_immutable
                220     LOAD_FAST                       0: src
                222     CALL_FUNCTION                   1
                224     POP_JUMP_IF_TRUE                130 (to 260)
                226     LOAD_GLOBAL                     2: os
                228     LOAD_METHOD                     18: access
                230     LOAD_FAST                       0: src
                232     LOAD_GLOBAL                     2: os
                234     LOAD_ATTR                       19: W_OK
                236     CALL_METHOD                     2
                238     POP_JUMP_IF_TRUE                138 (to 276)
                240     LOAD_GLOBAL                     2: os
                242     LOAD_METHOD                     20: listdir
                244     LOAD_FAST                       0: src
                246     CALL_METHOD                     1
                248     POP_JUMP_IF_FALSE               138 (to 276)
                250     LOAD_GLOBAL                     0: sys
                252     LOAD_ATTR                       21: platform
                254     LOAD_CONST                      5: 'darwin'
                256     COMPARE_OP                      2 (==)
                258     POP_JUMP_IF_FALSE               138 (to 276)
                260     LOAD_GLOBAL                     22: PermissionError
                262     LOAD_CONST                      6: "Cannot move the non-empty directory '%s': Lacking write permission to '%s'."
                264     LOAD_FAST                       0: src
                266     LOAD_FAST                       0: src
                268     BUILD_TUPLE                     2
                270     BINARY_MODULO                   
                272     CALL_FUNCTION                   1
                274     RAISE_VARARGS                   1
                276     LOAD_GLOBAL                     23: copytree
                278     LOAD_FAST                       0: src
                280     LOAD_FAST                       3: real_dst
                282     LOAD_FAST                       2: copy_function
                284     LOAD_CONST                      7: True
                286     LOAD_CONST                      8: ('copy_function', 'symlinks')
                288     CALL_FUNCTION_KW                4
                290     POP_TOP                         
                292     LOAD_GLOBAL                     24: rmtree
                294     LOAD_FAST                       0: src
                296     CALL_FUNCTION                   1
                298     POP_TOP                         
                300     POP_EXCEPT                      
                302     LOAD_FAST                       3: real_dst
                304     RETURN_VALUE                    
                306     LOAD_FAST                       2: copy_function
                308     LOAD_FAST                       0: src
                310     LOAD_FAST                       3: real_dst
                312     CALL_FUNCTION                   2
                314     POP_TOP                         
                316     LOAD_GLOBAL                     2: os
                318     LOAD_METHOD                     15: unlink
                320     LOAD_FAST                       0: src
                322     CALL_METHOD                     1
                324     POP_TOP                         
                326     POP_EXCEPT                      
                328     LOAD_FAST                       3: real_dst
                330     RETURN_VALUE                    
                332     RERAISE                         0
        'move'
        [Code]
            File Name: shutil.py
            Object Name: _destinsrc
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'abspath'
                'endswith'
                'sep'
                'startswith'
            [Var Names]
                'src'
                'dst'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: abspath
                6       LOAD_FAST                       0: src
                8       CALL_METHOD                     1
                10      STORE_FAST                      0: src
                12      LOAD_GLOBAL                     0: os
                14      LOAD_ATTR                       1: path
                16      LOAD_METHOD                     2: abspath
                18      LOAD_FAST                       1: dst
                20      CALL_METHOD                     1
                22      STORE_FAST                      1: dst
                24      LOAD_FAST                       0: src
                26      LOAD_METHOD                     3: endswith
                28      LOAD_GLOBAL                     0: os
                30      LOAD_ATTR                       1: path
                32      LOAD_ATTR                       4: sep
                34      CALL_METHOD                     1
                36      POP_JUMP_IF_TRUE                25 (to 50)
                38      LOAD_FAST                       0: src
                40      LOAD_GLOBAL                     0: os
                42      LOAD_ATTR                       1: path
                44      LOAD_ATTR                       4: sep
                46      INPLACE_ADD                     
                48      STORE_FAST                      0: src
                50      LOAD_FAST                       1: dst
                52      LOAD_METHOD                     3: endswith
                54      LOAD_GLOBAL                     0: os
                56      LOAD_ATTR                       1: path
                58      LOAD_ATTR                       4: sep
                60      CALL_METHOD                     1
                62      POP_JUMP_IF_TRUE                38 (to 76)
                64      LOAD_FAST                       1: dst
                66      LOAD_GLOBAL                     0: os
                68      LOAD_ATTR                       1: path
                70      LOAD_ATTR                       4: sep
                72      INPLACE_ADD                     
                74      STORE_FAST                      1: dst
                76      LOAD_FAST                       1: dst
                78      LOAD_METHOD                     5: startswith
                80      LOAD_FAST                       0: src
                82      CALL_METHOD                     1
                84      RETURN_VALUE                    
        '_destinsrc'
        [Code]
            File Name: shutil.py
            Object Name: _is_immutable
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_stat'
                'stat'
                'UF_IMMUTABLE'
                'SF_IMMUTABLE'
                'hasattr'
                'st_flags'
            [Var Names]
                'src'
                'st'
                'immutable_states'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'st_flags'
            [Disassembly]
                0       LOAD_GLOBAL                     0: _stat
                2       LOAD_FAST                       0: src
                4       CALL_FUNCTION                   1
                6       STORE_FAST                      1: st
                8       LOAD_GLOBAL                     1: stat
                10      LOAD_ATTR                       2: UF_IMMUTABLE
                12      LOAD_GLOBAL                     1: stat
                14      LOAD_ATTR                       3: SF_IMMUTABLE
                16      BUILD_LIST                      2
                18      STORE_FAST                      2: immutable_states
                20      LOAD_GLOBAL                     4: hasattr
                22      LOAD_FAST                       1: st
                24      LOAD_CONST                      1: 'st_flags'
                26      CALL_FUNCTION                   2
                28      JUMP_IF_FALSE_OR_POP            19 (to 38)
                30      LOAD_FAST                       1: st
                32      LOAD_ATTR                       5: st_flags
                34      LOAD_FAST                       2: immutable_states
                36      CONTAINS_OP                     0 (in)
                38      RETURN_VALUE                    
        '_is_immutable'
        [Code]
            File Name: shutil.py
            Object Name: _get_gid
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'grp'
                'getgrnam'
                'ImportError'
                'KeyError'
            [Var Names]
                'name'
                'getgrnam'
                'result'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns a gid, given a group name.'
                None
                0
                (
                    'getgrnam'
                )
                2
            [Disassembly]
                0       LOAD_FAST                       0: name
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
                12      SETUP_FINALLY                   8 (to 30)
                14      LOAD_CONST                      2: 0
                16      LOAD_CONST                      3: ('getgrnam',)
                18      IMPORT_NAME                     0: grp
                20      IMPORT_FROM                     1: getgrnam
                22      STORE_FAST                      1: getgrnam
                24      POP_TOP                         
                26      POP_BLOCK                       
                28      JUMP_FORWARD                    10 (to 50)
                30      DUP_TOP                         
                32      LOAD_GLOBAL                     2: ImportError
                34      JUMP_IF_NOT_EXC_MATCH           24 (to 48)
                36      POP_TOP                         
                38      POP_TOP                         
                40      POP_TOP                         
                42      POP_EXCEPT                      
                44      LOAD_CONST                      1: None
                46      RETURN_VALUE                    
                48      RERAISE                         0
                50      SETUP_FINALLY                   6 (to 64)
                52      LOAD_FAST                       1: getgrnam
                54      LOAD_FAST                       0: name
                56      CALL_FUNCTION                   1
                58      STORE_FAST                      2: result
                60      POP_BLOCK                       
                62      JUMP_FORWARD                    11 (to 86)
                64      DUP_TOP                         
                66      LOAD_GLOBAL                     3: KeyError
                68      JUMP_IF_NOT_EXC_MATCH           42 (to 84)
                70      POP_TOP                         
                72      POP_TOP                         
                74      POP_TOP                         
                76      LOAD_CONST                      1: None
                78      STORE_FAST                      2: result
                80      POP_EXCEPT                      
                82      JUMP_FORWARD                    1 (to 86)
                84      RERAISE                         0
                86      LOAD_FAST                       2: result
                88      LOAD_CONST                      1: None
                90      IS_OP                           1 (is not)
                92      POP_JUMP_IF_FALSE               51 (to 102)
                94      LOAD_FAST                       2: result
                96      LOAD_CONST                      4: 2
                98      BINARY_SUBSCR                   
                100     RETURN_VALUE                    
                102     LOAD_CONST                      1: None
                104     RETURN_VALUE                    
        '_get_gid'
        [Code]
            File Name: shutil.py
            Object Name: _get_uid
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'pwd'
                'getpwnam'
                'ImportError'
                'KeyError'
            [Var Names]
                'name'
                'getpwnam'
                'result'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns an uid, given a user name.'
                None
                0
                (
                    'getpwnam'
                )
                2
            [Disassembly]
                0       LOAD_FAST                       0: name
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       LOAD_CONST                      1: None
                10      RETURN_VALUE                    
                12      SETUP_FINALLY                   8 (to 30)
                14      LOAD_CONST                      2: 0
                16      LOAD_CONST                      3: ('getpwnam',)
                18      IMPORT_NAME                     0: pwd
                20      IMPORT_FROM                     1: getpwnam
                22      STORE_FAST                      1: getpwnam
                24      POP_TOP                         
                26      POP_BLOCK                       
                28      JUMP_FORWARD                    10 (to 50)
                30      DUP_TOP                         
                32      LOAD_GLOBAL                     2: ImportError
                34      JUMP_IF_NOT_EXC_MATCH           24 (to 48)
                36      POP_TOP                         
                38      POP_TOP                         
                40      POP_TOP                         
                42      POP_EXCEPT                      
                44      LOAD_CONST                      1: None
                46      RETURN_VALUE                    
                48      RERAISE                         0
                50      SETUP_FINALLY                   6 (to 64)
                52      LOAD_FAST                       1: getpwnam
                54      LOAD_FAST                       0: name
                56      CALL_FUNCTION                   1
                58      STORE_FAST                      2: result
                60      POP_BLOCK                       
                62      JUMP_FORWARD                    11 (to 86)
                64      DUP_TOP                         
                66      LOAD_GLOBAL                     3: KeyError
                68      JUMP_IF_NOT_EXC_MATCH           42 (to 84)
                70      POP_TOP                         
                72      POP_TOP                         
                74      POP_TOP                         
                76      LOAD_CONST                      1: None
                78      STORE_FAST                      2: result
                80      POP_EXCEPT                      
                82      JUMP_FORWARD                    1 (to 86)
                84      RERAISE                         0
                86      LOAD_FAST                       2: result
                88      LOAD_CONST                      1: None
                90      IS_OP                           1 (is not)
                92      POP_JUMP_IF_FALSE               51 (to 102)
                94      LOAD_FAST                       2: result
                96      LOAD_CONST                      4: 2
                98      BINARY_SUBSCR                   
                100     RETURN_VALUE                    
                102     LOAD_CONST                      1: None
                104     RETURN_VALUE                    
        '_get_uid'
        'gzip'
        [Code]
            File Name: shutil.py
            Object Name: _make_tarball
            Arg Count: 9
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 17
            Stack Size: 8
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                '_ZLIB_SUPPORTED'
                '_BZ2_SUPPORTED'
                '_LZMA_SUPPORTED'
                'ValueError'
                'format'
                'tarfile'
                'os'
                'path'
                'dirname'
                'exists'
                'info'
                'makedirs'
                '_get_uid'
                '_get_gid'
                'open'
                'join'
                'add'
                'close'
                'abspath'
            [Var Names]
                'base_name'
                'base_dir'
                'compress'
                'verbose'
                'dry_run'
                'owner'
                'group'
                'logger'
                'root_dir'
                'tar_compression'
                'tarfile'
                'compress_ext'
                'archive_name'
                'archive_dir'
                '_set_uid_gid'
                'tar'
                'arcname'
            [Free Vars]
            [Cell Vars]
                'gid'
                'group'
                'owner'
                'uid'
            [Constants]
                'Create a (possibly compressed) tar file from all the files under\n    \'base_dir\'.\n\n    \'compress\' must be "gzip" (the default), "bzip2", "xz", or None.\n\n    \'owner\' and \'group\' can be used to define an owner and a group for the\n    archive that is being built. If not provided, the current owner and group\n    will be used.\n\n    The output tar file will be named \'base_name\' +  ".tar", possibly plus\n    the appropriate compression extension (".gz", ".bz2", or ".xz").\n\n    Returns the output filename.\n    '
                None
                ''
                'gzip'
                'gz'
                'bzip2'
                'bz2'
                'xz'
                "bad value for 'compress', or compression format not supported : {0}"
                0
                '.'
                '.tar'
                'creating %s'
                'Creating tar archive'
                [Code]
                    File Name: shutil.py
                    Object Name: _set_uid_gid
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 2
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'gid'
                        'gname'
                        'uid'
                        'uname'
                    [Var Names]
                        'tarinfo'
                    [Free Vars]
                        'gid'
                        'group'
                        'owner'
                        'uid'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_DEREF                      0: gid
                        2       LOAD_CONST                      0: None
                        4       IS_OP                           1 (is not)
                        6       POP_JUMP_IF_FALSE               10 (to 20)
                        8       LOAD_DEREF                      0: gid
                        10      LOAD_FAST                       0: tarinfo
                        12      STORE_ATTR                      0: gid
                        14      LOAD_DEREF                      1: group
                        16      LOAD_FAST                       0: tarinfo
                        18      STORE_ATTR                      1: gname
                        20      LOAD_DEREF                      3: uid
                        22      LOAD_CONST                      0: None
                        24      IS_OP                           1 (is not)
                        26      POP_JUMP_IF_FALSE               20 (to 40)
                        28      LOAD_DEREF                      3: uid
                        30      LOAD_FAST                       0: tarinfo
                        32      STORE_ATTR                      2: uid
                        34      LOAD_DEREF                      2: owner
                        36      LOAD_FAST                       0: tarinfo
                        38      STORE_ATTR                      3: uname
                        40      LOAD_FAST                       0: tarinfo
                        42      RETURN_VALUE                    
                '_make_tarball.<locals>._set_uid_gid'
                'w|%s'
                (
                    'filter'
                )
            [Disassembly]
                0       LOAD_FAST                       2: compress
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               7 (to 14)
                8       LOAD_CONST                      2: ''
                10      STORE_FAST                      9: tar_compression
                12      JUMP_FORWARD                    34 (to 82)
                14      LOAD_GLOBAL                     0: _ZLIB_SUPPORTED
                16      POP_JUMP_IF_FALSE               16 (to 32)
                18      LOAD_FAST                       2: compress
                20      LOAD_CONST                      3: 'gzip'
                22      COMPARE_OP                      2 (==)
                24      POP_JUMP_IF_FALSE               16 (to 32)
                26      LOAD_CONST                      4: 'gz'
                28      STORE_FAST                      9: tar_compression
                30      JUMP_FORWARD                    25 (to 82)
                32      LOAD_GLOBAL                     1: _BZ2_SUPPORTED
                34      POP_JUMP_IF_FALSE               25 (to 50)
                36      LOAD_FAST                       2: compress
                38      LOAD_CONST                      5: 'bzip2'
                40      COMPARE_OP                      2 (==)
                42      POP_JUMP_IF_FALSE               25 (to 50)
                44      LOAD_CONST                      6: 'bz2'
                46      STORE_FAST                      9: tar_compression
                48      JUMP_FORWARD                    16 (to 82)
                50      LOAD_GLOBAL                     2: _LZMA_SUPPORTED
                52      POP_JUMP_IF_FALSE               34 (to 68)
                54      LOAD_FAST                       2: compress
                56      LOAD_CONST                      7: 'xz'
                58      COMPARE_OP                      2 (==)
                60      POP_JUMP_IF_FALSE               34 (to 68)
                62      LOAD_CONST                      7: 'xz'
                64      STORE_FAST                      9: tar_compression
                66      JUMP_FORWARD                    7 (to 82)
                68      LOAD_GLOBAL                     3: ValueError
                70      LOAD_CONST                      8: "bad value for 'compress', or compression format not supported : {0}"
                72      LOAD_METHOD                     4: format
                74      LOAD_FAST                       2: compress
                76      CALL_METHOD                     1
                78      CALL_FUNCTION                   1
                80      RAISE_VARARGS                   1
                82      LOAD_CONST                      9: 0
                84      LOAD_CONST                      1: None
                86      IMPORT_NAME                     5: tarfile
                88      STORE_FAST                      10: tarfile
                90      LOAD_FAST                       2: compress
                92      POP_JUMP_IF_FALSE               51 (to 102)
                94      LOAD_CONST                      10: '.'
                96      LOAD_FAST                       9: tar_compression
                98      BINARY_ADD                      
                100     JUMP_FORWARD                    1 (to 104)
                102     LOAD_CONST                      2: ''
                104     STORE_FAST                      11: compress_ext
                106     LOAD_FAST                       0: base_name
                108     LOAD_CONST                      11: '.tar'
                110     BINARY_ADD                      
                112     LOAD_FAST                       11: compress_ext
                114     BINARY_ADD                      
                116     STORE_FAST                      12: archive_name
                118     LOAD_GLOBAL                     6: os
                120     LOAD_ATTR                       7: path
                122     LOAD_METHOD                     8: dirname
                124     LOAD_FAST                       12: archive_name
                126     CALL_METHOD                     1
                128     STORE_FAST                      13: archive_dir
                130     LOAD_FAST                       13: archive_dir
                132     POP_JUMP_IF_FALSE               90 (to 180)
                134     LOAD_GLOBAL                     6: os
                136     LOAD_ATTR                       7: path
                138     LOAD_METHOD                     9: exists
                140     LOAD_FAST                       13: archive_dir
                142     CALL_METHOD                     1
                144     POP_JUMP_IF_TRUE                90 (to 180)
                146     LOAD_FAST                       7: logger
                148     LOAD_CONST                      1: None
                150     IS_OP                           1 (is not)
                152     POP_JUMP_IF_FALSE               83 (to 166)
                154     LOAD_FAST                       7: logger
                156     LOAD_METHOD                     10: info
                158     LOAD_CONST                      12: 'creating %s'
                160     LOAD_FAST                       13: archive_dir
                162     CALL_METHOD                     2
                164     POP_TOP                         
                166     LOAD_FAST                       4: dry_run
                168     POP_JUMP_IF_TRUE                90 (to 180)
                170     LOAD_GLOBAL                     6: os
                172     LOAD_METHOD                     11: makedirs
                174     LOAD_FAST                       13: archive_dir
                176     CALL_METHOD                     1
                178     POP_TOP                         
                180     LOAD_FAST                       7: logger
                182     LOAD_CONST                      1: None
                184     IS_OP                           1 (is not)
                186     POP_JUMP_IF_FALSE               99 (to 198)
                188     LOAD_FAST                       7: logger
                190     LOAD_METHOD                     10: info
                192     LOAD_CONST                      13: 'Creating tar archive'
                194     CALL_METHOD                     1
                196     POP_TOP                         
                198     LOAD_GLOBAL                     12: _get_uid
                200     LOAD_DEREF                      2: owner
                202     CALL_FUNCTION                   1
                204     STORE_DEREF                     3: uid
                206     LOAD_GLOBAL                     13: _get_gid
                208     LOAD_DEREF                      1: group
                210     CALL_FUNCTION                   1
                212     STORE_DEREF                     0: gid
                214     LOAD_CLOSURE                    0: gid
                216     LOAD_CLOSURE                    1: group
                218     LOAD_CLOSURE                    2: owner
                220     LOAD_CLOSURE                    3: uid
                222     BUILD_TUPLE                     4
                224     LOAD_CONST                      14: <CODE> _set_uid_gid
                226     LOAD_CONST                      15: '_make_tarball.<locals>._set_uid_gid'
                228     MAKE_FUNCTION                   8
                230     STORE_FAST                      14: _set_uid_gid
                232     LOAD_FAST                       4: dry_run
                234     POP_JUMP_IF_TRUE                159 (to 318)
                236     LOAD_FAST                       10: tarfile
                238     LOAD_METHOD                     14: open
                240     LOAD_FAST                       12: archive_name
                242     LOAD_CONST                      16: 'w|%s'
                244     LOAD_FAST                       9: tar_compression
                246     BINARY_MODULO                   
                248     CALL_METHOD                     2
                250     STORE_FAST                      15: tar
                252     LOAD_FAST                       1: base_dir
                254     STORE_FAST                      16: arcname
                256     LOAD_FAST                       8: root_dir
                258     LOAD_CONST                      1: None
                260     IS_OP                           1 (is not)
                262     POP_JUMP_IF_FALSE               139 (to 278)
                264     LOAD_GLOBAL                     6: os
                266     LOAD_ATTR                       7: path
                268     LOAD_METHOD                     15: join
                270     LOAD_FAST                       8: root_dir
                272     LOAD_FAST                       1: base_dir
                274     CALL_METHOD                     2
                276     STORE_FAST                      1: base_dir
                278     SETUP_FINALLY                   14 (to 308)
                280     LOAD_FAST                       15: tar
                282     LOAD_ATTR                       16: add
                284     LOAD_FAST                       1: base_dir
                286     LOAD_FAST                       16: arcname
                288     LOAD_FAST                       14: _set_uid_gid
                290     LOAD_CONST                      17: ('filter',)
                292     CALL_FUNCTION_KW                3
                294     POP_TOP                         
                296     POP_BLOCK                       
                298     LOAD_FAST                       15: tar
                300     LOAD_METHOD                     17: close
                302     CALL_METHOD                     0
                304     POP_TOP                         
                306     JUMP_FORWARD                    5 (to 318)
                308     LOAD_FAST                       15: tar
                310     LOAD_METHOD                     17: close
                312     CALL_METHOD                     0
                314     POP_TOP                         
                316     RERAISE                         0
                318     LOAD_FAST                       8: root_dir
                320     LOAD_CONST                      1: None
                322     IS_OP                           1 (is not)
                324     POP_JUMP_IF_FALSE               169 (to 338)
                326     LOAD_GLOBAL                     6: os
                328     LOAD_ATTR                       7: path
                330     LOAD_METHOD                     18: abspath
                332     LOAD_FAST                       12: archive_name
                334     CALL_METHOD                     1
                336     STORE_FAST                      12: archive_name
                338     LOAD_FAST                       12: archive_name
                340     RETURN_VALUE                    
        '_make_tarball'
        [Code]
            File Name: shutil.py
            Object Name: _make_zipfile
            Arg Count: 8
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 19
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'zipfile'
                'os'
                'path'
                'dirname'
                'exists'
                'info'
                'makedirs'
                'ZipFile'
                'ZIP_DEFLATED'
                'normpath'
                'join'
                'curdir'
                'write'
                'walk'
                'relpath'
                'sorted'
                'isfile'
                'abspath'
            [Var Names]
                'base_name'
                'base_dir'
                'verbose'
                'dry_run'
                'logger'
                'owner'
                'group'
                'root_dir'
                'zipfile'
                'zip_filename'
                'archive_dir'
                'zf'
                'arcname'
                'dirpath'
                'dirnames'
                'filenames'
                'arcdirpath'
                'name'
                'path'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Create a zip file from all the files under \'base_dir\'.\n\n    The output zip file will be named \'base_name\' + ".zip".  Returns the\n    name of the output zip file.\n    '
                0
                None
                '.zip'
                'creating %s'
                "creating '%s' and adding '%s' to it"
                'w'
                (
                    'compression'
                )
                "adding '%s'"
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      2: None
                4       IMPORT_NAME                     0: zipfile
                6       STORE_FAST                      8: zipfile
                8       LOAD_FAST                       0: base_name
                10      LOAD_CONST                      3: '.zip'
                12      BINARY_ADD                      
                14      STORE_FAST                      9: zip_filename
                16      LOAD_GLOBAL                     1: os
                18      LOAD_ATTR                       2: path
                20      LOAD_METHOD                     3: dirname
                22      LOAD_FAST                       0: base_name
                24      CALL_METHOD                     1
                26      STORE_FAST                      10: archive_dir
                28      LOAD_FAST                       10: archive_dir
                30      POP_JUMP_IF_FALSE               39 (to 78)
                32      LOAD_GLOBAL                     1: os
                34      LOAD_ATTR                       2: path
                36      LOAD_METHOD                     4: exists
                38      LOAD_FAST                       10: archive_dir
                40      CALL_METHOD                     1
                42      POP_JUMP_IF_TRUE                39 (to 78)
                44      LOAD_FAST                       4: logger
                46      LOAD_CONST                      2: None
                48      IS_OP                           1 (is not)
                50      POP_JUMP_IF_FALSE               32 (to 64)
                52      LOAD_FAST                       4: logger
                54      LOAD_METHOD                     5: info
                56      LOAD_CONST                      4: 'creating %s'
                58      LOAD_FAST                       10: archive_dir
                60      CALL_METHOD                     2
                62      POP_TOP                         
                64      LOAD_FAST                       3: dry_run
                66      POP_JUMP_IF_TRUE                39 (to 78)
                68      LOAD_GLOBAL                     1: os
                70      LOAD_METHOD                     6: makedirs
                72      LOAD_FAST                       10: archive_dir
                74      CALL_METHOD                     1
                76      POP_TOP                         
                78      LOAD_FAST                       4: logger
                80      LOAD_CONST                      2: None
                82      IS_OP                           1 (is not)
                84      POP_JUMP_IF_FALSE               50 (to 100)
                86      LOAD_FAST                       4: logger
                88      LOAD_METHOD                     5: info
                90      LOAD_CONST                      5: "creating '%s' and adding '%s' to it"
                92      LOAD_FAST                       9: zip_filename
                94      LOAD_FAST                       1: base_dir
                96      CALL_METHOD                     3
                98      POP_TOP                         
                100     LOAD_FAST                       3: dry_run
                102     POP_JUMP_IF_TRUE                235 (to 470)
                104     LOAD_FAST                       8: zipfile
                106     LOAD_ATTR                       7: ZipFile
                108     LOAD_FAST                       9: zip_filename
                110     LOAD_CONST                      6: 'w'
                112     LOAD_FAST                       8: zipfile
                114     LOAD_ATTR                       8: ZIP_DEFLATED
                116     LOAD_CONST                      7: ('compression',)
                118     CALL_FUNCTION_KW                3
                120     SETUP_WITH                      166 (to 454)
                122     STORE_FAST                      11: zf
                124     LOAD_GLOBAL                     1: os
                126     LOAD_ATTR                       2: path
                128     LOAD_METHOD                     9: normpath
                130     LOAD_FAST                       1: base_dir
                132     CALL_METHOD                     1
                134     STORE_FAST                      12: arcname
                136     LOAD_FAST                       7: root_dir
                138     LOAD_CONST                      2: None
                140     IS_OP                           1 (is not)
                142     POP_JUMP_IF_FALSE               79 (to 158)
                144     LOAD_GLOBAL                     1: os
                146     LOAD_ATTR                       2: path
                148     LOAD_METHOD                     10: join
                150     LOAD_FAST                       7: root_dir
                152     LOAD_FAST                       1: base_dir
                154     CALL_METHOD                     2
                156     STORE_FAST                      1: base_dir
                158     LOAD_GLOBAL                     1: os
                160     LOAD_ATTR                       2: path
                162     LOAD_METHOD                     9: normpath
                164     LOAD_FAST                       1: base_dir
                166     CALL_METHOD                     1
                168     STORE_FAST                      1: base_dir
                170     LOAD_FAST                       12: arcname
                172     LOAD_GLOBAL                     1: os
                174     LOAD_ATTR                       11: curdir
                176     COMPARE_OP                      3 (!=)
                178     POP_JUMP_IF_FALSE               106 (to 212)
                180     LOAD_FAST                       11: zf
                182     LOAD_METHOD                     12: write
                184     LOAD_FAST                       1: base_dir
                186     LOAD_FAST                       12: arcname
                188     CALL_METHOD                     2
                190     POP_TOP                         
                192     LOAD_FAST                       4: logger
                194     LOAD_CONST                      2: None
                196     IS_OP                           1 (is not)
                198     POP_JUMP_IF_FALSE               106 (to 212)
                200     LOAD_FAST                       4: logger
                202     LOAD_METHOD                     5: info
                204     LOAD_CONST                      8: "adding '%s'"
                206     LOAD_FAST                       1: base_dir
                208     CALL_METHOD                     2
                210     POP_TOP                         
                212     LOAD_GLOBAL                     1: os
                214     LOAD_METHOD                     13: walk
                216     LOAD_FAST                       1: base_dir
                218     CALL_METHOD                     1
                220     GET_ITER                        
                222     FOR_ITER                        108 (to 440)
                224     UNPACK_SEQUENCE                 3
                226     STORE_FAST                      13: dirpath
                228     STORE_FAST                      14: dirnames
                230     STORE_FAST                      15: filenames
                232     LOAD_FAST                       13: dirpath
                234     STORE_FAST                      16: arcdirpath
                236     LOAD_FAST                       7: root_dir
                238     LOAD_CONST                      2: None
                240     IS_OP                           1 (is not)
                242     POP_JUMP_IF_FALSE               129 (to 258)
                244     LOAD_GLOBAL                     1: os
                246     LOAD_ATTR                       2: path
                248     LOAD_METHOD                     14: relpath
                250     LOAD_FAST                       16: arcdirpath
                252     LOAD_FAST                       7: root_dir
                254     CALL_METHOD                     2
                256     STORE_FAST                      16: arcdirpath
                258     LOAD_GLOBAL                     1: os
                260     LOAD_ATTR                       2: path
                262     LOAD_METHOD                     9: normpath
                264     LOAD_FAST                       16: arcdirpath
                266     CALL_METHOD                     1
                268     STORE_FAST                      16: arcdirpath
                270     LOAD_GLOBAL                     15: sorted
                272     LOAD_FAST                       14: dirnames
                274     CALL_FUNCTION                   1
                276     GET_ITER                        
                278     FOR_ITER                        32 (to 344)
                280     STORE_FAST                      17: name
                282     LOAD_GLOBAL                     1: os
                284     LOAD_ATTR                       2: path
                286     LOAD_METHOD                     10: join
                288     LOAD_FAST                       13: dirpath
                290     LOAD_FAST                       17: name
                292     CALL_METHOD                     2
                294     STORE_FAST                      18: path
                296     LOAD_GLOBAL                     1: os
                298     LOAD_ATTR                       2: path
                300     LOAD_METHOD                     10: join
                302     LOAD_FAST                       16: arcdirpath
                304     LOAD_FAST                       17: name
                306     CALL_METHOD                     2
                308     STORE_FAST                      12: arcname
                310     LOAD_FAST                       11: zf
                312     LOAD_METHOD                     12: write
                314     LOAD_FAST                       18: path
                316     LOAD_FAST                       12: arcname
                318     CALL_METHOD                     2
                320     POP_TOP                         
                322     LOAD_FAST                       4: logger
                324     LOAD_CONST                      2: None
                326     IS_OP                           1 (is not)
                328     POP_JUMP_IF_FALSE               171 (to 342)
                330     LOAD_FAST                       4: logger
                332     LOAD_METHOD                     5: info
                334     LOAD_CONST                      8: "adding '%s'"
                336     LOAD_FAST                       18: path
                338     CALL_METHOD                     2
                340     POP_TOP                         
                342     JUMP_ABSOLUTE                   139 (to 278)
                344     LOAD_FAST                       15: filenames
                346     GET_ITER                        
                348     FOR_ITER                        44 (to 438)
                350     STORE_FAST                      17: name
                352     LOAD_GLOBAL                     1: os
                354     LOAD_ATTR                       2: path
                356     LOAD_METHOD                     10: join
                358     LOAD_FAST                       13: dirpath
                360     LOAD_FAST                       17: name
                362     CALL_METHOD                     2
                364     STORE_FAST                      18: path
                366     LOAD_GLOBAL                     1: os
                368     LOAD_ATTR                       2: path
                370     LOAD_METHOD                     9: normpath
                372     LOAD_FAST                       18: path
                374     CALL_METHOD                     1
                376     STORE_FAST                      18: path
                378     LOAD_GLOBAL                     1: os
                380     LOAD_ATTR                       2: path
                382     LOAD_METHOD                     16: isfile
                384     LOAD_FAST                       18: path
                386     CALL_METHOD                     1
                388     POP_JUMP_IF_FALSE               218 (to 436)
                390     LOAD_GLOBAL                     1: os
                392     LOAD_ATTR                       2: path
                394     LOAD_METHOD                     10: join
                396     LOAD_FAST                       16: arcdirpath
                398     LOAD_FAST                       17: name
                400     CALL_METHOD                     2
                402     STORE_FAST                      12: arcname
                404     LOAD_FAST                       11: zf
                406     LOAD_METHOD                     12: write
                408     LOAD_FAST                       18: path
                410     LOAD_FAST                       12: arcname
                412     CALL_METHOD                     2
                414     POP_TOP                         
                416     LOAD_FAST                       4: logger
                418     LOAD_CONST                      2: None
                420     IS_OP                           1 (is not)
                422     POP_JUMP_IF_FALSE               218 (to 436)
                424     LOAD_FAST                       4: logger
                426     LOAD_METHOD                     5: info
                428     LOAD_CONST                      8: "adding '%s'"
                430     LOAD_FAST                       18: path
                432     CALL_METHOD                     2
                434     POP_TOP                         
                436     JUMP_ABSOLUTE                   174 (to 348)
                438     JUMP_ABSOLUTE                   111 (to 222)
                440     POP_BLOCK                       
                442     LOAD_CONST                      2: None
                444     DUP_TOP                         
                446     DUP_TOP                         
                448     CALL_FUNCTION                   3
                450     POP_TOP                         
                452     JUMP_FORWARD                    8 (to 470)
                454     WITH_EXCEPT_START               
                456     POP_JUMP_IF_TRUE                230 (to 460)
                458     RERAISE                         1
                460     POP_TOP                         
                462     POP_TOP                         
                464     POP_TOP                         
                466     POP_EXCEPT                      
                468     POP_TOP                         
                470     LOAD_FAST                       7: root_dir
                472     LOAD_CONST                      2: None
                474     IS_OP                           1 (is not)
                476     POP_JUMP_IF_FALSE               245 (to 490)
                478     LOAD_GLOBAL                     1: os
                480     LOAD_ATTR                       2: path
                482     LOAD_METHOD                     17: abspath
                484     LOAD_FAST                       9: zip_filename
                486     CALL_METHOD                     1
                488     STORE_FAST                      9: zip_filename
                490     LOAD_FAST                       9: zip_filename
                492     RETURN_VALUE                    
        '_make_zipfile'
        'tar'
        (
            'compress'
            None
        )
        'uncompressed tar file'
        (
            'compress'
            'gzip'
        )
        "gzip'ed tar-file"
        'gztar'
        'ZIP file'
        'zip'
        (
            'compress'
            'bzip2'
        )
        "bzip2'ed tar-file"
        'bztar'
        (
            'compress'
            'xz'
        )
        "xz'ed tar-file"
        'xztar'
        [Code]
            File Name: shutil.py
            Object Name: get_archive_formats
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_ARCHIVE_FORMATS'
                'items'
                'sort'
            [Var Names]
                'formats'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns a list of supported formats for archiving and unarchiving.\n\n    Each element of the returned sequence is a tuple (name, description)\n    '
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 5
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'name'
                        'registry'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        2
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        10 (to 26)
                        6       UNPACK_SEQUENCE                 2
                        8       STORE_FAST                      1: name
                        10      STORE_FAST                      2: registry
                        12      LOAD_FAST                       1: name
                        14      LOAD_FAST                       2: registry
                        16      LOAD_CONST                      0: 2
                        18      BINARY_SUBSCR                   
                        20      BUILD_TUPLE                     2
                        22      LIST_APPEND                     2
                        24      JUMP_ABSOLUTE                   2 (to 4)
                        26      RETURN_VALUE                    
                'get_archive_formats.<locals>.<listcomp>'
            [Disassembly]
                0       LOAD_CONST                      1: <CODE> <listcomp>
                2       LOAD_CONST                      2: 'get_archive_formats.<locals>.<listcomp>'
                4       MAKE_FUNCTION                   0
                6       LOAD_GLOBAL                     0: _ARCHIVE_FORMATS
                8       LOAD_METHOD                     1: items
                10      CALL_METHOD                     0
                12      GET_ITER                        
                14      CALL_FUNCTION                   1
                16      STORE_FAST                      0: formats
                18      LOAD_FAST                       0: formats
                20      LOAD_METHOD                     2: sort
                22      CALL_METHOD                     0
                24      POP_TOP                         
                26      LOAD_FAST                       0: formats
                28      RETURN_VALUE                    
        'get_archive_formats'
        ''
        [Code]
            File Name: shutil.py
            Object Name: register_archive_format
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'callable'
                'TypeError'
                'isinstance'
                'tuple'
                'list'
                'len'
                '_ARCHIVE_FORMATS'
            [Var Names]
                'name'
                'function'
                'extra_args'
                'description'
                'element'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Registers an archive format.\n\n    name is the name of the format. function is the callable that will be\n    used to create archives. If provided, extra_args is a sequence of\n    (name, value) tuples that will be passed as arguments to the callable.\n    description can be provided to describe the format, and will be returned\n    by the get_archive_formats() function.\n    '
                None
                'The %s object is not callable'
                'extra_args needs to be a sequence'
                2
                'extra_args elements are : (arg_name, value)'
                False
            [Disassembly]
                0       LOAD_FAST                       2: extra_args
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       BUILD_LIST                      0
                10      STORE_FAST                      2: extra_args
                12      LOAD_GLOBAL                     0: callable
                14      LOAD_FAST                       1: function
                16      CALL_FUNCTION                   1
                18      POP_JUMP_IF_TRUE                16 (to 32)
                20      LOAD_GLOBAL                     1: TypeError
                22      LOAD_CONST                      2: 'The %s object is not callable'
                24      LOAD_FAST                       1: function
                26      BINARY_MODULO                   
                28      CALL_FUNCTION                   1
                30      RAISE_VARARGS                   1
                32      LOAD_GLOBAL                     2: isinstance
                34      LOAD_FAST                       2: extra_args
                36      LOAD_GLOBAL                     3: tuple
                38      LOAD_GLOBAL                     4: list
                40      BUILD_TUPLE                     2
                42      CALL_FUNCTION                   2
                44      POP_JUMP_IF_TRUE                27 (to 54)
                46      LOAD_GLOBAL                     1: TypeError
                48      LOAD_CONST                      3: 'extra_args needs to be a sequence'
                50      CALL_FUNCTION                   1
                52      RAISE_VARARGS                   1
                54      LOAD_FAST                       2: extra_args
                56      GET_ITER                        
                58      FOR_ITER                        19 (to 98)
                60      STORE_FAST                      4: element
                62      LOAD_GLOBAL                     2: isinstance
                64      LOAD_FAST                       4: element
                66      LOAD_GLOBAL                     3: tuple
                68      LOAD_GLOBAL                     4: list
                70      BUILD_TUPLE                     2
                72      CALL_FUNCTION                   2
                74      POP_JUMP_IF_FALSE               44 (to 88)
                76      LOAD_GLOBAL                     5: len
                78      LOAD_FAST                       4: element
                80      CALL_FUNCTION                   1
                82      LOAD_CONST                      4: 2
                84      COMPARE_OP                      3 (!=)
                86      POP_JUMP_IF_FALSE               48 (to 96)
                88      LOAD_GLOBAL                     1: TypeError
                90      LOAD_CONST                      5: 'extra_args elements are : (arg_name, value)'
                92      CALL_FUNCTION                   1
                94      RAISE_VARARGS                   1
                96      JUMP_ABSOLUTE                   29 (to 58)
                98      LOAD_FAST                       1: function
                100     LOAD_FAST                       2: extra_args
                102     LOAD_FAST                       3: description
                104     LOAD_CONST                      6: False
                106     BUILD_TUPLE                     4
                108     LOAD_GLOBAL                     6: _ARCHIVE_FORMATS
                110     LOAD_FAST                       0: name
                112     STORE_SUBSCR                    
                114     LOAD_CONST                      1: None
                116     RETURN_VALUE                    
        'register_archive_format'
        [Code]
            File Name: shutil.py
            Object Name: unregister_archive_format
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_ARCHIVE_FORMATS'
            [Var Names]
                'name'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _ARCHIVE_FORMATS
                2       LOAD_FAST                       0: name
                4       DELETE_SUBSCR                   
                6       LOAD_CONST                      0: None
                8       RETURN_VALUE                    
        'unregister_archive_format'
        [Code]
            File Name: shutil.py
            Object Name: make_archive
            Arg Count: 9
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 17
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                '_ARCHIVE_FORMATS'
                'KeyError'
                'ValueError'
                'os'
                'curdir'
                'fspath'
                'getcwd'
                'debug'
                'path'
                'abspath'
                'chdir'
            [Var Names]
                'base_name'
                'format'
                'root_dir'
                'base_dir'
                'verbose'
                'dry_run'
                'owner'
                'group'
                'logger'
                'format_info'
                'kwargs'
                'func'
                'arg'
                'val'
                'support_root_dir'
                'save_cwd'
                'filename'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Create an archive file (eg. zip or tar).\n\n    \'base_name\' is the name of the file to create, minus any format-specific\n    extension; \'format\' is the archive format: one of "zip", "tar", "gztar",\n    "bztar", or "xztar".  Or any other registered format.\n\n    \'root_dir\' is a directory that will be the root directory of the\n    archive; ie. we typically chdir into \'root_dir\' before creating the\n    archive.  \'base_dir\' is the directory where we start archiving from;\n    ie. \'base_dir\' will be the common prefix of all files and\n    directories in the archive.  \'root_dir\' and \'base_dir\' both default\n    to the current directory.  Returns the name of the archive file.\n\n    \'owner\' and \'group\' are used when creating a tar archive. By default,\n    uses the current owner and group.\n    '
                'shutil.make_archive'
                "unknown archive format '%s'"
                None
                (
                    'dry_run'
                    'logger'
                    'owner'
                    'group'
                )
                0
                1
                3
                'root_dir'
                "changing into '%s'"
                "changing back to '%s'"
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.make_archive'
                6       LOAD_FAST                       0: base_name
                8       LOAD_FAST                       1: format
                10      LOAD_FAST                       2: root_dir
                12      LOAD_FAST                       3: base_dir
                14      CALL_METHOD                     5
                16      POP_TOP                         
                18      SETUP_FINALLY                   6 (to 32)
                20      LOAD_GLOBAL                     2: _ARCHIVE_FORMATS
                22      LOAD_FAST                       1: format
                24      BINARY_SUBSCR                   
                26      STORE_FAST                      9: format_info
                28      POP_BLOCK                       
                30      JUMP_FORWARD                    14 (to 60)
                32      DUP_TOP                         
                34      LOAD_GLOBAL                     3: KeyError
                36      JUMP_IF_NOT_EXC_MATCH           29 (to 58)
                38      POP_TOP                         
                40      POP_TOP                         
                42      POP_TOP                         
                44      LOAD_GLOBAL                     4: ValueError
                46      LOAD_CONST                      2: "unknown archive format '%s'"
                48      LOAD_FAST                       1: format
                50      BINARY_MODULO                   
                52      CALL_FUNCTION                   1
                54      LOAD_CONST                      3: None
                56      RAISE_VARARGS                   2
                58      RERAISE                         0
                60      LOAD_FAST                       5: dry_run
                62      LOAD_FAST                       8: logger
                64      LOAD_FAST                       6: owner
                66      LOAD_FAST                       7: group
                68      LOAD_CONST                      4: ('dry_run', 'logger', 'owner', 'group')
                70      BUILD_CONST_KEY_MAP             4
                72      STORE_FAST                      10: kwargs
                74      LOAD_FAST                       9: format_info
                76      LOAD_CONST                      5: 0
                78      BINARY_SUBSCR                   
                80      STORE_FAST                      11: func
                82      LOAD_FAST                       9: format_info
                84      LOAD_CONST                      6: 1
                86      BINARY_SUBSCR                   
                88      GET_ITER                        
                90      FOR_ITER                        8 (to 108)
                92      UNPACK_SEQUENCE                 2
                94      STORE_FAST                      12: arg
                96      STORE_FAST                      13: val
                98      LOAD_FAST                       13: val
                100     LOAD_FAST                       10: kwargs
                102     LOAD_FAST                       12: arg
                104     STORE_SUBSCR                    
                106     JUMP_ABSOLUTE                   45 (to 90)
                108     LOAD_FAST                       3: base_dir
                110     LOAD_CONST                      3: None
                112     IS_OP                           0 (is)
                114     POP_JUMP_IF_FALSE               61 (to 122)
                116     LOAD_GLOBAL                     5: os
                118     LOAD_ATTR                       6: curdir
                120     STORE_FAST                      3: base_dir
                122     LOAD_FAST                       9: format_info
                124     LOAD_CONST                      7: 3
                126     BINARY_SUBSCR                   
                128     STORE_FAST                      14: support_root_dir
                130     LOAD_CONST                      3: None
                132     STORE_FAST                      15: save_cwd
                134     LOAD_FAST                       2: root_dir
                136     LOAD_CONST                      3: None
                138     IS_OP                           1 (is not)
                140     POP_JUMP_IF_FALSE               110 (to 220)
                142     LOAD_FAST                       14: support_root_dir
                144     POP_JUMP_IF_FALSE               83 (to 166)
                146     LOAD_GLOBAL                     5: os
                148     LOAD_METHOD                     7: fspath
                150     LOAD_FAST                       0: base_name
                152     CALL_METHOD                     1
                154     STORE_FAST                      0: base_name
                156     LOAD_FAST                       2: root_dir
                158     LOAD_FAST                       10: kwargs
                160     LOAD_CONST                      8: 'root_dir'
                162     STORE_SUBSCR                    
                164     JUMP_FORWARD                    27 (to 220)
                166     LOAD_GLOBAL                     5: os
                168     LOAD_METHOD                     8: getcwd
                170     CALL_METHOD                     0
                172     STORE_FAST                      15: save_cwd
                174     LOAD_FAST                       8: logger
                176     LOAD_CONST                      3: None
                178     IS_OP                           1 (is not)
                180     POP_JUMP_IF_FALSE               97 (to 194)
                182     LOAD_FAST                       8: logger
                184     LOAD_METHOD                     9: debug
                186     LOAD_CONST                      9: "changing into '%s'"
                188     LOAD_FAST                       2: root_dir
                190     CALL_METHOD                     2
                192     POP_TOP                         
                194     LOAD_GLOBAL                     5: os
                196     LOAD_ATTR                       10: path
                198     LOAD_METHOD                     11: abspath
                200     LOAD_FAST                       0: base_name
                202     CALL_METHOD                     1
                204     STORE_FAST                      0: base_name
                206     LOAD_FAST                       5: dry_run
                208     POP_JUMP_IF_TRUE                110 (to 220)
                210     LOAD_GLOBAL                     5: os
                212     LOAD_METHOD                     12: chdir
                214     LOAD_FAST                       2: root_dir
                216     CALL_METHOD                     1
                218     POP_TOP                         
                220     SETUP_FINALLY                   31 (to 284)
                222     LOAD_FAST                       11: func
                224     LOAD_FAST                       0: base_name
                226     LOAD_FAST                       3: base_dir
                228     BUILD_TUPLE                     2
                230     BUILD_MAP                       0
                232     LOAD_FAST                       10: kwargs
                234     DICT_MERGE                      1
                236     CALL_FUNCTION_EX                1
                238     STORE_FAST                      16: filename
                240     POP_BLOCK                       
                242     LOAD_FAST                       15: save_cwd
                244     LOAD_CONST                      3: None
                246     IS_OP                           1 (is not)
                248     POP_JUMP_IF_FALSE               140 (to 280)
                250     LOAD_FAST                       8: logger
                252     LOAD_CONST                      3: None
                254     IS_OP                           1 (is not)
                256     POP_JUMP_IF_FALSE               135 (to 270)
                258     LOAD_FAST                       8: logger
                260     LOAD_METHOD                     9: debug
                262     LOAD_CONST                      10: "changing back to '%s'"
                264     LOAD_FAST                       15: save_cwd
                266     CALL_METHOD                     2
                268     POP_TOP                         
                270     LOAD_GLOBAL                     5: os
                272     LOAD_METHOD                     12: chdir
                274     LOAD_FAST                       15: save_cwd
                276     CALL_METHOD                     1
                278     POP_TOP                         
                280     LOAD_FAST                       16: filename
                282     RETURN_VALUE                    
                284     LOAD_FAST                       15: save_cwd
                286     LOAD_CONST                      3: None
                288     IS_OP                           1 (is not)
                290     POP_JUMP_IF_FALSE               162 (to 324)
                292     LOAD_FAST                       8: logger
                294     LOAD_CONST                      3: None
                296     IS_OP                           1 (is not)
                298     POP_JUMP_IF_FALSE               156 (to 312)
                300     LOAD_FAST                       8: logger
                302     LOAD_METHOD                     9: debug
                304     LOAD_CONST                      10: "changing back to '%s'"
                306     LOAD_FAST                       15: save_cwd
                308     CALL_METHOD                     2
                310     POP_TOP                         
                312     LOAD_GLOBAL                     5: os
                314     LOAD_METHOD                     12: chdir
                316     LOAD_FAST                       15: save_cwd
                318     CALL_METHOD                     1
                320     POP_TOP                         
                322     RERAISE                         0
                324     RERAISE                         0
        'make_archive'
        [Code]
            File Name: shutil.py
            Object Name: get_unpack_formats
            Arg Count: 0
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_UNPACK_FORMATS'
                'items'
                'sort'
            [Var Names]
                'formats'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Returns a list of supported formats for unpacking.\n\n    Each element of the returned sequence is a tuple\n    (name, extensions, description)\n    '
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 3
                    Stack Size: 6
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'name'
                        'info'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        0
                        3
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        13 (to 32)
                        6       UNPACK_SEQUENCE                 2
                        8       STORE_FAST                      1: name
                        10      STORE_FAST                      2: info
                        12      LOAD_FAST                       1: name
                        14      LOAD_FAST                       2: info
                        16      LOAD_CONST                      0: 0
                        18      BINARY_SUBSCR                   
                        20      LOAD_FAST                       2: info
                        22      LOAD_CONST                      1: 3
                        24      BINARY_SUBSCR                   
                        26      BUILD_TUPLE                     3
                        28      LIST_APPEND                     2
                        30      JUMP_ABSOLUTE                   2 (to 4)
                        32      RETURN_VALUE                    
                'get_unpack_formats.<locals>.<listcomp>'
            [Disassembly]
                0       LOAD_CONST                      1: <CODE> <listcomp>
                2       LOAD_CONST                      2: 'get_unpack_formats.<locals>.<listcomp>'
                4       MAKE_FUNCTION                   0
                6       LOAD_GLOBAL                     0: _UNPACK_FORMATS
                8       LOAD_METHOD                     1: items
                10      CALL_METHOD                     0
                12      GET_ITER                        
                14      CALL_FUNCTION                   1
                16      STORE_FAST                      0: formats
                18      LOAD_FAST                       0: formats
                20      LOAD_METHOD                     2: sort
                22      CALL_METHOD                     0
                24      POP_TOP                         
                26      LOAD_FAST                       0: formats
                28      RETURN_VALUE                    
        'get_unpack_formats'
        [Code]
            File Name: shutil.py
            Object Name: _check_unpack_options
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_UNPACK_FORMATS'
                'items'
                'RegistryError'
                'callable'
                'TypeError'
            [Var Names]
                'extensions'
                'function'
                'extra_args'
                'existing_extensions'
                'name'
                'info'
                'ext'
                'extension'
                'msg'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Checks what gets registered as an unpacker.'
                0
                '%s is already registered for "%s"'
                'The registered function must be a callable'
                None
            [Disassembly]
                0       BUILD_MAP                       0
                2       STORE_FAST                      3: existing_extensions
                4       LOAD_GLOBAL                     0: _UNPACK_FORMATS
                6       LOAD_METHOD                     1: items
                8       CALL_METHOD                     0
                10      GET_ITER                        
                12      FOR_ITER                        15 (to 44)
                14      UNPACK_SEQUENCE                 2
                16      STORE_FAST                      4: name
                18      STORE_FAST                      5: info
                20      LOAD_FAST                       5: info
                22      LOAD_CONST                      1: 0
                24      BINARY_SUBSCR                   
                26      GET_ITER                        
                28      FOR_ITER                        6 (to 42)
                30      STORE_FAST                      6: ext
                32      LOAD_FAST                       4: name
                34      LOAD_FAST                       3: existing_extensions
                36      LOAD_FAST                       6: ext
                38      STORE_SUBSCR                    
                40      JUMP_ABSOLUTE                   14 (to 28)
                42      JUMP_ABSOLUTE                   6 (to 12)
                44      LOAD_FAST                       0: extensions
                46      GET_ITER                        
                48      FOR_ITER                        18 (to 86)
                50      STORE_FAST                      7: extension
                52      LOAD_FAST                       7: extension
                54      LOAD_FAST                       3: existing_extensions
                56      CONTAINS_OP                     0 (in)
                58      POP_JUMP_IF_FALSE               42 (to 84)
                60      LOAD_CONST                      2: '%s is already registered for "%s"'
                62      STORE_FAST                      8: msg
                64      LOAD_GLOBAL                     2: RegistryError
                66      LOAD_FAST                       8: msg
                68      LOAD_FAST                       7: extension
                70      LOAD_FAST                       3: existing_extensions
                72      LOAD_FAST                       7: extension
                74      BINARY_SUBSCR                   
                76      BUILD_TUPLE                     2
                78      BINARY_MODULO                   
                80      CALL_FUNCTION                   1
                82      RAISE_VARARGS                   1
                84      JUMP_ABSOLUTE                   24 (to 48)
                86      LOAD_GLOBAL                     3: callable
                88      LOAD_FAST                       1: function
                90      CALL_FUNCTION                   1
                92      POP_JUMP_IF_TRUE                51 (to 102)
                94      LOAD_GLOBAL                     4: TypeError
                96      LOAD_CONST                      3: 'The registered function must be a callable'
                98      CALL_FUNCTION                   1
                100     RAISE_VARARGS                   1
                102     LOAD_CONST                      4: None
                104     RETURN_VALUE                    
        '_check_unpack_options'
        [Code]
            File Name: shutil.py
            Object Name: register_unpack_format
            Arg Count: 5
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_check_unpack_options'
                '_UNPACK_FORMATS'
            [Var Names]
                'name'
                'extensions'
                'function'
                'extra_args'
                'description'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Registers an unpack format.\n\n    `name` is the name of the format. `extensions` is a list of extensions\n    corresponding to the format.\n\n    `function` is the callable that will be\n    used to unpack archives. The callable will receive archives to unpack.\n    If it's unable to handle an archive, it needs to raise a ReadError\n    exception.\n\n    If provided, `extra_args` is a sequence of\n    (name, value) tuples that will be passed as arguments to the callable.\n    description can be provided to describe the format, and will be returned\n    by the get_unpack_formats() function.\n    "
                None
            [Disassembly]
                0       LOAD_FAST                       3: extra_args
                2       LOAD_CONST                      1: None
                4       IS_OP                           0 (is)
                6       POP_JUMP_IF_FALSE               6 (to 12)
                8       BUILD_LIST                      0
                10      STORE_FAST                      3: extra_args
                12      LOAD_GLOBAL                     0: _check_unpack_options
                14      LOAD_FAST                       1: extensions
                16      LOAD_FAST                       2: function
                18      LOAD_FAST                       3: extra_args
                20      CALL_FUNCTION                   3
                22      POP_TOP                         
                24      LOAD_FAST                       1: extensions
                26      LOAD_FAST                       2: function
                28      LOAD_FAST                       3: extra_args
                30      LOAD_FAST                       4: description
                32      BUILD_TUPLE                     4
                34      LOAD_GLOBAL                     1: _UNPACK_FORMATS
                36      LOAD_FAST                       0: name
                38      STORE_SUBSCR                    
                40      LOAD_CONST                      1: None
                42      RETURN_VALUE                    
        'register_unpack_format'
        [Code]
            File Name: shutil.py
            Object Name: unregister_unpack_format
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 1
            Stack Size: 2
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_UNPACK_FORMATS'
            [Var Names]
                'name'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Removes the pack format from the registry.'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: _UNPACK_FORMATS
                2       LOAD_FAST                       0: name
                4       DELETE_SUBSCR                   
                6       LOAD_CONST                      1: None
                8       RETURN_VALUE                    
        'unregister_unpack_format'
        [Code]
            File Name: shutil.py
            Object Name: _ensure_directory
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 3
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'dirname'
                'isdir'
                'makedirs'
            [Var Names]
                'path'
                'dirname'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Ensure that the parent directory of `path` exists'
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: dirname
                6       LOAD_FAST                       0: path
                8       CALL_METHOD                     1
                10      STORE_FAST                      1: dirname
                12      LOAD_GLOBAL                     0: os
                14      LOAD_ATTR                       1: path
                16      LOAD_METHOD                     3: isdir
                18      LOAD_FAST                       1: dirname
                20      CALL_METHOD                     1
                22      POP_JUMP_IF_TRUE                19 (to 38)
                24      LOAD_GLOBAL                     0: os
                26      LOAD_METHOD                     4: makedirs
                28      LOAD_FAST                       1: dirname
                30      CALL_METHOD                     1
                32      POP_TOP                         
                34      LOAD_CONST                      1: None
                36      RETURN_VALUE                    
                38      LOAD_CONST                      1: None
                40      RETURN_VALUE                    
        '_ensure_directory'
        [Code]
            File Name: shutil.py
            Object Name: _unpack_zipfile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'zipfile'
                'is_zipfile'
                'ReadError'
                'ZipFile'
                'infolist'
                'filename'
                'startswith'
                'os'
                'path'
                'join'
                'split'
                '_ensure_directory'
                'endswith'
                'open'
                'copyfileobj'
                'close'
            [Var Names]
                'filename'
                'extract_dir'
                'zipfile'
                'zip'
                'info'
                'name'
                'targetpath'
                'source'
                'target'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Unpack zip `filename` to `extract_dir`\n    '
                0
                None
                '%s is not a zip file'
                '/'
                '..'
                'r'
                'wb'
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      2: None
                4       IMPORT_NAME                     0: zipfile
                6       STORE_FAST                      2: zipfile
                8       LOAD_FAST                       2: zipfile
                10      LOAD_METHOD                     1: is_zipfile
                12      LOAD_FAST                       0: filename
                14      CALL_METHOD                     1
                16      POP_JUMP_IF_TRUE                15 (to 30)
                18      LOAD_GLOBAL                     2: ReadError
                20      LOAD_CONST                      3: '%s is not a zip file'
                22      LOAD_FAST                       0: filename
                24      BINARY_MODULO                   
                26      CALL_FUNCTION                   1
                28      RAISE_VARARGS                   1
                30      LOAD_FAST                       2: zipfile
                32      LOAD_METHOD                     3: ZipFile
                34      LOAD_FAST                       0: filename
                36      CALL_METHOD                     1
                38      STORE_FAST                      3: zip
                40      SETUP_FINALLY                   100 (to 242)
                42      LOAD_FAST                       3: zip
                44      LOAD_METHOD                     4: infolist
                46      CALL_METHOD                     0
                48      GET_ITER                        
                50      FOR_ITER                        88 (to 228)
                52      STORE_FAST                      4: info
                54      LOAD_FAST                       4: info
                56      LOAD_ATTR                       5: filename
                58      STORE_FAST                      5: name
                60      LOAD_FAST                       5: name
                62      LOAD_METHOD                     6: startswith
                64      LOAD_CONST                      4: '/'
                66      CALL_METHOD                     1
                68      POP_JUMP_IF_TRUE                39 (to 78)
                70      LOAD_CONST                      5: '..'
                72      LOAD_FAST                       5: name
                74      CONTAINS_OP                     0 (in)
                76      POP_JUMP_IF_FALSE               40 (to 80)
                78      JUMP_ABSOLUTE                   25 (to 50)
                80      LOAD_GLOBAL                     7: os
                82      LOAD_ATTR                       8: path
                84      LOAD_ATTR                       9: join
                86      LOAD_FAST                       1: extract_dir
                88      BUILD_LIST                      1
                90      LOAD_FAST                       5: name
                92      LOAD_METHOD                     10: split
                94      LOAD_CONST                      4: '/'
                96      CALL_METHOD                     1
                98      LIST_EXTEND                     1
                100     LIST_TO_TUPLE                   
                102     CALL_FUNCTION_EX                0
                104     STORE_FAST                      6: targetpath
                106     LOAD_FAST                       6: targetpath
                108     POP_JUMP_IF_TRUE                56 (to 112)
                110     JUMP_ABSOLUTE                   25 (to 50)
                112     LOAD_GLOBAL                     11: _ensure_directory
                114     LOAD_FAST                       6: targetpath
                116     CALL_FUNCTION                   1
                118     POP_TOP                         
                120     LOAD_FAST                       5: name
                122     LOAD_METHOD                     12: endswith
                124     LOAD_CONST                      4: '/'
                126     CALL_METHOD                     1
                128     POP_JUMP_IF_TRUE                113 (to 226)
                130     LOAD_FAST                       3: zip
                132     LOAD_METHOD                     13: open
                134     LOAD_FAST                       5: name
                136     LOAD_CONST                      6: 'r'
                138     CALL_METHOD                     2
                140     SETUP_WITH                      34 (to 210)
                142     STORE_FAST                      7: source
                144     LOAD_GLOBAL                     13: open
                146     LOAD_FAST                       6: targetpath
                148     LOAD_CONST                      7: 'wb'
                150     CALL_FUNCTION                   2
                152     SETUP_WITH                      13 (to 180)
                154     STORE_FAST                      8: target
                156     LOAD_GLOBAL                     14: copyfileobj
                158     LOAD_FAST                       7: source
                160     LOAD_FAST                       8: target
                162     CALL_FUNCTION                   2
                164     POP_TOP                         
                166     POP_BLOCK                       
                168     LOAD_CONST                      2: None
                170     DUP_TOP                         
                172     DUP_TOP                         
                174     CALL_FUNCTION                   3
                176     POP_TOP                         
                178     JUMP_FORWARD                    8 (to 196)
                180     WITH_EXCEPT_START               
                182     POP_JUMP_IF_TRUE                93 (to 186)
                184     RERAISE                         1
                186     POP_TOP                         
                188     POP_TOP                         
                190     POP_TOP                         
                192     POP_EXCEPT                      
                194     POP_TOP                         
                196     POP_BLOCK                       
                198     LOAD_CONST                      2: None
                200     DUP_TOP                         
                202     DUP_TOP                         
                204     CALL_FUNCTION                   3
                206     POP_TOP                         
                208     JUMP_FORWARD                    8 (to 226)
                210     WITH_EXCEPT_START               
                212     POP_JUMP_IF_TRUE                108 (to 216)
                214     RERAISE                         1
                216     POP_TOP                         
                218     POP_TOP                         
                220     POP_TOP                         
                222     POP_EXCEPT                      
                224     POP_TOP                         
                226     JUMP_ABSOLUTE                   25 (to 50)
                228     POP_BLOCK                       
                230     LOAD_FAST                       3: zip
                232     LOAD_METHOD                     15: close
                234     CALL_METHOD                     0
                236     POP_TOP                         
                238     LOAD_CONST                      2: None
                240     RETURN_VALUE                    
                242     LOAD_FAST                       3: zip
                244     LOAD_METHOD                     15: close
                246     CALL_METHOD                     0
                248     POP_TOP                         
                250     RERAISE                         0
        '_unpack_zipfile'
        (
            'filter'
        )
        [Code]
            File Name: shutil.py
            Object Name: _unpack_tarfile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 5
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'tarfile'
                'open'
                'TarError'
                'ReadError'
                'extractall'
                'close'
            [Var Names]
                'filename'
                'extract_dir'
                'filter'
                'tarfile'
                'tarobj'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Unpack tar/tar.gz/tar.bz2/tar.xz `filename` to `extract_dir`\n    '
                0
                None
                '%s is not a compressed or uncompressed tar file'
                (
                    'filter'
                )
            [Disassembly]
                0       LOAD_CONST                      1: 0
                2       LOAD_CONST                      2: None
                4       IMPORT_NAME                     0: tarfile
                6       STORE_FAST                      3: tarfile
                8       SETUP_FINALLY                   7 (to 24)
                10      LOAD_FAST                       3: tarfile
                12      LOAD_METHOD                     1: open
                14      LOAD_FAST                       0: filename
                16      CALL_METHOD                     1
                18      STORE_FAST                      4: tarobj
                20      POP_BLOCK                       
                22      JUMP_FORWARD                    14 (to 52)
                24      DUP_TOP                         
                26      LOAD_FAST                       3: tarfile
                28      LOAD_ATTR                       2: TarError
                30      JUMP_IF_NOT_EXC_MATCH           25 (to 50)
                32      POP_TOP                         
                34      POP_TOP                         
                36      POP_TOP                         
                38      LOAD_GLOBAL                     3: ReadError
                40      LOAD_CONST                      3: '%s is not a compressed or uncompressed tar file'
                42      LOAD_FAST                       0: filename
                44      BINARY_MODULO                   
                46      CALL_FUNCTION                   1
                48      RAISE_VARARGS                   1
                50      RERAISE                         0
                52      SETUP_FINALLY                   14 (to 82)
                54      LOAD_FAST                       4: tarobj
                56      LOAD_ATTR                       4: extractall
                58      LOAD_FAST                       1: extract_dir
                60      LOAD_FAST                       2: filter
                62      LOAD_CONST                      4: ('filter',)
                64      CALL_FUNCTION_KW                2
                66      POP_TOP                         
                68      POP_BLOCK                       
                70      LOAD_FAST                       4: tarobj
                72      LOAD_METHOD                     5: close
                74      CALL_METHOD                     0
                76      POP_TOP                         
                78      LOAD_CONST                      2: None
                80      RETURN_VALUE                    
                82      LOAD_FAST                       4: tarobj
                84      LOAD_METHOD                     5: close
                86      CALL_METHOD                     0
                88      POP_TOP                         
                90      RERAISE                         0
        '_unpack_tarfile'
        '.tar'
        '.zip'
        (
            'tar'
            'zip'
        )
        '.tar.gz'
        '.tgz'
        '.tar.bz2'
        '.tbz2'
        '.tar.xz'
        '.txz'
        [Code]
            File Name: shutil.py
            Object Name: _find_unpack_format
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                '_UNPACK_FORMATS'
                'items'
                'endswith'
            [Var Names]
                'filename'
                'name'
                'info'
                'extension'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
            [Disassembly]
                0       LOAD_GLOBAL                     0: _UNPACK_FORMATS
                2       LOAD_METHOD                     1: items
                4       CALL_METHOD                     0
                6       GET_ITER                        
                8       FOR_ITER                        22 (to 54)
                10      UNPACK_SEQUENCE                 2
                12      STORE_FAST                      1: name
                14      STORE_FAST                      2: info
                16      LOAD_FAST                       2: info
                18      LOAD_CONST                      1: 0
                20      BINARY_SUBSCR                   
                22      GET_ITER                        
                24      FOR_ITER                        13 (to 52)
                26      STORE_FAST                      3: extension
                28      LOAD_FAST                       0: filename
                30      LOAD_METHOD                     2: endswith
                32      LOAD_FAST                       3: extension
                34      CALL_METHOD                     1
                36      POP_JUMP_IF_FALSE               25 (to 50)
                38      LOAD_FAST                       1: name
                40      ROT_TWO                         
                42      POP_TOP                         
                44      ROT_TWO                         
                46      POP_TOP                         
                48      RETURN_VALUE                    
                50      JUMP_ABSOLUTE                   12 (to 24)
                52      JUMP_ABSOLUTE                   4 (to 8)
                54      LOAD_CONST                      0: None
                56      RETURN_VALUE                    
        '_find_unpack_format'
        [Code]
            File Name: shutil.py
            Object Name: unpack_archive
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 1
            Locals: 8
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                'os'
                'getcwd'
                'fspath'
                '_UNPACK_FORMATS'
                'KeyError'
                'ValueError'
                'format'
                'dict'
                '_find_unpack_format'
                'ReadError'
            [Var Names]
                'filename'
                'extract_dir'
                'format'
                'filter'
                'filter_kwargs'
                'format_info'
                'func'
                'kwargs'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Unpack an archive.\n\n    `filename` is the name of the archive.\n\n    `extract_dir` is the name of the target directory, where the archive\n    is unpacked. If not provided, the current working directory is used.\n\n    `format` is the archive format: one of "zip", "tar", "gztar", "bztar",\n    or "xztar".  Or any other registered format.  If not provided,\n    unpack_archive will use the filename extension and see if an unpacker\n    was registered for that extension.\n\n    In case none is found, a ValueError is raised.\n\n    If `filter` is given, it is passed to the underlying\n    extraction function.\n    '
                'shutil.unpack_archive'
                None
                'filter'
                "Unknown unpack format '{0}'"
                1
                2
                "Unknown archive format '{0}'"
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.unpack_archive'
                6       LOAD_FAST                       0: filename
                8       LOAD_FAST                       1: extract_dir
                10      LOAD_FAST                       2: format
                12      CALL_METHOD                     4
                14      POP_TOP                         
                16      LOAD_FAST                       1: extract_dir
                18      LOAD_CONST                      2: None
                20      IS_OP                           0 (is)
                22      POP_JUMP_IF_FALSE               16 (to 32)
                24      LOAD_GLOBAL                     2: os
                26      LOAD_METHOD                     3: getcwd
                28      CALL_METHOD                     0
                30      STORE_FAST                      1: extract_dir
                32      LOAD_GLOBAL                     2: os
                34      LOAD_METHOD                     4: fspath
                36      LOAD_FAST                       1: extract_dir
                38      CALL_METHOD                     1
                40      STORE_FAST                      1: extract_dir
                42      LOAD_GLOBAL                     2: os
                44      LOAD_METHOD                     4: fspath
                46      LOAD_FAST                       0: filename
                48      CALL_METHOD                     1
                50      STORE_FAST                      0: filename
                52      LOAD_FAST                       3: filter
                54      LOAD_CONST                      2: None
                56      IS_OP                           0 (is)
                58      POP_JUMP_IF_FALSE               33 (to 66)
                60      BUILD_MAP                       0
                62      STORE_FAST                      4: filter_kwargs
                64      JUMP_FORWARD                    4 (to 74)
                66      LOAD_CONST                      3: 'filter'
                68      LOAD_FAST                       3: filter
                70      BUILD_MAP                       1
                72      STORE_FAST                      4: filter_kwargs
                74      LOAD_FAST                       2: format
                76      LOAD_CONST                      2: None
                78      IS_OP                           1 (is not)
                80      POP_JUMP_IF_FALSE               84 (to 168)
                82      SETUP_FINALLY                   6 (to 96)
                84      LOAD_GLOBAL                     5: _UNPACK_FORMATS
                86      LOAD_FAST                       2: format
                88      BINARY_SUBSCR                   
                90      STORE_FAST                      5: format_info
                92      POP_BLOCK                       
                94      JUMP_FORWARD                    15 (to 126)
                96      DUP_TOP                         
                98      LOAD_GLOBAL                     6: KeyError
                100     JUMP_IF_NOT_EXC_MATCH           62 (to 124)
                102     POP_TOP                         
                104     POP_TOP                         
                106     POP_TOP                         
                108     LOAD_GLOBAL                     7: ValueError
                110     LOAD_CONST                      4: "Unknown unpack format '{0}'"
                112     LOAD_METHOD                     8: format
                114     LOAD_FAST                       2: format
                116     CALL_METHOD                     1
                118     CALL_FUNCTION                   1
                120     LOAD_CONST                      2: None
                122     RAISE_VARARGS                   2
                124     RERAISE                         0
                126     LOAD_FAST                       5: format_info
                128     LOAD_CONST                      5: 1
                130     BINARY_SUBSCR                   
                132     STORE_FAST                      6: func
                134     LOAD_FAST                       6: func
                136     LOAD_FAST                       0: filename
                138     LOAD_FAST                       1: extract_dir
                140     BUILD_TUPLE                     2
                142     BUILD_MAP                       0
                144     LOAD_GLOBAL                     9: dict
                146     LOAD_FAST                       5: format_info
                148     LOAD_CONST                      6: 2
                150     BINARY_SUBSCR                   
                152     CALL_FUNCTION                   1
                154     DICT_MERGE                      1
                156     LOAD_FAST                       4: filter_kwargs
                158     DICT_MERGE                      1
                160     CALL_FUNCTION_EX                1
                162     POP_TOP                         
                164     LOAD_CONST                      2: None
                166     RETURN_VALUE                    
                168     LOAD_GLOBAL                     10: _find_unpack_format
                170     LOAD_FAST                       0: filename
                172     CALL_FUNCTION                   1
                174     STORE_FAST                      2: format
                176     LOAD_FAST                       2: format
                178     LOAD_CONST                      2: None
                180     IS_OP                           0 (is)
                182     POP_JUMP_IF_FALSE               99 (to 198)
                184     LOAD_GLOBAL                     11: ReadError
                186     LOAD_CONST                      7: "Unknown archive format '{0}'"
                188     LOAD_METHOD                     8: format
                190     LOAD_FAST                       0: filename
                192     CALL_METHOD                     1
                194     CALL_FUNCTION                   1
                196     RAISE_VARARGS                   1
                198     LOAD_GLOBAL                     5: _UNPACK_FORMATS
                200     LOAD_FAST                       2: format
                202     BINARY_SUBSCR                   
                204     LOAD_CONST                      5: 1
                206     BINARY_SUBSCR                   
                208     STORE_FAST                      6: func
                210     LOAD_GLOBAL                     9: dict
                212     LOAD_GLOBAL                     5: _UNPACK_FORMATS
                214     LOAD_FAST                       2: format
                216     BINARY_SUBSCR                   
                218     LOAD_CONST                      6: 2
                220     BINARY_SUBSCR                   
                222     CALL_FUNCTION                   1
                224     LOAD_FAST                       4: filter_kwargs
                226     BINARY_OR                       
                228     STORE_FAST                      7: kwargs
                230     LOAD_FAST                       6: func
                232     LOAD_FAST                       0: filename
                234     LOAD_FAST                       1: extract_dir
                236     BUILD_TUPLE                     2
                238     BUILD_MAP                       0
                240     LOAD_FAST                       7: kwargs
                242     DICT_MERGE                      1
                244     CALL_FUNCTION_EX                1
                246     POP_TOP                         
                248     LOAD_CONST                      2: None
                250     RETURN_VALUE                    
        'unpack_archive'
        'statvfs'
        'disk_usage'
        'usage'
        'total used free'
        'Total space in bytes'
        'Used space in bytes'
        'Free space in bytes'
        [Code]
            File Name: shutil.py
            Object Name: disk_usage
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'statvfs'
                'f_bavail'
                'f_frsize'
                'f_blocks'
                'f_bfree'
                '_ntuple_diskusage'
            [Var Names]
                'path'
                'st'
                'free'
                'total'
                'used'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Return disk usage statistics about the given path.\n\n        Returned value is a named tuple with attributes 'total', 'used' and\n        'free', which are the amount of total, used and free space, in bytes.\n        "
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_METHOD                     1: statvfs
                4       LOAD_FAST                       0: path
                6       CALL_METHOD                     1
                8       STORE_FAST                      1: st
                10      LOAD_FAST                       1: st
                12      LOAD_ATTR                       2: f_bavail
                14      LOAD_FAST                       1: st
                16      LOAD_ATTR                       3: f_frsize
                18      BINARY_MULTIPLY                 
                20      STORE_FAST                      2: free
                22      LOAD_FAST                       1: st
                24      LOAD_ATTR                       4: f_blocks
                26      LOAD_FAST                       1: st
                28      LOAD_ATTR                       3: f_frsize
                30      BINARY_MULTIPLY                 
                32      STORE_FAST                      3: total
                34      LOAD_FAST                       1: st
                36      LOAD_ATTR                       4: f_blocks
                38      LOAD_FAST                       1: st
                40      LOAD_ATTR                       5: f_bfree
                42      BINARY_SUBTRACT                 
                44      LOAD_FAST                       1: st
                46      LOAD_ATTR                       3: f_frsize
                48      BINARY_MULTIPLY                 
                50      STORE_FAST                      4: used
                52      LOAD_GLOBAL                     6: _ntuple_diskusage
                54      LOAD_FAST                       3: total
                56      LOAD_FAST                       4: used
                58      LOAD_FAST                       2: free
                60      CALL_FUNCTION                   3
                62      RETURN_VALUE                    
        [Code]
            File Name: shutil.py
            Object Name: disk_usage
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'nt'
                '_getdiskusage'
                '_ntuple_diskusage'
            [Var Names]
                'path'
                'total'
                'free'
                'used'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Return disk usage statistics about the given path.\n\n        Returned values is a named tuple with attributes 'total', 'used' and\n        'free', which are the amount of total, used and free space, in bytes.\n        "
            [Disassembly]
                0       LOAD_GLOBAL                     0: nt
                2       LOAD_METHOD                     1: _getdiskusage
                4       LOAD_FAST                       0: path
                6       CALL_METHOD                     1
                8       UNPACK_SEQUENCE                 2
                10      STORE_FAST                      1: total
                12      STORE_FAST                      2: free
                14      LOAD_FAST                       1: total
                16      LOAD_FAST                       2: free
                18      BINARY_SUBTRACT                 
                20      STORE_FAST                      3: used
                22      LOAD_GLOBAL                     2: _ntuple_diskusage
                24      LOAD_FAST                       1: total
                26      LOAD_FAST                       3: used
                28      LOAD_FAST                       2: free
                30      CALL_FUNCTION                   3
                32      RETURN_VALUE                    
        [Code]
            File Name: shutil.py
            Object Name: chown
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 5
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sys'
                'audit'
                'ValueError'
                'isinstance'
                'str'
                '_get_uid'
                'LookupError'
                'format'
                'int'
                '_get_gid'
                'os'
                'chown'
            [Var Names]
                'path'
                'user'
                'group'
                '_user'
                '_group'
            [Free Vars]
            [Cell Vars]
            [Constants]
                'Change owner user and group of the given path.\n\n    user and group can be the uid/gid or the user/group names, and in that case,\n    they are converted to their respective uid/gid.\n    '
                'shutil.chown'
                None
                'user and/or group must be set'
                -1
                'no such user: {!r}'
                'no such group: {!r}'
            [Disassembly]
                0       LOAD_GLOBAL                     0: sys
                2       LOAD_METHOD                     1: audit
                4       LOAD_CONST                      1: 'shutil.chown'
                6       LOAD_FAST                       0: path
                8       LOAD_FAST                       1: user
                10      LOAD_FAST                       2: group
                12      CALL_METHOD                     4
                14      POP_TOP                         
                16      LOAD_FAST                       1: user
                18      LOAD_CONST                      2: None
                20      IS_OP                           0 (is)
                22      POP_JUMP_IF_FALSE               20 (to 40)
                24      LOAD_FAST                       2: group
                26      LOAD_CONST                      2: None
                28      IS_OP                           0 (is)
                30      POP_JUMP_IF_FALSE               20 (to 40)
                32      LOAD_GLOBAL                     2: ValueError
                34      LOAD_CONST                      3: 'user and/or group must be set'
                36      CALL_FUNCTION                   1
                38      RAISE_VARARGS                   1
                40      LOAD_FAST                       1: user
                42      STORE_FAST                      3: _user
                44      LOAD_FAST                       2: group
                46      STORE_FAST                      4: _group
                48      LOAD_FAST                       1: user
                50      LOAD_CONST                      2: None
                52      IS_OP                           0 (is)
                54      POP_JUMP_IF_FALSE               31 (to 62)
                56      LOAD_CONST                      4: -1
                58      STORE_FAST                      3: _user
                60      JUMP_FORWARD                    20 (to 102)
                62      LOAD_GLOBAL                     3: isinstance
                64      LOAD_FAST                       1: user
                66      LOAD_GLOBAL                     4: str
                68      CALL_FUNCTION                   2
                70      POP_JUMP_IF_FALSE               51 (to 102)
                72      LOAD_GLOBAL                     5: _get_uid
                74      LOAD_FAST                       1: user
                76      CALL_FUNCTION                   1
                78      STORE_FAST                      3: _user
                80      LOAD_FAST                       3: _user
                82      LOAD_CONST                      2: None
                84      IS_OP                           0 (is)
                86      POP_JUMP_IF_FALSE               51 (to 102)
                88      LOAD_GLOBAL                     6: LookupError
                90      LOAD_CONST                      5: 'no such user: {!r}'
                92      LOAD_METHOD                     7: format
                94      LOAD_FAST                       1: user
                96      CALL_METHOD                     1
                98      CALL_FUNCTION                   1
                100     RAISE_VARARGS                   1
                102     LOAD_FAST                       2: group
                104     LOAD_CONST                      2: None
                106     IS_OP                           0 (is)
                108     POP_JUMP_IF_FALSE               58 (to 116)
                110     LOAD_CONST                      4: -1
                112     STORE_FAST                      4: _group
                114     JUMP_FORWARD                    20 (to 156)
                116     LOAD_GLOBAL                     3: isinstance
                118     LOAD_FAST                       2: group
                120     LOAD_GLOBAL                     8: int
                122     CALL_FUNCTION                   2
                124     POP_JUMP_IF_TRUE                78 (to 156)
                126     LOAD_GLOBAL                     9: _get_gid
                128     LOAD_FAST                       2: group
                130     CALL_FUNCTION                   1
                132     STORE_FAST                      4: _group
                134     LOAD_FAST                       4: _group
                136     LOAD_CONST                      2: None
                138     IS_OP                           0 (is)
                140     POP_JUMP_IF_FALSE               78 (to 156)
                142     LOAD_GLOBAL                     6: LookupError
                144     LOAD_CONST                      6: 'no such group: {!r}'
                146     LOAD_METHOD                     7: format
                148     LOAD_FAST                       2: group
                150     CALL_METHOD                     1
                152     CALL_FUNCTION                   1
                154     RAISE_VARARGS                   1
                156     LOAD_GLOBAL                     10: os
                158     LOAD_METHOD                     11: chown
                160     LOAD_FAST                       0: path
                162     LOAD_FAST                       3: _user
                164     LOAD_FAST                       4: _group
                166     CALL_METHOD                     3
                168     POP_TOP                         
                170     LOAD_CONST                      2: None
                172     RETURN_VALUE                    
        'chown'
        (
            80
            24
        )
        [Code]
            File Name: shutil.py
            Object Name: get_terminal_size
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'int'
                'os'
                'environ'
                'KeyError'
                'ValueError'
                'get_terminal_size'
                'sys'
                '__stdout__'
                'fileno'
                'AttributeError'
                'OSError'
                'terminal_size'
                'columns'
                'lines'
            [Var Names]
                'fallback'
                'columns'
                'lines'
                'size'
            [Free Vars]
            [Cell Vars]
            [Constants]
                "Get the size of the terminal window.\n\n    For each of the two dimensions, the environment variable, COLUMNS\n    and LINES respectively, is checked. If the variable is defined and\n    the value is a positive integer, it is used.\n\n    When COLUMNS or LINES is not defined, which is the common case,\n    the terminal connected to sys.__stdout__ is queried\n    by invoking os.get_terminal_size.\n\n    If the terminal size cannot be successfully queried, either because\n    the system doesn't support querying, or because we are not\n    connected to a terminal, the value given in fallback parameter\n    is used. Fallback defaults to (80, 24) which is the default\n    size used by many terminal emulators.\n\n    The value returned is a named tuple of type os.terminal_size.\n    "
                'COLUMNS'
                0
                'LINES'
            [Disassembly]
                0       SETUP_FINALLY                   9 (to 20)
                2       LOAD_GLOBAL                     0: int
                4       LOAD_GLOBAL                     1: os
                6       LOAD_ATTR                       2: environ
                8       LOAD_CONST                      1: 'COLUMNS'
                10      BINARY_SUBSCR                   
                12      CALL_FUNCTION                   1
                14      STORE_FAST                      1: columns
                16      POP_BLOCK                       
                18      JUMP_FORWARD                    13 (to 46)
                20      DUP_TOP                         
                22      LOAD_GLOBAL                     3: KeyError
                24      LOAD_GLOBAL                     4: ValueError
                26      BUILD_TUPLE                     2
                28      JUMP_IF_NOT_EXC_MATCH           22 (to 44)
                30      POP_TOP                         
                32      POP_TOP                         
                34      POP_TOP                         
                36      LOAD_CONST                      2: 0
                38      STORE_FAST                      1: columns
                40      POP_EXCEPT                      
                42      JUMP_FORWARD                    1 (to 46)
                44      RERAISE                         0
                46      SETUP_FINALLY                   9 (to 66)
                48      LOAD_GLOBAL                     0: int
                50      LOAD_GLOBAL                     1: os
                52      LOAD_ATTR                       2: environ
                54      LOAD_CONST                      3: 'LINES'
                56      BINARY_SUBSCR                   
                58      CALL_FUNCTION                   1
                60      STORE_FAST                      2: lines
                62      POP_BLOCK                       
                64      JUMP_FORWARD                    13 (to 92)
                66      DUP_TOP                         
                68      LOAD_GLOBAL                     3: KeyError
                70      LOAD_GLOBAL                     4: ValueError
                72      BUILD_TUPLE                     2
                74      JUMP_IF_NOT_EXC_MATCH           45 (to 90)
                76      POP_TOP                         
                78      POP_TOP                         
                80      POP_TOP                         
                82      LOAD_CONST                      2: 0
                84      STORE_FAST                      2: lines
                86      POP_EXCEPT                      
                88      JUMP_FORWARD                    1 (to 92)
                90      RERAISE                         0
                92      LOAD_FAST                       1: columns
                94      LOAD_CONST                      2: 0
                96      COMPARE_OP                      1 (<=)
                98      POP_JUMP_IF_TRUE                54 (to 108)
                100     LOAD_FAST                       2: lines
                102     LOAD_CONST                      2: 0
                104     COMPARE_OP                      1 (<=)
                106     POP_JUMP_IF_FALSE               96 (to 192)
                108     SETUP_FINALLY                   10 (to 130)
                110     LOAD_GLOBAL                     1: os
                112     LOAD_METHOD                     5: get_terminal_size
                114     LOAD_GLOBAL                     6: sys
                116     LOAD_ATTR                       7: __stdout__
                118     LOAD_METHOD                     8: fileno
                120     CALL_METHOD                     0
                122     CALL_METHOD                     1
                124     STORE_FAST                      3: size
                126     POP_BLOCK                       
                128     JUMP_FORWARD                    17 (to 164)
                130     DUP_TOP                         
                132     LOAD_GLOBAL                     9: AttributeError
                134     LOAD_GLOBAL                     4: ValueError
                136     LOAD_GLOBAL                     10: OSError
                138     BUILD_TUPLE                     3
                140     JUMP_IF_NOT_EXC_MATCH           81 (to 162)
                142     POP_TOP                         
                144     POP_TOP                         
                146     POP_TOP                         
                148     LOAD_GLOBAL                     1: os
                150     LOAD_METHOD                     11: terminal_size
                152     LOAD_FAST                       0: fallback
                154     CALL_METHOD                     1
                156     STORE_FAST                      3: size
                158     POP_EXCEPT                      
                160     JUMP_FORWARD                    1 (to 164)
                162     RERAISE                         0
                164     LOAD_FAST                       1: columns
                166     LOAD_CONST                      2: 0
                168     COMPARE_OP                      1 (<=)
                170     POP_JUMP_IF_FALSE               89 (to 178)
                172     LOAD_FAST                       3: size
                174     LOAD_ATTR                       12: columns
                176     STORE_FAST                      1: columns
                178     LOAD_FAST                       2: lines
                180     LOAD_CONST                      2: 0
                182     COMPARE_OP                      1 (<=)
                184     POP_JUMP_IF_FALSE               96 (to 192)
                186     LOAD_FAST                       3: size
                188     LOAD_ATTR                       13: lines
                190     STORE_FAST                      2: lines
                192     LOAD_GLOBAL                     1: os
                194     LOAD_METHOD                     11: terminal_size
                196     LOAD_FAST                       1: columns
                198     LOAD_FAST                       2: lines
                200     BUILD_TUPLE                     2
                202     CALL_METHOD                     1
                204     RETURN_VALUE                    
        'get_terminal_size'
        [Code]
            File Name: shutil.py
            Object Name: _access_check
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 2
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'os'
                'path'
                'exists'
                'access'
                'isdir'
            [Var Names]
                'fn'
                'mode'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: exists
                6       LOAD_FAST                       0: fn
                8       CALL_METHOD                     1
                10      JUMP_IF_FALSE_OR_POP            18 (to 36)
                12      LOAD_GLOBAL                     0: os
                14      LOAD_METHOD                     3: access
                16      LOAD_FAST                       0: fn
                18      LOAD_FAST                       1: mode
                20      CALL_METHOD                     2
                22      JUMP_IF_FALSE_OR_POP            18 (to 36)
                24      LOAD_GLOBAL                     0: os
                26      LOAD_ATTR                       1: path
                28      LOAD_METHOD                     4: isdir
                30      LOAD_FAST                       0: fn
                32      CALL_METHOD                     1
                34      UNARY_NOT                       
                36      RETURN_VALUE                    
        '_access_check'
        [Code]
            File Name: shutil.py
            Object Name: which
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 13
            Stack Size: 9
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                'os'
                'path'
                'dirname'
                '_access_check'
                'isinstance'
                'bytes'
                'environ'
                'get'
                'confstr'
                'AttributeError'
                'ValueError'
                'defpath'
                'fsencode'
                'split'
                'pathsep'
                'fsdecode'
                'sys'
                'platform'
                'curdir'
                'insert'
                'getenv'
                '_WIN_DEFAULT_PATHEXT'
                'any'
                'set'
                'normcase'
                'add'
                'join'
            [Var Names]
                'cmd'
                'mode'
                'path'
                'use_bytes'
                'curdir'
                'pathext_source'
                'pathext'
                'files'
                'seen'
                'dir'
                'normdir'
                'thefile'
                'name'
            [Free Vars]
            [Cell Vars]
                'cmd'
            [Constants]
                'Given a command, mode, and a PATH string, return the path which\n    conforms to the given mode on the PATH, or None if there is no such\n    file.\n\n    `mode` defaults to os.F_OK | os.X_OK. `path` defaults to the result\n    of os.environ.get("PATH"), or can be overridden with a custom search\n    path.\n\n    '
                None
                'PATH'
                'CS_PATH'
                'win32'
                0
                'PATHEXT'
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'ext'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        6 (to 18)
                        6       STORE_FAST                      1: ext
                        8       LOAD_FAST                       1: ext
                        10      POP_JUMP_IF_FALSE               2 (to 4)
                        12      LOAD_FAST                       1: ext
                        14      LIST_APPEND                     2
                        16      JUMP_ABSOLUTE                   2 (to 4)
                        18      RETURN_VALUE                    
                'which.<locals>.<listcomp>'
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'os'
                        'fsencode'
                    [Var Names]
                        '.0'
                        'ext'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        7 (to 20)
                        6       STORE_FAST                      1: ext
                        8       LOAD_GLOBAL                     0: os
                        10      LOAD_METHOD                     1: fsencode
                        12      LOAD_FAST                       1: ext
                        14      CALL_METHOD                     1
                        16      LIST_APPEND                     2
                        18      JUMP_ABSOLUTE                   2 (to 4)
                        20      RETURN_VALUE                    
                [Code]
                    File Name: shutil.py
                    Object Name: <genexpr>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000033 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR)
                    [Names]
                        'lower'
                        'endswith'
                    [Var Names]
                        '.0'
                        'ext'
                    [Free Vars]
                        'cmd'
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       GEN_START                       0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        12 (to 30)
                        6       STORE_FAST                      1: ext
                        8       LOAD_DEREF                      0: cmd
                        10      LOAD_METHOD                     0: lower
                        12      CALL_METHOD                     0
                        14      LOAD_METHOD                     1: endswith
                        16      LOAD_FAST                       1: ext
                        18      LOAD_METHOD                     0: lower
                        20      CALL_METHOD                     0
                        22      CALL_METHOD                     1
                        24      YIELD_VALUE                     
                        26      POP_TOP                         
                        28      JUMP_ABSOLUTE                   2 (to 4)
                        30      LOAD_CONST                      0: None
                        32      RETURN_VALUE                    
                'which.<locals>.<genexpr>'
                [Code]
                    File Name: shutil.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                    [Var Names]
                        '.0'
                        'ext'
                    [Free Vars]
                        'cmd'
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST                      0
                        2       LOAD_FAST                       0: .0
                        4       FOR_ITER                        6 (to 18)
                        6       STORE_FAST                      1: ext
                        8       LOAD_DEREF                      0: cmd
                        10      LOAD_FAST                       1: ext
                        12      BINARY_ADD                      
                        14      LIST_APPEND                     2
                        16      JUMP_ABSOLUTE                   2 (to 4)
                        18      RETURN_VALUE                    
            [Disassembly]
                0       LOAD_GLOBAL                     0: os
                2       LOAD_ATTR                       1: path
                4       LOAD_METHOD                     2: dirname
                6       LOAD_DEREF                      0: cmd
                8       CALL_METHOD                     1
                10      POP_JUMP_IF_FALSE               15 (to 30)
                12      LOAD_GLOBAL                     3: _access_check
                14      LOAD_DEREF                      0: cmd
                16      LOAD_FAST                       1: mode
                18      CALL_FUNCTION                   2
                20      POP_JUMP_IF_FALSE               13 (to 26)
                22      LOAD_DEREF                      0: cmd
                24      RETURN_VALUE                    
                26      LOAD_CONST                      1: None
                28      RETURN_VALUE                    
                30      LOAD_GLOBAL                     4: isinstance
                32      LOAD_DEREF                      0: cmd
                34      LOAD_GLOBAL                     5: bytes
                36      CALL_FUNCTION                   2
                38      STORE_FAST                      3: use_bytes
                40      LOAD_FAST                       2: path
                42      LOAD_CONST                      1: None
                44      IS_OP                           0 (is)
                46      POP_JUMP_IF_FALSE               57 (to 114)
                48      LOAD_GLOBAL                     0: os
                50      LOAD_ATTR                       6: environ
                52      LOAD_METHOD                     7: get
                54      LOAD_CONST                      2: 'PATH'
                56      LOAD_CONST                      1: None
                58      CALL_METHOD                     2
                60      STORE_FAST                      2: path
                62      LOAD_FAST                       2: path
                64      LOAD_CONST                      1: None
                66      IS_OP                           0 (is)
                68      POP_JUMP_IF_FALSE               57 (to 114)
                70      SETUP_FINALLY                   7 (to 86)
                72      LOAD_GLOBAL                     0: os
                74      LOAD_METHOD                     8: confstr
                76      LOAD_CONST                      3: 'CS_PATH'
                78      CALL_METHOD                     1
                80      STORE_FAST                      2: path
                82      POP_BLOCK                       
                84      JUMP_FORWARD                    14 (to 114)
                86      DUP_TOP                         
                88      LOAD_GLOBAL                     9: AttributeError
                90      LOAD_GLOBAL                     10: ValueError
                92      BUILD_TUPLE                     2
                94      JUMP_IF_NOT_EXC_MATCH           56 (to 112)
                96      POP_TOP                         
                98      POP_TOP                         
                100     POP_TOP                         
                102     LOAD_GLOBAL                     0: os
                104     LOAD_ATTR                       11: defpath
                106     STORE_FAST                      2: path
                108     POP_EXCEPT                      
                110     JUMP_FORWARD                    1 (to 114)
                112     RERAISE                         0
                114     LOAD_FAST                       2: path
                116     POP_JUMP_IF_TRUE                61 (to 122)
                118     LOAD_CONST                      1: None
                120     RETURN_VALUE                    
                122     LOAD_FAST                       3: use_bytes
                124     POP_JUMP_IF_FALSE               78 (to 156)
                126     LOAD_GLOBAL                     0: os
                128     LOAD_METHOD                     12: fsencode
                130     LOAD_FAST                       2: path
                132     CALL_METHOD                     1
                134     STORE_FAST                      2: path
                136     LOAD_FAST                       2: path
                138     LOAD_METHOD                     13: split
                140     LOAD_GLOBAL                     0: os
                142     LOAD_METHOD                     12: fsencode
                144     LOAD_GLOBAL                     0: os
                146     LOAD_ATTR                       14: pathsep
                148     CALL_METHOD                     1
                150     CALL_METHOD                     1
                152     STORE_FAST                      2: path
                154     JUMP_FORWARD                    11 (to 178)
                156     LOAD_GLOBAL                     0: os
                158     LOAD_METHOD                     15: fsdecode
                160     LOAD_FAST                       2: path
                162     CALL_METHOD                     1
                164     STORE_FAST                      2: path
                166     LOAD_FAST                       2: path
                168     LOAD_METHOD                     13: split
                170     LOAD_GLOBAL                     0: os
                172     LOAD_ATTR                       14: pathsep
                174     CALL_METHOD                     1
                176     STORE_FAST                      2: path
                178     LOAD_GLOBAL                     16: sys
                180     LOAD_ATTR                       17: platform
                182     LOAD_CONST                      4: 'win32'
                184     COMPARE_OP                      2 (==)
                186     POP_JUMP_IF_FALSE               166 (to 332)
                188     LOAD_GLOBAL                     0: os
                190     LOAD_ATTR                       18: curdir
                192     STORE_FAST                      4: curdir
                194     LOAD_FAST                       3: use_bytes
                196     POP_JUMP_IF_FALSE               104 (to 208)
                198     LOAD_GLOBAL                     0: os
                200     LOAD_METHOD                     12: fsencode
                202     LOAD_FAST                       4: curdir
                204     CALL_METHOD                     1
                206     STORE_FAST                      4: curdir
                208     LOAD_FAST                       4: curdir
                210     LOAD_FAST                       2: path
                212     CONTAINS_OP                     1 (not in)
                214     POP_JUMP_IF_FALSE               114 (to 228)
                216     LOAD_FAST                       2: path
                218     LOAD_METHOD                     19: insert
                220     LOAD_CONST                      5: 0
                222     LOAD_FAST                       4: curdir
                224     CALL_METHOD                     2
                226     POP_TOP                         
                228     LOAD_GLOBAL                     0: os
                230     LOAD_METHOD                     20: getenv
                232     LOAD_CONST                      6: 'PATHEXT'
                234     CALL_METHOD                     1
                236     JUMP_IF_TRUE_OR_POP             120 (to 240)
                238     LOAD_GLOBAL                     21: _WIN_DEFAULT_PATHEXT
                240     STORE_FAST                      5: pathext_source
                242     LOAD_CONST                      7: <CODE> <listcomp>
                244     LOAD_CONST                      8: 'which.<locals>.<listcomp>'
                246     MAKE_FUNCTION                   0
                248     LOAD_FAST                       5: pathext_source
                250     LOAD_METHOD                     13: split
                252     LOAD_GLOBAL                     0: os
                254     LOAD_ATTR                       14: pathsep
                256     CALL_METHOD                     1
                258     GET_ITER                        
                260     CALL_FUNCTION                   1
                262     STORE_FAST                      6: pathext
                264     LOAD_FAST                       3: use_bytes
                266     POP_JUMP_IF_FALSE               141 (to 282)
                268     LOAD_CONST                      9: <CODE> <listcomp>
                270     LOAD_CONST                      8: 'which.<locals>.<listcomp>'
                272     MAKE_FUNCTION                   0
                274     LOAD_FAST                       6: pathext
                276     GET_ITER                        
                278     CALL_FUNCTION                   1
                280     STORE_FAST                      6: pathext
                282     LOAD_GLOBAL                     22: any
                284     LOAD_CLOSURE                    0: cmd
                286     BUILD_TUPLE                     1
                288     LOAD_CONST                      10: <CODE> <genexpr>
                290     LOAD_CONST                      11: 'which.<locals>.<genexpr>'
                292     MAKE_FUNCTION                   8
                294     LOAD_FAST                       6: pathext
                296     GET_ITER                        
                298     CALL_FUNCTION                   1
                300     CALL_FUNCTION                   1
                302     POP_JUMP_IF_FALSE               156 (to 312)
                304     LOAD_DEREF                      0: cmd
                306     BUILD_LIST                      1
                308     STORE_FAST                      7: files
                310     JUMP_FORWARD                    13 (to 338)
                312     LOAD_CLOSURE                    0: cmd
                314     BUILD_TUPLE                     1
                316     LOAD_CONST                      12: <CODE> <listcomp>
                318     LOAD_CONST                      8: 'which.<locals>.<listcomp>'
                320     MAKE_FUNCTION                   8
                322     LOAD_FAST                       6: pathext
                324     GET_ITER                        
                326     CALL_FUNCTION                   1
                328     STORE_FAST                      7: files
                330     JUMP_FORWARD                    3 (to 338)
                332     LOAD_DEREF                      0: cmd
                334     BUILD_LIST                      1
                336     STORE_FAST                      7: files
                338     LOAD_GLOBAL                     23: set
                340     CALL_FUNCTION                   0
                342     STORE_FAST                      8: seen
                344     LOAD_FAST                       2: path
                346     GET_ITER                        
                348     FOR_ITER                        40 (to 430)
                350     STORE_FAST                      9: dir
                352     LOAD_GLOBAL                     0: os
                354     LOAD_ATTR                       1: path
                356     LOAD_METHOD                     24: normcase
                358     LOAD_FAST                       9: dir
                360     CALL_METHOD                     1
                362     STORE_FAST                      10: normdir
                364     LOAD_FAST                       10: normdir
                366     LOAD_FAST                       8: seen
                368     CONTAINS_OP                     1 (not in)
                370     POP_JUMP_IF_FALSE               214 (to 428)
                372     LOAD_FAST                       8: seen
                374     LOAD_METHOD                     25: add
                376     LOAD_FAST                       10: normdir
                378     CALL_METHOD                     1
                380     POP_TOP                         
                382     LOAD_FAST                       7: files
                384     GET_ITER                        
                386     FOR_ITER                        20 (to 428)
                388     STORE_FAST                      11: thefile
                390     LOAD_GLOBAL                     0: os
                392     LOAD_ATTR                       1: path
                394     LOAD_METHOD                     26: join
                396     LOAD_FAST                       9: dir
                398     LOAD_FAST                       11: thefile
                400     CALL_METHOD                     2
                402     STORE_FAST                      12: name
                404     LOAD_GLOBAL                     3: _access_check
                406     LOAD_FAST                       12: name
                408     LOAD_FAST                       1: mode
                410     CALL_FUNCTION                   2
                412     POP_JUMP_IF_FALSE               213 (to 426)
                414     LOAD_FAST                       12: name
                416     ROT_TWO                         
                418     POP_TOP                         
                420     ROT_TWO                         
                422     POP_TOP                         
                424     RETURN_VALUE                    
                426     JUMP_ABSOLUTE                   193 (to 386)
                428     JUMP_ABSOLUTE                   174 (to 348)
                430     LOAD_CONST                      1: None
                432     RETURN_VALUE                    
        'which'
        (
            0
        )
        (
            False
        )
        (
            False
            None
        )
        (
            'gzip'
            0
            0
            None
            None
            None
            None
        )
        (
            0
            0
            None
            None
            None
            None
        )
        (
            None
            ''
        )
        (
            None
            None
            0
            0
            None
            None
            None
        )
        (
            None
            None
        )
        (
            (
                80
                24
            )
        )
    [Disassembly]
        0       LOAD_CONST                      0: "Utility functions for copying and archiving files and directory trees.\n\nXXX The functions here don't copy the resource fork or other metadata on Mac.\n\n"
        2       STORE_NAME                      0: __doc__
        4       LOAD_CONST                      1: 0
        6       LOAD_CONST                      2: None
        8       IMPORT_NAME                     1: os
        10      STORE_NAME                      1: os
        12      LOAD_CONST                      1: 0
        14      LOAD_CONST                      2: None
        16      IMPORT_NAME                     2: sys
        18      STORE_NAME                      2: sys
        20      LOAD_CONST                      1: 0
        22      LOAD_CONST                      2: None
        24      IMPORT_NAME                     3: stat
        26      STORE_NAME                      3: stat
        28      LOAD_CONST                      1: 0
        30      LOAD_CONST                      2: None
        32      IMPORT_NAME                     4: fnmatch
        34      STORE_NAME                      4: fnmatch
        36      LOAD_CONST                      1: 0
        38      LOAD_CONST                      2: None
        40      IMPORT_NAME                     5: collections
        42      STORE_NAME                      5: collections
        44      LOAD_CONST                      1: 0
        46      LOAD_CONST                      2: None
        48      IMPORT_NAME                     6: errno
        50      STORE_NAME                      6: errno
        52      SETUP_FINALLY                   9 (to 72)
        54      LOAD_CONST                      1: 0
        56      LOAD_CONST                      2: None
        58      IMPORT_NAME                     7: zlib
        60      STORE_NAME                      7: zlib
        62      DELETE_NAME                     7: zlib
        64      LOAD_CONST                      3: True
        66      STORE_NAME                      8: _ZLIB_SUPPORTED
        68      POP_BLOCK                       
        70      JUMP_FORWARD                    11 (to 94)
        72      DUP_TOP                         
        74      LOAD_NAME                       9: ImportError
        76      JUMP_IF_NOT_EXC_MATCH           46 (to 92)
        78      POP_TOP                         
        80      POP_TOP                         
        82      POP_TOP                         
        84      LOAD_CONST                      4: False
        86      STORE_NAME                      8: _ZLIB_SUPPORTED
        88      POP_EXCEPT                      
        90      JUMP_FORWARD                    1 (to 94)
        92      RERAISE                         0
        94      SETUP_FINALLY                   9 (to 114)
        96      LOAD_CONST                      1: 0
        98      LOAD_CONST                      2: None
        100     IMPORT_NAME                     10: bz2
        102     STORE_NAME                      10: bz2
        104     DELETE_NAME                     10: bz2
        106     LOAD_CONST                      3: True
        108     STORE_NAME                      11: _BZ2_SUPPORTED
        110     POP_BLOCK                       
        112     JUMP_FORWARD                    11 (to 136)
        114     DUP_TOP                         
        116     LOAD_NAME                       9: ImportError
        118     JUMP_IF_NOT_EXC_MATCH           67 (to 134)
        120     POP_TOP                         
        122     POP_TOP                         
        124     POP_TOP                         
        126     LOAD_CONST                      4: False
        128     STORE_NAME                      11: _BZ2_SUPPORTED
        130     POP_EXCEPT                      
        132     JUMP_FORWARD                    1 (to 136)
        134     RERAISE                         0
        136     SETUP_FINALLY                   9 (to 156)
        138     LOAD_CONST                      1: 0
        140     LOAD_CONST                      2: None
        142     IMPORT_NAME                     12: lzma
        144     STORE_NAME                      12: lzma
        146     DELETE_NAME                     12: lzma
        148     LOAD_CONST                      3: True
        150     STORE_NAME                      13: _LZMA_SUPPORTED
        152     POP_BLOCK                       
        154     JUMP_FORWARD                    11 (to 178)
        156     DUP_TOP                         
        158     LOAD_NAME                       9: ImportError
        160     JUMP_IF_NOT_EXC_MATCH           88 (to 176)
        162     POP_TOP                         
        164     POP_TOP                         
        166     POP_TOP                         
        168     LOAD_CONST                      4: False
        170     STORE_NAME                      13: _LZMA_SUPPORTED
        172     POP_EXCEPT                      
        174     JUMP_FORWARD                    1 (to 178)
        176     RERAISE                         0
        178     LOAD_NAME                       1: os
        180     LOAD_ATTR                       14: name
        182     LOAD_CONST                      5: 'nt'
        184     COMPARE_OP                      2 (==)
        186     STORE_NAME                      15: _WINDOWS
        188     LOAD_CONST                      2: None
        190     DUP_TOP                         
        192     STORE_NAME                      16: posix
        194     STORE_NAME                      17: nt
        196     LOAD_NAME                       1: os
        198     LOAD_ATTR                       14: name
        200     LOAD_CONST                      6: 'posix'
        202     COMPARE_OP                      2 (==)
        204     POP_JUMP_IF_FALSE               108 (to 216)
        206     LOAD_CONST                      1: 0
        208     LOAD_CONST                      2: None
        210     IMPORT_NAME                     16: posix
        212     STORE_NAME                      16: posix
        214     JUMP_FORWARD                    6 (to 228)
        216     LOAD_NAME                       15: _WINDOWS
        218     POP_JUMP_IF_FALSE               114 (to 228)
        220     LOAD_CONST                      1: 0
        222     LOAD_CONST                      2: None
        224     IMPORT_NAME                     17: nt
        226     STORE_NAME                      17: nt
        228     LOAD_NAME                       15: _WINDOWS
        230     POP_JUMP_IF_FALSE               118 (to 236)
        232     LOAD_CONST                      7: 1048576
        234     JUMP_FORWARD                    1 (to 238)
        236     LOAD_CONST                      8: 65536
        238     STORE_NAME                      18: COPY_BUFSIZE
        240     LOAD_NAME                       19: hasattr
        242     LOAD_NAME                       1: os
        244     LOAD_CONST                      9: 'sendfile'
        246     CALL_FUNCTION                   2
        248     JUMP_IF_FALSE_OR_POP            130 (to 260)
        250     LOAD_NAME                       2: sys
        252     LOAD_ATTR                       20: platform
        254     LOAD_METHOD                     21: startswith
        256     LOAD_CONST                      10: 'linux'
        258     CALL_METHOD                     1
        260     STORE_GLOBAL                    22: _USE_CP_SENDFILE
        262     LOAD_NAME                       16: posix
        264     JUMP_IF_FALSE_OR_POP            137 (to 274)
        266     LOAD_NAME                       19: hasattr
        268     LOAD_NAME                       16: posix
        270     LOAD_CONST                      11: '_fcopyfile'
        272     CALL_FUNCTION                   2
        274     STORE_NAME                      23: _HAS_FCOPYFILE
        276     LOAD_CONST                      12: '.COM;.EXE;.BAT;.CMD;.VBS;.JS;.WS;.MSC'
        278     STORE_NAME                      24: _WIN_DEFAULT_PATHEXT
        280     BUILD_LIST                      0
        282     LOAD_CONST                      13: ('copyfileobj', 'copyfile', 'copymode', 'copystat', 'copy', 'copy2', 'copytree', 'move', 'rmtree', 'Error', 'SpecialFileError', 'ExecError', 'make_archive', 'get_archive_formats', 'register_archive_format', 'unregister_archive_format', 'get_unpack_formats', 'register_unpack_format', 'unregister_unpack_format', 'unpack_archive', 'ignore_patterns', 'chown', 'which', 'get_terminal_size', 'SameFileError')
        284     LIST_EXTEND                     1
        286     STORE_NAME                      25: __all__
        288     LOAD_BUILD_CLASS                
        290     LOAD_CONST                      14: <CODE> Error
        292     LOAD_CONST                      15: 'Error'
        294     MAKE_FUNCTION                   0
        296     LOAD_CONST                      15: 'Error'
        298     LOAD_NAME                       26: OSError
        300     CALL_FUNCTION                   3
        302     STORE_NAME                      27: Error
        304     LOAD_BUILD_CLASS                
        306     LOAD_CONST                      16: <CODE> SameFileError
        308     LOAD_CONST                      17: 'SameFileError'
        310     MAKE_FUNCTION                   0
        312     LOAD_CONST                      17: 'SameFileError'
        314     LOAD_NAME                       27: Error
        316     CALL_FUNCTION                   3
        318     STORE_NAME                      28: SameFileError
        320     LOAD_BUILD_CLASS                
        322     LOAD_CONST                      18: <CODE> SpecialFileError
        324     LOAD_CONST                      19: 'SpecialFileError'
        326     MAKE_FUNCTION                   0
        328     LOAD_CONST                      19: 'SpecialFileError'
        330     LOAD_NAME                       26: OSError
        332     CALL_FUNCTION                   3
        334     STORE_NAME                      29: SpecialFileError
        336     LOAD_BUILD_CLASS                
        338     LOAD_CONST                      20: <CODE> ExecError
        340     LOAD_CONST                      21: 'ExecError'
        342     MAKE_FUNCTION                   0
        344     LOAD_CONST                      21: 'ExecError'
        346     LOAD_NAME                       26: OSError
        348     CALL_FUNCTION                   3
        350     STORE_NAME                      30: ExecError
        352     LOAD_BUILD_CLASS                
        354     LOAD_CONST                      22: <CODE> ReadError
        356     LOAD_CONST                      23: 'ReadError'
        358     MAKE_FUNCTION                   0
        360     LOAD_CONST                      23: 'ReadError'
        362     LOAD_NAME                       26: OSError
        364     CALL_FUNCTION                   3
        366     STORE_NAME                      31: ReadError
        368     LOAD_BUILD_CLASS                
        370     LOAD_CONST                      24: <CODE> RegistryError
        372     LOAD_CONST                      25: 'RegistryError'
        374     MAKE_FUNCTION                   0
        376     LOAD_CONST                      25: 'RegistryError'
        378     LOAD_NAME                       32: Exception
        380     CALL_FUNCTION                   3
        382     STORE_NAME                      33: RegistryError
        384     LOAD_BUILD_CLASS                
        386     LOAD_CONST                      26: <CODE> _GiveupOnFastCopy
        388     LOAD_CONST                      27: '_GiveupOnFastCopy'
        390     MAKE_FUNCTION                   0
        392     LOAD_CONST                      27: '_GiveupOnFastCopy'
        394     LOAD_NAME                       32: Exception
        396     CALL_FUNCTION                   3
        398     STORE_NAME                      34: _GiveupOnFastCopy
        400     LOAD_CONST                      28: <CODE> _fastcopy_fcopyfile
        402     LOAD_CONST                      29: '_fastcopy_fcopyfile'
        404     MAKE_FUNCTION                   0
        406     STORE_NAME                      35: _fastcopy_fcopyfile
        408     LOAD_CONST                      30: <CODE> _fastcopy_sendfile
        410     LOAD_CONST                      31: '_fastcopy_sendfile'
        412     MAKE_FUNCTION                   0
        414     STORE_NAME                      36: _fastcopy_sendfile
        416     LOAD_NAME                       18: COPY_BUFSIZE
        418     BUILD_TUPLE                     1
        420     LOAD_CONST                      32: <CODE> _copyfileobj_readinto
        422     LOAD_CONST                      33: '_copyfileobj_readinto'
        424     MAKE_FUNCTION                   1
        426     STORE_NAME                      37: _copyfileobj_readinto
        428     LOAD_CONST                      162: (0,)
        430     LOAD_CONST                      34: <CODE> copyfileobj
        432     LOAD_CONST                      35: 'copyfileobj'
        434     MAKE_FUNCTION                   1
        436     STORE_NAME                      38: copyfileobj
        438     LOAD_CONST                      36: <CODE> _samefile
        440     LOAD_CONST                      37: '_samefile'
        442     MAKE_FUNCTION                   0
        444     STORE_NAME                      39: _samefile
        446     LOAD_CONST                      38: <CODE> _stat
        448     LOAD_CONST                      39: '_stat'
        450     MAKE_FUNCTION                   0
        452     STORE_NAME                      40: _stat
        454     LOAD_CONST                      40: <CODE> _islink
        456     LOAD_CONST                      41: '_islink'
        458     MAKE_FUNCTION                   0
        460     STORE_NAME                      41: _islink
        462     LOAD_CONST                      3: True
        464     LOAD_CONST                      42: ('follow_symlinks',)
        466     BUILD_CONST_KEY_MAP             1
        468     LOAD_CONST                      43: <CODE> copyfile
        470     LOAD_CONST                      44: 'copyfile'
        472     MAKE_FUNCTION                   2
        474     STORE_NAME                      42: copyfile
        476     LOAD_CONST                      3: True
        478     LOAD_CONST                      42: ('follow_symlinks',)
        480     BUILD_CONST_KEY_MAP             1
        482     LOAD_CONST                      45: <CODE> copymode
        484     LOAD_CONST                      46: 'copymode'
        486     MAKE_FUNCTION                   2
        488     STORE_NAME                      43: copymode
        490     LOAD_NAME                       19: hasattr
        492     LOAD_NAME                       1: os
        494     LOAD_CONST                      47: 'listxattr'
        496     CALL_FUNCTION                   2
        498     POP_JUMP_IF_FALSE               259 (to 518)
        502     LOAD_CONST                      3: True
        504     LOAD_CONST                      42: ('follow_symlinks',)
        506     BUILD_CONST_KEY_MAP             1
        508     LOAD_CONST                      48: <CODE> _copyxattr
        510     LOAD_CONST                      49: '_copyxattr'
        512     MAKE_FUNCTION                   2
        514     STORE_NAME                      44: _copyxattr
        516     JUMP_FORWARD                    4 (to 526)
        518     LOAD_CONST                      50: <CODE> _copyxattr
        520     LOAD_CONST                      49: '_copyxattr'
        522     MAKE_FUNCTION                   0
        524     STORE_NAME                      44: _copyxattr
        526     LOAD_CONST                      3: True
        528     LOAD_CONST                      42: ('follow_symlinks',)
        530     BUILD_CONST_KEY_MAP             1
        532     LOAD_CONST                      51: <CODE> copystat
        534     LOAD_CONST                      52: 'copystat'
        536     MAKE_FUNCTION                   2
        538     STORE_NAME                      45: copystat
        540     LOAD_CONST                      3: True
        542     LOAD_CONST                      42: ('follow_symlinks',)
        544     BUILD_CONST_KEY_MAP             1
        546     LOAD_CONST                      53: <CODE> copy
        548     LOAD_CONST                      54: 'copy'
        550     MAKE_FUNCTION                   2
        552     STORE_NAME                      46: copy
        554     LOAD_CONST                      3: True
        556     LOAD_CONST                      42: ('follow_symlinks',)
        558     BUILD_CONST_KEY_MAP             1
        560     LOAD_CONST                      55: <CODE> copy2
        562     LOAD_CONST                      56: 'copy2'
        564     MAKE_FUNCTION                   2
        566     STORE_NAME                      47: copy2
        568     LOAD_CONST                      57: <CODE> ignore_patterns
        570     LOAD_CONST                      58: 'ignore_patterns'
        572     MAKE_FUNCTION                   0
        574     STORE_NAME                      48: ignore_patterns
        576     NOP                             
        578     LOAD_CONST                      163: (False,)
        580     LOAD_CONST                      59: <CODE> _copytree
        582     LOAD_CONST                      60: '_copytree'
        584     MAKE_FUNCTION                   1
        586     STORE_NAME                      49: _copytree
        588     LOAD_CONST                      4: False
        590     LOAD_CONST                      2: None
        592     LOAD_NAME                       47: copy2
        594     LOAD_CONST                      4: False
        596     LOAD_CONST                      4: False
        598     BUILD_TUPLE                     5
        600     LOAD_CONST                      61: <CODE> copytree
        602     LOAD_CONST                      62: 'copytree'
        604     MAKE_FUNCTION                   1
        606     STORE_NAME                      50: copytree
        608     LOAD_NAME                       19: hasattr
        610     LOAD_NAME                       1: os
        612     LOAD_ATTR                       51: stat_result
        614     LOAD_CONST                      63: 'st_file_attributes'
        616     CALL_FUNCTION                   2
        618     POP_JUMP_IF_FALSE               320 (to 640)
        622     LOAD_CONST                      64: <CODE> _rmtree_isdir
        624     LOAD_CONST                      65: '_rmtree_isdir'
        626     MAKE_FUNCTION                   0
        628     STORE_NAME                      52: _rmtree_isdir
        630     LOAD_CONST                      66: <CODE> _rmtree_islink
        632     LOAD_CONST                      67: '_rmtree_islink'
        634     MAKE_FUNCTION                   0
        636     STORE_NAME                      53: _rmtree_islink
        638     JUMP_FORWARD                    8 (to 656)
        640     LOAD_CONST                      68: <CODE> _rmtree_isdir
        642     LOAD_CONST                      65: '_rmtree_isdir'
        644     MAKE_FUNCTION                   0
        646     STORE_NAME                      52: _rmtree_isdir
        648     LOAD_CONST                      69: <CODE> _rmtree_islink
        650     LOAD_CONST                      67: '_rmtree_islink'
        652     MAKE_FUNCTION                   0
        654     STORE_NAME                      53: _rmtree_islink
        656     LOAD_CONST                      70: <CODE> _rmtree_unsafe
        658     LOAD_CONST                      71: '_rmtree_unsafe'
        660     MAKE_FUNCTION                   0
        662     STORE_NAME                      54: _rmtree_unsafe
        664     LOAD_CONST                      72: <CODE> _rmtree_safe_fd
        666     LOAD_CONST                      73: '_rmtree_safe_fd'
        668     MAKE_FUNCTION                   0
        670     STORE_NAME                      55: _rmtree_safe_fd
        672     LOAD_NAME                       1: os
        674     LOAD_ATTR                       56: open
        676     LOAD_NAME                       1: os
        678     LOAD_ATTR                       3: stat
        680     LOAD_NAME                       1: os
        682     LOAD_ATTR                       57: unlink
        684     LOAD_NAME                       1: os
        686     LOAD_ATTR                       58: rmdir
        688     BUILD_SET                       4
        690     LOAD_NAME                       1: os
        692     LOAD_ATTR                       59: supports_dir_fd
        694     COMPARE_OP                      1 (<=)
        696     JUMP_IF_FALSE_OR_POP            362 (to 724)
        700     LOAD_NAME                       1: os
        702     LOAD_ATTR                       60: scandir
        704     LOAD_NAME                       1: os
        706     LOAD_ATTR                       61: supports_fd
        708     CONTAINS_OP                     0 (in)
        710     JUMP_IF_FALSE_OR_POP            362 (to 724)
        714     LOAD_NAME                       1: os
        716     LOAD_ATTR                       3: stat
        718     LOAD_NAME                       1: os
        720     LOAD_ATTR                       62: supports_follow_symlinks
        722     CONTAINS_OP                     0 (in)
        724     STORE_NAME                      63: _use_fd_functions
        726     LOAD_CONST                      164: (False, None)
        728     LOAD_CONST                      74: <CODE> rmtree
        730     LOAD_CONST                      75: 'rmtree'
        732     MAKE_FUNCTION                   1
        734     STORE_NAME                      64: rmtree
        736     LOAD_NAME                       63: _use_fd_functions
        738     LOAD_NAME                       64: rmtree
        740     STORE_ATTR                      65: avoids_symlink_attacks
        742     LOAD_CONST                      76: <CODE> _basename
        744     LOAD_CONST                      77: '_basename'
        746     MAKE_FUNCTION                   0
        748     STORE_NAME                      66: _basename
        750     LOAD_NAME                       47: copy2
        752     BUILD_TUPLE                     1
        754     LOAD_CONST                      78: <CODE> move
        756     LOAD_CONST                      79: 'move'
        758     MAKE_FUNCTION                   1
        760     STORE_NAME                      67: move
        762     LOAD_CONST                      80: <CODE> _destinsrc
        764     LOAD_CONST                      81: '_destinsrc'
        766     MAKE_FUNCTION                   0
        768     STORE_NAME                      68: _destinsrc
        770     LOAD_CONST                      82: <CODE> _is_immutable
        772     LOAD_CONST                      83: '_is_immutable'
        774     MAKE_FUNCTION                   0
        776     STORE_NAME                      69: _is_immutable
        778     LOAD_CONST                      84: <CODE> _get_gid
        780     LOAD_CONST                      85: '_get_gid'
        782     MAKE_FUNCTION                   0
        784     STORE_NAME                      70: _get_gid
        786     LOAD_CONST                      86: <CODE> _get_uid
        788     LOAD_CONST                      87: '_get_uid'
        790     MAKE_FUNCTION                   0
        792     STORE_NAME                      71: _get_uid
        794     NOP                             
        796     NOP                             
        798     LOAD_CONST                      165: ('gzip', 0, 0, None, None, None, None)
        800     LOAD_CONST                      89: <CODE> _make_tarball
        802     LOAD_CONST                      90: '_make_tarball'
        804     MAKE_FUNCTION                   1
        806     STORE_NAME                      72: _make_tarball
        808     NOP                             
        810     NOP                             
        812     LOAD_CONST                      166: (0, 0, None, None, None, None)
        814     LOAD_CONST                      91: <CODE> _make_zipfile
        816     LOAD_CONST                      92: '_make_zipfile'
        818     MAKE_FUNCTION                   1
        820     STORE_NAME                      73: _make_zipfile
        822     LOAD_CONST                      93: 'tar'
        824     LOAD_NAME                       72: _make_tarball
        826     LOAD_CONST                      94: ('compress', None)
        828     BUILD_LIST                      1
        830     LOAD_CONST                      95: 'uncompressed tar file'
        832     LOAD_CONST                      3: True
        834     BUILD_TUPLE                     4
        836     BUILD_MAP                       1
        838     STORE_NAME                      74: _ARCHIVE_FORMATS
        840     LOAD_NAME                       8: _ZLIB_SUPPORTED
        842     POP_JUMP_IF_FALSE               440 (to 880)
        846     LOAD_NAME                       72: _make_tarball
        848     LOAD_CONST                      96: ('compress', 'gzip')
        850     BUILD_LIST                      1
        852     LOAD_CONST                      97: "gzip'ed tar-file"
        854     LOAD_CONST                      3: True
        856     BUILD_TUPLE                     4
        858     LOAD_NAME                       74: _ARCHIVE_FORMATS
        860     LOAD_CONST                      98: 'gztar'
        862     STORE_SUBSCR                    
        864     LOAD_NAME                       73: _make_zipfile
        866     BUILD_LIST                      0
        868     LOAD_CONST                      99: 'ZIP file'
        870     LOAD_CONST                      3: True
        872     BUILD_TUPLE                     4
        874     LOAD_NAME                       74: _ARCHIVE_FORMATS
        876     LOAD_CONST                      100: 'zip'
        878     STORE_SUBSCR                    
        880     LOAD_NAME                       11: _BZ2_SUPPORTED
        882     POP_JUMP_IF_FALSE               452 (to 904)
        886     LOAD_NAME                       72: _make_tarball
        888     LOAD_CONST                      101: ('compress', 'bzip2')
        890     BUILD_LIST                      1
        892     LOAD_CONST                      102: "bzip2'ed tar-file"
        894     LOAD_CONST                      3: True
        896     BUILD_TUPLE                     4
        898     LOAD_NAME                       74: _ARCHIVE_FORMATS
        900     LOAD_CONST                      103: 'bztar'
        902     STORE_SUBSCR                    
        904     LOAD_NAME                       13: _LZMA_SUPPORTED
        906     POP_JUMP_IF_FALSE               464 (to 928)
        910     LOAD_NAME                       72: _make_tarball
        912     LOAD_CONST                      104: ('compress', 'xz')
        914     BUILD_LIST                      1
        916     LOAD_CONST                      105: "xz'ed tar-file"
        918     LOAD_CONST                      3: True
        920     BUILD_TUPLE                     4
        922     LOAD_NAME                       74: _ARCHIVE_FORMATS
        924     LOAD_CONST                      106: 'xztar'
        926     STORE_SUBSCR                    
        928     LOAD_CONST                      107: <CODE> get_archive_formats
        930     LOAD_CONST                      108: 'get_archive_formats'
        932     MAKE_FUNCTION                   0
        934     STORE_NAME                      75: get_archive_formats
        936     LOAD_CONST                      167: (None, '')
        938     LOAD_CONST                      110: <CODE> register_archive_format
        940     LOAD_CONST                      111: 'register_archive_format'
        942     MAKE_FUNCTION                   1
        944     STORE_NAME                      76: register_archive_format
        946     LOAD_CONST                      112: <CODE> unregister_archive_format
        948     LOAD_CONST                      113: 'unregister_archive_format'
        950     MAKE_FUNCTION                   0
        952     STORE_NAME                      77: unregister_archive_format
        954     NOP                             
        956     NOP                             
        958     LOAD_CONST                      168: (None, None, 0, 0, None, None, None)
        960     LOAD_CONST                      114: <CODE> make_archive
        962     LOAD_CONST                      115: 'make_archive'
        964     MAKE_FUNCTION                   1
        966     STORE_NAME                      78: make_archive
        968     LOAD_CONST                      116: <CODE> get_unpack_formats
        970     LOAD_CONST                      117: 'get_unpack_formats'
        972     MAKE_FUNCTION                   0
        974     STORE_NAME                      79: get_unpack_formats
        976     LOAD_CONST                      118: <CODE> _check_unpack_options
        978     LOAD_CONST                      119: '_check_unpack_options'
        980     MAKE_FUNCTION                   0
        982     STORE_NAME                      80: _check_unpack_options
        984     NOP                             
        986     NOP                             
        988     LOAD_CONST                      167: (None, '')
        990     LOAD_CONST                      120: <CODE> register_unpack_format
        992     LOAD_CONST                      121: 'register_unpack_format'
        994     MAKE_FUNCTION                   1
        996     STORE_NAME                      81: register_unpack_format
        998     LOAD_CONST                      122: <CODE> unregister_unpack_format
        1000    LOAD_CONST                      123: 'unregister_unpack_format'
        1002    MAKE_FUNCTION                   0
        1004    STORE_NAME                      82: unregister_unpack_format
        1006    LOAD_CONST                      124: <CODE> _ensure_directory
        1008    LOAD_CONST                      125: '_ensure_directory'
        1010    MAKE_FUNCTION                   0
        1012    STORE_NAME                      83: _ensure_directory
        1014    LOAD_CONST                      126: <CODE> _unpack_zipfile
        1016    LOAD_CONST                      127: '_unpack_zipfile'
        1018    MAKE_FUNCTION                   0
        1020    STORE_NAME                      84: _unpack_zipfile
        1022    LOAD_CONST                      2: None
        1024    LOAD_CONST                      128: ('filter',)
        1026    BUILD_CONST_KEY_MAP             1
        1028    LOAD_CONST                      129: <CODE> _unpack_tarfile
        1030    LOAD_CONST                      130: '_unpack_tarfile'
        1032    MAKE_FUNCTION                   2
        1034    STORE_NAME                      85: _unpack_tarfile
        1036    LOAD_CONST                      131: '.tar'
        1038    BUILD_LIST                      1
        1040    LOAD_NAME                       85: _unpack_tarfile
        1042    BUILD_LIST                      0
        1044    LOAD_CONST                      95: 'uncompressed tar file'
        1046    BUILD_TUPLE                     4
        1048    LOAD_CONST                      132: '.zip'
        1050    BUILD_LIST                      1
        1052    LOAD_NAME                       84: _unpack_zipfile
        1054    BUILD_LIST                      0
        1056    LOAD_CONST                      99: 'ZIP file'
        1058    BUILD_TUPLE                     4
        1060    LOAD_CONST                      133: ('tar', 'zip')
        1062    BUILD_CONST_KEY_MAP             2
        1064    STORE_NAME                      86: _UNPACK_FORMATS
        1066    LOAD_NAME                       8: _ZLIB_SUPPORTED
        1068    POP_JUMP_IF_FALSE               546 (to 1092)
        1072    LOAD_CONST                      134: '.tar.gz'
        1074    LOAD_CONST                      135: '.tgz'
        1076    BUILD_LIST                      2
        1078    LOAD_NAME                       85: _unpack_tarfile
        1080    BUILD_LIST                      0
        1082    LOAD_CONST                      97: "gzip'ed tar-file"
        1084    BUILD_TUPLE                     4
        1086    LOAD_NAME                       86: _UNPACK_FORMATS
        1088    LOAD_CONST                      98: 'gztar'
        1090    STORE_SUBSCR                    
        1092    LOAD_NAME                       11: _BZ2_SUPPORTED
        1094    POP_JUMP_IF_FALSE               559 (to 1118)
        1098    LOAD_CONST                      136: '.tar.bz2'
        1100    LOAD_CONST                      137: '.tbz2'
        1102    BUILD_LIST                      2
        1104    LOAD_NAME                       85: _unpack_tarfile
        1106    BUILD_LIST                      0
        1108    LOAD_CONST                      102: "bzip2'ed tar-file"
        1110    BUILD_TUPLE                     4
        1112    LOAD_NAME                       86: _UNPACK_FORMATS
        1114    LOAD_CONST                      103: 'bztar'
        1116    STORE_SUBSCR                    
        1118    LOAD_NAME                       13: _LZMA_SUPPORTED
        1120    POP_JUMP_IF_FALSE               572 (to 1144)
        1124    LOAD_CONST                      138: '.tar.xz'
        1126    LOAD_CONST                      139: '.txz'
        1128    BUILD_LIST                      2
        1130    LOAD_NAME                       85: _unpack_tarfile
        1132    BUILD_LIST                      0
        1134    LOAD_CONST                      105: "xz'ed tar-file"
        1136    BUILD_TUPLE                     4
        1138    LOAD_NAME                       86: _UNPACK_FORMATS
        1140    LOAD_CONST                      106: 'xztar'
        1142    STORE_SUBSCR                    
        1144    LOAD_CONST                      140: <CODE> _find_unpack_format
        1146    LOAD_CONST                      141: '_find_unpack_format'
        1148    MAKE_FUNCTION                   0
        1150    STORE_NAME                      87: _find_unpack_format
        1152    LOAD_CONST                      169: (None, None)
        1154    LOAD_CONST                      2: None
        1156    LOAD_CONST                      128: ('filter',)
        1158    BUILD_CONST_KEY_MAP             1
        1160    LOAD_CONST                      142: <CODE> unpack_archive
        1162    LOAD_CONST                      143: 'unpack_archive'
        1164    MAKE_FUNCTION                   3
        1166    STORE_NAME                      88: unpack_archive
        1168    LOAD_NAME                       19: hasattr
        1170    LOAD_NAME                       1: os
        1172    LOAD_CONST                      144: 'statvfs'
        1174    CALL_FUNCTION                   2
        1176    POP_JUMP_IF_FALSE               618 (to 1236)
        1180    LOAD_NAME                       25: __all__
        1182    LOAD_METHOD                     89: append
        1184    LOAD_CONST                      145: 'disk_usage'
        1186    CALL_METHOD                     1
        1188    POP_TOP                         
        1190    LOAD_NAME                       5: collections
        1192    LOAD_METHOD                     90: namedtuple
        1194    LOAD_CONST                      146: 'usage'
        1196    LOAD_CONST                      147: 'total used free'
        1198    CALL_METHOD                     2
        1200    STORE_NAME                      91: _ntuple_diskusage
        1202    LOAD_CONST                      148: 'Total space in bytes'
        1204    LOAD_NAME                       91: _ntuple_diskusage
        1206    LOAD_ATTR                       92: total
        1208    STORE_ATTR                      0: __doc__
        1210    LOAD_CONST                      149: 'Used space in bytes'
        1212    LOAD_NAME                       91: _ntuple_diskusage
        1214    LOAD_ATTR                       93: used
        1216    STORE_ATTR                      0: __doc__
        1218    LOAD_CONST                      150: 'Free space in bytes'
        1220    LOAD_NAME                       91: _ntuple_diskusage
        1222    LOAD_ATTR                       94: free
        1224    STORE_ATTR                      0: __doc__
        1226    LOAD_CONST                      151: <CODE> disk_usage
        1228    LOAD_CONST                      145: 'disk_usage'
        1230    MAKE_FUNCTION                   0
        1232    STORE_NAME                      95: disk_usage
        1234    JUMP_FORWARD                    18 (to 1272)
        1236    LOAD_NAME                       15: _WINDOWS
        1238    POP_JUMP_IF_FALSE               636 (to 1272)
        1242    LOAD_NAME                       25: __all__
        1244    LOAD_METHOD                     89: append
        1246    LOAD_CONST                      145: 'disk_usage'
        1248    CALL_METHOD                     1
        1250    POP_TOP                         
        1252    LOAD_NAME                       5: collections
        1254    LOAD_METHOD                     90: namedtuple
        1256    LOAD_CONST                      146: 'usage'
        1258    LOAD_CONST                      147: 'total used free'
        1260    CALL_METHOD                     2
        1262    STORE_NAME                      91: _ntuple_diskusage
        1264    LOAD_CONST                      152: <CODE> disk_usage
        1266    LOAD_CONST                      145: 'disk_usage'
        1268    MAKE_FUNCTION                   0
        1270    STORE_NAME                      95: disk_usage
        1272    LOAD_CONST                      169: (None, None)
        1274    LOAD_CONST                      153: <CODE> chown
        1276    LOAD_CONST                      154: 'chown'
        1278    MAKE_FUNCTION                   1
        1280    STORE_NAME                      96: chown
        1282    LOAD_CONST                      170: ((80, 24),)
        1284    LOAD_CONST                      156: <CODE> get_terminal_size
        1286    LOAD_CONST                      157: 'get_terminal_size'
        1288    MAKE_FUNCTION                   1
        1290    STORE_NAME                      97: get_terminal_size
        1292    LOAD_CONST                      158: <CODE> _access_check
        1294    LOAD_CONST                      159: '_access_check'
        1296    MAKE_FUNCTION                   0
        1298    STORE_NAME                      98: _access_check
        1300    LOAD_NAME                       1: os
        1302    LOAD_ATTR                       99: F_OK
        1304    LOAD_NAME                       1: os
        1306    LOAD_ATTR                       100: X_OK
        1308    BINARY_OR                       
        1310    LOAD_CONST                      2: None
        1312    BUILD_TUPLE                     2
        1314    LOAD_CONST                      160: <CODE> which
        1316    LOAD_CONST                      161: 'which'
        1318    MAKE_FUNCTION                   1
        1320    STORE_NAME                      101: which
        1322    LOAD_CONST                      2: None
        1324    RETURN_VALUE                    
